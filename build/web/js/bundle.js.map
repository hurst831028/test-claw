{"version":3,"names":["regClass","property","Laya","Sprite","CartoonFace","Script","onAwake","this","eyesRoot","getChildAt","visible","mouthRoot","build","index","eyeIndex","Math","floor","eyes","length","eye","getChildByName","console","error","mouthIndex","mouth","startBlinking","startTalking","blink","Tween","to","scaleY","Ease","linearNone","Handler","create","randomInterval","random","timer","once","talk","y","onUpdate","__decorateClass","String","prototype","LoopMoveSprite","constructor","super","arguments","xDir","xRangeMin","xRangeMax","speed","onLateUpdate","deltaTime","delta","owner","x","type","Number","ColorFilter","SystemSettings","colorFilter","adjustBrightness","adjustContrast","adjustSaturation","stage","filters","WebMessage","onStart","log","window","addEventListener","event","message","data","sendMessageToWeb","parent","postMessage","EggConfig","_EggConfig","getConfig","id","ConfigManager","instance","load","loadExcel","ItemConfig","_ItemConfig","MachineConfig","_MachineConfig","ConfigHelper","parseStringArray","split","parseNumberArray","map","_initialized","_configs","_instance","initialized","Error","loadAll","excelPath","className","clazz","loader","itemData","itemMap","forEach","item","Object","assign","ID","name","Loader","JSON","RigidBody","WeldJoint","Egg","removeJoint","weldJoint","getComponent","destroy","removeRigidBody","rigidBody","init","cartoonFace","eggID","charCodeAt","buildJoint","otherBody","selfBody","collideConnected","anchor","frequency","damping","addComponentInstance","allowRotation","clear","backIn","machinePhysics","removeEgg","EggFrame","_iconScale","_iconOriginY","clearEgg","stopIconBounceAnimation","_curEgg","buildEgg","configID","rootWidth","rootHeigth","onLoadCompleteCallback","width","height","_eggConfig","Prefab","then","res","sprite","anchorX","anchorY","addChild","aWidth","aHeight","bWidth","bHeight","scaleX","scale","min","pos","egg","_eggSprite","clearTween","startIconBounceAnimationIncubation","bounce1","linearInOut","bounce2","startIconBounceAnimationReady","backOut","circInOut","bounce3","bounceOut","Arrow","moveSpeed","direction","minY","maxY","SystemDefine","uiRootPrefab","gameCoinInterval","gameCoinPerInterval","gameCoinMax","ServerTime","ItemData","UserData","WalletData","MachineData","hasEmptyIncubationSlot","incubation_list","some","entry","is_in_progress","getIncubationDataCount","MachineCoinData","getTotalGameCoin","game_coin","payed_game_coin","updateGameCoin","currentTime","Date","now","totalDuration","game_coin_last_update_at","T","game_coin_remaining_duration","timeParam","intervals","game_coin_next_update_at","MachineCollectionData","getItemCount","item_list","keys","getItemCountById","itemID","RunTimeData","user","wallet","machine_data","machine_coin_data","machine_collection","resetMachineData","RunTimeDataManager","_data","initializeData","_callbackMap","runTimeData","machine","value","_machine","mergeDeep","target","source","key","Array","isArray","originalTarget","stringify","invokeModuleCallbacks","isChanged","saveData","newData","registerModuleCallback","module","callback","push","unregisterModuleCallback","filter","cb","SoundManager","SoundFXManager","playMusic","_musicList","stopMusic","setVolume","volume","setMusicVolume","playSoundFX","playSound","_soundFXList","stopSoundFX","stopSound","MUSIC_1000","MUSIC_1000_HappyHour","SFX_ClaimItem","SFX_EggFind01","SFX_EggFind02","SFX_ButtonClick01","SFX_ClawDropping","SFX_ClawGrabbing","SFX_Voice01","SFX_Voice02","SFX_Voice03","SFX_Failed","SFX_Ping","SFX_Gold01","SFX_Gold02","SFX_Gold03","SFX_Gem01","SFX_Gem02","SFX_ItemDrop","SFX_UnlockEggIncuabtion","MathHelper","randomRange","max","Animator2D","Event","Point","Label","Claw","isPicking","_clawState","onDisable","intersectionTestBox","off","TRIGGER_ENTER","onIntersectionTestBoxTriggerEnter","pickupTestBox","onPickupTestBoxTriggerEnter","on","_positionY","baseSprite","_lineOrignalHeight","lineSprite","pingpong","changeState","colliderB","colliderA","contact","clawFindedEgg","findedEgg","label","eggB","updateGameCoinDisplay","coinData","textGameCoin","text","toString","color","state","playAnimation","pingpongTween","resume","pause","curEgg","moveYDown","randomNumber","downTween","connectEgg","moveYUp","pickupTestWorldPos","localToGlobal","eggWorldPos","finalPos","pickupTestRigidBody","grab","__async","gen","claw","__asyncGenerator","__await","Promise","resolve","setTimeout","waittingTime","processGrabSteps","more","temp","iter","__forAwait","next","done","return","call","animator","play","onFoundEggCallback","CountdownTimer","serverEndTime","onStartedCallback","onTickCallback","onCompleteCallback","_endTime","restart","start","loop","update","remainingTime","getRemainingTime","formatTime","stop","totalSeconds","hours","minutes","seconds","padStart","UIBase","_view","uiManager","_uiManager","view","param","_param","config","_config","initUI","rootAnimation","displayObject","pageWidth","pageHeight","_originScaleX","_originScaleY","bBackgourndCloseButton","getChild","onClick","pop","bCloseButton","bOkButton","open","willOpen","enabled","didOpen","isOpened","withBackground","openBackground","clearAll","from","forceClose","closeBackground","willClose","didClose","popLastUI","popTips","popLastTips","close","UIBackground","forceCloseBackground","ParticlePool","maxSize","pool","getParticle","texture","ParticleClass","particle","reset","returnParticle","Particle","isLoop","setSize","minSize","setLife","minLife","maxLife","isAlive","life","alpha","draw","graphics","drawTexture","size","ParticleSystem","maxParticles","particles","emit","count","i","updateParticle","splice","isAllLive","isLive","ExplosionParticle","gravity","randomX","randomY","fixedLife","angle","PI","vx","cos","vy","sin","startSize","endSize","startAlpha","endAlpha","r","g","b","progress","FXExplosion","particleSystem","frameLoop","onParticleUpdate","onTextureLoaded","UIClaimItem","_loaderItemIcon","asLoader","_imgWindow","asImage","_textCount","asLabel","_textName","_fxRoot","asGraph","_originX","_originY","_fxExplosion","clearIcon","buildIcon","itemConfig","url","Texture","Name","Color","startIconBounceAnimation","Sfx","UICollection","_maxOnePageCollectionNumber","_collectionConfigList","_curDisplayList","_listCollection","asList","_listPageSelect","_textMessage","asTextField","itemRenderer","renderListPageSelect","fgui","Events","CLICK_ITEM","onClickListPageSelectItem","renderListCollection","onClickItem","curMachineID","machineConfig","collectionList","CollectionList","collectionPageNumber","numItems","selectedIndex","refreshCollectionByBageIndex","obj","asCom","textCount","pageIndex","startIndex","endIndex","UIManager","pushUI","ShowMessageBox","btn","asButton","n1","n2","UIFXCoinBackground","_time","_offsetScale","_isMaterialLoaded","UIFXLayer","UIInviteFriends","UILoading","UIMessageBoxOne","content","UIShowEggIncuabtion","_textCooldownTime","_imgEggRoot","_pbEggIncuabtionProgress","asProgress","setIncubationIndex","incubationIndex","machineData","_incubationData","initIcon","initTimeShower","_countdownTimer","config_id","egg_id","IncubationTime","maturation_at","difference","UIShowItem","_curRank","_listStars","renderStars","_textdiscription","buildDisplay","countString","Discription","Rank","UITask","UITips","HttpManager","baseUrl","get","endpoint","params","errorCallback","progressCallback","buildUrl","httpRequest","HttpRequest","COMPLETE","self","evt","err_no","ERROR","PROGRESS","headers","_session","send","post","http","timeout","game_session","err_msg","queryString","encodeURIComponent","join","postWithPromise","httpManager","reject","response","UIUnlockEggIncuabtion","_bPointUnlock","onUnlock","_bGemUnlock","machine_id","updateDisplay","nowSlotCount","unlockIncubatorCost","UnlockIncubatorCost","symbol","cost","UIDefine","_classMap","UI_FX_Layer_HUD","UI_Loading_HUD","UI_MessageBoxOne_HUD","UI_Invite_Friends_HUD","UI_FX_Coin_Background_HUD","UI_Tips_HUD","UI_Task_HUD","UI_Background_HUD","UI_ShowItem_HUD","UI_ShowEggIncuabtion_HUD","UI_UnlockEggIncuabtion_HUD","UI_Collection_HUD","UI_ClaimItem_HUD","instantiate","_viewsDictionary","_uibaseDictionary","_isBackgroundOpen","_uiQueue","_tipsQueue","designHeight","Browser","clientWidth","clientHeight","ownerPanel","_uiDefine","initFont","GRoot","inst","zOrder","_uiConfigData","packageList","packageConfigs","packageName","uiBasePath","UIPackage","loadPackage","onUILoaded","fairygui","UIConfig","defaultFont","ttf","Text","TTF","uiConfigs","createObject","uiPackage","uiName","makeFullScreen","sortingOrder","layer","uiClass","lastUI","forceCloseUI","openUI","nextUI","closeUI","pushTips","isOpenedUI","ShowTips","Button","IncubationSlot","_curState","setState","bReady","CLICK","onClickReady","bInfo","onClickInfo","bUnlock","onClickUnlock","e","worldPos","icon","onHarvestEggCallback","textCooldownTime","eggConfig","_incubationEntry","updateSlot","incubationEntry","onDestroy","ChainCollider","MachinePhysics","_eggMap","box2D","Config","isAntialias","Physics2D","I","createHouse","createEggs","house","addComponent","chainCollider","datas","addGroup","rigidbody","ratio","group","k_smallGroup","k_middleGroup","k_largeGroup","egg_list","eggData","Scale","category","k_triangleCategory","mask","k_triangleMask","getEgg","removeAllEggs","clearAllEggs","destroyWorld","k_boxCategory","k_circleCategory","k_boxMask","k_circleMask","TransitionTool","transitionValue","newValue","duration","currentValue","parseFloat","startTime","elapsed","t","round","CoinFlyEffect","coinCount","range","sftx","coins","sfx","targetWorldPos","targetPos","startEffect","coin","createCoin","radius","startX","startY","animateCoin","targetX","targetY","cubicInOut","cubicIn","removeSelf","Keyboard","Machine","backgroundOffsetScale","_arrowDelayTimeCofig","_arrowDelayTime","_backgroundTime","foundEgg","initOrRefreshGameCoinTimeShower","handleFoundEgg","harvestEgg","soltIndex","incubation_index","handleHarvestEgg","_pointFlyEffect","pointIcon","_gemFlyEffect","gemIcon","bGrab","onClickGrab","bCollection","onClickCollection","_machineID","eventListener","incubationSlotList","_resetCoolDownTimer","next_refresh_at","textResetCooldownTime","resetEggs","machineCoinData","_gameCoinCoolDownTimer","textGameCoinCooldownTime","textPoint","point","textGem","gem","arrow","background","material","setFloat","grassGround","MAX_SAFE_INTEGER","eggX","eggY","egg_config_id","ClientHandle","loot_item_id","loot_item_count","KEY_DOWN","keyCode","DOWN","GameStateBase","gameStateManager","processSteps","loginData","init_data_raw","getMachineData","GameStateManager","LoadingState","enter","exit","MainMenuState","machineID","nick_name","_states","newState","_currentState","Main","message2","GAME_LOG","sendMessageToParent","onLoaded","RandomPositionParticle","pingPong","normalizedTime","FXStart"],"sources":["../../../../Claw-Machine-Laya-Project/src/Component/CartoonFace.ts","../../../../Claw-Machine-Laya-Project/src/Component/LoopMoveSprite.ts","../../../../Claw-Machine-Laya-Project/src/Component/SystemSettings.ts","../../../../Claw-Machine-Laya-Project/src/Component/WebMessage.ts","../../../../Claw-Machine-Laya-Project/src/Config/ExcelEgg.ts","../../../../Claw-Machine-Laya-Project/src/Config/ExcelItem.ts","../../../../Claw-Machine-Laya-Project/src/Config/ExcelMachine.ts","../../../../Claw-Machine-Laya-Project/src/Config/ConfigManager.ts","../../../../Claw-Machine-Laya-Project/src/GameLogic/Egg.ts","../../../../Claw-Machine-Laya-Project/src/Example/EggFrame.ts","../../../../Claw-Machine-Laya-Project/src/GameLogic/Arrow.ts","../../../../Claw-Machine-Laya-Project/src/SystemDefine.ts","../../../../Claw-Machine-Laya-Project/src/RunTimeData/RunTimeData.ts","../../../../Claw-Machine-Laya-Project/src/RunTimeData/RunTimeDataManager.ts","../../../../Claw-Machine-Laya-Project/src/Component/SoundManager.ts","../../../../Claw-Machine-Laya-Project/src/Utils/MathHelper.ts","../../../../Claw-Machine-Laya-Project/src/GameLogic/Claw.ts","../../../../Claw-Machine-Laya-Project/src/Component/CountdownTimer.ts","../../../../Claw-Machine-Laya-Project/src/UI/UIBase.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UIBackground.ts","../../../../Claw-Machine-Laya-Project/src/Particle/ParticleSystem.ts","../../../../Claw-Machine-Laya-Project/src/Particle/FXExplosion.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UIClaimItem.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UICollection.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UIFXCoinBackground.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UIFXLayer.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UIInviteFriends.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UILoading.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UIMessageBoxOne.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UIShowEggIncuabtion.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UIShowItem.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UITask.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UITips.ts","../../../../Claw-Machine-Laya-Project/src/Http/HttpManager.ts","../../../../Claw-Machine-Laya-Project/src/UI/HUD/UIUnlockEggIncuabtion.ts","../../../../Claw-Machine-Laya-Project/src/UI/UIDefine.ts","../../../../Claw-Machine-Laya-Project/src/UI/UIManager.ts","../../../../Claw-Machine-Laya-Project/src/GameLogic/IncubationSlot.ts","../../../../Claw-Machine-Laya-Project/src/GameLogic/MachinePhysics.ts","../../../../Claw-Machine-Laya-Project/src/Utils/TransitionTool .ts","../../../../Claw-Machine-Laya-Project/src/FX/CoinFlyEffect.ts","../../../../Claw-Machine-Laya-Project/src/GameLogic/Machine.ts","../../../../Claw-Machine-Laya-Project/src/GameState/GameStateBase.ts","../../../../Claw-Machine-Laya-Project/src/GameState/LoadingState.ts","../../../../Claw-Machine-Laya-Project/src/GameState/MainMenuState.ts","../../../../Claw-Machine-Laya-Project/src/GameState/GameStateManager.ts","../../../../Claw-Machine-Laya-Project/src/Main.ts","../../../../Claw-Machine-Laya-Project/src/Particle/FXStart.ts"],"sourcesContent":["const { regClass, property } = Laya;\r\nimport { Egg } from \"../GameLogic/Egg\";\r\nimport Sprite = Laya.Sprite\r\n@regClass('9d_4XDZ6SpOvM9UXuhW-Bg')\r\nexport class CartoonFace extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    declare owner : Laya.Sprite;\r\n\r\n    @property([String])\r\n    public eyes: string[];\r\n\r\n    @property([String])\r\n    public mouth: string[];\r\n\r\n    @property(Sprite)\r\n    public eyesRoot: Sprite;\r\n\r\n\r\n    @property(Sprite)\r\n    public mouthRoot: Sprite;\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    onAwake(): void {\r\n        //关闭默认的\r\n        const defaultEye = this.eyesRoot.getChildAt(0) as Sprite;\r\n        defaultEye.visible = false;\r\n\r\n        const defaultMouth = this.mouthRoot.getChildAt(0) as Sprite;\r\n        defaultMouth.visible = false;\r\n    }\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    //onStart(): void {}\r\n\r\n    public build ( index: number) {\r\n        //随机\r\n        const eyeIndex = Math.floor(index % this.eyes.length);\r\n        const eye = this.eyesRoot.getChildByName(this.eyes[eyeIndex]) as Sprite;\r\n        if (eye) {\r\n            eye.visible = true;\r\n        } else {\r\n            console.error(\"eye is null\");\r\n        }\r\n\r\n        const mouthIndex = Math.floor(index % this.mouth.length);\r\n        const mouth = this.mouthRoot.getChildByName(this.mouth[mouthIndex]) as Sprite;\r\n        mouth.visible = true;\r\n\r\n        this.startBlinking();\r\n        this.startTalking();\r\n    }\r\n\r\n    public startBlinking(): void {\r\n        this.blink(); // 立即开始眨眼动画\r\n    }\r\n    \r\n    private blink(): void {\r\n    \r\n        // 闭眼，通过缩放实现\r\n        Laya.Tween.to(this.eyesRoot, { scaleY: 0 }, 150, Laya.Ease.linearNone, Laya.Handler.create(this, () => {\r\n            // 睁眼，恢复缩放\r\n            Laya.Tween.to(this.eyesRoot, { scaleY: 1 }, 150, Laya.Ease.linearNone, Laya.Handler.create(this, () => {\r\n                // 随机间隔再眨眼\r\n                const randomInterval = 3000 + Math.random() * 3000;\r\n                Laya.timer.once(randomInterval, this, this.blink);\r\n            }));\r\n        }));\r\n    }\r\n\r\n    public startTalking(): void {\r\n        this.talk(); // 立即开始嘴巴动画\r\n    }\r\n    \r\n    private talk(): void {\r\n    \r\n        // 闭嘴，缩小 scaleY\r\n        Laya.Tween.to(this.mouthRoot, { y: this.mouthRoot.y + 10 }, 200, Laya.Ease.linearNone, Laya.Handler.create(this, () => {\r\n            // 向上移动，模拟张嘴\r\n            Laya.Tween.to(this.mouthRoot, { y: this.mouthRoot.y - 10 }, 200, Laya.Ease.linearNone, Laya.Handler.create(this, () => {\r\n                // 随机间隔后再执行动作\r\n                const randomInterval = 5000 + Math.random() * 5000;\r\n                Laya.timer.once(randomInterval, this, this.talk);\r\n            }));\r\n        }));\r\n    }\r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    onUpdate(): void {\r\n\r\n    }\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onLateUpdate(): void {}\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","const { regClass, property } = Laya;\r\n\r\n@regClass('dZdn5UrwThSWjU8XRpjDsg')\r\nexport class LoopMoveSprite extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    declare owner : Laya.Sprite;\r\n\r\n    @property({type: Number})\r\n    public xDir: number = 0;\r\n\r\n    @property({type: Number})\r\n    public xRangeMin: number = 0;\r\n\r\n    @property({type: Number})\r\n    public xRangeMax: number = 0;\r\n\r\n    @property({type: Number})\r\n    public speed: number = 0;\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    //onAwake(): void {}\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    //onStart(): void {}\r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onUpdate(): void {}\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    onLateUpdate(): void {\r\n        \r\n        let deltaTime = Laya.timer.delta / 1000;\r\n        if (this.xDir > 0){\r\n            this.owner.x += this.xDir * this.speed * deltaTime;\r\n\r\n            if (this.owner.x > this.xRangeMax) {\r\n                this.owner.x = this.xRangeMin;\r\n            }\r\n        }\r\n        \r\n        if (this.xDir < 0){\r\n            this.owner.x += this.xDir * this.speed * deltaTime;\r\n\r\n            if (this.owner.x < this.xRangeMin) {\r\n                this.owner.x = this.xRangeMax;\r\n            }\r\n        }\r\n    }\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","const { regClass, property } = Laya;\r\nimport ColorFilter = Laya.ColorFilter;\r\n\r\n@regClass('z_GDfvC3TFKMUPAmCdT4hA')\r\nexport class SystemSettings extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    //declare owner : Laya.Sprite;\r\n\r\n    // @property(String)\r\n    // public text: string = \"\";\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    onAwake(): void {\r\n        var colorFilter: ColorFilter = new ColorFilter();\r\n        colorFilter.adjustBrightness(-40);\r\n        colorFilter.adjustContrast(20);\r\n        colorFilter.adjustSaturation(10);\r\n        Laya.stage.filters = [colorFilter];\r\n    }\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    //onStart(): void {}\r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onUpdate(): void {}\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onLateUpdate(): void {}\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","const { regClass, property } = Laya;\r\n\r\n@regClass('1ZbHXoulRJCgzOhnyG97lA')\r\nexport class WebMessage extends Laya.Script {\r\n\r\n    onStart() {\r\n        console.log(\"Game start\");\r\n        \r\n\r\n        window.addEventListener('message', (event: MessageEvent) => {  \r\n            // 检查消息的来源，确保它来自你的React应用  \r\n            // event.origin 应该是你的React应用所在的域  \r\n            // if (event.origin !== 'http://your-react-app-origin.com') {  \r\n            //   return;  \r\n            // }  \r\n            \r\n            // 处理接收到的消息  \r\n            const message = event.data;  \r\n            console.log('Received message from parent:', message);  \r\n            \r\n            // 根据消息类型执行相应的操作  \r\n            if (message.type === 'REACT_MESSAGE') {  \r\n              // 处理来自React的消息  \r\n              //const message2 = { type: 'GAME_LOG', data: { \"GAME_LOG\":message } }; \r\n              //WebMessage.sendMessageToWeb(message2);\r\n            }  \r\n        });\r\n\r\n        //const message = { type: 'GAME_EVENT', data: { \"123123123\":123123123 } }; \r\n        //WebMessage.sendMessageToWeb(message);\r\n    }\r\n\r\n    public static sendMessageToWeb(message: any) {  \r\n        // 检查父窗口是否存在，并且不是当前窗口自身  \r\n        if (window.parent !== window && window.parent.postMessage) {  \r\n          // 使用 postMessage 发送消息到父窗口  \r\n          // 第二个参数是目标源，通常设置为 '*' 表示不限制源，但在生产环境中应该设置为允许的源列表  \r\n          window.parent.postMessage(message, '*');  \r\n        }  \r\n    }\r\n}","// EggConfig ����ģ��\r\n\r\nimport { ConfigManager } from \"./ConfigManager\";\r\n\r\nexport class EggConfig {\r\n    ID: string;\r\n    IncubationTime: number;\r\n    Prefab: string;\r\n    Texture: string;\r\n    Scale: number;\r\n    Sfx: string;\r\n    ClientHandle: string;\r\n\r\n    public static getConfig(id: string): EggConfig {\r\n        let config = ConfigManager.instance.getConfig('EggConfig');\r\n        return config[id];\r\n    }\r\n\r\n    public static load() {\r\n        ConfigManager.instance.loadExcel('resources/json/excel/Excel_EggConfig.json', 'EggConfig', EggConfig);\r\n    }\r\n}\r\n\r\n","// ItemConfig ����ģ��\r\n\r\nimport { ConfigManager } from \"./ConfigManager\";\r\n\r\nexport class ItemConfig {\r\n    ID: string;\r\n    Rank: number;\r\n    Count: number;\r\n    Name: string;\r\n    Discription: string;\r\n    ClientHandle: string;\r\n    Texture: string;\r\n    Color: string;\r\n    Sfx: string;\r\n    SellingParam: string;\r\n\r\n    public static getConfig(id: string): ItemConfig {\r\n        let config = ConfigManager.instance.getConfig('ItemConfig');\r\n        return config[id];\r\n    }\r\n\r\n    public static load() {\r\n        ConfigManager.instance.loadExcel('resources/json/excel/Excel_ItemConfig.json', 'ItemConfig', ItemConfig);\r\n    }\r\n}\r\n\r\n","// MachineConfig ����ģ��\r\n\r\nimport { ConfigManager } from \"./ConfigManager\";\r\n\r\nexport class MachineConfig {\r\n    ID: string;\r\n    IsNeedUnLock: boolean;\r\n    UnlockIncubatorCost: string;\r\n    Test: string;\r\n    Prefab: string;\r\n    CollectionList: string;\r\n\r\n    public static getConfig(id: string): MachineConfig {\r\n        let config = ConfigManager.instance.getConfig('MachineConfig');\r\n        return config[id];\r\n    }\r\n\r\n    public static load() {\r\n        ConfigManager.instance.loadExcel('resources/json/excel/Excel_MachineConfig.json', 'MachineConfig', MachineConfig);\r\n    }\r\n}\r\n\r\n","import { WebMessage } from \"../Component/WebMessage\";\r\nimport { EggConfig } from \"./ExcelEgg\";\r\nimport { ItemConfig } from \"./ExcelItem\";\r\nimport { MachineConfig } from \"./ExcelMachine\";\r\n\r\nconst { regClass, property } = Laya;\r\n\r\nexport class ConfigHelper {\r\n    public static parseStringArray(data: string): string[] {\r\n        return data.split(',');\r\n    }\r\n\r\n    public static parseNumberArray(data: string): number[] { \r\n        return data.split(',').map(Number); // 将字符串转换为整数\r\n    }\r\n}\r\n\r\n@regClass('YmQd5OnFTbiJU_nWX1ol4w')\r\nexport class ConfigManager extends Laya.Script {\r\n    declare owner: Laya.Sprite;\r\n    private static _instance: ConfigManager;  \r\n    private _initialized: boolean = false;\r\n\r\n    private _configs: Record<string, any> = {}; // 或者 { [key: string]: any }\r\n\r\n    constructor() {  \r\n        super();\r\n    }\r\n\r\n    public static get instance(): ConfigManager {  \r\n        if (!ConfigManager._instance) {  \r\n            return null;\r\n        }  \r\n        return ConfigManager._instance;  \r\n    }  \r\n\r\n    public get initialized(): boolean {\r\n        return this._initialized;\r\n    }\r\n\r\n    onAwake(): void {\r\n        if (ConfigManager._instance) {\r\n            throw new Error(\"Singleton class. Use getInstance() instead.\");\r\n        }\r\n        ConfigManager._instance = this;\r\n    }\r\n\r\n    public loadAll() {\r\n        // 示例：调用 LoadExcel 方法加载配置\r\n        EggConfig.load();\r\n        ItemConfig.load();\r\n        MachineConfig.load();\r\n\r\n        this._initialized = true;\r\n    }\r\n\r\n    public loadExcel<T>(excelPath: string, className: string, clazz: new () => T) {\r\n        Laya.loader.load(excelPath, Laya.Handler.create(this, (data: any) => {\r\n            const itemData: any[] = data.data;\r\n            const itemMap: { [key: string]: T } = {};\r\n            \r\n            itemData.forEach(item => {\r\n                const instance = new clazz();\r\n                Object.assign(instance, item);\r\n                itemMap[item.ID] = instance; \r\n            });\r\n            \r\n            this._configs[className] = itemMap;\r\n\r\n            const message = { type: 'GAME_LOG', data: `${excelPath} success ${clazz.name}` }; \r\n            WebMessage.sendMessageToWeb(message);\r\n\r\n        }), null, Laya.Loader.JSON);\r\n    }\r\n\r\n    //public getData<T>(clazz: new () => T): { [key: string]: T } {\r\n    //    return this._configs[clazz.name];\r\n    //}\r\n\r\n    public getConfig(name: string) {\r\n        return this._configs[name];\r\n    }\r\n}\r\n","const { regClass, property } = Laya;\r\nimport { EggData } from \"../RunTimeData/RunTimeData\";\r\nimport RigidBody = Laya.RigidBody;\r\nimport WeldJoint = Laya.WeldJoint;\r\nimport Tween = Laya.Tween;\r\nimport Ease = Laya.Ease;\r\nimport Handler = Laya.Handler;\r\nimport { CartoonFace } from \"../Component/CartoonFace\";\r\nimport { MachinePhysics } from \"./MachinePhysics\";\r\n\r\n@regClass('rkcx43mVQBOkTeNwD9ERHQ')\r\nexport class Egg extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    declare owner : Laya.Sprite;\r\n    \r\n\r\n    @property(RigidBody)\r\n    public rigidBody : Laya.RigidBody;\r\n\r\n    @property(CartoonFace)\r\n    public cartoonFace: CartoonFace;\r\n\r\n    public eggID: string;\r\n    public machinePhysics: MachinePhysics;\r\n\r\n    public removeJoint() {\r\n        let weldJoint = this.owner.getComponent(WeldJoint)\r\n        if(weldJoint != null) {\r\n            weldJoint.destroy();\r\n        }\r\n    }\r\n\r\n    public removeRigidBody() {\r\n        let rigidBody = this.owner.getComponent(RigidBody)\r\n        if(rigidBody != null) {\r\n            rigidBody.destroy();\r\n        }\r\n    }\r\n\r\n    public init() {\r\n        if(this.cartoonFace != null && this.eggID != null) {\r\n            const index = this.eggID.charCodeAt(this.eggID.length - 1);\r\n            this.cartoonFace.build(index);\r\n        } else {\r\n            console.log(\"cartoonFace or eggID is null\");\r\n        }\r\n    }\r\n\r\n    public buildJoint(otherBody: RigidBody) {\r\n        // let distanceJoint1: DistanceJoint = new DistanceJoint();\r\n        // distanceJoint1.otherBody = this.pickupTestRigidBody;\r\n        // distanceJoint1.selfAnchor = [0.5, 0.5];\r\n        // distanceJoint1.otherAnchor = [this.pickupTestBox.anchorX, this.pickupTestBox.anchorY];\r\n        // distanceJoint1.frequency = 10;\r\n        // distanceJoint1.damping = 0.5;\r\n        // this.curEgg.owner.addComponentInstance(distanceJoint1);\r\n\r\n        let weldJoint: WeldJoint = new WeldJoint();\r\n        weldJoint.selfBody = this.rigidBody;\r\n        weldJoint.otherBody = otherBody;\r\n        weldJoint.collideConnected = false;\r\n        weldJoint.anchor = [0.5, 0.5];\r\n        weldJoint.frequency = 1;\r\n        weldJoint.damping = 1;\r\n        this.owner.addComponentInstance(weldJoint);\r\n        this.rigidBody.allowRotation = true;\r\n    }\r\n\r\n    public clear() {\r\n        this.removeRigidBody();\r\n        Tween.to(this.owner, {\"y\": this.owner.y + 1000}, 1200 + (Math.random() * 200), Ease.backIn, Handler.create(this, () => {  \r\n            this.owner.destroy();\r\n        }));\r\n    }\r\n    //@property(String)\r\n    //public text: string = \"\";\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    //onAwake(): void {}\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    //onStart(): void {}\r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    onUpdate(): void {\r\n        if(this.owner.y > 3000) {\r\n            this.machinePhysics.removeEgg(this.eggID);\r\n            console.log(\"force remove egg \" + this.eggID)\r\n        }\r\n    }\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onLateUpdate(): void {}\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","const { regClass, property } = Laya;\r\nimport { EggConfig } from \"../Config/ExcelEgg\";\r\nimport RigidBody = Laya.RigidBody;\r\nimport WeldJoint = Laya.WeldJoint;\r\nimport Tween = Laya.Tween;\r\nimport Ease = Laya.Ease;\r\nimport Handler = Laya.Handler;\r\nimport { Egg } from \"../GameLogic/Egg\";\r\n\r\n/////////暂时没用用\r\n\r\n@regClass('nnGeTxJ4Q_GhohA2o0D7oQ')\r\nexport class EggFrame extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    declare owner : Laya.Sprite;\r\n    private _eggConfig: EggConfig;\r\n    private _eggSprite: Laya.Sprite;\r\n    private _iconScale = 0;\r\n    private _iconOriginY = 0;\r\n    private _curEgg: Egg;\r\n    private onLoadCompleteCallback: () => void;\r\n\r\n    public clearEgg() {\r\n        // 停止跳动动画\r\n        this.stopIconBounceAnimation();\r\n\r\n        if(this._curEgg != null) {\r\n            this._curEgg.owner.destroy();\r\n            this._curEgg = null;\r\n        }\r\n    }\r\n    \r\n    public buildEgg(configID: string,\r\n        rootWidth: number,\r\n        rootHeigth: number,\r\n        onLoadCompleteCallback: () => void,\r\n    ) {\r\n        \r\n        this.onLoadCompleteCallback = onLoadCompleteCallback;\r\n        this.owner.width = rootWidth;\r\n        this.owner.height = rootHeigth;\r\n\r\n        this._eggConfig = EggConfig.getConfig(configID);\r\n        Laya.loader.load(this._eggConfig.Prefab).then(res => {\r\n            let sprite: Laya.Sprite = res.create();\r\n            sprite.anchorX = 0.5;\r\n            sprite.anchorY = 0.5;\r\n\r\n            this.owner.addChild(sprite);\r\n\r\n            // 获取 icon 和 sprite 的宽高\r\n            let aWidth = this.owner.width;\r\n            let aHeight = this.owner.height;\r\n\r\n            let bWidth = sprite.width * 1.2;\r\n            let bHeight = sprite.height * 1.2;\r\n\r\n            // 计算宽高比例\r\n            let scaleX = aWidth / bWidth;\r\n            let scaleY = aHeight / bHeight;\r\n\r\n            // 取最小的比例来保证等比缩放\r\n            let scale = Math.min(scaleX, scaleY);\r\n\r\n            // 应用等比缩放\r\n            sprite.scale(scale, scale, true);\r\n\r\n            // 将 sprite 放置在 icon 的中心位置\r\n            sprite.pos(aWidth / 2, aHeight / 2 + bHeight / 2);\r\n\r\n\r\n            sprite.anchorY = 1;\r\n\r\n            \r\n            const egg = sprite.getComponent(Egg);\r\n            egg.removeRigidBody();\r\n            this._curEgg = egg;\r\n\r\n            this._eggSprite = sprite;\r\n            this._iconScale = this._eggSprite.scaleY;\r\n            this._iconOriginY = this._eggSprite.y;\r\n\r\n            this.onLoadCompleteCallback();\r\n        }); \r\n    }\r\n\r\n    // 停止跳动动画\r\n    private stopIconBounceAnimation() {\r\n        Laya.Tween.clearTween(this._curEgg.owner); // 清除 this.icon 上的所有动画\r\n    }\r\n\r\n    // 给icon增加一个跳动的动画效果\r\n    private startIconBounceAnimationIncubation() {\r\n        // 首先停止之前可能存在的动画\r\n        this.stopIconBounceAnimation(); \r\n\r\n        if (this._curEgg == null) return;\r\n\r\n        // 动画函数：让icon缩放变大并稍微上移，带有弹力效果\r\n        const bounce1 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale * 1.1, scaleY: this._iconScale * 0.8 }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce2));\r\n        };\r\n\r\n        // 动画函数：让icon缩放变小并回到原位置，带有弹力效果\r\n        const bounce2 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale, scaleY: this._iconScale }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce1));\r\n        };\r\n\r\n        // 开始第一次动画\r\n        bounce1();\r\n    }\r\n\r\n    private startIconBounceAnimationReady() {\r\n        // 首先停止之前可能存在的动画\r\n        this.stopIconBounceAnimation(); \r\n\r\n        if (this._curEgg == null) return;\r\n\r\n        // 动画函数：让icon缩放变大并稍微上移，带有弹力效果\r\n        const bounce1 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale * 1.1,  scaleY: this._iconScale * 0.8 }, 1000, Laya.Ease.backOut, Laya.Handler.create(this, bounce2));\r\n        };\r\n\r\n        // 动画函数：让icon缩放变小并回到原位置，带有弹力效果\r\n        const bounce2 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale * 1, scaleY: this._iconScale * 1, y: this._iconOriginY - 100}, 200, Laya.Ease.circInOut, Laya.Handler.create(this, bounce3));\r\n        };\r\n\r\n        // 动画函数：让icon缩放变小并回到原位置，带有弹力效果\r\n        const bounce3 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale * 1, scaleY: this._iconScale * 1, y: this._iconOriginY }, 1000, Laya.Ease.bounceOut, Laya.Handler.create(this, bounce1));\r\n        };\r\n\r\n        // 开始第一次动画\r\n        bounce1();\r\n    }\r\n\r\n}","const { regClass, property } = Laya;\r\n\r\n@regClass('6e9BXDZiQn-RSSxV5cRK1g')\r\nexport class Arrow extends Laya.Script {\r\n    declare owner: Laya.Sprite;\r\n\r\n    // 移动速度\r\n    private moveSpeed: number = 2; \r\n    // 移动方向，1 表示向上，-1 表示向下\r\n    private direction: number = 1; \r\n    // 最大和最小 Y 坐标\r\n    private minY: number;\r\n    private maxY: number;\r\n\r\n    // 组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    onAwake(): void {\r\n        this.minY = this.owner.y - 20; // 根据需要设置最小 Y 坐标\r\n        this.maxY = this.owner.y + 20; // 根据需要设置最大 Y 坐标\r\n    }\r\n\r\n    // 每帧更新时执行\r\n    onUpdate(): void {\r\n        // 更新箭头的 Y 坐标\r\n        this.owner.y += this.moveSpeed * this.direction;\r\n\r\n        // 检查边界\r\n        if (this.owner.y >= this.maxY) {\r\n            this.direction = -1; // 到达上边界后，改变方向\r\n        } else if (this.owner.y <= this.minY) {\r\n            this.direction = 1; // 到达下边界后，改变方向\r\n        }\r\n    }\r\n}\r\n","export class SystemDefine {\r\n    public static uiRootPrefab = \"resources/prefabs/ui/P_UIRoot.lh\";\r\n\r\n    public static gameCoinInterval = 1 * 60;//10分钟\r\n    public static gameCoinPerInterval = 1;\r\n    public static gameCoinMax = 100;\r\n}","import { SystemDefine } from \"../SystemDefine\";\r\n\r\nexport class ServerTime {\r\n    T: number;\r\n    I: number;\r\n}\r\n\r\nexport class ItemData {\r\n    item_list: any | null;\r\n    machine_collection_data: {\r\n        [key: string]: {\r\n            item_list: any | null;\r\n        };\r\n    };\r\n}\r\n\r\nexport class UserData {\r\n    created_at: {\r\n        T: number;\r\n        I: number;\r\n    };\r\n    updated_at: {\r\n        T: number;\r\n        I: number;\r\n    };\r\n    nick_name: string;\r\n    faction: number;\r\n    unlock_land_level: number;\r\n    user_type: number;\r\n    first_name: string;\r\n    last_name: string;\r\n    help_count: number;\r\n}\r\n\r\nexport class WalletData {\r\n    point: number;\r\n    gem: number;\r\n}\r\n\r\nexport class EggData {\r\n    config_id: string;\r\n}\r\n\r\nexport class IncubationEntry {\r\n    egg_id:string;\r\n    config_id: string;\r\n    is_in_progress: boolean;\r\n    maturation_at: ServerTime;\r\n}\r\n\r\nexport class MachineData {\r\n    id: string;\r\n    egg_list: {\r\n        [eggId: string]: EggData;\r\n    };\r\n    next_refresh_at: ServerTime;\r\n    incubation_list: IncubationEntry[];\r\n    egg_loot_list: Record<string, unknown>; // 可以根据需要进一步定义具体结构\r\n\r\n    public hasEmptyIncubationSlot(): boolean {\r\n        return this.incubation_list.some(entry => !entry.is_in_progress);\r\n    }\r\n\r\n    public getIncubationDataCount(): number {\r\n        return this.incubation_list.length;\r\n    }\r\n}\r\n\r\nexport class MachineCoinData {\r\n    game_coin_last_update_at:ServerTime;\r\n    game_coin_remaining_duration: number;\r\n    game_coin: number;\r\n    payed_game_coin: number;\r\n\r\n    //本地变量\r\n    game_coin_next_update_at:ServerTime;\r\n\r\n    public getTotalGameCoin(): number {\r\n        return this.game_coin + this.payed_game_coin;\r\n    }\r\n\r\n    public updateGameCoin() {\r\n        const currentTime = Math.floor(Date.now() / 1000);\r\n        const elapsedTime = currentTime - this.game_coin_last_update_at.T;\r\n\r\n        // 将剩余的未计算时间加到已计算的时间上\r\n\t    const totalDuration = elapsedTime + (this.game_coin_remaining_duration);\r\n\r\n        const timeParam = SystemDefine.gameCoinInterval;\r\n        const intervals = totalDuration / timeParam;\r\n        this.game_coin += Math.floor(intervals) \r\n        if (this.game_coin > SystemDefine.gameCoinMax) {\r\n            this.game_coin = SystemDefine.gameCoinMax\r\n        }\r\n        this.game_coin_remaining_duration = totalDuration % timeParam;\r\n        this.game_coin_last_update_at.T = currentTime;\r\n\r\n        if(this.game_coin_next_update_at == null){\r\n            this.game_coin_next_update_at = new ServerTime();\r\n        }\r\n        this.game_coin_next_update_at.T = currentTime + timeParam - this.game_coin_remaining_duration;\r\n    }\r\n}\r\n\r\nexport class MachineCollectionData {\r\n    item_list: any | null;\r\n\r\n    public getItemCount(): number {\r\n        if(this.item_list == null) {\r\n            return 0;\r\n        }\r\n        return Object.keys(this.item_list).length;\r\n    }\r\n\r\n    public getItemCountById(itemID: string): number {\r\n        if(this.item_list == null) {\r\n            return 0;\r\n        }\r\n        if(this.item_list[itemID] == null) {\r\n            return 0;\r\n        }\r\n        return this.item_list[itemID];\r\n    }\r\n}\r\n\r\nexport class RunTimeData {\r\n    item: ItemData;\r\n    user: UserData;\r\n    wallet: WalletData;\r\n    machine_data: MachineData;\r\n    machine_coin_data: MachineCoinData;\r\n    machine_collection: MachineCollectionData;\r\n\r\n    // 构造函数直接初始化属性\r\n    constructor() {\r\n        this.item = new ItemData();\r\n        this.user = new UserData();\r\n        this.wallet = new WalletData();\r\n        this.machine_data = new MachineData();\r\n        this.machine_coin_data = new MachineCoinData();\r\n        this.machine_collection = new MachineCollectionData();\r\n    }\r\n\r\n    resetMachineData() {\r\n        this.machine_data = new MachineData();\r\n    }\r\n}\r\n","\r\nconst { regClass, property } = Laya;\r\nimport { Machine } from \"../GameLogic/Machine\";\r\nimport { RunTimeData } from \"./RunTimeData\";\r\n\r\n@regClass('fcV-m1clTpK88bUEiz8Jyg')\r\nexport class RunTimeDataManager extends Laya.Script {\r\n    declare owner: Laya.Sprite;\r\n    private static _instance: RunTimeDataManager;  \r\n\r\n    // 保存数据的对象\r\n    private _data: RunTimeData;\r\n\r\n    // 正在玩的娃娃机\r\n    private _machine: Machine\r\n\r\n    // 回调函数存储\r\n    private _callbackMap: { [module: string]: (() => void)[] };\r\n\r\n    constructor() {  \r\n        super();\r\n        this._data = this.initializeData();\r\n        this._callbackMap = {}; // 初始化回调存储\r\n    }\r\n\r\n    public get runTimeData(): RunTimeData {\r\n        return this._data;\r\n    }\r\n\r\n    public set machine(value: Machine) {\r\n        this._machine = value;\r\n    }\r\n\r\n    public get machine(): Machine {\r\n        return this._machine;\r\n    }\r\n\r\n    // 初始化数据\r\n    private initializeData(): RunTimeData {\r\n        return new RunTimeData();\r\n    }\r\n\r\n    public static get instance(): RunTimeDataManager {  \r\n        if (!RunTimeDataManager._instance) {  \r\n            return null;\r\n        }  \r\n        return RunTimeDataManager._instance;  \r\n    }  \r\n\r\n    onAwake(): void {\r\n        if (RunTimeDataManager._instance) {\r\n            throw new Error(\"Singleton class. Use getInstance() instead.\");\r\n        }\r\n        RunTimeDataManager._instance = this;\r\n    }\r\n\r\n    // 深度合并数据\r\n    private mergeDeep(\r\n        target: any,\r\n        source: any\r\n    ): any {\r\n        for (const key in source) {\r\n            if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\r\n                if (!target[key]) {\r\n                    target[key] = {};\r\n                }\r\n                // 如果有模块级回调，保存初始状态\r\n                const originalTarget = JSON.stringify(target[key]);\r\n                \r\n                this.mergeDeep(target[key], source[key]);\r\n\r\n                // 检查整个模块是否变化\r\n                if (originalTarget !== JSON.stringify(target[key])) {\r\n                    this.invokeModuleCallbacks(key); // 调用模块级回调\r\n                }\r\n            } else {\r\n                const isChanged = target[key] !== source[key];\r\n                target[key] = source[key];\r\n                // 字段级回调\r\n                if (isChanged) {\r\n                    this.invokeModuleCallbacks(key);\r\n                }\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    // 保存数据，支持部分更新\r\n    public saveData(newData: Partial<RunTimeData>): void {\r\n        this.mergeDeep(this._data, newData); // 更新当前数据\r\n    }\r\n\r\n    // 注册回调\r\n    public registerModuleCallback(module: string, callback: () => void): void {\r\n        if (!this._callbackMap[module]) {\r\n            this._callbackMap[module] = [];\r\n        }\r\n        this._callbackMap[module].push(callback);\r\n    }\r\n\r\n    // 反注册回调\r\n    public unregisterModuleCallback(module: string, callback: () => void): void {\r\n        if (this._callbackMap[module]) {\r\n            this._callbackMap[module] = this._callbackMap[module].filter(cb => cb !== callback);\r\n        }\r\n    }\r\n\r\n    private invokeModuleCallbacks(module: string): void {\r\n        if (this._callbackMap[module]) {\r\n            this._callbackMap[module].forEach(callback => callback());\r\n        }\r\n    }\r\n    // public getData<T>(clazz: new () => T): { [key: string]: T } {\r\n    //     return this._configs[clazz.name];\r\n    // }\r\n\r\n    // public getData(name: string) {\r\n    //     return this._datas[name];\r\n    // }\r\n}\r\n","const { regClass, property } = Laya;\r\nimport SoundManager = Laya.SoundManager;\r\n\r\n@regClass('nqDjq5ZVQJOFBV76vcnISg')\r\nexport class SoundFXManager {\r\n\r\n    private static _musicList:  Record<string, string> = {\r\n        \"MUSIC_1000\":\"resources/sound/music/MUSIC_1000.mp3\",\r\n        \"MUSIC_1000_HappyHour\":\"resources/sound/music/MUSIC_1000_HappyHour.mp3\",\r\n    };\r\n\r\n    private static _soundFXList:  Record<string, string> = {\r\n        \"SFX_ClaimItem\":\"resources/sound/sfx/SFX_ClaimItem.mp3\",\r\n        \"SFX_EggFind01\":\"resources/sound/sfx/SFX_EggFind01.mp3\",\r\n        \"SFX_EggFind02\":\"resources/sound/sfx/SFX_EggFind02.mp3\",\r\n        \"SFX_ButtonClick01\":\"resources/sound/sfx/SFX_ButtonClick01.mp3\",\r\n        \"SFX_ClawDropping\":\"resources/sound/sfx/SFX_ClawDropping.wav\",\r\n        \"SFX_ClawGrabbing\":\"resources/sound/sfx/SFX_ClawGrabbing.wav\",\r\n        \"SFX_Voice01\":\"resources/sound/sfx/SFX_Voice01.mp3\",\r\n        \"SFX_Voice02\":\"resources/sound/sfx/SFX_Voice02.mp3\",\r\n        \"SFX_Voice03\":\"resources/sound/sfx/SFX_Voice03.mp3\",\r\n        \"SFX_Failed\":\"resources/sound/sfx/SFX_Failed.mp3\",\r\n        \"SFX_Ping\":\"resources/sound/sfx/SFX_Ping.wav\",\r\n        \"SFX_Gold01\":\"resources/sound/sfx/SFX_Gold01.mp3\",\r\n        \"SFX_Gold02\":\"resources/sound/sfx/SFX_Gold02.mp3\",\r\n        \"SFX_Gold03\":\"resources/sound/sfx/SFX_Gold03.mp3\",\r\n        \"SFX_Gem01\":\"resources/sound/sfx/SFX_Gem01.mp3\",\r\n        \"SFX_Gem02\":\"resources/sound/sfx/SFX_Gem02.wav\",\r\n        \"SFX_ItemDrop\":\"resources/sound/sfx/SFX_ItemDrop.mp3\",\r\n        \"SFX_UnlockEggIncuabtion\":\"resources/sound/sfx/SFX_UnlockEggIncuabtion.wav\",\r\n    };\r\n\r\n    public static playMusic(name: string): void {\r\n        SoundManager.playMusic(this._musicList[name]);\r\n    }\r\n\r\n    public static stopMusic(): void {\r\n        SoundManager.stopMusic();\r\n    }\r\n\r\n    public static setVolume(volume: number): void {\r\n        SoundManager.setMusicVolume(volume);\r\n    }\r\n\r\n    public static playSoundFX(name: string): void {\r\n        SoundManager.playSound(this._soundFXList[name]);\r\n    }\r\n\r\n    public static stopSoundFX(name: string): void {\r\n        SoundManager.stopSound(this._soundFXList[name]);\r\n    }\r\n\r\n    /**\r\n     * 设置声音音量。根据参数不同，可以分别设置指定声音（背景音乐或音效）音量或者所有音效（不包括背景音乐）音量。\r\n     * @param volume    音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param url        (default = null)声音播放地址。默认为null。为空表示设置所有音效（不包括背景音乐）的音量，不为空表示设置指定声音（背景音乐或音效）的音量。\r\n     */\r\n    // static setSoundVolume(volume: number, url: string = null): void {\r\n    //     if (url) {\r\n    //         SoundManager._setVolume(url, volume);\r\n    //     } else {\r\n    //         SoundManager.soundVolume = volume;\r\n    //         for (let i = SoundFXManager._channels.length - 1; i >= 0; i--) {\r\n    //             let channel = SoundFXManager._channels[i];\r\n    //             if (channel.url != SoundFXManager._bgMusic) {\r\n    //                 channel.volume = volume;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // } \r\n}","export class MathHelper {\r\n    public static randomRange(min:any,max:any): any {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n}\r\n","const { regClass, property } = Laya;\r\n\r\nimport { Egg } from \"./Egg\";\r\nimport { Machine } from \"./Machine\";\r\nimport Animator2D = Laya.Animator2D;\r\nimport Sprite = Laya.Sprite;\r\nimport Event = Laya.Event;\r\nimport ColliderBase = Laya.ColliderBase;\r\nimport RigidBody = Laya.RigidBody;\r\nimport Tween = Laya.Tween;\r\nimport Ease = Laya.Ease;\r\nimport Handler = Laya.Handler;\r\nimport WeldJoint = Laya.WeldJoint;\r\nimport MathUtil = Laya.MathUtil;\r\nimport Point = Laya.Point;\r\nimport Label = Laya.Label;\r\nimport { RunTimeDataManager } from \"../RunTimeData/RunTimeDataManager\";\r\nimport { SoundFXManager } from \"../Component/SoundManager\";\r\nimport { MathHelper } from \"../Utils/MathHelper\";\r\n\r\nenum ClawState {\r\n    None,\r\n    Idle,//待机,可移动\r\n    Dropping,//下落\r\n    DroppingStop,//下落停止\r\n    Grabbing,//抓取\r\n    Pulling,//拉起\r\n}\r\n\r\n// 定义生成器函数  \r\nasync function* processGrabSteps(claw:Claw) {  \r\n\r\n    //下落\r\n    claw.changeState(ClawState.Dropping)\r\n    \r\n    while (!claw.clawFindedEgg) {  \r\n        // 等待一段时间后再检查  \r\n        await new Promise(resolve => setTimeout(resolve, 100));  \r\n        //yield \"Checking claw.clawFindedEgg...\";\r\n    }\r\n\r\n    //下落停止\r\n    claw.changeState(ClawState.DroppingStop)\r\n    claw.waittingTime = 0;\r\n    while (claw.waittingTime < 200) {  \r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        //yield \"Checking claw.clawFindedEgg...\";\r\n        claw.waittingTime += 100;\r\n    }\r\n\r\n    //抓取\r\n    claw.changeState(ClawState.Grabbing)\r\n\r\n    claw.waittingTime = 0;\r\n    while (claw.waittingTime < 1000) {  \r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        //yield \"Checking claw.clawFindedEgg...\";\r\n        claw.waittingTime += 100;\r\n    }\r\n    \r\n    //拉起\r\n    claw.changeState(ClawState.Pulling)\r\n    \r\n    claw.waittingTime = 0;\r\n    while (claw.waittingTime < 3000) {  \r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        //yield \"Checking claw.clawFindedEgg...\";\r\n        claw.waittingTime += 100;\r\n    }\r\n\r\n    claw.changeState(ClawState.Idle)\r\n}  \r\n\r\n\r\n@regClass('pneh_T95RWiOY4p54TqJ9g')\r\nexport class Claw extends Laya.Script {\r\n    //declare owner : Sprite3D;\r\n    declare owner : Sprite;\r\n\r\n    @property(Sprite)\r\n    public clawLeft : Sprite;\r\n\r\n    @property(Sprite)\r\n    public clawRight : Sprite;\r\n\r\n    @property( { type:Animator2D } ) //拿到 Animation 组件\r\n    public animator: Animator2D;\r\n\r\n    @property(Sprite)\r\n    public intersectionTestBox: Sprite;\r\n\r\n    @property(Sprite)\r\n    public pickupTestBox: Sprite;\r\n\r\n    @property(RigidBody)\r\n    public pickupTestRigidBody: RigidBody;\r\n\r\n    @property(Sprite)\r\n    public lineSprite: Sprite;\r\n\r\n    @property(Sprite)\r\n    public baseSprite: Sprite;\r\n\r\n    @property(Label)\r\n    public textGameCoin: Label;\r\n\r\n    //找到蛋之后的反馈\r\n    public onFoundEggCallback: (eggID: string) => void;\r\n\r\n    public clawFindedEgg : boolean;\r\n    public waittingTime: number;\r\n    public downTween: Tween;\r\n    public pingpongTween: Tween;\r\n    public findedEgg: Egg;\r\n    public curEgg: Egg;\r\n    \r\n    public isPicking = false;\r\n\r\n    private _clawState:ClawState = ClawState.None;\r\n    private _positionY: number;\r\n    private _lineOrignalHeight: number;\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    //onAwake(): void {}\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    onDisable(): void {\r\n        this.intersectionTestBox.off(Event.TRIGGER_ENTER, this, this.onIntersectionTestBoxTriggerEnter);\r\n        this.pickupTestBox.off(Event.TRIGGER_ENTER, this, this.onPickupTestBoxTriggerEnter);\r\n    }\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    onStart(): void {\r\n        //console.log(\"Claw\");\r\n        //this.animator.play(\"A_Claw_Open\");\r\n\r\n        this.intersectionTestBox.on(Event.TRIGGER_ENTER, this, this.onIntersectionTestBoxTriggerEnter);\r\n        this.pickupTestBox.on(Event.TRIGGER_ENTER, this, this.onPickupTestBoxTriggerEnter);\r\n\r\n        this._positionY = this.baseSprite.y;\r\n        this._lineOrignalHeight = this.lineSprite.height;\r\n        //这个设置只是为了激活物理\r\n        this.owner.x = 20;\r\n\r\n        //这个勾爪左右的逻辑,这个可以专门做一个机器\r\n        this.pingpong();\r\n\r\n        this.changeState(ClawState.Idle);\r\n    }\r\n\r\n    onIntersectionTestBoxTriggerEnter(colliderB: ColliderBase, colliderA: ColliderBase, contact: any) {\r\n        // let bodyB: RigidBody = colliderB.owner.getComponent(RigidBody);        \r\n        // console.log(\"TestBoxTriggerEnter bodyB:\", bodyB);\r\n\r\n        // let bodyA: RigidBody = colliderA.owner.getComponent(RigidBody);\r\n        // console.log(\"TestBoxTriggerEnter bodyA:\", bodyA);\r\n\r\n        this.clawFindedEgg = true;\r\n    }\r\n\r\n    onPickupTestBoxTriggerEnter(colliderB: ColliderBase, colliderA: ColliderBase, contact: any) {\r\n\r\n        if(this.findedEgg == null && colliderB.label == \"egg\" && this._clawState < ClawState.Pulling)\r\n        {\r\n            let eggB:Egg = colliderB.owner.getComponent(Egg);\r\n            //console.log(\"Pickup bodyB:\", eggB);\r\n            this.findedEgg = eggB;\r\n        }\r\n    }\r\n\r\n    public updateGameCoinDisplay() {\r\n        const coinData = RunTimeDataManager.instance.runTimeData.machine_coin_data;\r\n        this.textGameCoin.text = coinData.getTotalGameCoin().toString();\r\n        if (coinData.getTotalGameCoin() <= 0) {\r\n            this.textGameCoin.color = \"#FF6480\";\r\n        } else {\r\n            this.textGameCoin.color = \"#FFFFFF\";\r\n        }\r\n    }\r\n\r\n    public changeState(state:ClawState) : void {\r\n        this._clawState = state;\r\n        switch (state) {\r\n            case ClawState.Idle:\r\n                this.playAnimation(\"A_Claw_Idle\");\r\n                this.isPicking = false;\r\n                this.pingpongTween.resume();\r\n                break;\r\n            case ClawState.Dropping:\r\n                this.pingpongTween.pause();\r\n                this.playAnimation(\"A_Claw_Open\");\r\n                this.findedEgg = null;\r\n                this.curEgg = null;\r\n                this.moveYDown();\r\n                SoundFXManager.playSoundFX(\"SFX_ClawDropping\");\r\n                \r\n                const randomNumber = MathHelper.randomRange(1, 2);\r\n                SoundFXManager.playSoundFX(`SFX_Voice0${randomNumber}`);\r\n                break;\r\n            case ClawState.DroppingStop:\r\n                this.downTween.clear();\r\n                this.downTween = null;\r\n                this.playAnimation(\"A_Claw_DroppingStop\");\r\n                break;\r\n            case ClawState.Grabbing:\r\n                SoundFXManager.playSoundFX(\"SFX_ClawGrabbing\");\r\n                this.playAnimation(\"A_Claw_Close\");\r\n                this.connectEgg();\r\n                break;\r\n            case ClawState.Pulling:\r\n                this.moveYUp();\r\n                this.playAnimation(\"A_Claw_Idle\");\r\n                //this.animator.play(\"A_Claw_Idle\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    public connectEgg(): void {\r\n        if(this.findedEgg != null) {\r\n            this.curEgg = this.findedEgg;\r\n            this.findedEgg = null;\r\n            \r\n            let pickupTestWorldPos: Point = Point.create();\r\n            pickupTestWorldPos.x = this.pickupTestBox.width * this.pickupTestBox.anchorX;\r\n            pickupTestWorldPos.y = this.pickupTestBox.height * this.pickupTestBox.anchorY;\r\n            pickupTestWorldPos = this.pickupTestBox.localToGlobal(pickupTestWorldPos);\r\n\r\n            let eggWorldPos: Point = Point.create();\r\n            eggWorldPos.x = this.curEgg.owner.width * this.curEgg.owner.anchorX;\r\n            eggWorldPos.y = this.curEgg.owner.height * this.curEgg.owner.anchorY;\r\n            eggWorldPos = this.curEgg.owner.localToGlobal(eggWorldPos);\r\n\r\n            let finalPos: Point = Point.create();\r\n            finalPos.x = this.curEgg.owner.x + (pickupTestWorldPos.x - eggWorldPos.x);\r\n            finalPos.y = this.curEgg.owner.y + (pickupTestWorldPos.y - eggWorldPos.y);\r\n\r\n            Tween.to(this.curEgg.owner, {\"x\": finalPos.x, \"y\": finalPos.y}, 200, Ease.linearNone, Handler.create(this, () => {  \r\n                this.curEgg.buildJoint(this.pickupTestRigidBody);\r\n            }));\r\n        }\r\n    }\r\n\r\n\r\n    public grab(): void {\r\n        \r\n        if(this.isPicking) {\r\n            return;\r\n        }\r\n        \r\n        this.clawFindedEgg = false;\r\n        this.isPicking = true;\r\n\r\n        (async () => {  \r\n            const gen = processGrabSteps(this);  \r\n            for await (const message of gen) {  \r\n                console.log(message); // 输出生成器返回的状态信息  \r\n            }  \r\n        })();\r\n    }\r\n\r\n    public playAnimation(name:string): void {\r\n       // this.animator.crossFade(name, 0.5);\r\n        this.animator.play(name);\r\n    }\r\n\r\n    public moveYDown(): void {\r\n        this.downTween = Tween.to(this.baseSprite, { \"y\": 1100 }, 2000, Ease.linearNone, Handler.create(this, () => {  \r\n            this.clawFindedEgg = true;\r\n        }));\r\n\t} \r\n\r\n    public pingpong(): void {\r\n        this.pingpongTween = Tween.to(this.owner, { \"x\": 680 }, 2000, Ease.linearNone, Handler.create(this, () => {  \r\n            this.pingpongTween = Tween.to(this.owner, { \"x\": -50 }, 2000, Ease.linearNone, Handler.create(this, () => {  \r\n                this.pingpong();\r\n            }));\r\n        }));\r\n\t} \r\n\r\n    public moveYUp(): void {\r\n        Tween.to(this.baseSprite, { \"y\": this._positionY }, 2000, Ease.backIn, Handler.create(this, () => {  \r\n            if (this.curEgg != null) {\r\n                if(this.onFoundEggCallback != null) {\r\n                    this.onFoundEggCallback(this.curEgg.eggID)\r\n                }\r\n                this.curEgg = null;\r\n            }\r\n            this.clawFindedEgg = true;\r\n        }));\r\n\t} \r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onUpdate(): void {}\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    onLateUpdate(): void {\r\n\r\n        if (this._clawState == ClawState.Idle) {\r\n            \r\n        } else if (this._clawState == ClawState.Dropping || this._clawState == ClawState.Pulling) {\r\n            this.lineSprite.height = this.baseSprite.y - this._positionY + this._lineOrignalHeight;\r\n        }\r\n    }\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","export class CountdownTimer {\r\n    private _endTime: number;  // Server's UTC timestamp in milliseconds\r\n    private onStartedCallback: (remainingTime: string, difference: number) => void;\r\n    private onTickCallback: (remainingTime: string, difference: number) => void;\r\n    private onCompleteCallback: () => void;\r\n    \r\n\r\n    constructor(\r\n        serverEndTime: number, // Server-provided UTC timestamp\r\n        onStartedCallback: (remainingTime: string, difference: number) => void,\r\n        onTickCallback: (remainingTime: string, difference: number) => void,\r\n        onCompleteCallback: () => void,\r\n    ) {\r\n        this._endTime = serverEndTime; // Adjusted end time\r\n        this.onStartedCallback = onStartedCallback;\r\n        this.onTickCallback = onTickCallback;\r\n        this.onCompleteCallback = onCompleteCallback;\r\n    }\r\n\r\n    public restart(serverEndTime: number) {\r\n        this._endTime = serverEndTime; // Adjusted end time\r\n        this.start();\r\n    }\r\n\r\n    // Start the countdown\r\n    public start() {\r\n        // Use Laya.timer to loop the countdown\r\n        Laya.timer.loop(1000, this, this.update);\r\n        const remainingTime = this.getRemainingTime();\r\n        this.onStartedCallback(this.formatTime(remainingTime), remainingTime);\r\n    }\r\n\r\n    private getRemainingTime() {\r\n        const currentTime = Math.floor(Date.now() / 1000); // Convert to seconds\r\n        return this._endTime - currentTime;\r\n    }\r\n\r\n    // Update the countdown logic every second\r\n    private update() {\r\n        const remainingTime = this.getRemainingTime();\r\n        this.onTickCallback(this.formatTime(remainingTime), remainingTime);\r\n        \r\n        if (remainingTime <= 0) {\r\n            this.stop();\r\n            this.onCompleteCallback();\r\n        }\r\n    }\r\n\r\n    // Stop the countdown\r\n    public stop() {\r\n        Laya.timer.clear(this, this.update); // Clear the timer loop\r\n    }\r\n\r\n    // Format the remaining time in hh:mm:ss format\r\n    private formatTime(remainingTime: number): string {\r\n        const totalSeconds = remainingTime;\r\n        const hours = Math.floor(totalSeconds / 3600);\r\n        const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n        const seconds = totalSeconds % 60;\r\n\r\n        return `${hours.toString().padStart(2, '0')}:${minutes\r\n            .toString()\r\n            .padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    }\r\n}\r\n","import { UIManager } from \"./UIManager\";\r\nimport Tween = Laya.Tween;\r\nimport Ease = Laya.Ease;\r\n\r\nexport abstract class UIBase extends Laya.Script {\r\n\r\n    declare owner : Laya.Sprite;\r\n    private _view: fgui.GComponent;\r\n    private _config: any; \r\n    private _originScaleX: number;\r\n    private _originScaleY: number;\r\n    private _param: any;\r\n\r\n    protected _uiManager: UIManager;\r\n\r\n    public set uiManager(uiManager: UIManager) {\r\n        this._uiManager = uiManager;\r\n    }\r\n\r\n    public get uiManager() : UIManager {\r\n        return this._uiManager;\r\n    }\r\n\r\n    constructor() {  \r\n        super();\r\n        this._view = null;\r\n    }\r\n\r\n    public get view(): fgui.GComponent {\r\n        return this._view;\r\n    }\r\n\r\n    public set view(value: fgui.GComponent) {\r\n        this._view = value;\r\n    }\r\n\r\n    public set param (data: any) {\r\n        this._param = data;\r\n    }\r\n\r\n    public get param () : any {\r\n        return this._param;\r\n    }\r\n\r\n    public get config(): any {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: any) {\r\n        this._config = value;\r\n    }\r\n\r\n    public initUI() : void{\r\n        let rootAnimation = this.view;//.getChild(\"Root_Animation\")\r\n        if (rootAnimation) {\r\n            //console.log(\"Root_Animation: \" + rootAnimation.name);\r\n            rootAnimation.displayObject.anchorX = 0.5;\r\n            rootAnimation.displayObject.anchorY = 0.5;\r\n            rootAnimation.displayObject.x = this.uiManager.pageWidth * 0.5;\r\n            rootAnimation.displayObject.y = this.uiManager.pageHeight * 0.5;\r\n            this._originScaleX = rootAnimation.displayObject.scaleX;\r\n            this._originScaleY = rootAnimation.displayObject.scaleY;\r\n        }\r\n\r\n        let bBackgourndCloseButton = this.view.getChild(\"B_BackgroundClose\");\r\n        if(bBackgourndCloseButton) {\r\n            bBackgourndCloseButton.onClick(this, this.pop);\r\n        }\r\n\r\n        let bCloseButton = this.view.getChild(\"B_Close\");\r\n        if(bCloseButton) {\r\n            bCloseButton.onClick(this, this.pop);\r\n        }\r\n\r\n        let bOkButton = this.view.getChild(\"B_OK\");\r\n        if(bOkButton) {\r\n            bOkButton.onClick(this, this.pop);\r\n        }\r\n    }\r\n\r\n    public open(data: any) : void {\r\n        this.param = data;\r\n        this.willOpen();\r\n        this.enabled = true;\r\n        this.view.visible = true;\r\n        this.didOpen();\r\n    }\r\n\r\n    public isOpened() : boolean {\r\n        return this.enabled;\r\n    }\r\n\r\n    public willOpen() : void {\r\n\r\n        if(this._config.withBackground) {\r\n            this.uiManager.openBackground();\r\n\r\n            this.view.displayObject.scaleX = this._originScaleX;\r\n            this.view.displayObject.scaleY = this._originScaleY;\r\n            Tween.clearAll(this.view.displayObject);\r\n            Tween.from(this.view.displayObject, {\"scaleX\": 0, \"scaleY\": 0}, 388, Ease.backOut, Laya.Handler.create(this, () => {\r\n                    \r\n                console.log(\"Open Tween\");\r\n\r\n            }));\r\n        }\r\n\r\n        //console.log(\"willOpen \", rootAnimation)\r\n    }\r\n\r\n    public didOpen() : void {\r\n        //console.log(\"didOpen \", rootAnimation)\r\n    }\r\n\r\n    public forceClose() : void{\r\n        if(this._config.withBackground) {\r\n            this.uiManager.closeBackground();\r\n        }\r\n        this.willClose();\r\n        this.didClose();\r\n        this.enabled = false;\r\n        this.view.visible = false;\r\n    }\r\n\r\n    public pop() {\r\n        this.uiManager.popLastUI();\r\n    }\r\n\r\n    public popTips() {\r\n        this.uiManager.popLastTips();\r\n    }\r\n\r\n    public close() : void{\r\n        this.willClose();\r\n\r\n        if(!this._config.withBackground){\r\n            this.didClose();\r\n            this.enabled = false;\r\n            this.view.visible = false;\r\n            \r\n        } else {\r\n            Tween.clearAll(this.view.displayObject);\r\n            Tween.to(this.view.displayObject, {\"scaleX\": 0, \"scaleY\": 0}, 388, Ease.backIn, Laya.Handler.create(this, () => {\r\n                this.uiManager.closeBackground();\r\n                this.didClose();\r\n                this.enabled = false;\r\n                this.view.visible = false;\r\n            }));\r\n        }\r\n    }\r\n\r\n    public didClose() : void {\r\n\r\n    }\r\n\r\n    public willClose() : void{\r\n\r\n    }\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    //onAwake(): void {}\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    //onStart(): void {}\r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onUpdate(): void {\r\n        //console.log(this.constructor.name);\r\n    //}\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onLateUpdate(): void {}\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","import { UIBase } from \"../UIBase\";\r\n\r\nexport class UIBackground extends UIBase {\r\n\r\n    public initUI(): void {\r\n        super.initUI();\r\n        \r\n        let bBackgourndCloseButton = this.view.getChild(\"B_BackgroundCloseForBlackBG\");\r\n        if(bBackgourndCloseButton) {\r\n            bBackgourndCloseButton.onClick(this, this.closeBackground);\r\n        }\r\n    }\r\n\r\n    public closeBackground() : void{\r\n\r\n        //一般需要调用这个地方肯定是已经出错了,就这样处理了\r\n        this.uiManager.forceCloseBackground();\r\n    }\r\n}","const { regClass, property } = Laya;\r\n\r\nclass ParticlePool<T extends Particle> {\r\n    pool: T[] = [];\r\n    maxSize: number;\r\n\r\n    constructor(maxSize: number) {\r\n        this.maxSize = maxSize;\r\n    }\r\n\r\n    // 根据粒子类型从池中获取粒子\r\n    getParticle(x: number, y: number, texture: Laya.Texture, ParticleClass: new (...args: any[]) => T): T {\r\n        let particle: T;\r\n        if (this.pool.length > 0) {\r\n            // 如果池中有粒子，从池中取出并重置\r\n            particle = this.pool.pop()!;\r\n            particle.reset(x, y, texture);\r\n        } else {\r\n            particle = new ParticleClass(x, y, texture);\r\n        }\r\n        return particle;\r\n    }\r\n\r\n    // 将粒子归还到池中\r\n    returnParticle(particle: T): void {\r\n        if (this.pool.length < this.maxSize) {\r\n            this.pool.push(particle);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class Particle {\r\n    x: number;\r\n    y: number;\r\n    vx: number;\r\n    vy: number;\r\n\r\n    life: number;\r\n    fixedLife: number;\r\n    minLife: number;\r\n    maxLife: number;\r\n    \r\n    width: number;\r\n    height:number;\r\n\r\n    size: number;\r\n    minSize: number;\r\n    maxSize: number;\r\n    alpha: number;\r\n    texture: Laya.Texture;\r\n    isLoop: boolean;          // 是否为循环粒子\r\n\r\n\r\n    constructor(x: number, y: number, texture: Laya.Texture, isLoop: boolean) {\r\n        this.reset(x, y, texture);\r\n        this.isLoop = isLoop;\r\n    }\r\n\r\n    setSize(minSize: number, maxSize: number): void {\r\n        this.minSize = minSize;\r\n        this.maxSize = maxSize;\r\n    }\r\n\r\n    setLife(minLife: number, maxLife: number): void {\r\n        this.minLife = minLife;\r\n        this.maxLife = maxLife;\r\n    }\r\n\r\n    // 重置粒子的状态\r\n    reset(x: number, y: number, texture: Laya.Texture): void {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.texture = texture;\r\n        this.width = texture.width;\r\n        this.height = texture.height;\r\n    }\r\n\r\n    // 更新粒子的状态\r\n    abstract update(): void;\r\n\r\n    // 判断粒子是否已过期\r\n    isAlive(): boolean {\r\n        return this.isLoop || (this.life > 0 && this.alpha > 0); // 循环粒子永远活着\r\n    }\r\n\r\n    // 绘制粒子\r\n    draw(sprite: Laya.Sprite): void {\r\n        sprite.graphics.drawTexture(\r\n            this.texture,\r\n            this.x - (this.width * this.size) / 2,\r\n            this.y - (this.height * this.size) / 2,\r\n            this.width * this.size,\r\n            this.height * this.size,\r\n            null,\r\n            this.alpha\r\n        );\r\n    }\r\n}\r\n\r\nclass DefaultParticle extends Particle {\r\n    \r\n    constructor(x: number, y: number, texture: Laya.Texture) {\r\n        super(x, y, texture, true); // 爆炸粒子设置为一次性粒子\r\n    }\r\n\r\n    // 重置粒子的状态\r\n    reset(x: number, y: number, texture: Laya.Texture): void {\r\n        super.reset(x, y, texture);\r\n\r\n        this.vx = Math.random() * 10 - 5;\r\n        this.vy = Math.random() * 10 - 5;\r\n        this.life = Math.random() * 100;\r\n        this.size = 0.2 + Math.random() * 0.8;\r\n        this.alpha = 1;\r\n    }\r\n\r\n    // 更新粒子的状态\r\n    update(): void {\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n        this.life -= 1;\r\n        this.alpha -= 0.01;\r\n        //this.size -= 0.01;\r\n\r\n        if (this.isLoop && this.life <= 0) {\r\n            this.reset(0, 0, this.texture); // 重置为新的随机状态\r\n        }\r\n    }\r\n}\r\n\r\nexport class ParticleSystem<T extends Particle> {\r\n    particles: T[] = []; // 所有粒子\r\n    pool: ParticlePool<T>;\r\n    texture: Laya.Texture;\r\n    maxParticles: number;\r\n\r\n    constructor(texture: Laya.Texture, maxParticles: number) {\r\n        this.texture = texture;\r\n        this.maxParticles = maxParticles;\r\n        this.pool = new ParticlePool(maxParticles);\r\n    }\r\n\r\n    // 发射粒子（一次性或循环）\r\n    emit(x: number, y: number, ParticleClass: new (...args: any[]) => T, count: number = 1): void {\r\n        for (let i = 0; i < count; i++) {\r\n            if (this.particles.length < this.maxParticles) {\r\n                const particle = this.pool.getParticle(x, y, this.texture, ParticleClass);\r\n                this.particles.push(particle);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 更新所有粒子\r\n    update(): void {\r\n        for (let i = this.particles.length - 1; i >= 0; i--) {\r\n            this.updateParticle(this.particles[i], i);\r\n        }\r\n    }\r\n\r\n    // 更新单个粒子\r\n    private updateParticle(particle: T, index: number): void {\r\n        particle.update();\r\n\r\n        if (!particle.isAlive()) {\r\n            this.pool.returnParticle(particle);\r\n            this.particles.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    // 绘制所有活跃的粒子\r\n    draw(sprite: Laya.Sprite): void {\r\n        sprite.graphics.clear();\r\n        this.particles.forEach(particle => particle.draw(sprite));\r\n    }\r\n\r\n    public isAllLive(): boolean{\r\n        let isLive = false;\r\n        for (let i = this.particles.length - 1; i >= 0; i--) {\r\n            if (this.particles[i].isAlive()) {\r\n                isLive = true;\r\n                return isLive;\r\n            }\r\n        }\r\n\r\n        return isLive;\r\n    }\r\n}\r\n\r\n// @regClass()\r\n// export class ParticleExample extends Laya.Script {\r\n//     //declare owner : Laya.Sprite3D;\r\n//     //declare owner : Laya.Sprite;\r\n\r\n//     //@property(String)\r\n//     //public text: string = \"\";\r\n\r\n//     //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n//     //onAwake(): void {}\r\n\r\n//     particleSystem: ParticleSystem;\r\n//     sprite: Laya.Sprite;\r\n\r\n//     onAwake() {\r\n//         this.sprite = new Laya.Sprite();\r\n//         Laya.stage.addChild(this.sprite);\r\n\r\n//         // 加载纹理\r\n//         Laya.loader.load(\"resources/textures/common/T_Star.png\").then(res => {\r\n//             const texture = res.data;\r\n//             this.particleSystem = new ParticleSystem(texture, 20);\r\n            \r\n//             this.sprite.x = 500;\r\n//             this.sprite.y = 500;\r\n\r\n//             this.triggerLoopingEffect(0, 0);\r\n\r\n//             // 开始更新和绘制粒子系统\r\n//             Laya.timer.frameLoop(1, this, this.onParticleUpdate);\r\n//         });\r\n//     }\r\n\r\n//     // 触发一次性爆炸\r\n//     triggerExplosion(x: number, y: number): void {\r\n//         this.particleSystem.emit(x, y, \"explosion\", 10);\r\n//     }\r\n\r\n//     // 触发持续的粒子效果，例如喷泉\r\n//     triggerLoopingEffect(x: number, y: number): void {\r\n//         this.particleSystem.emit(x, y, \"random\", 10);\r\n//     }\r\n\r\n//     onParticleUpdate(): void {\r\n//         this.particleSystem.update();  // 更新粒子\r\n//         this.particleSystem.draw(this.sprite);  // 在 LayaAir 的 sprite 上绘制粒子\r\n//     }\r\n\r\n//     //组件被启用后执行，例如节点被添加到舞台后\r\n//     //onEnable(): void {}\r\n\r\n//     //组件被禁用时执行，例如从节点从舞台移除后\r\n//     //onDisable(): void {}\r\n\r\n//     //第一次执行update之前执行，只会执行一次\r\n//     //onStart(): void {}\r\n\r\n//     //手动调用节点销毁时执行\r\n//     //onDestroy(): void {}\r\n\r\n//     //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n//     //onUpdate(): void {}\r\n\r\n//     //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n//     //onLateUpdate(): void {}\r\n\r\n//     //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n//     //onMouseClick(): void {}\r\n// }","import { ParticleSystem, Particle } from \"./ParticleSystem\";\r\n\r\nconst { regClass, property } = Laya;\r\n\r\nclass ExplosionParticle extends Particle {\r\n    startSize: number;\r\n    endSize: number;\r\n\r\n    startAlpha: number;\r\n    endAlpha: number;\r\n    \r\n    color: string; // 添加颜色属性\r\n    gravity: number = 0.2; // 重力效果\r\n\r\n    constructor(x: number, y: number, texture: Laya.Texture) {\r\n        super(x, y, texture, false); // 非循环粒子\r\n    }\r\n\r\n    reset(x: number, y: number, texture: Laya.Texture): void {\r\n        const randomX = (Math.random() * 150) - 75; // 随机生成位置\r\n        const randomY = (Math.random() * 150) - 75;\r\n\r\n        super.reset(randomX, randomY, texture);\r\n        this.setLife(100, 200);\r\n        this.setSize(0.5, 1);\r\n        \r\n        this.life = Math.random() * (this.maxLife - this.minLife) + this.minLife;\r\n        this.fixedLife = this.life;\r\n\r\n        const angle = Math.random() * Math.PI * 2;\r\n        const speed = Math.random() * 10 + 2;\r\n        this.vx = Math.cos(angle) * speed;\r\n        this.vy = Math.sin(angle) * speed;\r\n\r\n        this.startSize = 1;\r\n        this.endSize = 3;\r\n\r\n        this.startAlpha = 1; // 初始透明度\r\n        this.endAlpha = 0; // 结束时完全透明\r\n\r\n        // 随机生成颜色\r\n        const r = Math.random();\r\n        const g = Math.random();\r\n        const b = Math.random();\r\n        this.color = `rgba(${Math.floor(r * 255)}, ${Math.floor(g * 255)}, ${Math.floor(b * 255)}, 1)`;\r\n\r\n        this.size = this.startSize;\r\n        this.alpha = this.startAlpha;\r\n    }\r\n\r\n    update(): void {\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n\r\n        this.vy += this.gravity; // 应用重力效果\r\n\r\n        const progress = 1 - (this.life / this.fixedLife);\r\n        this.size = this.startSize + (this.endSize - this.startSize) * progress;\r\n        this.alpha = this.startAlpha - (this.startAlpha - this.endAlpha) * progress;\r\n\r\n        this.life -= 1;\r\n\r\n        // 处理粒子生命结束\r\n        if (this.life <= 0) {\r\n            this.alpha = 0; // 完全透明\r\n        }\r\n    }\r\n\r\n    draw(sprite: Laya.Sprite): void {\r\n        sprite.graphics.drawTexture(\r\n            this.texture,\r\n            this.x - (this.width * this.size) / 2,\r\n            this.y - (this.height * this.size) / 2,\r\n            this.width * this.size,\r\n            this.height * this.size,\r\n            null,\r\n            this.alpha,\r\n            this.color\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n@regClass('TFSmKJ9qS7e3rXvq2nuTug')\r\nexport class FXExplosion extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    declare owner : Laya.Sprite;\r\n    public particleSystem: ParticleSystem<ExplosionParticle>;\r\n\r\n    onStart() {\r\n        const texture = this.owner.texture;\r\n        this.owner.texture = null;\r\n        this.particleSystem = new ParticleSystem(texture, 20);\r\n        \r\n        // 开始更新和绘制粒子系统\r\n        Laya.timer.frameLoop(1, this, this.onParticleUpdate);\r\n    }\r\n\r\n    public emit(){\r\n        this.particleSystem.emit(0, 0, ExplosionParticle, 20);\r\n    }\r\n\r\n    onTextureLoaded(): void {\r\n        // 获取已加载的纹理\r\n    }\r\n\r\n    onParticleUpdate(): void {\r\n        this.particleSystem.update();  // 更新粒子\r\n        this.particleSystem.draw(this.owner);  // 在 LayaAir 的 sprite 上绘制粒子\r\n    }\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    //onAwake(): void {}\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    //onStart(): void {}\r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onUpdate(): void {}\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onLateUpdate(): void {}\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","import { SoundFXManager } from \"../../Component/SoundManager\";\r\nimport { ItemConfig } from \"../../Config/ExcelItem\";\r\nimport { FXExplosion } from \"../../Particle/FXExplosion\";\r\nimport { UIBase } from \"../UIBase\";\r\n\r\nexport class UIClaimItem extends UIBase {\r\n    \r\n    private _loaderItemIcon : fgui.GLoader;\r\n    private _imgWindow : fgui.GImage;\r\n    private _textCount : fgui.GLabel;\r\n    private _textName : fgui.GLabel;\r\n\r\n    private _originX: number;\r\n    private _originY: number;\r\n    private _fxRoot : fgui.GGraph;\r\n    private _fxExplosion: FXExplosion;\r\n\r\n    public initUI(): void {\r\n        super.initUI();\r\n\r\n        this._loaderItemIcon = this.view.getChild(\"LOADER_ItemIcon\").asLoader;\r\n        this._imgWindow = this.view.getChild(\"IMG_Window\").asImage;\r\n        this._textCount = this.view.getChild(\"TEXT_Count\").asLabel;\r\n        this._textName = this.view.getChild(\"TEXT_Name\").asLabel;\r\n        this._fxRoot = this.view.getChild(\"IMG_FXRoot\").asGraph;\r\n\r\n        this._originX = this._loaderItemIcon.displayObject.x;\r\n        this._originY = this._loaderItemIcon.displayObject.y;\r\n        \r\n        Laya.loader.load(\"resources/prefabs/fx/P_FXExplosion.lh\").then(res => {\r\n            let sprite: Laya.Sprite = res.create();\r\n            sprite.anchorX = 0.5;\r\n            sprite.anchorY = 1;\r\n\r\n            this._fxRoot.displayObject.addChild(sprite);\r\n\r\n            // 获取 icon 和 sprite 的宽高\r\n            let aWidth = this._fxRoot.displayObject.width;\r\n            let aHeight = this._fxRoot.displayObject.height;\r\n\r\n            let bWidth = sprite.width;\r\n            let bHeight = sprite.height;\r\n\r\n            // 计算宽高比例\r\n            let scaleX = aWidth / bWidth;\r\n            let scaleY = aHeight / bHeight;\r\n\r\n            // 取最小的比例来保证等比缩放\r\n            let scale = Math.min(scaleX, scaleY);\r\n\r\n            // 应用等比缩放\r\n            sprite.scale(scale, scale, true);\r\n\r\n            // 将 sprite 放置在 icon 的中心位置\r\n            sprite.pos(aWidth, aHeight / 2);\r\n\r\n            this._fxExplosion = sprite.getChildAt(0).getComponent(FXExplosion);\r\n\r\n        });\r\n    }\r\n\r\n    public didClose(): void {\r\n        super.didClose();\r\n\r\n        this.clearIcon();\r\n        this.stopIconBounceAnimation();\r\n    }\r\n\r\n    public didOpen(): void {\r\n        this.buildIcon(this.param.itemID, this.param.count);\r\n        this._fxExplosion.emit();\r\n    }\r\n\r\n    private buildIcon(itemID: string, count: number) {\r\n\r\n        const itemConfig = ItemConfig.getConfig(itemID)\r\n        if(itemConfig) {\r\n            this._loaderItemIcon.url = itemConfig.Texture;\r\n            this._loaderItemIcon.displayObject.anchorX = 0.5;\r\n            this._loaderItemIcon.displayObject.anchorY = 0.5;\r\n            this._loaderItemIcon.displayObject.x = this._originX + this._loaderItemIcon.displayObject.width * 0.5;\r\n            this._loaderItemIcon.displayObject.y = this._originY + this._loaderItemIcon.displayObject.height * 0.5;\r\n\r\n            this._textName.text = itemConfig.Name;\r\n            this._textCount.text = `x ${count}`;\r\n            this._imgWindow.color = itemConfig.Color;\r\n\r\n            this.startIconBounceAnimation();\r\n\r\n            SoundFXManager.playSoundFX(\"SFX_ClaimItem\");\r\n            SoundFXManager.playSoundFX(itemConfig.Sfx);\r\n        }\r\n    }\r\n\r\n    public clearIcon() {\r\n        this._loaderItemIcon.url = \"\";\r\n    }\r\n\r\n    // 停止跳动动画\r\n    private stopIconBounceAnimation() {\r\n        if (this._loaderItemIcon) {\r\n            Laya.Tween.clearTween(this._loaderItemIcon.displayObject); // 清除 this.icon 上的所有动画\r\n        }\r\n    }\r\n\r\n    // 给icon增加一个跳动的动画效果\r\n    private startIconBounceAnimation() {\r\n        // 首先停止之前可能存在的动画\r\n        this.stopIconBounceAnimation(); \r\n\r\n        // 动画函数：让icon缩放变大并稍微上移，带有弹力效果\r\n        const bounce1 = () => {\r\n            Laya.Tween.to(this._loaderItemIcon.displayObject, { scaleX: 1.1, scaleY: 0.8 }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce2));\r\n        };\r\n\r\n        // 动画函数：让icon缩放变小并回到原位置，带有弹力效果\r\n        const bounce2 = () => {\r\n            Laya.Tween.to(this._loaderItemIcon.displayObject, { scaleX: 1, scaleY: 1 }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce1));\r\n        };\r\n\r\n        // 开始第一次动画\r\n        bounce1();\r\n    }\r\n}","import { ConfigHelper, ConfigManager } from \"../../Config/ConfigManager\";\r\nimport { ItemConfig } from \"../../Config/ExcelItem\";\r\nimport { MachineConfig } from \"../../Config/ExcelMachine\";\r\nimport { RunTimeDataManager } from \"../../RunTimeData/RunTimeDataManager\";\r\nimport { UIBase } from \"../UIBase\";\r\nimport { UIClassName, UIDefine } from \"../UIDefine\";\r\nimport { UIManager } from \"../UIManager\";\r\n\r\nexport class UICollection extends UIBase {\r\n    \r\n    private _listCollection : fgui.GList;\r\n    private _listPageSelect : fgui.GList;\r\n    private _textMessage: fgui.GTextField;\r\n    private _maxOnePageCollectionNumber: number = 9;\r\n    private _collectionConfigList: string[] = [];\r\n    private _curDisplayList: string[] = [];\r\n\r\n    public initUI(): void {\r\n        super.initUI();\r\n\r\n        this._listCollection = this.view.getChild(\"LIST_Collection\").asList;\r\n        this._listPageSelect = this.view.getChild(\"LIST_PageSelect\").asList;\r\n        this._textMessage = this.view.getChild(\"TEXT_Message\").asTextField;\r\n\r\n        this._listPageSelect.itemRenderer = Laya.Handler.create(this, this.renderListPageSelect, null, false);\r\n        this._listPageSelect.on(fgui.Events.CLICK_ITEM, this, this.onClickListPageSelectItem);\r\n\r\n        this._listCollection.itemRenderer = Laya.Handler.create(this, this.renderListCollection, null, false);\r\n        this._listCollection.on(fgui.Events.CLICK_ITEM, this, this.onClickItem);   \r\n    }\r\n\r\n    public didOpen(): void {\r\n        super.didOpen();\r\n        const curMachineID = RunTimeDataManager.instance.runTimeData.machine_data.id;\r\n        const machineConfig = MachineConfig.getConfig(curMachineID);\r\n        const collectionList = ConfigHelper.parseStringArray(machineConfig.CollectionList)\r\n        this._collectionConfigList = collectionList;\r\n        \r\n        let collectionPageNumber = collectionList.length / this._maxOnePageCollectionNumber;\r\n        if (collectionList.length % this._maxOnePageCollectionNumber != 0) {\r\n            collectionPageNumber += 1;\r\n        }\r\n\r\n        this._listPageSelect.numItems = collectionPageNumber;\r\n        this._listPageSelect.selectedIndex = 0;\r\n        this.refreshCollectionByBageIndex(this._listPageSelect.selectedIndex);\r\n\r\n        this._textMessage.text = `You have: [color=#ffff99]${RunTimeDataManager.instance.runTimeData.machine_collection.getItemCount()}/${this._collectionConfigList.length}[/color]`\r\n    }\r\n\r\n    private renderListCollection(index: number, obj: fgui.GObject): void {\r\n        const itemConfig = ItemConfig.getConfig(this._curDisplayList[index]);\r\n        const loader = obj.asCom.getChild(\"LOADER_ItemIcon\").asLoader;\r\n        loader.url = itemConfig.Texture;\r\n        \r\n        const textCount = obj.asCom.getChild(\"TEXT_Count\").asLabel;\r\n        const count = RunTimeDataManager.instance.runTimeData.machine_collection.getItemCountById(itemConfig.ID)\r\n        if (count > 0) {\r\n            loader.color = \"#FFFFFF\";\r\n            textCount.text = \"x\" + count;\r\n        } else {\r\n            textCount.text = \"\";\r\n            loader.color = \"#000000\";\r\n        }\r\n\r\n        obj.data = itemConfig.ID;\r\n    }\r\n\r\n    private refreshCollectionByBageIndex(pageIndex: number): void {\r\n\r\n        this._listCollection.numItems = 0;\r\n        this._curDisplayList = [];\r\n\r\n        let startIndex = pageIndex * this._maxOnePageCollectionNumber;\r\n        let endIndex = (pageIndex + 1) * this._maxOnePageCollectionNumber;\r\n\r\n        for (let i = startIndex; i < endIndex; i++) {\r\n            if (i >= this._collectionConfigList.length) {\r\n                break;\r\n            }\r\n\r\n            const itemConfig = ItemConfig.getConfig(this._collectionConfigList[i]);\r\n            if (itemConfig) {\r\n                this._curDisplayList.push(this._collectionConfigList[i]);\r\n            }\r\n        }\r\n\r\n        this._listCollection.numItems = this._curDisplayList.length;\r\n    }\r\n\r\n    private onClickListPageSelectItem(): void {\r\n        this.refreshCollectionByBageIndex(this._listPageSelect.selectedIndex);\r\n    }\r\n\r\n    private onClickItem(item: fgui.GObject): void {\r\n        //console.log(\"onClickItem \" + item.data);\r\n        const itemID = item.data;\r\n        const count = RunTimeDataManager.instance.runTimeData.machine_collection.getItemCountById(itemID)\r\n        if (count > 0) {\r\n            UIManager.instance.pushUI(UIClassName.UI_ShowItem_HUD, {\r\n                itemID: itemID,\r\n                count: count\r\n            })\r\n        } else {\r\n            UIManager.instance.ShowMessageBox(\"You don't have this item\", null);\r\n        }\r\n    }\r\n\r\n    private renderListPageSelect(index: number, obj: fgui.GObject): void {\r\n\r\n        const btn = obj.asButton;\r\n\r\n        const n1 = btn.getChild(\"TEXT_N1\").asLabel;\r\n        const n2 = btn.getChild(\"TEXT_N2\").asLabel;\r\n\r\n        n1.text = \"\" + (index + 1);\r\n        n2.text = \"\" + (index + 1);\r\n    }\r\n}","import { UIBase } from \"../UIBase\";\r\n\r\nexport class UIFXCoinBackground extends UIBase {\r\n    private _fxBackGround : fgui.GImage;\r\n    private _time : number = 0;\r\n    private _offsetScale : number = 0.1;\r\n    private _isMaterialLoaded : boolean = false;\r\n    //第一次执行update之前执行，只会执行一次\r\n    onAwake(): void {\r\n        this._time = 0;\r\n        this._isMaterialLoaded = false;\r\n    }\r\n\r\n    onStart(): void {\r\n        //this._fxBackGround = this.view.getChild(\"FX_Background\").asImage;\r\n        //this._fxBackGround.visible = false;\r\n        //Laya.loader.load(\"resources/materials/M_Sprite2D_UV_Animation.lmat\", Laya.Handler.create(this, this.onLoaded));\r\n    }\r\n\r\n    // onLoaded() : void {\r\n    //     let material = Laya.loader.getRes(\"resources/materials/M_Sprite2D_UV_Animation.lmat\");\r\n    //     this._fxBackGround.displayObject.material = material;\r\n    //     this._fxBackGround.displayObject.material.setVector4(\"u_TilingOffset\", new Laya.Vector4(0.5,0.5,0,0))\r\n    //     this._isMaterialLoaded = true;\r\n    //     this._fxBackGround.visible = true;\r\n    // }\r\n\r\n    // onLateUpdate(): void {\r\n    //     if (this._isMaterialLoaded === true) {\r\n    //         let deltaTime = Laya.timer.delta / 1000;\r\n    //         this._time += deltaTime * this._offsetScale;\r\n    //         this._fxBackGround.displayObject.material.setFloat(\"u_Time\", this._time)\r\n    //         if(this._time > Number.MAX_SAFE_INTEGER) {\r\n    //             this._time = 0;\r\n    //         }\r\n    //     }\r\n    // }\r\n}","import { UIBase } from \"../UIBase\";\r\n\r\nexport class UIFXLayer extends UIBase {\r\n\r\n}","import { UIBase } from \"../UIBase\";\r\n\r\nexport class UIInviteFriends extends UIBase {\r\n\r\n}","import { UIBase } from \"../UIBase\";\r\n\r\nexport class UILoading extends UIBase {\r\n\r\n}","import { UIBase } from \"../UIBase\";\r\n\r\nexport class UIMessageBoxOne extends UIBase {\r\n\r\n    private _textMessage : fgui.GTextField;\r\n\r\n    public initUI(): void {\r\n        super.initUI();\r\n\r\n        this._textMessage = this.view.getChild(\"TEXT_Message\").asTextField;\r\n    }\r\n\r\n    public didOpen(): void {\r\n\r\n        super.didOpen();\r\n        \r\n        this._textMessage.text = this.param.content;\r\n    }\r\n}","import { CountdownTimer } from \"../../Component/CountdownTimer\";\r\nimport { SoundFXManager } from \"../../Component/SoundManager\";\r\nimport { EggConfig } from \"../../Config/ExcelEgg\";\r\nimport { Egg } from \"../../GameLogic/Egg\";\r\nimport { IncubationEntry } from \"../../RunTimeData/RunTimeData\";\r\nimport { RunTimeDataManager } from \"../../RunTimeData/RunTimeDataManager\";\r\nimport { UIBase } from \"../UIBase\";\r\n\r\nexport class UIShowEggIncuabtion extends UIBase {\r\n    \r\n    private _imgEggRoot : fgui.GGraph;\r\n    private _eggSprite: Laya.Sprite;\r\n    private _pbEggIncuabtionProgress: fgui.GProgressBar;\r\n\r\n    private _iconScale = 0;\r\n    private _iconOriginY = 0;\r\n    private _eggConfig: EggConfig;\r\n\r\n    private _textCooldownTime: fgui.GTextField;\r\n    private _countdownTimer : CountdownTimer;\r\n\r\n    private _incubationData: IncubationEntry;\r\n\r\n    public initUI(): void {\r\n        super.initUI();\r\n        \r\n        this._textCooldownTime = this.view.getChild(\"TEXT_CooldownTime\").asTextField;\r\n\r\n        this._imgEggRoot = this.view.getChild(\"IMG_EggRoot\").asGraph;\r\n        this._pbEggIncuabtionProgress = this.view.getChild(\"PB_Eggincuabtion\").asProgress;\r\n    }\r\n\r\n    public didOpen(): void {\r\n        this.setIncubationIndex(this.param.incubationIndex)\r\n    }\r\n\r\n    public setIncubationIndex(index: number): void {\r\n        const machineData = RunTimeDataManager.instance.runTimeData.machine_data;\r\n        if(machineData.incubation_list.length <= 0) {\r\n            this.pop(); return;\r\n        }\r\n\r\n        this._incubationData = machineData.incubation_list[index];\r\n        this.initIcon(this._incubationData);\r\n        this.initTimeShower();\r\n        \r\n    }\r\n\r\n    private clear(): void {\r\n\r\n        if(this._countdownTimer != null) {\r\n            this._countdownTimer.stop();\r\n            this._countdownTimer = null;\r\n        }\r\n\r\n        this._textCooldownTime.text = \"\";\r\n\r\n        // 停止跳动动画\r\n        this.stopIconBounceAnimation();\r\n\r\n        if (this._eggSprite) {\r\n            this._eggSprite.destroy();\r\n            this._eggSprite = null;\r\n        }\r\n\r\n        this._incubationData = null;\r\n    }\r\n\r\n    public didClose(): void {\r\n        super.didClose();\r\n        this.clear();\r\n    }\r\n\r\n    private initIcon(entry: IncubationEntry) {\r\n        \r\n        this._eggConfig = EggConfig.getConfig(entry.config_id);\r\n        Laya.loader.load(this._eggConfig.Prefab).then(res => {\r\n            let sprite: Laya.Sprite = res.create();\r\n            sprite.anchorX = 0.5;\r\n            sprite.anchorY = 1;\r\n\r\n            this._imgEggRoot.displayObject.addChild(sprite);\r\n\r\n            // 获取 icon 和 sprite 的宽高\r\n            let aWidth = this._imgEggRoot.displayObject.width;\r\n            let aHeight = this._imgEggRoot.displayObject.height;\r\n\r\n            let bWidth = sprite.width * 1.2;\r\n            let bHeight = sprite.height * 1.2;\r\n\r\n            // 计算宽高比例\r\n            let scaleX = aWidth / bWidth;\r\n            let scaleY = aHeight / bHeight;\r\n\r\n            // 取最小的比例来保证等比缩放\r\n            let scale = Math.min(scaleX, scaleY);\r\n\r\n            // 应用等比缩放\r\n            sprite.scale(scale, scale, true);\r\n\r\n            // 将 sprite 放置在 icon 的中心位置\r\n            sprite.pos(aWidth / 2, aHeight - 30);\r\n\r\n            //sprite.anchorY = 1;\r\n\r\n            const egg = sprite.getComponent(Egg);\r\n            egg.removeRigidBody();\r\n            \r\n            egg.eggID = entry.egg_id;\r\n            egg.init();\r\n\r\n            this._eggSprite = sprite;\r\n            this._iconScale = this._eggSprite.scaleY;\r\n            this._iconOriginY = this._eggSprite.y;\r\n            \r\n            this._pbEggIncuabtionProgress.min = 0;\r\n            this._pbEggIncuabtionProgress.max = this._eggConfig.IncubationTime;\r\n            this.startIconBounceAnimation();\r\n\r\n            SoundFXManager.playSoundFX(this._eggConfig.Sfx);\r\n        }); \r\n    }\r\n\r\n    // 停止跳动动画\r\n    private stopIconBounceAnimation() {\r\n        if (this._eggSprite) {\r\n            Laya.Tween.clearTween(this._eggSprite); // 清除 this.icon 上的所有动画\r\n        }\r\n    }\r\n\r\n    // 给icon增加一个跳动的动画效果\r\n    private startIconBounceAnimation() {\r\n        // 首先停止之前可能存在的动画\r\n        this.stopIconBounceAnimation(); \r\n\r\n        // 动画函数：让icon缩放变大并稍微上移，带有弹力效果\r\n        const bounce1 = () => {\r\n            Laya.Tween.to(this._eggSprite, { scaleX: this._iconScale * 1.1, scaleY: this._iconScale * 0.8 }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce2));\r\n        };\r\n\r\n        // 动画函数：让icon缩放变小并回到原位置，带有弹力效果\r\n        const bounce2 = () => {\r\n            Laya.Tween.to(this._eggSprite, { scaleX: this._iconScale, scaleY: this._iconScale }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce1));\r\n        };\r\n\r\n        // 开始第一次动画\r\n        bounce1();\r\n    }\r\n\r\n    initTimeShower() {\r\n\r\n        if(this._countdownTimer != null) {\r\n            this._countdownTimer.restart(this._incubationData.maturation_at.T)\r\n            return;\r\n        }\r\n\r\n        this._countdownTimer = new CountdownTimer(this._incubationData.maturation_at.T, \r\n            (remainingTime, difference) => {\r\n                this._textCooldownTime.text = `${remainingTime}`\r\n                this._pbEggIncuabtionProgress.value = difference;\r\n            },\r\n            (remainingTime, difference) => {\r\n                this._textCooldownTime.text = `${remainingTime}`\r\n                this._pbEggIncuabtionProgress.value = difference;\r\n            },\r\n            () => {\r\n                this.pop();\r\n            }\r\n        );\r\n\r\n        this._countdownTimer.start();\r\n    }\r\n}","import { ItemConfig } from \"../../Config/ExcelItem\";\r\nimport { UIBase } from \"../UIBase\";\r\n\r\nexport class UIShowItem extends UIBase {\r\n    \r\n    private _loaderItemIcon : fgui.GLoader;\r\n    \r\n    private _originX: number;\r\n    private _originY: number;\r\n    private _listStars: fgui.GList;\r\n    private _curRank: number = 0;\r\n\r\n    private _textName : fgui.GLabel;\r\n    private _textdiscription: fgui.GLabel;\r\n\r\n    public initUI(): void {\r\n        super.initUI();\r\n\r\n        this._loaderItemIcon = this.view.getChild(\"LOADER_ItemIcon\").asLoader;\r\n        this._listStars = this.view.getChild(\"LIST_Stars\").asList;\r\n        this._listStars.itemRenderer = Laya.Handler.create(this, this.renderStars, null, false);\r\n\r\n        this._textName = this.view.getChild(\"TEXT_Name\").asLabel;\r\n        this._textdiscription = this.view.getChild(\"TEXT_Discription\").asLabel;\r\n\r\n        this._originX = this._loaderItemIcon.displayObject.x;\r\n        this._originY = this._loaderItemIcon.displayObject.y;\r\n    }\r\n\r\n    public didOpen(): void {\r\n        super.didOpen();\r\n\r\n        const itemID = this.param.itemID;\r\n        this.buildDisplay(itemID, this.param.count.toString());\r\n    }\r\n\r\n    public willClose(): void {\r\n        super.willClose();\r\n\r\n        this.clearIcon();\r\n    }\r\n\r\n    public buildDisplay(itemID: string, countString: string) {\r\n\r\n        const itemConfig = ItemConfig.getConfig(itemID)\r\n        if(!itemConfig) {\r\n            return;\r\n        }\r\n\r\n        this._textName.text = `${itemConfig.Name} [color=#FFFF99]x ${countString}[/color]`;\r\n        this._textdiscription.text = itemConfig.Discription;\r\n\r\n        this._loaderItemIcon.url = itemConfig.Texture;\r\n        this._loaderItemIcon.displayObject.anchorX = 0.5;\r\n        this._loaderItemIcon.displayObject.anchorY = 0.5;\r\n        this._loaderItemIcon.displayObject.x = this._originX + this._loaderItemIcon.displayObject.width * 0.5;\r\n        this._loaderItemIcon.displayObject.y = this._originY + this._loaderItemIcon.displayObject.height * 0.5;\r\n\r\n        this.startIconBounceAnimation();\r\n\r\n        this._curRank = itemConfig.Rank;\r\n        this._listStars.numItems = 0;\r\n        this._listStars.numItems = 5;\r\n    }\r\n\r\n    public clearIcon() {\r\n        this._loaderItemIcon.url = \"\";\r\n        this.stopIconBounceAnimation(); \r\n    }\r\n\r\n    private stopIconBounceAnimation() {\r\n        if (this._loaderItemIcon) {\r\n            Laya.Tween.clearTween(this._loaderItemIcon.displayObject); // 清除 this.icon 上的所有动画\r\n        }\r\n    }\r\n\r\n    private renderStars(index: number, item: fgui.GObject) {\r\n        if (this._curRank -1 >= index)\r\n        {\r\n            item.asCom.getChild(\"IMAGE_Star\").asGraph.color = \"#FFFF99\";\r\n        }\r\n    }\r\n\r\n    // 给icon增加一个跳动的动画效果\r\n    private startIconBounceAnimation() {\r\n        // 首先停止之前可能存在的动画\r\n        this.stopIconBounceAnimation(); \r\n\r\n        // 动画函数：让icon缩放变大并稍微上移，带有弹力效果\r\n        const bounce1 = () => {\r\n            Laya.Tween.to(this._loaderItemIcon.displayObject, { scaleX: 1.1, scaleY: 0.95 }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce2));\r\n        };\r\n\r\n        // 动画函数：让icon缩放变小并回到原位置，带有弹力效果\r\n        const bounce2 = () => {\r\n            Laya.Tween.to(this._loaderItemIcon.displayObject, { scaleX: 1, scaleY: 1 }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce1));\r\n        };\r\n\r\n        // 开始第一次动画\r\n        bounce1();\r\n    }\r\n}","import { UIBase } from \"../UIBase\";\r\n\r\nexport class UITask extends UIBase {\r\n\r\n}","import { UIBase } from \"../UIBase\";\r\nimport Tween = Laya.Tween;\r\nimport Ease = Laya.Ease;\r\nimport Handler = Laya.Handler;\r\n\r\nexport class UITips extends UIBase {\r\n    private _textMessage : fgui.GTextField;\r\n    private _originY: number = 0;\r\n\r\n    public initUI() : void{\r\n\r\n        super.initUI();\r\n        \r\n        this._textMessage = this.view.getChild(\"TEXT_Message\").asTextField;\r\n        this._originY = this.view.displayObject.y;\r\n        \r\n    }\r\n\r\n    // public setMessage(message : string) : void {\r\n    //     this._textMessage.text = message;u\r\n    // }\r\n\r\n    public didClose(): void {\r\n        super.didClose();\r\n        Tween.clearAll(this.view.displayObject);\r\n        Laya.timer.clearAll(this);\r\n    }\r\n\r\n    public didOpen(): void {\r\n\r\n        super.didOpen();\r\n        \r\n        this._textMessage.text = this.param.content;\r\n\r\n        this.view.displayObject.y = this._originY;\r\n        Tween.from(this.view.displayObject, {\"y\": -100}, 600, Ease.backOut, Handler.create(this, () => {  \r\n\r\n            Laya.timer.once(2000, this, () => {  \r\n\r\n                Tween.to(this.view.displayObject, {\"y\": -100}, 600, Ease.backIn, Handler.create(this, () => {  \r\n\r\n                    this.popTips();\r\n                \r\n                }));\r\n            \r\n            });\r\n\r\n        }));\r\n    }\r\n}","import { RunTimeDataManager } from \"../RunTimeData/RunTimeDataManager\";\r\n\r\nconst { regClass, property } = Laya;\r\n\r\n@regClass('DGCskiILRi65QciOt7TFbg')\r\nexport class HttpManager extends Laya.Script {  \r\n    private static _instance: HttpManager;  \r\n  \r\n    public static get instance(): HttpManager {  \r\n        if (!HttpManager._instance) {  \r\n            return null;\r\n        }  \r\n        return HttpManager._instance;  \r\n    }  \r\n  \r\n    private _session: string;\r\n\r\n    constructor() {  \r\n        super();  \r\n    }\r\n  \r\n    //private baseUrl: string = \"http://127.0.0.1:9100\";  // 替换为你的服务器 API 基础 URL  \r\n    private baseUrl: string = \"https://seed-test.9x9168.com:9100\";  // 替换为你的服务器 API 基础 URL \r\n  \r\n    public get(endpoint: string, params: Object = {}, callback: Function, errorCallback: Function = null, progressCallback: Function = null): void {  \r\n        const url = this.buildUrl(endpoint, params);  \r\n        const httpRequest = new Laya.HttpRequest();  \r\n        \r\n        httpRequest.once(Laya.Event.COMPLETE, self, (evt:any)=>{\r\n            //console.log(evt);\r\n            if (evt.err_no != 0)  {\r\n                if(errorCallback) {\r\n                    errorCallback(evt.data);\r\n                }\r\n                return;\r\n            }\r\n\r\n            RunTimeDataManager.instance.saveData(evt.data);\r\n            if(callback) {\r\n                callback(evt.data);\r\n            }\r\n        });\r\n\r\n        httpRequest.once(Laya.Event.ERROR, self, (error:any)=>{\r\n            //console.log(error);\r\n            if(errorCallback) {\r\n                errorCallback(error.data);\r\n            }\r\n        });\r\n\r\n        httpRequest.on(Laya.Event.PROGRESS, self, (evt:any)=>{\r\n            //console.log(evt);\r\n            if(progressCallback) {\r\n                progressCallback(evt.data);\r\n            }\r\n        });\r\n\r\n        const headers = this._session ? [\"Authorization\", \"\" + this._session] : [];\r\n        httpRequest.send(url, null, \"get\", \"json\", headers);\r\n    }  \r\n  \r\n    public post(endpoint: string, data: Object, callback: Function, errorCallback: Function = null, progressCallback: Function = null): void {  \r\n        const url = this.baseUrl + endpoint;  \r\n        const httpRequest = new Laya.HttpRequest();  \r\n        \r\n        httpRequest.http.timeout = 10000;\r\n        //send(url: string, data?: any, method?: \"get\" | \"post\" | \"head\", responseType?: \"text\" | \"json\" | \"xml\" | \"arraybuffer\", headers?: string[]): void;\r\n        httpRequest.once(Laya.Event.COMPLETE, self, (evt:any)=>{\r\n \r\n            if(evt.data != null && evt.data.game_session != null){\r\n                this._session = evt.data.game_session;\r\n            }\r\n            \r\n            if (evt.err_no != 0) {\r\n                if(errorCallback) {\r\n                    errorCallback(evt.err_msg);\r\n                }\r\n                return;\r\n            }\r\n\r\n            RunTimeDataManager.instance.saveData(evt.data);\r\n            \r\n            if(callback) {\r\n                callback(evt.data);\r\n            }\r\n        });\r\n\r\n        httpRequest.once(Laya.Event.ERROR, self, (error:any)=>{\r\n            //console.log(error);\r\n            if(errorCallback) {\r\n                errorCallback(error.data);\r\n            }\r\n            \r\n        });\r\n\r\n        httpRequest.once(Laya.Event.PROGRESS, self, (data:any)=>{\r\n            //console.log(evt);\r\n            if(progressCallback) {\r\n                progressCallback(data.data);\r\n            }\r\n        });\r\n\r\n        const headers = this._session ? [\"Authorization\", \"\" + this._session] : [];\r\n        httpRequest.send(url, data, \"post\", \"json\", headers);\r\n    }  \r\n\r\n    private buildUrl(endpoint: string, params: Object): string {  \r\n        let url = this.baseUrl + endpoint;  \r\n        const queryString = Object.keys(params)  \r\n            .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)  \r\n            .join('&');  \r\n          \r\n        if (queryString) {  \r\n            url += '?' + queryString;  \r\n        }\r\n          \r\n        return url;  \r\n    }\r\n\r\n    onAwake(): void {\r\n        if (HttpManager._instance) {\r\n            throw new Error(\"Singleton class. Use getInstance() instead.\");\r\n        }\r\n        HttpManager._instance = this;\r\n    }\r\n}\r\n\r\n// 定义一个辅助函数，将回调函数转换为返回 Promise 的形式  \r\nexport function postWithPromise(httpManager: HttpManager, url: string, data: any): Promise<any> {  \r\n    return new Promise((resolve, reject) => {  \r\n        httpManager.post(url, data, (response: any) => {  \r\n            resolve(response);  \r\n        }, (error: any) => {  \r\n            reject(error);  \r\n        });  \r\n    });  \r\n}  \r\n\r\nexport function getWithPromise(httpManager: HttpManager, url: string, params: any): Promise<any> {  \r\n    return new Promise((resolve, reject) => {  \r\n        httpManager.get(url, params, (response: any) => {  \r\n            resolve(response);  \r\n        }, (error: any) => {  \r\n            reject(error);  \r\n        });  \r\n    });  \r\n}  ","\r\nimport { SoundFXManager } from \"../../Component/SoundManager\";\r\nimport { ConfigHelper } from \"../../Config/ConfigManager\";\r\nimport { MachineConfig } from \"../../Config/ExcelMachine\";\r\nimport { HttpURL } from \"../../Http/HttpDefine\";\r\nimport { HttpManager } from \"../../Http/HttpManager\";\r\nimport { RunTimeDataManager } from \"../../RunTimeData/RunTimeDataManager\";\r\nimport { UIBase } from \"../UIBase\";\r\nimport { UIManager } from \"../UIManager\";\r\n\r\nexport class UIUnlockEggIncuabtion extends UIBase {\r\n    \r\n    private _bPointUnlock : fgui.GButton;\r\n    private _bGemUnlock : fgui.GButton;\r\n    \r\n    public initUI(): void {\r\n        super.initUI();\r\n\r\n        this._bPointUnlock = this.view.getChild(\"B_PointUnlock\").asButton;\r\n        this._bPointUnlock.onClick(this, ()=>{\r\n            this.onUnlock();\r\n        });\r\n\r\n        this._bGemUnlock = this.view.getChild(\"B_GemUnlock\").asButton;\r\n        this._bGemUnlock.onClick(this, ()=>{\r\n            this.onUnlock();\r\n        });   \r\n    }\r\n\r\n    public onUnlock(){\r\n\r\n        const machineData = RunTimeDataManager.instance.runTimeData.machine_data\r\n        //发送网络消息\r\n        const params = {\r\n            \"machine_id\": machineData.id,\r\n        }\r\n\r\n        HttpManager.instance.post(HttpURL.unlock_egg_incubation, params, (response: any) => {  \r\n\r\n            RunTimeDataManager.instance.machine.updateDisplay();\r\n\r\n            UIManager.instance.popLastUI();\r\n            UIManager.instance.ShowMessageBox(\"successfully!\", null);\r\n            SoundFXManager.playSoundFX(\"SFX_UnlockEggIncuabtion\");\r\n            //this.updateDisplay();\r\n            //这里要打开一个收获页面\r\n            //this.handleHarvestEgg(response, worldPos.x, worldPos.y);\r\n\r\n        }, (error: any) => {  \r\n            UIManager.instance.ShowMessageBox(error, null);\r\n        }); \r\n    }\r\n\r\n    public didOpen(): void {\r\n        super.didOpen();\r\n\r\n        const machineData = RunTimeDataManager.instance.runTimeData.machine_data;\r\n        const nowSlotCount = machineData.getIncubationDataCount();\r\n        \r\n        const machineConfig = MachineConfig.getConfig(machineData.id)\r\n        const unlockIncubatorCost = ConfigHelper.parseStringArray(machineConfig.UnlockIncubatorCost);\r\n        const symbol = unlockIncubatorCost[nowSlotCount * 2]\r\n        const cost = unlockIncubatorCost[nowSlotCount * 2 + 1]\r\n\r\n        switch (symbol) {\r\n            case \"point\":\r\n                this._bPointUnlock.visible = true;\r\n                this._bGemUnlock.visible = false;\r\n                this._bPointUnlock.getChild(\"title0\").asTextField.text = cost;\r\n                this._bPointUnlock.getChild(\"title1\").asTextField.text = cost;\r\n                break;\r\n            case \"gem\":\r\n                this._bPointUnlock.visible = false;\r\n                this._bGemUnlock.visible = true;\r\n                this._bGemUnlock.getChild(\"title0\").asTextField.text = cost;\r\n                this._bGemUnlock.getChild(\"title1\").asTextField.text = cost;\r\n                break;\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}","import { UIBackground } from \"./HUD/UIBackground\";\r\nimport { UIClaimItem } from \"./HUD/UIClaimItem\";\r\nimport { UICollection } from \"./HUD/UICollection\";\r\nimport { UIFXCoinBackground } from \"./HUD/UIFXCoinBackground\";\r\nimport { UIFXLayer } from \"./HUD/UIFXLayer\";\r\nimport { UIInviteFriends } from \"./HUD/UIInviteFriends\";\r\nimport { UILoading } from \"./HUD/UILoading\";\r\nimport { UIMessageBoxOne } from \"./HUD/UIMessageBoxOne\";\r\nimport { UIShowEggIncuabtion } from \"./HUD/UIShowEggIncuabtion\";\r\nimport { UIShowItem } from \"./HUD/UIShowItem\";\r\nimport { UITask } from \"./HUD/UITask\";\r\nimport { UITips } from \"./HUD/UITips\";\r\nimport { UIUnlockEggIncuabtion } from \"./HUD/UIUnlockEggIncuabtion\";\r\nimport { UIBase } from \"./UIBase\";\r\n\r\ntype UIClassMap = {  \r\n    [key: string]: new () => UIBase;\r\n};\r\n\r\nexport enum UIClassName {  \r\n    UI_FX_Layer_HUD = \"UI_FX_Layer_HUD\",  \r\n    UI_Loading_HUD = \"UI_Loading_HUD\",  \r\n    UI_MessageBoxOne_HUD = \"UI_MessageBoxOne_HUD\",  \r\n    UI_Invite_Friends_HUD = \"UI_Invite_Friends_HUD\",  \r\n    UI_FX_Coin_Background_HUD = \"UI_FX_Coin_Background_HUD\",  \r\n    UI_Tips_HUD = \"UI_Tips_HUD\",  \r\n    UI_Task_HUD = \"UI_Task_HUD\",  \r\n    UI_Background_HUD = \"UI_Background_HUD\",  \r\n    UI_ShowItem_HUD = \"UI_ShowItem_HUD\",\r\n    UI_ShowEggIncuabtion_HUD = \"UI_ShowEggIncuabtion_HUD\",\r\n    UI_UnlockEggIncuabtion_HUD = \"UI_UnlockEggIncuabtion_HUD\",\r\n    UI_Collection_HUD = \"UI_Collection_HUD\",\r\n    UI_ClaimItem_HUD = \"UI_ClaimItem_HUD\"\r\n} \r\n\r\nexport class UIDefine {\r\n    \r\n    private _classMap: UIClassMap = {  \r\n        \"UI_FX_Layer_HUD\": UIFXLayer,\r\n        \"UI_Loading_HUD\": UILoading,\r\n        \"UI_MessageBoxOne_HUD\": UIMessageBoxOne,\r\n        \"UI_Invite_Friends_HUD\": UIInviteFriends,\r\n        \"UI_FX_Coin_Background_HUD\": UIFXCoinBackground,\r\n        \"UI_Tips_HUD\": UITips,\r\n        \"UI_Task_HUD\": UITask,\r\n        \"UI_Background_HUD\":UIBackground,\r\n        \"UI_ShowItem_HUD\":UIShowItem,\r\n        \"UI_ShowEggIncuabtion_HUD\":UIShowEggIncuabtion,\r\n        \"UI_UnlockEggIncuabtion_HUD\":UIUnlockEggIncuabtion,\r\n        \"UI_Collection_HUD\":UICollection,\r\n        \"UI_ClaimItem_HUD\":UIClaimItem\r\n    }; \r\n\r\n    public instantiate(className: string): UIBase | undefined {  \r\n        const clazz = this._classMap[className];  \r\n        return clazz ? new clazz() : undefined;  \r\n    }\r\n}\r\n\r\n","import { SystemDefine } from \"../SystemDefine\";\r\nimport { UIMessageBoxOne } from \"./HUD/UIMessageBoxOne\";\r\nimport { UITips } from \"./HUD/UITips\";\r\nimport { UIBase } from \"./UIBase\";\r\nimport { UIClassName, UIDefine } from \"./UIDefine\";\r\n\r\nconst { regClass, property } = Laya;\r\n\r\ninterface UIQueueBase {\r\n    name: string;\r\n    data: any;\r\n} \r\n\r\n@regClass('G_pKT3cPTh-KsbcmdsUFMg')\r\nexport class UIManager extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    //declare owner : Laya.Sprite;\r\n    public ownerPanel: Laya.Box;\r\n\r\n    private static _instance: UIManager;  \r\n    \r\n    private _uiConfigData: any;\r\n    private _viewsDictionary: { [key: string]: fgui.GComponent } = {}; \r\n    private _uibaseDictionary: { [key: string]: UIBase } = {}; \r\n    private _uiDefine: UIDefine\r\n    private _initialized: boolean = false;\r\n    private _isBackgroundOpen: number = 0;\r\n    public pageWidth: number;\r\n    public pageHeight: number;\r\n\r\n    // 队列用于管理打开的 UI\r\n    private _uiQueue: UIQueueBase[] = [];\r\n    private _tipsQueue: UIQueueBase[] = [];\r\n\r\n    constructor() {  \r\n        super();\r\n\r\n        this.pageWidth = Laya.stage.designHeight * Laya.Browser.clientWidth / Laya.Browser.clientHeight;\r\n        this.pageHeight = Laya.stage.designHeight;\r\n    }\r\n\r\n    public static get instance(): UIManager {  \r\n        if (!UIManager._instance) {  \r\n            return null;\r\n        }  \r\n        return UIManager._instance;  \r\n    }  \r\n\r\n    public get initialized(): boolean {\r\n        return this._initialized;\r\n    }\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    onAwake(): void {\r\n        if (UIManager._instance) {  \r\n            throw new Error(\"Singleton class. Use getInstance() instead.\");\r\n        }  \r\n\r\n        UIManager._instance = this\r\n        this.ownerPanel = this.owner as Laya.Panel; \r\n    }\r\n\r\n    init(): void {\r\n        this._uiDefine = new UIDefine();\r\n\r\n        this.initFont();\r\n        \r\n        Laya.loader.load(\"resources/prefabs/ui/P_UIRoot.lh\").then(res => {\r\n            let sprite : Laya.Sprite = res.create();\r\n            this.ownerPanel.addChild(sprite);\r\n\r\n            sprite.addChild(fgui.GRoot.inst.displayObject);\r\n            sprite.zOrder = 100;\r\n            sprite.width = this.pageWidth;\r\n            //console.log(\"sprite.width = \" + sprite.width);\r\n\r\n            Laya.loader.load(\"resources/json/Data_UI_Config.json\").then(res => {\r\n                \r\n                //const uiConfigDataRes = Laya.loader.getRes(\"resources/json/Data_UI_Config.json\");\r\n                this._uiConfigData = res.data;\r\n                let packageList: string[] = [];\r\n                for (let i = 0; i < this._uiConfigData.packageConfigs.length; i++) {  \r\n                    const packageName = this._uiConfigData.packageConfigs[i];  \r\n                    packageList.push(this._uiConfigData.uiBasePath + packageName);\r\n                }\r\n    \r\n                fgui.UIPackage.loadPackage(packageList, Laya.Handler.create(this, this.onUILoaded));\r\n            });\r\n\r\n        });  \r\n    }\r\n\r\n    initFont(): void {\r\n        fairygui.UIConfig.defaultFont = \"TitanOne-Regular\";\r\n        Laya.loader.load(`resources/font/TitanOne-Regular.ttf`, Laya.Handler.create(this, (ttf: { [x: string]: any; }) => {\r\n            fairygui.UIConfig.defaultFont = ttf['fontName'];\r\n            Laya.Text.defaultFont = ttf['fontName'];\r\n        }), null, Laya.Loader.TTF);\r\n    }\r\n\r\n    onUILoaded() {\r\n        \r\n        for (let i = 0; i < this._uiConfigData.uiConfigs.length; i++) {  \r\n            const config = this._uiConfigData.uiConfigs[i];  \r\n            let view = fgui.UIPackage.createObject(config.uiPackage, config.uiName).asCom;\r\n            view.makeFullScreen();\r\n            //view.visible = false;\r\n            view.sortingOrder = config.layer;\r\n            fgui.GRoot.inst.addChild(view);\r\n            \r\n            let uiClass = this._uiDefine.instantiate(config.uiName)\r\n            if (uiClass) {\r\n                let component = view.displayObject.addComponentInstance(uiClass);\r\n                if(!component) {\r\n                    console.error(\"Component not found: \" + config.uiName);\r\n                }\r\n                uiClass.uiManager = this;\r\n                uiClass.view = view;\r\n                uiClass.config = config;\r\n                uiClass.initUI();\r\n                uiClass.forceClose();\r\n                this._uibaseDictionary[config.uiName] = uiClass;\r\n            } else {\r\n                console.error(\"UIBase not found: \" + config.uiName);\r\n            }\r\n            \r\n            this._viewsDictionary[config.uiName] = view;\r\n        }\r\n\r\n        this._initialized = true;\r\n    }\r\n\r\n\r\n    public pushUI(name : string, data: any): void\r\n    {\r\n        if (this._uibaseDictionary[name]) {\r\n\r\n            if (this._uiQueue.length > 0) {\r\n                const lastUI = this._uiQueue[this._uiQueue.length - 1];\r\n                this.forceCloseUI(lastUI.name);\r\n            }\r\n\r\n            this._uiQueue.push({\r\n                name: name,\r\n                data: data\r\n            });\r\n\r\n            this.openUI(name, data);\r\n        }\r\n    }\r\n\r\n    public popLastUI(): void\r\n    {\r\n        if (this._uiQueue.length > 0) {\r\n            const lastUI = this._uiQueue.pop();\r\n        \r\n            //在移除一个之后还有一个的话\r\n            if (this._uiQueue.length > 0) {\r\n                this.forceCloseUI(lastUI.name);\r\n\r\n                const nextUI = this._uiQueue[this._uiQueue.length - 1];\r\n                this.openUI(nextUI.name, nextUI.data);\r\n            } else {\r\n                this.closeUI(lastUI.name);\r\n            }\r\n        }\r\n    }\r\n\r\n    public pushTips(name : string, data: any): void\r\n    {\r\n        if (this._uibaseDictionary[name]) {\r\n\r\n            if (this._tipsQueue.length > 0) {\r\n                const lastUI = this._tipsQueue[this._tipsQueue.length - 1];\r\n                this.forceCloseUI(lastUI.name);\r\n            }\r\n\r\n            this._tipsQueue.push({\r\n                name: name,\r\n                data: data\r\n            });\r\n\r\n            this.openUI(name, data);\r\n        }\r\n    }\r\n\r\n    public popLastTips(): void\r\n    {\r\n        if (this._tipsQueue.length > 0) {\r\n            const lastUI = this._tipsQueue.pop();\r\n\r\n            //在移除一个之后还有一个的话\r\n            if (this._tipsQueue.length > 0) {\r\n                this.forceCloseUI(lastUI.name); \r\n\r\n                const nextUI = this._tipsQueue[this._tipsQueue.length - 1];\r\n                this.openUI(nextUI.name, nextUI.data);\r\n            } else {\r\n                this.closeUI(lastUI.name); \r\n            }\r\n        }\r\n    }\r\n\r\n    //外部使用push和pop不要用open和close\r\n    private openUI(name : string, data: any) : UIBase{\r\n        if (this._uibaseDictionary[name]) {  \r\n            this._uibaseDictionary[name].open(data);\r\n            return this._uibaseDictionary[name];\r\n        } else {  \r\n            console.error(\"View not found: \" + name);  \r\n            return null;\r\n        }\r\n    }\r\n\r\n    //外部使用push和pop不要用open和close\r\n    private closeUI(name : string) : void{\r\n        if (this._uibaseDictionary[name]) {  \r\n            this._uibaseDictionary[name].close();  \r\n        } else {  \r\n            console.error(\"View not found: \" + name);  \r\n        }  \r\n    }\r\n\r\n    private forceCloseUI(name : string) : void{\r\n        if (this._uibaseDictionary[name]) {  \r\n            this._uibaseDictionary[name].forceClose();  \r\n        } else {  \r\n            console.error(\"View not found: \" + name);  \r\n        }  \r\n    }\r\n\r\n    public isOpenedUI(name : string) : boolean{\r\n        if (this._uibaseDictionary[name]) {  \r\n            return this._uibaseDictionary[name].isOpened();  \r\n        } else {  \r\n            console.error(\"View not found: \" + name);  \r\n            return false;\r\n        }  \r\n    }\r\n\r\n    public openBackground() : void{\r\n        \r\n        this._isBackgroundOpen++;\r\n\r\n        //console.log(\"this._isBackgroundOpen = \" + this._isBackgroundOpen);\r\n\r\n        this.openUI(\"UI_Background_HUD\", null);\r\n    }\r\n\r\n    public closeBackground() : void {\r\n\r\n        this._isBackgroundOpen--;\r\n\r\n        //console.log(\"this._isBackgroundClose = \" + this._isBackgroundOpen);\r\n\r\n        if(this._isBackgroundOpen <= 0)\r\n        {\r\n            this._isBackgroundOpen = 0;\r\n            this.closeUI(\"UI_Background_HUD\");\r\n        }\r\n    }\r\n\r\n    public forceCloseBackground() : void {\r\n        this._isBackgroundOpen = 0;\r\n        this.forceCloseUI(\"UI_Background_HUD\");\r\n    }\r\n\r\n    public ShowTips(content: string)\r\n    {   \r\n        this.pushTips(UIClassName.UI_Tips_HUD, {\r\n            content: content\r\n        });\r\n    } \r\n\r\n    public ShowMessageBox(content: string, callback: Function) : void{\r\n        this.pushUI(UIClassName.UI_MessageBoxOne_HUD, {\r\n            content: content,\r\n            callback: callback\r\n        });\r\n    }\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    //onStart(): void {}\r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onUpdate(): void {}\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onLateUpdate(): void {}\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","const { regClass, property } = Laya;\r\nimport { IncubationEntry } from \"../RunTimeData/RunTimeData\";\r\nimport Label = Laya.Label;\r\nimport Button = Laya.Button;\r\nimport Sprite = Laya.Sprite;\r\nimport Event = Laya.Event;\r\nimport Point = Laya.Point;\r\nimport { CountdownTimer } from \"../Component/CountdownTimer\";\r\nimport { EggConfig } from \"../Config/ExcelEgg\";\r\nimport { Egg } from \"./Egg\";\r\nimport { UIManager } from \"../UI/UIManager\";\r\nimport { UIClassName } from \"../UI/UIDefine\";\r\nimport { UIShowEggIncuabtion } from \"../UI/HUD/UIShowEggIncuabtion\";\r\nimport { SoundFXManager } from \"../Component/SoundManager\";\r\n\r\nexport enum IncubationSlotState {\r\n    None,\r\n    LOCK,\r\n    EMPTY,\r\n    INCUBATION,\r\n    READY,\r\n}\r\n\r\n@regClass('-k2-SsuaRu2uvaXAK8ZJzQ')\r\nexport class IncubationSlot extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    declare owner : Laya.Sprite;\r\n    public index: number = 0;\r\n    private _curState : IncubationSlotState = IncubationSlotState.None;\r\n\r\n    @property(Label)\r\n    public textCooldownTime: Label;\r\n    private _countdownTimer : CountdownTimer;\r\n    \r\n    @property(Button)\r\n    public bReady: Button;\r\n\r\n    @property(Button)\r\n    public bUnlock: Button;\r\n\r\n    @property(Button)\r\n    public bInfo: Button;\r\n\r\n    @property(Sprite)\r\n    public icon: Sprite;\r\n    private _iconScale = 0;\r\n    private _iconOriginY = 0;\r\n\r\n    public onHarvestEggCallback: (soltIndex: number, worldPos: Point) => void; \r\n    private _incubationEntry: IncubationEntry;\r\n    private _curEgg: Egg;\r\n    \r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    onAwake(): void {\r\n\r\n\r\n        this.setState(IncubationSlotState.LOCK);\r\n        this.bReady.on(Event.CLICK, this, this.onClickReady);\r\n        this.bInfo.on(Event.CLICK, this, this.onClickInfo);\r\n        this.bUnlock.on(Event.CLICK, this, this.onClickUnlock);\r\n    }\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    onStart(): void {\r\n        \r\n    }\r\n\r\n    onClickInfo(e: Event = null) {\r\n        SoundFXManager.playSoundFX(\"SFX_ButtonClick01\");\r\n        //console.log(\"Click Ready\");\r\n        if (this._curState != IncubationSlotState.INCUBATION) return;\r\n\r\n        UIManager.instance.pushUI(UIClassName.UI_ShowEggIncuabtion_HUD, {\r\n            incubationIndex: this.index\r\n        });\r\n    }\r\n\r\n    onClickReady(e: Event = null) {\r\n        SoundFXManager.playSoundFX(\"SFX_ButtonClick01\");\r\n        //console.log(\"Click Ready\");\r\n\r\n        let worldPos: Point = Point.create();\r\n        worldPos.x = this.icon.width * this.icon.anchorX;\r\n        worldPos.y = this.icon.height * this.icon.anchorY;\r\n        worldPos = this.icon.localToGlobal(worldPos);\r\n\r\n        if(this.onHarvestEggCallback != null){\r\n            this.onHarvestEggCallback(this.index, worldPos);\r\n        }\r\n    }\r\n\r\n    onClickUnlock(e: Event = null) {\r\n        SoundFXManager.playSoundFX(\"SFX_ButtonClick01\");\r\n        //console.log(\"Click Ready\");\r\n        if (this._curState != IncubationSlotState.LOCK) return;\r\n\r\n        UIManager.instance.pushUI(UIClassName.UI_UnlockEggIncuabtion_HUD, null);\r\n    }\r\n\r\n    setState(state: IncubationSlotState) {\r\n\r\n        if(this._curState == state) return;\r\n\r\n        switch (state) {\r\n            case IncubationSlotState.LOCK:\r\n                this.bReady.visible = false;\r\n                this.bUnlock.visible = true;\r\n                this.icon.visible = false;\r\n                this.textCooldownTime.visible = false;\r\n                this.clear();\r\n                break;\r\n            case IncubationSlotState.EMPTY:\r\n                this.bReady.visible = false;\r\n                this.bUnlock.visible = false;\r\n                this.icon.visible = false;\r\n                this.textCooldownTime.visible = false;\r\n                this.clear();\r\n                break;\r\n            case IncubationSlotState.INCUBATION:\r\n                this.bReady.visible = false;\r\n                this.bUnlock.visible = false;\r\n                this.icon.visible = true;\r\n                this.textCooldownTime.visible = true;\r\n                this.initTimeShower();\r\n                this.initIcon();\r\n                break;\r\n            case IncubationSlotState.READY:\r\n                this.bReady.visible = true;\r\n                this.bUnlock.visible = false;\r\n                this.icon.visible = true;\r\n                this.textCooldownTime.visible = false;\r\n                this.initIcon();\r\n                this.startIconBounceAnimationReady();\r\n                break;\r\n        }\r\n\r\n        this._curState = state;\r\n    }\r\n\r\n    clear() {\r\n        if(this._countdownTimer != null) {\r\n            this._countdownTimer.stop();\r\n            this._countdownTimer = null;\r\n        }\r\n\r\n        this.textCooldownTime.text = \"\";\r\n\r\n        // 停止跳动动画\r\n        this.stopIconBounceAnimation();\r\n\r\n        if(this._curEgg != null) {\r\n            this._curEgg.owner.destroy();\r\n            this._curEgg = null;\r\n        }\r\n    }\r\n\r\n    initIcon() {\r\n        if(this._curEgg != null) return;\r\n\r\n        const eggConfig = EggConfig.getConfig(this._incubationEntry.config_id);\r\n        Laya.loader.load(eggConfig.Prefab).then(res => {\r\n            let sprite: Laya.Sprite = res.create();\r\n            sprite.anchorX = 0.5;\r\n            sprite.anchorY = 0.5;\r\n\r\n            this.icon.addChild(sprite);\r\n\r\n            // 获取 icon 和 sprite 的宽高\r\n            let aWidth = this.icon.width;\r\n            let aHeight = this.icon.height;\r\n\r\n            let bWidth = sprite.width * 1.2;\r\n            let bHeight = sprite.height * 1.2;\r\n\r\n            // 计算宽高比例\r\n            let scaleX = aWidth / bWidth;\r\n            let scaleY = aHeight / bHeight;\r\n\r\n            // 取最小的比例来保证等比缩放\r\n            let scale = Math.min(scaleX, scaleY);\r\n\r\n            // 应用等比缩放\r\n            sprite.scale(scale, scale, true);\r\n\r\n            // 将 sprite 放置在 icon 的中心位置\r\n            //sprite.pos(aWidth / 2, aHeight / 2);\r\n            \r\n            // 将 sprite 放置在 icon 的中心位置\r\n            sprite.pos(aWidth / 2, aHeight / 2 + 80);\r\n            sprite.anchorY = 1;\r\n\r\n            const egg = sprite.getComponent(Egg);\r\n            egg.removeRigidBody();\r\n            egg.eggID = this._incubationEntry.egg_id;\r\n            egg.init();\r\n\r\n            this._curEgg = egg;\r\n            this._iconScale = sprite.scaleY;\r\n            this._iconOriginY = sprite.y;\r\n\r\n            switch (this._curState) {\r\n\r\n                case IncubationSlotState.INCUBATION:\r\n                    this.startIconBounceAnimationIncubation();\r\n                    break;\r\n                case IncubationSlotState.READY:\r\n                    this.startIconBounceAnimationReady();\r\n                    break;\r\n            }\r\n        }); \r\n    }\r\n\r\n    // 停止跳动动画\r\n    private stopIconBounceAnimation() {\r\n        Laya.Tween.clearTween(this.icon); // 清除 this.icon 上的所有动画\r\n    }\r\n\r\n    // 给icon增加一个跳动的动画效果\r\n    private startIconBounceAnimationIncubation() {\r\n        // 首先停止之前可能存在的动画\r\n        this.stopIconBounceAnimation(); \r\n\r\n        if (this._curEgg == null) return;\r\n\r\n        // 动画函数：让icon缩放变大并稍微上移，带有弹力效果\r\n        const bounce1 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale * 1.1, scaleY: this._iconScale * 0.8 }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce2));\r\n        };\r\n\r\n        // 动画函数：让icon缩放变小并回到原位置，带有弹力效果\r\n        const bounce2 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale, scaleY: this._iconScale }, 1000, Laya.Ease.linearInOut, Laya.Handler.create(this, bounce1));\r\n        };\r\n\r\n        // 开始第一次动画\r\n        bounce1();\r\n    }\r\n\r\n    private startIconBounceAnimationReady() {\r\n        // 首先停止之前可能存在的动画\r\n        this.stopIconBounceAnimation(); \r\n\r\n        if (this._curEgg == null) return;\r\n\r\n        // 动画函数：让icon缩放变大并稍微上移，带有弹力效果\r\n        const bounce1 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale * 1.1,  scaleY: this._iconScale * 0.8 }, 1000, Laya.Ease.backOut, Laya.Handler.create(this, bounce2));\r\n        };\r\n\r\n        // 动画函数：让icon缩放变小并回到原位置，带有弹力效果\r\n        const bounce2 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale * 1, scaleY: this._iconScale * 1, y: this._iconOriginY - 100}, 200, Laya.Ease.circInOut, Laya.Handler.create(this, bounce3));\r\n        };\r\n\r\n        // 动画函数：让icon缩放变小并回到原位置，带有弹力效果\r\n        const bounce3 = () => {\r\n            Laya.Tween.to(this._curEgg.owner, { scaleX: this._iconScale * 1, scaleY: this._iconScale * 1, y: this._iconOriginY }, 1000, Laya.Ease.bounceOut, Laya.Handler.create(this, bounce1));\r\n        };\r\n\r\n        // 开始第一次动画\r\n        bounce1();\r\n    }\r\n\r\n    initTimeShower() {\r\n\r\n        if(this._countdownTimer != null) {\r\n            this._countdownTimer.restart(this._incubationEntry.maturation_at.T)\r\n            return;\r\n        }\r\n\r\n        this._countdownTimer = new CountdownTimer(this._incubationEntry.maturation_at.T, \r\n            (remainingTime, difference) => {\r\n                this.textCooldownTime.text = `${remainingTime}`\r\n\r\n            },\r\n            (remainingTime, difference) => {\r\n                this.textCooldownTime.text = `${remainingTime}`\r\n            },\r\n            () => {\r\n                this.setState(IncubationSlotState.READY);\r\n            }\r\n        );\r\n        this._countdownTimer.start();\r\n    }\r\n\r\n    updateSlot(incubationEntry: IncubationEntry) {\r\n        this._incubationEntry = incubationEntry;\r\n        if(incubationEntry.is_in_progress) {\r\n            const currentTime = Math.floor(Date.now() / 1000);\r\n            if (currentTime > incubationEntry.maturation_at.T) {\r\n                this.setState(IncubationSlotState.READY);\r\n            } else {\r\n                this.setState(IncubationSlotState.INCUBATION);\r\n            }\r\n        } else {\r\n            this.setState(IncubationSlotState.EMPTY);\r\n        }\r\n    }\r\n\r\n    //手动调用节点销毁时执行\r\n    onDestroy(): void {\r\n        this.stopIconBounceAnimation();\r\n    }\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onUpdate(): void {}\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onLateUpdate(): void {}\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","import { RunTimeDataManager } from \"../RunTimeData/RunTimeDataManager\";\r\nimport BoxCollider = Laya.BoxCollider;\r\nimport Sprite = Laya.Sprite;\r\nimport Event = Laya.Event;\r\nimport RigidBody = Laya.RigidBody;\r\nimport ChainCollider = Laya.ChainCollider;\r\nimport MouseJoint = Laya.MouseJoint;\r\nimport PolygonCollider = Laya.PolygonCollider;\r\nimport CircleCollider = Laya.CircleCollider;\r\nimport RevoluteJoint = Laya.RevoluteJoint;\r\n\r\nimport { EggConfig } from \"../Config/ExcelEgg\";\r\nimport { Egg } from \"./Egg\";\r\n\r\nconst { regClass, property } = Laya;\r\n\r\n@regClass('DVR1zPUiRceIY6FayhcJTg')\r\nexport class MachinePhysics extends Laya.Script {\r\n\r\n    declare owner : Laya.Sprite;\r\n\r\n    public box2D: Laya.Box;\r\n\r\n    public pageWidth: number;\r\n    public pageHeight: number;\r\n\r\n    public static k_smallGroup = 1;\r\n    public static k_middleGroup = 0;\r\n    public static k_largeGroup = -1;\r\n    public static k_triangleCategory = 0x2;\r\n    public static k_boxCategory = 0x4;\r\n    public static k_circleCategory = 0x8;\r\n    public static k_triangleMask = 0xF;\r\n    public static k_boxMask = 0xF ^ MachinePhysics.k_circleCategory;\r\n    public static k_circleMask = 0xF; // 0x01为house刚体默认的category，若不设置，则会穿透house\r\n\r\n    private _eggMap: Record<string, Egg>;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.pageWidth = Laya.stage.designHeight * Laya.Browser.clientWidth / Laya.Browser.clientHeight;\r\n        this.pageHeight = Laya.stage.designHeight;\r\n\r\n        this._eggMap = {}\r\n    }\r\n\r\n    onStart(): void {\r\n\r\n        //super.base();\r\n        this.box2D = this.owner as Laya.Panel;\r\n        //this.box2D.bgColor = \"#232628\";\r\n        Laya.Config.isAntialias = true;\r\n        Laya.Physics2D.I.start();\r\n        this.createHouse();\r\n        \r\n        this.createEggs();\r\n    } \r\n\r\n    \r\n    createHouse() {\r\n        let house = new Sprite();\r\n        //@ts-ignore\r\n        //console.log(house.globalRotation)\r\n        this.box2D.addChild(house);\r\n        let rigidbody: RigidBody = house.addComponent(RigidBody);\r\n        rigidbody.type = \"static\";\r\n        let chainCollider: ChainCollider = house.addComponent(ChainCollider);\r\n        chainCollider.loop = true;\r\n\r\n        let offsetWidth = 30;\r\n        let offsetHeight = -10;\r\n\r\n        chainCollider.datas = [\r\n            0 + offsetWidth, 0, \r\n            0 + offsetWidth, this.owner.height - offsetHeight, \r\n            this.owner.width - offsetWidth, this.owner.height - offsetHeight, \r\n            this.owner.width - offsetWidth, 0];\r\n    }\r\n\r\n    addGroup(rigidbody: Laya.RigidBody, ratio: number) {\r\n        switch (ratio) {\r\n            case 1:\r\n                rigidbody.group = MachinePhysics.k_smallGroup;\r\n                break;\r\n            case 2:\r\n                rigidbody.group = MachinePhysics.k_middleGroup;\r\n                break;\r\n            case 3:\r\n                rigidbody.group = MachinePhysics.k_largeGroup;\r\n                break;\r\n        }\r\n    }\r\n\r\n    createEggs() {\r\n        \r\n        //测试数据\r\n        // Laya.loader.load(\"resources/prefabs/egg/P_10002001.lh\").then(res => {\r\n        //     for (let i = 1; i <= 10; i++){\r\n        //         let randomNumber = 0.8;// + (Math.random() * 0.5)\r\n        //         let sprite : Laya.Sprite = res.create();\r\n        //         sprite.scale(randomNumber, randomNumber , true);\r\n        //         sprite.pos(100, 100)\r\n        //         this.box2D.addChild(sprite); \r\n        //         let rigidbody: RigidBody = sprite.getComponent(RigidBody);\r\n        //         rigidbody.category = MachinePhysics.k_triangleCategory;\r\n        //         rigidbody.mask = MachinePhysics.k_triangleMask;\r\n        //         rigidbody.group = 1;\r\n        //     }\r\n        // });\r\n\r\n        //根据网络数据加载蛋\r\n        const machineData = RunTimeDataManager.instance.runTimeData.machine_data;\r\n        let offsetWidth = 50;\r\n        let offsetHeight = 300;\r\n\r\n        Object.keys(machineData.egg_list).forEach(eggID => {\r\n            const eggData = machineData.egg_list[eggID];\r\n            const eggConfig = EggConfig.getConfig(eggData.config_id);\r\n\r\n            Laya.loader.load(eggConfig.Prefab).then(res => {\r\n                let randomNumber = eggConfig.Scale;\r\n                let sprite : Laya.Sprite = res.create();\r\n                sprite.scale(randomNumber, randomNumber, true);\r\n                sprite.pos(offsetWidth + ((this.owner.width - offsetWidth) * Math.random()), offsetHeight * Math.random())\r\n                this.box2D.addChild(sprite);\r\n                const rigidBody = sprite.getComponent(RigidBody);\r\n                rigidBody.category = MachinePhysics.k_triangleCategory;\r\n                rigidBody.mask = MachinePhysics.k_triangleMask;\r\n                rigidBody.group = 1;\r\n\r\n                const egg = sprite.getComponent(Egg);\r\n                egg.eggID = eggID;\r\n                egg.machinePhysics = this;\r\n                egg.init();\r\n                \r\n                this._eggMap[eggID] = egg;\r\n            }); \r\n\r\n            //console.log(`Egg ID: ${eggId}, Config ID: ${eggData.config_id}`);\r\n        });\r\n    }\r\n\r\n    public removeEgg(eggID: string) {\r\n        if(this._eggMap[eggID]) {\r\n            this._eggMap[eggID].owner.destroy();\r\n            delete this._eggMap[eggID];\r\n        }\r\n    }\r\n\r\n    public getEgg(eggID: string) : Egg {\r\n        return this._eggMap[eggID];\r\n    }\r\n\r\n    public removeAllEggs() {\r\n        Object.keys(this._eggMap).forEach(eggID => {\r\n            this.removeEgg(eggID);\r\n        })\r\n    }\r\n\r\n    public clearAllEggs() {\r\n        Object.keys(this._eggMap).forEach(eggID => {\r\n            this.getEgg(eggID).clear();\r\n            delete this._eggMap[eggID];\r\n        })\r\n    }\r\n\r\n    onDisable(): void {\r\n        Laya.Physics2D.I.destroyWorld();\r\n    }\r\n}","export class TransitionTool {\r\n    public static transitionValue(label: Laya.Label, newValue: number, duration: number = 1000): void {\r\n        const currentValue = parseFloat(label.text) || 0; // 获取当前值\r\n        const startTime = Laya.Browser.now(); // 获取开始时间\r\n\r\n        const onUpdate = () => {\r\n            const elapsed = Laya.Browser.now() - startTime; // 计算已过时间\r\n            const t = Math.min(elapsed / duration, 1); // 计算进度（0-1）\r\n\r\n            // 更新当前值，使用线性插值\r\n            const value = currentValue + (newValue - currentValue) * t;\r\n\r\n            // 更新 Label 文本\r\n            label.text = Math.round(value).toString();\r\n\r\n            // 当过渡完成时停止循环\r\n            if (t >= 1) {\r\n                Laya.timer.clear(this, onUpdate); // 清除定时器\r\n            }\r\n        };\r\n\r\n        Laya.timer.frameLoop(1, this, onUpdate); // 启动循环\r\n    }\r\n}\r\n","import { SoundFXManager } from \"../Component/SoundManager\";\r\nimport Sprite = Laya.Sprite;\r\nimport Tween = Laya.Tween;\r\nimport Handler = Laya.Handler;\r\nimport Ease = Laya.Ease;\r\nimport Point = Laya.Point;\r\n\r\nexport class CoinFlyEffect {\r\n    private coins: Sprite[] = [];\r\n    private target: Sprite; // The target icon (e.g., a coin bag or player avatar)\r\n    private coinCount: number;\r\n    private targetPos: { x: number, y: number };\r\n    private range: number;\r\n    private width = 50;  // Set coin size\r\n    private height = 50; // Set coin size\r\n    private texture: Laya.Texture;\r\n    private sfx: string;\r\n\r\n    constructor(coinCount: number, target: Sprite, range: number, sftx: string) {\r\n        this.coinCount = coinCount;\r\n        this.target = target;\r\n        this.range = range;\r\n        this.width = target.width;\r\n        this.height = target.height;\r\n        this.texture = target.texture;\r\n        this.sfx = sftx;\r\n\r\n        let targetWorldPos: Point = Point.create();\r\n        targetWorldPos.x = target.width * target.anchorX;\r\n        targetWorldPos.y = target.height * target.anchorY;\r\n        targetWorldPos = target.localToGlobal(targetWorldPos);\r\n\r\n        this.targetPos = { x: targetWorldPos.x, y: targetWorldPos.y }; // The target's position\r\n    }\r\n\r\n    // Initialize the coins and start the flying effect\r\n    public startEffect(x: number, y: number) {\r\n        // Generate the coins\r\n        for (let i = 0; i < this.coinCount; i++) {\r\n            const coin = this.createCoin();\r\n            this.coins.push(coin);\r\n            Laya.stage.addChild(coin);\r\n\r\n            // Randomize starting position of coins\r\n            const angle = Math.random() * 2 * Math.PI; // 随机生成一个 0 到 2*PI 的角度\r\n            const radius = Math.random() * this.range; // 随机生成一个半径，范围是 0 到 this.range\r\n\r\n            const startX = x + Math.cos(angle) * radius; // 根据角度和半径计算 X 坐标\r\n            const startY = y + Math.sin(angle) * radius; // 根据角度和半径计算 Y 坐标\r\n\r\n            coin.pos(startX, startY);\r\n\r\n            // Animate each coin toward the target\r\n            this.animateCoin(coin, this.targetPos.x, this.targetPos.y);\r\n        }\r\n    }\r\n\r\n    // Create a coin sprite\r\n    private createCoin(): Sprite {\r\n        const coin = new Sprite();\r\n        coin.texture = this.texture;\r\n        //coin.loadImage(this.image); // Load your coin image\r\n        coin.width = this.width;  // Set coin size\r\n        coin.height = this.height; // Set coin size\r\n        return coin;\r\n    }\r\n\r\n    // Animate a coin from start to target position\r\n    private animateCoin(coin: Sprite, targetX: number, targetY: number) {\r\n        const duration = 1000 + Math.random() * 500; // Randomize animation time\r\n        Tween.to(coin, { scaleX: 1.2, scaleY: 1.2 }, duration * 0.3, Ease.cubicInOut, Handler.create(this, () => {\r\n            Tween.to(coin, { x: targetX, y: targetY, scaleX: 1, scaleY: 1 }, duration, Ease.cubicIn, Handler.create(this, () => {\r\n                SoundFXManager.playSoundFX(this.sfx);\r\n                coin.removeSelf(); // Remove the coin once the animation is done\r\n            }));\r\n        }));\r\n    }\r\n}\r\n","const { regClass, property } = Laya;\r\n\r\nimport { Claw } from \"./Claw\";\r\nimport Sprite = Laya.Sprite;\r\nimport Event = Laya.Event;\r\nimport Tween = Laya.Tween;\r\nimport Ease = Laya.Ease;\r\nimport Handler = Laya.Handler;\r\nimport Point = Laya.Point;\r\nimport Label = Laya.Label;\r\nimport Keyboard = Laya.Keyboard;\r\nimport { MachinePhysics } from \"./MachinePhysics\";\r\nimport { RunTimeDataManager } from \"../RunTimeData/RunTimeDataManager\";\r\nimport { TransitionTool } from \"../Utils/TransitionTool \";\r\nimport { CountdownTimer } from \"../Component/CountdownTimer\";\r\nimport { HttpManager } from \"../Http/HttpManager\";\r\nimport { HttpURL } from \"../Http/HttpDefine\";\r\nimport { UIManager } from \"../UI/UIManager\";\r\nimport { EggConfig } from \"../Config/ExcelEgg\";\r\nimport { IncubationSlot } from \"./IncubationSlot\";\r\nimport { CoinFlyEffect } from \"../FX/CoinFlyEffect\";\r\nimport { UIClassName } from \"../UI/UIDefine\";\r\nimport { ItemConfig } from \"../Config/ExcelItem\";\r\nimport { Arrow } from \"./Arrow\";\r\nimport { SoundFXManager } from \"../Component/SoundManager\";\r\n\r\n@regClass('m2kViDcTTYmr8Ky4zATsSw')\r\nexport class Machine extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    declare owner : Laya.Sprite;\r\n\r\n    @property(Claw)\r\n    public claw: Claw;\r\n\r\n    @property(Sprite)\r\n    public bGrab: Sprite;\r\n\r\n    @property(Sprite)\r\n    public bCollection: Sprite;\r\n\r\n    @property(Sprite)\r\n    public background: Sprite;\r\n\r\n    @property(Sprite)\r\n    public grassGround: Sprite;\r\n\r\n    @property({ type : Number })\r\n    public backgroundOffsetScale : number = 0.1;\r\n\r\n    @property(Label)\r\n    public textPoint: Label;\r\n\r\n    @property(Label)\r\n    public textGem: Label;\r\n\r\n    @property(Sprite)\r\n    public pointIcon: Sprite;\r\n    private _pointFlyEffect: CoinFlyEffect;\r\n\r\n    @property(Sprite)\r\n    public gemIcon: Sprite;\r\n    private _gemFlyEffect: CoinFlyEffect;\r\n\r\n    @property(Label)\r\n    public textResetCooldownTime: Label;\r\n    private _resetCoolDownTimer : CountdownTimer;\r\n\r\n    @property(Label)\r\n    public textGameCoinCooldownTime: Label;\r\n    private _gameCoinCoolDownTimer : CountdownTimer;\r\n\r\n    @property(MachinePhysics)\r\n    public machinePhysics : MachinePhysics;\r\n\r\n    @property([IncubationSlot])\r\n    public incubationSlotList: IncubationSlot[];\r\n\r\n    @property(Arrow)\r\n    public arrow: Arrow;\r\n\r\n    private _arrowDelayTimeCofig = 15;\r\n    private _arrowDelayTime = this._arrowDelayTimeCofig;\r\n    \r\n    private _backgroundTime : number = 0;\r\n    private _machineID: string;\r\n    \r\n    onDisable(): void {\r\n        \r\n    }\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    onAwake(): void {\r\n        this._backgroundTime = 0;\r\n        this.claw.onFoundEggCallback = this.foundEgg;\r\n\r\n        this._pointFlyEffect = new CoinFlyEffect(20, this.pointIcon, 160, \"SFX_Gold03\")\r\n        this._gemFlyEffect = new CoinFlyEffect(20, this.gemIcon, 180, \"SFX_Gem01\")\r\n    }\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    onStart(): void {\r\n        \r\n        this.bGrab.on(Event.CLICK, this, this.onClickGrab);\r\n        this.bCollection.on(Event.CLICK, this, this.onClickCollection);\r\n\r\n        this._machineID = RunTimeDataManager.instance.runTimeData.machine_data.id;\r\n        \r\n        this.initTimeShower();\r\n\r\n        this.eventListener();\r\n\r\n        this.updateDisplay();\r\n\r\n        this.initOrRefreshGameCoinTimeShower();\r\n\r\n        //设定槽位的信息\r\n        for(let i = 0; i < this.incubationSlotList.length; i++) {\r\n            this.incubationSlotList[i].onHarvestEggCallback = this.harvestEgg;\r\n        }\r\n\r\n        //保存实例引用\r\n        RunTimeDataManager.instance.machine = this;\r\n    }\r\n\r\n    initTimeShower() {\r\n        const machineData = RunTimeDataManager.instance.runTimeData.machine_data;\r\n\r\n        if(this._resetCoolDownTimer != null) {\r\n            this._resetCoolDownTimer.restart(machineData.next_refresh_at.T)\r\n            return;\r\n        }\r\n\r\n        this._resetCoolDownTimer = new CountdownTimer(machineData.next_refresh_at.T, \r\n            (remainingTime, difference) => {\r\n                this.textResetCooldownTime.text = `${remainingTime}`\r\n            },\r\n            (remainingTime, difference) => {\r\n\r\n                this.textResetCooldownTime.text = `${remainingTime}`\r\n            },\r\n            () => {\r\n                //console.log(\"Countdown completed!\");\r\n\r\n                //清空所有蛋,重新初始化新的蛋\r\n                this.machinePhysics.clearAllEggs();\r\n\r\n                const machineID = machineData.id;\r\n                RunTimeDataManager.instance.runTimeData.resetMachineData();\r\n                \r\n                Laya.timer.once(2000, this, this.resetEggs);\r\n            }\r\n        );\r\n        this._resetCoolDownTimer.start();\r\n    }\r\n\r\n\r\n    initOrRefreshGameCoinTimeShower() {\r\n        const machineCoinData = RunTimeDataManager.instance.runTimeData.machine_coin_data;\r\n\r\n        machineCoinData.updateGameCoin();\r\n\r\n        if(this._gameCoinCoolDownTimer != null) {\r\n            this._gameCoinCoolDownTimer.restart(machineCoinData.game_coin_next_update_at.T)\r\n            return;\r\n        }\r\n\r\n        this._gameCoinCoolDownTimer = new CountdownTimer(machineCoinData.game_coin_next_update_at.T, \r\n            (remainingTime, difference) => {\r\n                this.textGameCoinCooldownTime.text = `${remainingTime}`\r\n            },\r\n            (remainingTime, difference) => {\r\n\r\n                this.textGameCoinCooldownTime.text = `${remainingTime}`\r\n            },\r\n            () => {\r\n                //console.log(\"Countdown completed!\");\r\n                this.initOrRefreshGameCoinTimeShower();\r\n                this.updateDisplay();\r\n            }\r\n        );\r\n        this._gameCoinCoolDownTimer.start();\r\n    }\r\n\r\n    resetEggs() {\r\n\r\n        //默认写死的,后面更新\r\n        const params = { \r\n            machine_id: this._machineID,\r\n        }; \r\n\r\n        //获取娃娃机的信息\r\n        HttpManager.instance.post(HttpURL.update_machine_data, params, (response: any) => {  \r\n            this.machinePhysics.createEggs();\r\n            this.initTimeShower();\r\n        }, (error: any) => {  \r\n            UIManager.instance.ShowMessageBox(error.err_msg, null);\r\n        });        \r\n    }\r\n\r\n    updateDisplay() {\r\n        //刷新顶部的条\r\n        const wallet = RunTimeDataManager.instance.runTimeData.wallet;\r\n        TransitionTool.transitionValue(this.textPoint, wallet.point, 2000);\r\n        TransitionTool.transitionValue(this.textGem, wallet.gem, 2000);\r\n\r\n        this.claw.updateGameCoinDisplay();\r\n\r\n        //刷新孵化器的条目\r\n        const machineData = RunTimeDataManager.instance.runTimeData.machine_data;\r\n        for(let i = 0; i < machineData.incubation_list.length; i++) {\r\n            this.incubationSlotList[i].index = i;\r\n            this.incubationSlotList[i].updateSlot(machineData.incubation_list[i]);\r\n        }\r\n    }\r\n\r\n    onClickGrab(e: Event = null): void {\r\n        SoundFXManager.playSoundFX(\"SFX_ButtonClick01\");\r\n        this.claw.grab();\r\n        this.arrow.owner.visible = false;\r\n        this._arrowDelayTime = this._arrowDelayTimeCofig;\r\n    }\r\n\r\n    onClickCollection(e: Event = null): void {\r\n        SoundFXManager.playSoundFX(\"SFX_ButtonClick01\");\r\n        UIManager.instance.pushUI(UIClassName.UI_Collection_HUD, null);\r\n    }\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onUpdate(): void {}\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    onLateUpdate(): void {\r\n        let deltaTime = Laya.timer.delta / 1000;\r\n        this._backgroundTime += deltaTime * this.backgroundOffsetScale;\r\n        this.background.material.setFloat(\"u_Time\", this._backgroundTime)\r\n        this.grassGround.material.setFloat(\"u_Time\", -this._backgroundTime)\r\n        if(this._backgroundTime > Number.MAX_SAFE_INTEGER) {\r\n            this._backgroundTime = 0;\r\n        }\r\n\r\n        if(this.arrow.owner.visible == false) {\r\n            this._arrowDelayTime -= deltaTime;\r\n            if(this._arrowDelayTime <= 0) {\r\n                this.arrow.owner.visible = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    public foundEgg = (eggID: string) => {\r\n\r\n        //先判断池子有没有东西,如果有东西就不发送网络请求了\r\n        const machineData = RunTimeDataManager.instance.runTimeData.machine_data;\r\n        if (machineData.egg_list && machineData.egg_list[eggID]) {\r\n            //return;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        const eggData = machineData.egg_list[eggID];\r\n        const eggConfig = EggConfig.getConfig(eggData.config_id);\r\n        const egg = this.machinePhysics.getEgg(eggID);\r\n\r\n        let eggWorldPos: Point = Point.create();\r\n        eggWorldPos.x = egg.owner.width * egg.owner.anchorX;\r\n        eggWorldPos.y = egg.owner.height * egg.owner.anchorY;\r\n        eggWorldPos = egg.owner.localToGlobal(eggWorldPos);\r\n\r\n        const totalGameCoin = RunTimeDataManager.instance.runTimeData.machine_coin_data.getTotalGameCoin();\r\n\r\n        if(totalGameCoin <= 0) {\r\n            egg.removeJoint();\r\n            UIManager.instance.ShowMessageBox(\"No enough game coin\", null);\r\n            SoundFXManager.playSoundFX(\"SFX_Failed\");\r\n            return;\r\n        }\r\n\r\n        if (machineData.hasEmptyIncubationSlot() == false && eggConfig.IncubationTime > 0) {\r\n            egg.removeJoint();\r\n            UIManager.instance.ShowMessageBox(\"No empty incubation slot\", null);\r\n            SoundFXManager.playSoundFX(\"SFX_Failed\");\r\n            return;\r\n        }\r\n\r\n        //发送网络消息\r\n        const params = {\r\n            \"machine_id\": machineData.id,\r\n            \"egg_id\":eggID\r\n        }\r\n\r\n        HttpManager.instance.post(HttpURL.found_egg, params, (response: any) => {  \r\n\r\n            this.updateDisplay();\r\n            this.initOrRefreshGameCoinTimeShower();\r\n            this.handleFoundEgg(response, eggWorldPos.x, eggWorldPos.y);\r\n            //这里要打开一个计时器页面\r\n            //console.log(RunTimeDataManager.instance.runTimeData.wallet.point);\r\n            \r\n        }, (error: any) => {  \r\n            UIManager.instance.ShowMessageBox(error.err_msg, null);\r\n        }); \r\n        \r\n        this.machinePhysics.removeEgg(eggID);\r\n    }\r\n\r\n    public handleFoundEgg(response: any, eggX: number, eggY: number)\r\n    {\r\n        const eggConfig = EggConfig.getConfig(response.response.egg_config_id)\r\n        switch(eggConfig.ClientHandle) {\r\n            case \"point\": \r\n                {\r\n                    SoundFXManager.playSoundFX(\"SFX_ItemDrop\");\r\n                    UIManager.instance.pushUI(UIClassName.UI_ClaimItem_HUD, {\r\n                        itemID: response.response.loot_item_id,\r\n                        count: response.response.loot_item_count\r\n                    });\r\n                    this._pointFlyEffect.startEffect(eggX, eggY);\r\n                }\r\n                break;\r\n            case \"gem\": \r\n                {\r\n                    SoundFXManager.playSoundFX(\"SFX_ItemDrop\");\r\n                    UIManager.instance.pushUI(UIClassName.UI_ClaimItem_HUD, {\r\n                        itemID: response.response.loot_item_id,\r\n                        count: response.response.loot_item_count\r\n                    });\r\n                    this._gemFlyEffect.startEffect(eggX, eggY);\r\n                }\r\n                break;\r\n                \r\n            case \"egg\":\r\n                {\r\n                    UIManager.instance.pushUI(UIClassName.UI_ShowEggIncuabtion_HUD, {\r\n                        incubationIndex: response.response.incubation_index\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    public harvestEgg = (soltIndex: number, worldPos: Point) => {\r\n\r\n        const machineData = RunTimeDataManager.instance.runTimeData.machine_data\r\n        //发送网络消息\r\n        const params = {\r\n            \"machine_id\": machineData.id,\r\n            \"incubation_index\":soltIndex\r\n        }\r\n\r\n        HttpManager.instance.post(HttpURL.harvest_egg, params, (response: any) => {  \r\n\r\n            this.updateDisplay();\r\n            //这里要打开一个收获页面\r\n            this.handleHarvestEgg(response, worldPos.x, worldPos.y);\r\n\r\n        }, (error: any) => {  \r\n            UIManager.instance.ShowMessageBox(error, null);\r\n        }); \r\n    }\r\n\r\n    public handleHarvestEgg(response: any, eggX: number, eggY: number)\r\n    {\r\n        UIManager.instance.pushUI(UIClassName.UI_ClaimItem_HUD, {\r\n            itemID: response.response.loot_item_id,\r\n            count: response.response.loot_item_count\r\n        });\r\n\r\n        const config = ItemConfig.getConfig(response.response.loot_item_id)\r\n        switch(config.ClientHandle) {\r\n            case \"point\": \r\n                {\r\n                    this._pointFlyEffect.startEffect(eggX, eggY);\r\n                }\r\n                break;\r\n                \r\n            case \"gem\": \r\n                {\r\n                    this._gemFlyEffect.startEffect(eggX, eggY);\r\n                }\r\n                break;\r\n                \r\n            case \"collection\":\r\n                {\r\n                    \r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    eventListener() {\r\n       \r\n        Laya.stage.on(Event.KEY_DOWN, this, (e: any = null) => {\r\n            switch (e.keyCode) {\r\n\r\n                case Keyboard.DOWN:\r\n                    //this.claw.stop();\r\n                    this.claw.grab();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n}","import { GameStateManager } from \"./GameStateManager\";\r\n\r\nexport abstract class GameStateBase {\r\n    protected gameStateManager: GameStateManager;\r\n\r\n    constructor(gameStateManager: GameStateManager) {\r\n        this.gameStateManager = gameStateManager;\r\n    }\r\n\r\n    // 进入状态时调用\r\n    abstract enter(): void;\r\n\r\n    // 离开状态时调用\r\n    abstract exit(): void;\r\n\r\n    // 更新状态，每帧调用\r\n    abstract update(): void;\r\n}","import { UIManager } from \"../UI/UIManager\";\r\nimport { GameStateBase } from \"./GameStateBase\";\r\nimport { GameState, GameStateManager } from \"./GameStateManager\";\r\nimport { HttpManager, postWithPromise, getWithPromise } from \"../Http/HttpManager\";\r\nimport { ConfigManager } from \"../Config/ConfigManager\";\r\nimport { RunTimeDataManager } from \"../RunTimeData/RunTimeDataManager\";\r\nimport { HttpURL } from \"../Http/HttpDefine\";\r\n\r\n// 定义生成器函数  \r\nasync function* processSteps() {  \r\n\r\n    while(!ConfigManager.instance) {\r\n       await new Promise(resolve => setTimeout(resolve, 100));\r\n        //yield \"Checking ConfigManager initialization...\"; \r\n    }\r\n\r\n    ConfigManager.instance.loadAll();\r\n    while (!ConfigManager.instance.initialized) {\r\n       await new Promise(resolve => setTimeout(resolve, 100));\r\n        //yield \"Checking loaded...\"; \r\n    }\r\n\r\n    while (!UIManager.instance) {  \r\n       await new Promise(resolve => setTimeout(resolve, 100));  \r\n        //yield \"Checking UIManager initialization...\";  \r\n    }  \r\n\r\n    UIManager.instance.init();\r\n    while (!UIManager.instance.initialized) {  \r\n       await new Promise(resolve => setTimeout(resolve, 100));  \r\n        //yield \"Checking initialization...\";  \r\n    }  \r\n\r\n    while (!HttpManager.instance) {  \r\n       await new Promise(resolve => setTimeout(resolve, 100));  \r\n        //yield \"Checking HttpManager initialization...\";  \r\n    } \r\n  \r\n    while(!RunTimeDataManager.instance) {\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        //yield \"Checking RunTimeDataManager initialization...\"; \r\n    }\r\n\r\n\r\n    //等待tg给与用户登录字符串\r\n    try {  \r\n        //登录\r\n        const loginData = { \r\n            init_data_raw: \"query_id=AAFV-CoDAQAAAFX4KgODJr1_&user=%7B%22id%22%3A100000003%2C%22first_name%22%3A%22NNNNiko%22%2C%22last_name%22%3A%22Test%22%2C%22username%22%3A%22niko_test1%22%2C%22language_code%22%3A%22zh-hans%22%2C%22allows_write_to_pm%22%3Atrue%7D&auth_date=1722587152&hash=8e791a997e55723714f73878fdeb27d7e17157f5fb2b460d6fc461f5ce82809c\", \r\n            //inviter_user: 30 \r\n        };\r\n        \r\n        await postWithPromise(HttpManager.instance, HttpURL.signup_or_login, loginData);  \r\n\r\n        await getWithPromise(HttpManager.instance, HttpURL.login_data_update, \"\");  \r\n\r\n        //默认写死的,后面更新\r\n        const getMachineData = { \r\n            machine_id: \"ID_1000\",\r\n        }; \r\n        //获取娃娃机的信息\r\n        await postWithPromise(HttpManager.instance, HttpURL.update_machine_data, getMachineData);  \r\n\r\n        GameStateManager.instance.changeState(GameState.MAINMENU);  \r\n        yield \"StateChanged to MAINMENU\";  \r\n\r\n    } catch (error) {  \r\n        // 请求失败，处理错误  \r\n        console.error(\"HTTP request failed:\", error);  \r\n        yield \"HTTP request failed\"; // 可选：返回错误状态信息  \r\n    }\r\n}  \r\n\r\nexport class LoadingState extends GameStateBase {\r\n    enter(): void {\r\n        console.log(\"Entering LoadingState\");\r\n        (async () => {  \r\n            const gen = processSteps();  \r\n            for await (const message of gen) {  \r\n                console.log(message); // 输出生成器返回的状态信息  \r\n            }  \r\n        })();\r\n\r\n    }\r\n\r\n    exit(): void {\r\n        console.log(\"Exiting LoadingState\");\r\n    }\r\n\r\n    update(): void {\r\n        // if(UIManager.instance !== null) {\r\n        //     if(UIManager.instance.initialized) {\r\n        //         this.gameStateManager.changeState(GameState.MAINMENU);\r\n        //     }\r\n        // }\r\n    }\r\n}","import { HttpManager } from \"../Http/HttpManager\";\r\nimport { UIManager } from \"../UI/UIManager\";\r\nimport { UIClassName } from \"../UI/UIDefine\";\r\nimport { GameStateBase } from \"./GameStateBase\";\r\nimport { RunTimeData } from \"../RunTimeData/RunTimeData\";\r\nimport { RunTimeDataManager } from \"../RunTimeData/RunTimeDataManager\";\r\nimport { ConfigManager } from \"../Config/ConfigManager\";\r\nimport { MachineConfig } from \"../Config/ExcelMachine\";\r\nimport { SoundFXManager } from \"../Component/SoundManager\";\r\n\r\nexport class MainMenuState extends GameStateBase {\r\n    enter(): void {\r\n        console.log(\"Entering MainMenuState\");\r\n\r\n        const machineID = RunTimeDataManager.instance.runTimeData.machine_data.id;\r\n        const machineConfig = MachineConfig.getConfig(machineID)\r\n\r\n        Laya.loader.load(machineConfig.Prefab).then(res => {\r\n            let sprite : Laya.Sprite = res.create();\r\n            this.gameStateManager.ownerPanel.addChild(sprite);\r\n        });  \r\n\r\n        UIManager.instance.ShowTips(`Welcome come! ${RunTimeDataManager.instance.runTimeData.user.nick_name}`);\r\n\r\n        SoundFXManager.playMusic(\"MUSIC_1000\");\r\n        SoundFXManager.setVolume(0.2);\r\n    }\r\n\r\n    exit(): void {\r\n        console.log(\"Exiting MainMenuState\");\r\n\r\n        //UIManager.instance.closeUI(\"UI_Main_Menu_HUD\");\r\n        //UIManager.instance.closeUI(\"UI_FX_Coin_Background_HUD\");\r\n    }\r\n\r\n    update(): void {\r\n        \r\n    }\r\n}","import { HttpManager } from \"../Http/HttpManager\";\r\nimport { GameStateBase } from \"./GameStateBase\";\r\nimport { LoadingState } from \"./LoadingState\";\r\nimport { MainMenuState } from \"./MainMenuState\";\r\n\r\nconst { regClass, property } = Laya;\r\n\r\nexport enum GameState {\r\n    LOADING,\r\n    MAINMENU,\r\n}\r\n\r\n@regClass('IjMsviyZT9-45baRHQ_jAg')\r\nexport class GameStateManager extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    declare owner : Laya.Sprite;\r\n    private static _instance: GameStateManager;  \r\n    private _states: { [key in GameState]: GameStateBase } = {} as any;\r\n    private _currentState: GameStateBase;\r\n\r\n    public ownerPanel: Laya.Box;\r\n    //构造函数在编辑器期间也会执行\r\n    constructor() {  \r\n        super();\r\n    }\r\n\r\n    public static get instance(): GameStateManager {  \r\n        if (!GameStateManager._instance) {  \r\n            return null;\r\n        }  \r\n        return GameStateManager._instance;  \r\n    }  \r\n\r\n    public changeState(newState: GameState): void {\r\n        if (this._currentState) {\r\n            this._currentState.exit();\r\n        }\r\n        this._currentState = this._states[newState];\r\n        this._currentState.enter();\r\n    }\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    onAwake(): void {\r\n\r\n        if (GameStateManager._instance) {\r\n            throw new Error(\"Singleton class. Use getInstance() instead.\");\r\n        }\r\n        GameStateManager._instance = this;\r\n        this.ownerPanel = this.owner as Laya.Panel;\r\n\r\n        this._states[GameState.LOADING] = new LoadingState(this);\r\n        this._states[GameState.MAINMENU] = new MainMenuState(this);\r\n\r\n        this.changeState(GameState.LOADING);\r\n    }\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    //onStart(): void {}\r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    public onUpdate(): void {\r\n        if (this._currentState) {\r\n            this._currentState.update();\r\n        }\r\n    }\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onLateUpdate(): void {}\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}","const { regClass, property } = Laya;\r\n\r\n@regClass('e60XQm7tTY2BwFAdxb8D1g')\r\nexport class Main extends Laya.Script {\r\n\r\n    onStart() {\r\n        console.log(\"Game start\");\r\n        \r\n\r\n        window.addEventListener('message', (event: MessageEvent) => {  \r\n            // 检查消息的来源，确保它来自你的React应用  \r\n            // event.origin 应该是你的React应用所在的域  \r\n            // if (event.origin !== 'http://your-react-app-origin.com') {  \r\n            //   return;  \r\n            // }  \r\n            \r\n            // 处理接收到的消息  \r\n            const message = event.data;  \r\n            console.log('Received message from parent:', message);  \r\n            \r\n            // 根据消息类型执行相应的操作  \r\n            if (message.type === 'REACT_MESSAGE') {  \r\n              // 处理来自React的消息  \r\n              const message2 = { type: 'GAME_LOG', data: { \"GAME_LOG\":message } }; \r\n              this.sendMessageToParent(message2);\r\n            }  \r\n        });\r\n\r\n        const message = { type: 'GAME_EVENT', data: { \"123123123\":123123123 } }; \r\n        this.sendMessageToParent(message);\r\n    }\r\n\r\n    onLoaded() : void {\r\n        // 初始化自定义 Shader\r\n        // CustomShader.initShader();\r\n        \r\n        // const customMaterial = new CustomMaterial();\r\n\r\n        // // 创建一个精灵\r\n        // const img  = new Laya.Sprite();\r\n        // img.loadImage(\"resources/test/Common_atlas_edzbiq_1.png\");\r\n        // img.material = customMaterial;\r\n        \r\n        // Laya.stage.addChild(img);\r\n    }\r\n\r\n    sendMessageToParent(message: any) {  \r\n        // 检查父窗口是否存在，并且不是当前窗口自身  \r\n        if (window.parent !== window && window.parent.postMessage) {  \r\n          // 使用 postMessage 发送消息到父窗口  \r\n          // 第二个参数是目标源，通常设置为 '*' 表示不限制源，但在生产环境中应该设置为允许的源列表  \r\n          window.parent.postMessage(message, '*');  \r\n        }  \r\n    }\r\n\r\n\r\n}","import { ParticleSystem, Particle} from \"./ParticleSystem\";\r\n\r\nconst { regClass, property } = Laya;\r\n\r\nclass RandomPositionParticle extends Particle {\r\n\r\n    startSize: number;\r\n    endSize: number;\r\n    \r\n    startAlpha: number;\r\n    endAlpha: number;\r\n\r\n    constructor(x: number, y: number, texture: Laya.Texture) {\r\n        super(x, y, texture, true); // 将其设为循环粒子\r\n    }\r\n\r\n    pingPong(t: number, min: number, max: number): number {\r\n        // Normalize t to range [0, 1]\r\n        const range = max - min;\r\n        const normalizedTime = t % (2 * range);\r\n        \r\n        // 如果在 [0, range] 区间内，直接返回 min + normalizedTime\r\n        // 如果在 [range, 2 * range] 区间内，返回 max - (normalizedTime - range)\r\n        return normalizedTime < range ? \r\n            min + normalizedTime : \r\n            max - (normalizedTime - range);\r\n    }\r\n\r\n    // 重置位置为随机值\r\n    reset(x: number, y: number, texture: Laya.Texture): void {\r\n        // 随机生成位置\r\n        const randomX = (Math.random() * 150); // 基于传入位置随机\r\n        const randomY = (Math.random() * 150); // 基于传入位置随机\r\n\r\n        super.reset(randomX, randomY, texture);\r\n        this.setLife(100, 200)\r\n        this.setSize(0.5, 1)\r\n        // 重新设置粒子的其他属性\r\n        this.life = Math.random() * (this.maxLife - this.minLife) + this.minLife; // 生命周期调整\r\n        this.fixedLife = this.life;\r\n\r\n        //this.size = Math.random() * (this.maxSize - this.minSize) + this.minSize; // 随机大小\r\n        this.startSize = 1;\r\n        this.endSize = 3;\r\n\r\n        this.startAlpha = 0;\r\n        this.endAlpha = 1;\r\n\r\n\r\n        this.size = this.startSize;\r\n        this.alpha = 0; // 初始透明度\r\n    }\r\n\r\n    // 重写 update 方法实现随机漂浮\r\n    update(): void {\r\n\r\n        // 计算进度，假设生命周期最大值为 maxLife\r\n        const progress = 1 - (this.life / this.fixedLife);\r\n        \r\n        // 使用 pingPong 函数更新大小和透明度\r\n        this.size = this.pingPong(progress, this.startSize, this.endSize);\r\n        this.alpha = this.pingPong(progress * 2, this.startAlpha, this.endAlpha);\r\n        \r\n        // 调整生命值\r\n        this.life -= 1; // 非循环粒子减少生命\r\n\r\n        // 如果是循环粒子，检查生命周期以重置\r\n        if (this.isLoop && this.life <= 0) {\r\n            this.reset(this.x, this.y, this.texture); // 重置为新的随机状态\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@regClass('JOuJPy-aRF6Gf2uzJwRh_g')\r\nexport class FXStart extends Laya.Script {\r\n    //declare owner : Laya.Sprite3D;\r\n    declare owner : Laya.Sprite;\r\n    public particleSystem: ParticleSystem<RandomPositionParticle>;\r\n\r\n    onStart() {\r\n        const texture = this.owner.texture;\r\n        this.owner.texture = null;\r\n        this.particleSystem = new ParticleSystem(texture, 20);\r\n        this.particleSystem.emit(0, 0, RandomPositionParticle, 5);\r\n\r\n        // 开始更新和绘制粒子系统\r\n        Laya.timer.frameLoop(1, this, this.onParticleUpdate);\r\n    }\r\n\r\n    onTextureLoaded(): void {\r\n        // 获取已加载的纹理\r\n    }\r\n\r\n    onParticleUpdate(): void {\r\n        this.particleSystem.update();  // 更新粒子\r\n        this.particleSystem.draw(this.owner);  // 在 LayaAir 的 sprite 上绘制粒子\r\n    }\r\n\r\n    //组件被激活后执行，此时所有节点和组件均已创建完毕，此方法只执行一次\r\n    //onAwake(): void {}\r\n\r\n    //组件被启用后执行，例如节点被添加到舞台后\r\n    //onEnable(): void {}\r\n\r\n    //组件被禁用时执行，例如从节点从舞台移除后\r\n    //onDisable(): void {}\r\n\r\n    //第一次执行update之前执行，只会执行一次\r\n    //onStart(): void {}\r\n\r\n    //手动调用节点销毁时执行\r\n    //onDestroy(): void {}\r\n\r\n    //每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onUpdate(): void {}\r\n\r\n    //每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n    //onLateUpdate(): void {}\r\n\r\n    //鼠标点击后执行。与交互相关的还有onMouseDown等十多个函数，具体请参阅文档。\r\n    //onMouseClick(): void {}\r\n}"],"mappings":"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","ignoreList":[]}