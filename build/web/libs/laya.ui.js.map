{"version":3,"names":["UIConfig","touchScrollEnable","mouseWheelEnable","showButtons","popupBgColor","popupBgAlpha","closeDialogOnSide","AutoBitmap","Graphics","constructor","this","_width","_height","uv","_color","destroy","super","_source","LayaEnv","isPlaying","off","_setChanged","_sizeGrid","_offset","sizeGrid","value","map","v","width","sourceWidth","height","sourceHeight","_stateNum","source","on","_setDrawGridCmd","setState","index","numStates","_stateIndex","color","_isChanged","ILaya","timer","callLater","changeSource","bitmap","_sp","stateIndex","stateNum","h","getCachedClip","cmd","sw","sh","DrawTextureCmd","create","Draw9GridTextureCmd","newcmd","_drawGridCmd","removeCmd","recover","addCmd","UIEvent","SHOW_TIP","HIDE_TIP","UIUtils","fillArray","arr","str","type","temp","concat","a","split","i","n","Math","min","length","toColor","Utils","toHexColor","gray","target","isGray","filters","indexOf","grayFilter","push","splice","getBindFun","_funMap","WeakObject","fun","get","replace","window","Laya","_runScript","set","ColorFilter","UIComponent","Sprite","createChildren","_widget","Widget","EMPTY","preinitialize","initialize","destroyChild","_dataSource","_toolTip","get_width","_isWidthSet","measureWidth","max","commitMeasure","numChildren","comp","getChildAt","_visible","_x","scaleX","get_height","_isHeightSet","measureHeight","_y","scaleY","dataSource","get_dataSource","set_dataSource","prop","top","get_top","set_top","_getWidget","bottom","get_bottom","set_bottom","left","right","centerX","centerY","_shouldRefreshLayout","_sizeChanged","event","Event","RESIZE","resetLayout","toolTip","MOUSE_OVER","onMouseOver","MOUSE_OUT","onMouseOut","e","stage","_gray","disabled","_disabled","SerializeUtil","isDeserializing","mouseEnabled","addComponent","onCompResize","_childChanged","child","freshLayout","Box","name","getChildByName","Function","bgColor","_bgColor","graphics","clear","drawRect","Styles","ScrollType","defaultSizeGrid","labelColor","labelPadding","inputLabelPadding","buttonStateNum","buttonLabelColors","comboBoxItemColors","scrollBarMinNum","scrollBarDelayTime","Button","skin","label","_state","_autoSize","_stateChanged","_labelColors","_text","_clickHandler","_strokeColors","setGraphics","createText","Text","overflow","HIDDEN","align","valign","hideFlags","HideFlags","HideAndDontSave","_mouseState","_setBit","NodeFlags","HAS_MOUSE","onMouse","MOUSE_DOWN","MOUSE_UP","CLICK","toggle","_selected","selected","run","state","stateMap","_skin","_setSkin","url","_skinBaseUrl","URL","formatURL","tex","Loader","getRes","_skinLoaded","Promise","resolve","loader","load","IMAGE","then","_destroyed","_graphics","changeClips","_setStateChanged","LOADED","parseInt","img","x","console","log","runCallLater","changeState","text","parent","addChild","CHANGE","strokeColor","labelColors","join","String","strokeColors","padding","Number","labelSize","fontSize","labelStroke","stroke","labelStrokeColor","labelBold","bold","labelFont","font","labelAlign","labelVAlign","clickHandler","_setWidth","_setHeight","iconOffset","mouseup","mouseover","mousedown","mouseout","CheckBox","Boolean","Clip","clipX","clipY","_clipX","_clipY","_clipWidth","_clipHeight","_interval","_index","_toIndex","_sources","_onDisplay","_isPlaying","_getBit","DISPLAYED_INSTAGE","play","stop","_autoPlay","_setClipChanged","clipWidth","clipHeight","changeClip","_clipChanged","loadComplete","Handler","w","ceil","j","sources","group","_group","setGroup","total","autoPlay","interval","from","to","loop","_loop","DISPLAY","UNDISPLAY","COMPLETE","ColorPicker","_gridSize","_borderColor","_inputColor","_inputBgColor","_colors","_selectedColor","removeColorBox","_colorPanel","_colorButton","_colorTiles","_colorBlock","_colorInput","changeHandler","size","Input","onColorButtonClick","pos","onColorInputChange","KEY_DOWN","onColorFieldKeyDown","MOUSE_MOVE","onColorTilesMouseMove","onColorTilesClick","onPanelMouseDown","stopPropagation","changePanel","_panelChanged","g","drawBlock","borderColor","mainColors","strColor","y","close","open","p","localToGlobal","Point","px","py","zOrder","removeSelf","keyCode","selectedColor","getColorByMouse","focus","point","getMousePoint","floor","showColor","drawLine","changeColor","runWith","once","_setPanelChanged","inputColor","inputBgColor","Label","_fitContent","_tf","_parseEscapeChars","_onPostLayout","textWidth","textHeight","_fitFlag","wordWrap","alignItems","italic","leading","html","ubb","maxWidth","fitContent","textField","set_width","set_height","underline","underlineColor","strikethrough","strikethroughColor","ignoreLang","templateVars","setVar","Image","dispose","clearRes","sk","repaint","_useSourceSize","useSourceSize","Slider","isVertical","showLabel","_showProgress","_max","_min","_tick","_value","_bg","_bar","_progress","addChildAt","onBarMouseDown","allowClickBack","_globalSacle","setTo","globalScaleX","globalScaleY","_maxMove","_tx","mouseX","_ty","mouseY","mouseMove","mouseUp","showValueText","hideValueText","sendChangeEvent","CHANGED","oldValue","pow","round","showProgress","AssetDb","inst","resolveURL","tasks","replaceFileExtension","all","setBarPoint","changeValue","setSlider","scaleValue","tick","num","_allowClickBack","onBgMouseDown","bar","ScrollBar","rollRatio","scaleBar","autoHide","elasticDistance","elasticBackTime","topMoveLimit","bottomMoveLimit","disableDrag","_scrollSize","_thumbPercent","_lastOffset","_checkElastic","_isElastic","_hide","_clickOnly","_showButtons","_touchScrollEnable","_mouseWheelEnable","stopScroll","upButton","downButton","slider","_offsets","onSliderChange","onButtonMouseDown","isUp","currentTarget","slide","startLoop","onStageMouseUp","frameLoop","changeScrollBar","visible","resetPositions","resetButtonPosition","setScroll","scrollSize","thumbPercent","_target","MOUSE_WHEEL","onTargetMouseWheel","onTargetMouseDown","hide","delta","isLockedFun","END","_lastPoint","tweenMove","Tween","clearTween","onStageMouseUp2","startDragForce","cancelDragOp","checkTriggers","isTweenMove","triggerDownDragLimit","triggerUpDragLimit","lastOffset","startTweenMoveForce","abs","_canvasTransform","getScaleY","getScaleX","alpha","START","moveValue","stopMoveLimit","easeFunction","elasticOver","offset","dis","maxDistance","tarSpeed","backToNormal","_backToNormal","Ease","sineOut","VScrollBar","HScrollBar","List","selectEnable","totalPage","disableStopScroll","_repeatX","_repeatY","_repeatX2","_repeatY2","_spaceX","_spaceY","_cells","_startIndex","_selectedIndex","_page","_isVertical","_cellSize","_cellOffset","_createdLine","_usedCache","_elasticEnabled","_scrollType","_preLen","_content","_scrollBar","_itemRender","_array","selectHandler","renderHandler","mouseHandler","cacheAs","onScrollStart","onScrollEnd","content","scrollType","None","scrollRect","Horizontal","_hScrollBarSkin","scrollBar","_setCellChanged","_vScrollBarSkin","vScrollBarSkin","Vertical","hScrollBarSkin","onScrollBarChange","Rectangle","itemRender","repeatX","repeatY","spaceX","spaceY","changeCells","_cellChanged","cell","_getOneCell","cellWidth","cellHeight","listWidth","listHeight","setContentSize","numX","numY","_createItems","array","renderItems","changeSelectStatus","item","createItem","cacheContent","startY","box","cacheBox","k","l","pop","addCell","_$type","_$prefab","HierarchyParser","parse","skinBaseUrl","LegacyUIParser","createComp","warn","watchMap","watcher","onCellMouse","RIGHT_CLICK","onAfterDeserialize","initItems","_afterInited","count","r","_isMoved","selectedIndex","changeCellState","selectBox","scrollValue","lineX","lineY","scrollLine","cellIndex","down","toIndex","shift","unshift","renderItem","_style","posCell","startIndex","selectedItem","selection","getCell","_bindData","hasListener","RENDER","data","_$bindData","ele","call","lineCount","updateArray","freshStart","page","Array","cells","elasticEnabled","refresh","getItem","changeItem","setItem","addItem","addItemAt","souce","deleteItem","scrollTo","tweenTo","time","complete","ComboBox","labels","_visibleNum","_itemSize","_labels","_defaultLabel","_itemColors","_itemPadding","removeList","_onStageMouseWheel","_button","_list","_itemHeight","_selectHandler","_createList","_scrollBarSkin","_setListEvent","list","onListDown","onlistItemMouse","onScrollBarDown","switchTo","_isOpen","_listChanged","changeList","labelWidth","_padding","itemPadding","props","_isCustomList","ROLL_OVER","isOpen","changeOpen","_itemChanged","_listHeight","changeSelected","selectedLabel","defaultLabel","visibleNum","itemHeight","itemColors","itemSize","TEMP","contains","scrollBarSkin","button","View","Scene","_watchMap","_scene","regUI","json","cacheRes","changeData","key","exe","uiMap","DialogManager","maskLayer","popupEffect","dialog","scale","_effectTween","backOut","doOpen","closeEffect","strongOut","doClose","popupEffectHandler","closeEffectHandler","_onResize","_closeOnSide","Dialog","setLockView","lockLayer","removeChildren","isPopupCenter","_centerDialog","pivotX","pivotY","closeOther","showEffect","_closeAll","_clearDialogEffect","isModal","HAS_ZORDER","_checkMask","OPEN","onOpened","_param","lock","isShowEffect","CLOSE","closeHandler","closeType","onClosed","autoDestroyAtClosed","closeAll","getDialogsByGroup","closeByGroup","manager","_manager","_dealDragArea","_onClick","dragTarget","dragArea","_dragArea","toString","_onMouseDown","startDrag","stopDrag","btn","CANCEL","SURE","NO","OK","YES","param","show","_open","popup","modal","isPopup","view","FontClip","sheet","_valueArr","_indexMap","_sheet","_direction","_align","_wordsW","_wordsH","line","direction","texture","isHorizontal","dX","sz","charAt","drawImage","resetLayoutX","resetLayoutY","LayoutBox","_space","onResize","_setItemChanged","removeChildAt","changeItems","space","sortItem","items","sort","b","HBox","maxHeight","TOP","MIDDLE","BOTTOM","NONE","HSlider","Panel","_vScrollBar","_hScrollBar","destroyChildren","_setScrollChanged","removeChild","_parent","_children","_setParent","beginIndex","endIndex","getChildIndex","changeScroll","_scrollChanged","contentW","contentWidth","contentH","contentHeight","vscroll","hscroll","vShow","hShow","showWidth","showHeight","createHScrollBar","createVScrollBar","Both","vScrollBar","hScrollBar","rect","start","ProgressBar","grid","isNaN","bg","Radio","onClick","obj","UIGroup","_items","autoLayout","display","preItem","delItem","newIndex","itemClick","setSelect","_setLabelChanged","hasHideFlag","startsWith","_labelStroke","_labelStrokeColor","_labelSize","_labelBold","_labelFont","_labelPadding","changeLabels","_labelChanged","_labelAlign","RadioGroup","ScaleBox","_oldW","_oldH","onEnable","onDisable","Tab","TextInput","INPUT","ENTER","BLUR","FOCUS","multiline","editable","select","restrict","pattern","prompt","promptColor","maxChars","setSelection","TextArea","onHBarChanged","onVBarChanged","scrollY","scrollX","maxScrollY","maxScrollX","TipManager","_tipBox","_tipText","tipTextColor","_defaultTipHandler","_showDefaultTip","_onStageShowTip","_onStageHideTip","_showTip","tipDelay","tip","apply","_onStageMouseMove","_onStageMouseDown","_showToStage","offsetX","offsetY","offX","offY","rec","getBounds","showDislayTip","tipBackColor","defaultTipHandler","Tree","_spaceLeft","_spaceBottom","_keepStatus","_renderHandler","onListChange","keepStatus","parseOpenStatus","getArray","spaceLeft","spaceBottom","getParentOpenStatus","getDepth","nodeParent","arrow","hasChild","__cellIndex","onArrowClick","folder","isDirectory","setItemState","fresh","xml","parseXml","isRoot","elements","childCount","list2","attributes","node","oldSource","newSource","newItem","m","oldItem","isSameParent","item1","item2","selectedPath","path","filter","result","getFilterSource","toLocaleLowerCase","toLowerCase","VBox","isSortItem","LEFT","CENTER","RIGHT","ViewStack","_setIndexHandler","setIndex","setItems","views","setIndexHandler","VSlider","OpenDataContextView","_fps","Texture","Texture2D","TextureFormat","R8G8B8A8","fps","activeInHierarchy","wx","sharedCanvas","_onLoop","_onActive","_onInActive","postMsg","canvas","Browser","onMiniGame","toTempFilePath","setImageData","updateViewPort","sx","transform","sy","msg","getOpenDataContext","postMessage","StatUI","_show","_showToggle","Stat","AllShow","_view","createUI","showToggle","AllToggle","_toggleView","_toggleSprite","createToggleUI","update","strArray","isAverage","mode","units","_count","_txt","one","_checkBoxArray","sp","clientScaleX","clientScaleY","leftText","singleCharRender","title","checkBoxTex","pixels","Uint8Array","R8G8B8","setPixelsData","TEXTURE2D","_testWord","toggles","cb","render","ctx","c","ClassUtils","regClass"],"sources":["../../src/layaAir/UIConfig.ts","../../src/layaAir/laya/ui/AutoBitmap.ts","../../src/layaAir/laya/ui/UIEvent.ts","../../src/layaAir/laya/ui/UIUtils.ts","../../src/layaAir/laya/ui/UIComponent.ts","../../src/layaAir/laya/ui/Box.ts","../../src/layaAir/laya/ui/Styles.ts","../../src/layaAir/laya/ui/Button.ts","../../src/layaAir/laya/ui/CheckBox.ts","../../src/layaAir/laya/ui/Clip.ts","../../src/layaAir/laya/ui/ColorPicker.ts","../../src/layaAir/laya/ui/Label.ts","../../src/layaAir/laya/ui/Image.ts","../../src/layaAir/laya/ui/Slider.ts","../../src/layaAir/laya/ui/ScrollBar.ts","../../src/layaAir/laya/ui/VScrollBar.ts","../../src/layaAir/laya/ui/HScrollBar.ts","../../src/layaAir/laya/ui/List.ts","../../src/layaAir/laya/ui/ComboBox.ts","../../src/layaAir/laya/ui/View.ts","../../src/layaAir/laya/ui/DialogManager.ts","../../src/layaAir/laya/ui/Dialog.ts","../../src/layaAir/laya/ui/FontClip.ts","../../src/layaAir/laya/ui/LayoutBox.ts","../../src/layaAir/laya/ui/HBox.ts","../../src/layaAir/laya/ui/HSlider.ts","../../src/layaAir/laya/ui/Panel.ts","../../src/layaAir/laya/ui/ProgressBar.ts","../../src/layaAir/laya/ui/Radio.ts","../../src/layaAir/laya/ui/UIGroup.ts","../../src/layaAir/laya/ui/RadioGroup.ts","../../src/layaAir/laya/ui/ScaleBox.ts","../../src/layaAir/laya/ui/Tab.ts","../../src/layaAir/laya/ui/TextInput.ts","../../src/layaAir/laya/ui/TextArea.ts","../../src/layaAir/laya/ui/TipManager.ts","../../src/layaAir/laya/ui/Tree.ts","../../src/layaAir/laya/ui/VBox.ts","../../src/layaAir/laya/ui/ViewStack.ts","../../src/layaAir/laya/ui/VSlider.ts","../../src/layaAir/laya/ui/OpenDataContextView.ts","../../src/layaAir/laya/ui/StatUI.ts","../../src/layaAir/laya/ui/ModuleDef.ts"],"sourcesContent":["/**全局配置*/\r\nexport class UIConfig {\r\n    /**是否开启触摸滚动（针对滚动条）*/\r\n    static touchScrollEnable: boolean = true;\r\n    /**是否开启滑轮滚动（针对滚动条）*/\r\n    static mouseWheelEnable: boolean = true;\r\n    /**是否显示滚动条按钮*/\r\n    static showButtons: boolean = true;\r\n    /**弹出框背景颜色*/\r\n    static popupBgColor: string = \"#000000\";\r\n    /**弹出框背景透明度*/\r\n    static popupBgAlpha: number = 0.5;\r\n    /**模式窗口点击边缘，是否关闭窗口，默认是关闭的*/\r\n    static closeDialogOnSide: boolean = true;\r\n}\r\n\r\n","import { Graphics } from \"../display/Graphics\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Draw9GridTextureCmd } from \"../display/cmd/Draw9GridTextureCmd\";\r\nimport { DrawTextureCmd } from \"../display/cmd/DrawTextureCmd\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>AutoBitmap</code> 类是用于表示位图图像或绘制图形的显示对象。\r\n * <p>封装了位置，宽高及九宫格的处理，供UI组件使用。</p>\r\n */\r\nexport class AutoBitmap extends Graphics {\r\n    /**@private 宽度*/\r\n    private _width: number = null;\r\n    /**@private 高度*/\r\n    private _height: number = null;\r\n    /**@private 源数据*/\r\n    private _source: Texture;\r\n    /**@private 网格数据*/\r\n    private _sizeGrid: number[];\r\n    /**@private */\r\n    protected _isChanged: boolean;\r\n\r\n    protected _stateIndex: number;\r\n    protected _stateNum: number;\r\n\r\n    /**@internal */\r\n    _offset: any[];\r\n    uv: number[] = null;\r\n\r\n    _color: string = \"#ffffff\";\r\n\r\n    /**@private */\r\n    private _drawGridCmd: Draw9GridTextureCmd | DrawTextureCmd;\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    destroy(): void {\r\n        super.destroy();\r\n        if (this._source && !LayaEnv.isPlaying)\r\n            this._source.off(\"reload\", this, this._setChanged);\r\n        this._source = null;\r\n        this._sizeGrid = null;\r\n        this._offset = null;\r\n    }\r\n\r\n    get sizeGrid(): number[] {\r\n        return this._sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: number[]) {\r\n        this._sizeGrid = value ? value.map((v) => { return +v; }) : null;\r\n        this._setChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示显示对象的宽度，以像素为单位。\r\n     */\r\n    get width(): number {\r\n        if (this._width != null) return this._width;\r\n        if (this._source) return this._source.sourceWidth;\r\n        return 0;\r\n    }\r\n\r\n    set width(value: number) {\r\n        if (this._width != value) {\r\n            this._width = value;\r\n            this._setChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示显示对象的高度，以像素为单位。\r\n     */\r\n    get height(): number {\r\n        if (this._height != null) return this._height;\r\n        if (this._source) return this._source.sourceHeight / (this._source._stateNum || this._stateNum || 1);\r\n        return 0;\r\n    }\r\n\r\n    set height(value: number) {\r\n        if (this._height != value) {\r\n            this._height = value;\r\n            this._setChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对象的纹理资源。\r\n     */\r\n    get source(): Texture {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: Texture) {\r\n        if (this._source && !LayaEnv.isPlaying)\r\n            this._source.off(\"reload\", this, this._setChanged);\r\n        if (value) {\r\n            this._source = value;\r\n            this._setChanged();\r\n            if (!LayaEnv.isPlaying)\r\n                value.on(\"reload\", this, this._setChanged);\r\n        } else {\r\n            this._source = null;\r\n            this._setDrawGridCmd(null);\r\n        }\r\n    }\r\n\r\n    setState(index: number, numStates: number) {\r\n        this._stateIndex = index;\r\n        this._stateNum = numStates;\r\n        this._setChanged();\r\n    }\r\n\r\n    get color() {\r\n        return this._color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        if (this._color != value) {\r\n            this._color = value;\r\n            this._setChanged();\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    protected _setChanged(): void {\r\n        if (!this._isChanged) {\r\n            this._isChanged = true;\r\n            ILaya.timer.callLater(this, this.changeSource);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 修改纹理资源。\r\n     */\r\n    protected changeSource(): void {\r\n        this._isChanged = false;\r\n        let source = this._source;\r\n        if (!source || !source.bitmap || !this._sp)\r\n            return;\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let sizeGrid = this._sizeGrid || source._sizeGrid;\r\n        let stateIndex = this._stateIndex;\r\n        if (stateIndex != null) {\r\n            let stateNum = source._stateNum || this._stateNum || 1;\r\n            if (stateNum == 1)\r\n                stateIndex = 0;\r\n            else if (stateNum == 2) {\r\n                if (stateIndex == 2)\r\n                    stateIndex = 1;\r\n                else\r\n                    stateIndex = 0;\r\n            }\r\n            else if (stateNum == 3) {\r\n                if (stateIndex == 3)\r\n                    stateIndex = 0;\r\n            }\r\n\r\n            let h = source.height / stateNum;\r\n            source = source.getCachedClip(0, h * stateIndex, source.width, h)\r\n            if (!source)\r\n                return;\r\n        }\r\n\r\n        let sw = source.sourceWidth;\r\n        let sh = source.sourceHeight;\r\n\r\n        //如果没有设置9宫格，或大小未改变，则直接用原图绘制\r\n        let cmd: any;\r\n        if (!sizeGrid || (sw === width && sh === height))\r\n            cmd = DrawTextureCmd.create(source, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, width, height, null, 1, this._color, null, this.uv)\r\n        else\r\n            cmd = Draw9GridTextureCmd.create(source, 0, 0, width, height, sizeGrid, false, this._color);\r\n        this._setDrawGridCmd(cmd);\r\n    }\r\n\r\n    /**\r\n     *  由于可能有其他的graphic命令，因此不能用原来的直接clear()的方法\r\n     */\r\n    private _setDrawGridCmd(newcmd: any) {\r\n        if (this._drawGridCmd) {\r\n            this.removeCmd(this._drawGridCmd);\r\n            this._drawGridCmd.recover();\r\n        }\r\n        this._drawGridCmd = newcmd;\r\n        if (newcmd)\r\n            this.addCmd(newcmd);\r\n    }\r\n}\r\n","/**\r\n * <code>UIEvent</code> 类用来定义UI组件类的事件类型。\r\n */\r\nexport class UIEvent {\r\n    /**\r\n     * 显示提示信息。\r\n     */\r\n    static SHOW_TIP: string = \"showtip\";\r\n    /**\r\n     * 隐藏提示信息。\r\n     */\r\n    static HIDE_TIP: string = \"hidetip\";\r\n}","import { Sprite } from \"../display/Sprite\"\r\nimport { ColorFilter } from \"../filters/ColorFilter\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { WeakObject } from \"../utils/WeakObject\"\r\n\r\n/**\r\n * <code>UIUtils</code> 是文本工具集。\r\n */\r\nexport class UIUtils {\r\n    private static grayFilter: ColorFilter = new ColorFilter([0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0]);\r\n\r\n    /**\r\n     * 用字符串填充数组，并返回数组副本。\r\n     * @param\tarr 源数组对象。\r\n     * @param\tstr 用逗号连接的字符串。如\"p1,p2,p3,p4\"。\r\n     * @param\ttype 如果值不为null，则填充的是新增值得类型。\r\n     * @return 填充后的数组。\r\n     */\r\n    static fillArray(arr: any[], str: string, type: typeof Number | typeof String = null): any[] {\r\n        let temp = arr.concat();\r\n        if (str) {\r\n            let a = str.split(\",\");\r\n            for (let i = 0, n = Math.min(temp.length, a.length); i < n; i++) {\r\n                let value = a[i];\r\n                temp[i] = (value == \"true\" ? true : (value == \"false\" ? false : value));\r\n                if (type != null) temp[i] = type(value);\r\n            }\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    /**\r\n     * 转换uint类型颜色值为字符型颜色值。\r\n     * @param color uint颜色值。\r\n     * @return 字符型颜色值。\r\n     */\r\n    static toColor(color: number): string {\r\n        return Utils.toHexColor(color);\r\n    }\r\n\r\n    /**\r\n     * 给指定的目标显示对象添加或移除灰度滤镜。\r\n     * @param\ttarget 目标显示对象。\r\n     * @param\tisGray 如果值true，则添加灰度滤镜，否则移除灰度滤镜。\r\n     */\r\n    //TODO:coverage\r\n    static gray(target: Sprite, isGray: boolean = true): void {\r\n        let filters: any[] = target.filters || [];\r\n        let i = filters.indexOf(UIUtils.grayFilter);\r\n        if (isGray) {\r\n            if (i == -1) {\r\n                filters.push(UIUtils.grayFilter);\r\n                target.filters = filters;\r\n            }\r\n        }\r\n        else if (i != -1) {\r\n            filters.splice(i, 1);\r\n            target.filters = filters;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _funMap: WeakObject = null;//new WeakObject();\r\n\r\n    /**\r\n     * @private 根据字符串，返回函数表达式\r\n     */\r\n    //TODO:coverage\r\n    static getBindFun(value: string): Function {\r\n        if (!UIUtils._funMap) {\r\n            UIUtils._funMap = new WeakObject();\r\n        }\r\n        var fun: Function = UIUtils._funMap.get(value);\r\n        if (fun == null) {\r\n            var temp: string = \"\\\"\" + value + \"\\\"\";\r\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\r\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\r\n            fun = (window as any).Laya._runScript(str);\r\n            UIUtils._funMap.set(value, fun);\r\n        }\r\n        return fun;\r\n    }\r\n}","import { Widget } from \"../components/Widget\";\r\nimport { UIEvent } from \"./UIEvent\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * <code>Component</code> 是ui控件类的基类。\r\n * <p>生命周期：preinitialize > createChildren > initialize > 组件构造函数</p>\r\n */\r\nexport class UIComponent extends Sprite {\r\n    /**@private 控件的数据源。 */\r\n    protected _dataSource: any;\r\n    /**@private 鼠标悬停提示 */\r\n    protected _toolTip: any;\r\n    /**@private 禁用 */\r\n    protected _disabled: boolean;\r\n    /**@private 变灰*/\r\n    protected _gray: boolean;\r\n    /**@private 相对布局组件*/\r\n    protected _widget: Widget = Widget.EMPTY;\r\n\r\n    /**\r\n     * <p>创建一个新的 <code>Component</code> 实例。</p>\r\n     */\r\n    constructor(createChildren = true) {\r\n        super();\r\n        if (createChildren) {\r\n            this.preinitialize();\r\n            this.createChildren();\r\n            this.initialize();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._dataSource = null;\r\n        this._toolTip = null;\r\n    }\r\n\r\n    /**\r\n     * <p>预初始化。</p>\r\n     * 子类可在此函数内设置、修改属性默认值\r\n     */\r\n    protected preinitialize(): void {\r\n    }\r\n\r\n    /**\r\n     * <p>创建并添加控件子节点。</p>\r\n     * 子类可在此函数内创建并添加子节点。\r\n     */\r\n    protected createChildren(): void {\r\n    }\r\n\r\n    /**\r\n     * <p>控件初始化。</p>\r\n     * 在此子对象已被创建，可以对子对象进行修改。\r\n     */\r\n    protected initialize(): void {\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        return this.measureWidth();\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的实际显示区域宽度（以像素为单位）。</p>\r\n     */\r\n    protected measureWidth(): number {\r\n        var max: number = 0;\r\n        this.commitMeasure();\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * <p>立即执行影响宽高度量的延迟调用函数。</p>\r\n     * <p>使用 <code>runCallLater</code> 函数，立即执行影响宽高度量的延迟运行函数(使用 <code>callLater</code> 设置延迟执行函数)。</p>\r\n     * @see #callLater()\r\n     * @see #runCallLater()\r\n     */\r\n    protected commitMeasure(): void {\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        return this.measureHeight();\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的实际显示区域高度（以像素为单位）。</p>\r\n     */\r\n    protected measureHeight(): number {\r\n        var max: number = 0;\r\n        this.commitMeasure();\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @implements\r\n     * <p>数据赋值，通过对UI赋值来控制UI显示逻辑。</p>\r\n     * <p>简单赋值会更改组件的默认属性，使用大括号可以指定组件的任意属性进行赋值。</p>\r\n     * @example\r\n       //默认属性赋值\r\n       dataSource = {label1: \"改变了label\", checkbox1: true};//(更改了label1的text属性值，更改checkbox1的selected属性)。\r\n       //任意属性赋值\r\n       dataSource = {label2: {text:\"改变了label\",size:14}, checkbox2: {selected:true,x:10}};\r\n     */\r\n    get dataSource(): any {\r\n        return this.get_dataSource();\r\n    }\r\n\r\n    get_dataSource(): any {\r\n        return this._dataSource;\r\n    }\r\n\r\n    set dataSource(value: any) {\r\n        this.set_dataSource(value);\r\n    }\r\n\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        for (var prop in this._dataSource) {\r\n            if (prop in this && !(typeof ((this as any)[prop]) == 'function')) {\r\n                (this as any)[prop] = this._dataSource[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get top(): number {\r\n        return this.get_top();\r\n    }\r\n\r\n    get_top(): number {\r\n        return this._widget.top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        this.set_top(value);\r\n    }\r\n\r\n    set_top(value: number) {\r\n        if (value != this._widget.top) {\r\n            this._getWidget().top = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get bottom(): number {\r\n        return this.get_bottom();\r\n    }\r\n\r\n    get_bottom(): number {\r\n        return this._widget.bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        this.set_bottom(value);\r\n    }\r\n\r\n    set_bottom(value: number) {\r\n        if (value != this._widget.bottom) {\r\n            this._getWidget().bottom = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get left(): number {\r\n        return this._widget.left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (value != this._widget.left) {\r\n            this._getWidget().left = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get right(): number {\r\n        return this._widget.right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (value != this._widget.right) {\r\n            this._getWidget().right = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerX(): number {\r\n        return this._widget.centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (value != this._widget.centerX) {\r\n            this._getWidget().centerX = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerY(): number {\r\n        return this._widget.centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (value != this._widget.centerY) {\r\n            this._getWidget().centerY = value;\r\n        }\r\n    }\r\n\r\n    protected _shouldRefreshLayout(): void {\r\n        super._shouldRefreshLayout();\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n\r\n    protected _sizeChanged(): void {\r\n        this.event(Event.RESIZE);\r\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\r\n    }\r\n\r\n    /**\r\n     * <p>鼠标悬停提示。</p>\r\n     * <p>可以赋值为文本 <code>String</code> 或函数 <code>Handler</code> ，用来实现自定义样式的鼠标提示和参数携带等。</p>\r\n     * @example\r\n     * private var _testTips:TestTipsUI = new TestTipsUI();\r\n     * private function testTips():void {\r\n       //简单鼠标提示\r\n     * btn2.toolTip = \"这里是鼠标提示&lt;b&gt;粗体&lt;/b&gt;&lt;br&gt;换行\";\r\n       //自定义的鼠标提示\r\n     * btn1.toolTip = showTips1;\r\n       //带参数的自定义鼠标提示\r\n     * clip.toolTip = new Handler(this,showTips2, [\"clip\"]);\r\n     * }\r\n     * private function showTips1():void {\r\n     * _testTips.label.text = \"这里是按钮[\" + btn1.label + \"]\";\r\n     * tip.addChild(_testTips);\r\n     * }\r\n     * private function showTips2(name:String):void {\r\n     * _testTips.label.text = \"这里是\" + name;\r\n     * tip.addChild(_testTips);\r\n     * }\r\n     */\r\n    get toolTip(): any {\r\n        return this._toolTip;\r\n    }\r\n\r\n    set toolTip(value: any) {\r\n        if (this._toolTip != value) {\r\n            this._toolTip = value;\r\n            if (value != null) {\r\n                this.on(Event.MOUSE_OVER, this, this.onMouseOver);\r\n                this.on(Event.MOUSE_OUT, this, this.onMouseOut);\r\n            } else {\r\n                this.off(Event.MOUSE_OVER, this, this.onMouseOver);\r\n                this.off(Event.MOUSE_OUT, this, this.onMouseOut);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对象的 <code>Event.MOUSE_OVER</code> 事件侦听处理函数。\r\n     */\r\n    private onMouseOver(e: Event): void {\r\n        ILaya.stage.event(UIEvent.SHOW_TIP, this._toolTip);\r\n    }\r\n\r\n    /**\r\n     * 对象的 <code>Event.MOUSE_OUT</code> 事件侦听处理函数。\r\n     */\r\n    private onMouseOut(e: Event): void {\r\n        ILaya.stage.event(UIEvent.HIDE_TIP, this._toolTip);\r\n    }\r\n\r\n    /** 是否变灰。*/\r\n    get gray(): boolean {\r\n        return this._gray;\r\n    }\r\n\r\n    set gray(value: boolean) {\r\n        if (value !== this._gray) {\r\n            this._gray = value;\r\n            UIUtils.gray(this, value);\r\n        }\r\n    }\r\n\r\n    /** 是否禁用页面，设置为true后，会变灰并且禁用鼠标。*/\r\n    get disabled(): boolean {\r\n        return this._disabled;\r\n    }\r\n\r\n    set disabled(value: boolean) {\r\n        if (value !== this._disabled) {\r\n            this._disabled = value;\r\n            if (!SerializeUtil.isDeserializing)\r\n                this.gray = value;\r\n            this.mouseEnabled = !value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\r\n     */\r\n    private _getWidget(): Widget {\r\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\r\n        return this._widget;\r\n    }\r\n\r\n    /**@private */\r\n    protected onCompResize(): void {\r\n        this._sizeChanged();\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param child \r\n     * @override\r\n     */\r\n    protected _childChanged(child: Node = null): void {\r\n        this.callLater(this._sizeChanged);\r\n        super._childChanged(child);\r\n    }\r\n\r\n    /**\r\n     * 重新排版\r\n     */\r\n    freshLayout() {\r\n        if (this._widget != Widget.EMPTY) {\r\n            this._widget.resetLayout();\r\n        }\r\n    }\r\n}\r\n","import { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n * <code>Box</code> 类是一个控件容器类。\r\n */\r\nexport class Box extends UIComponent {\r\n    private _bgColor: string;\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        for (let name in value) {\r\n            let comp = (<UIComponent>this.getChildByName(name));\r\n            if (comp)\r\n                comp.dataSource = value[name];\r\n            else if (name in this && !((this as any)[name] instanceof Function))\r\n                (this as any)[name] = value[name];\r\n        }\r\n    }\r\n\r\n    /**背景颜色*/\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        this.graphics.clear();\r\n        this.graphics.drawRect(0, 0, 1, 1, this._bgColor, null, null, true);\r\n    }\r\n}","\r\n/**\r\n * <code>Styles</code> 定义了组件常用的样式属性。\r\n */\r\nexport class Styles {\r\n\r\n    /**\r\n     * 默认九宫格信息。\r\n     * @see laya.ui.AutoBitmap#sizeGrid\r\n     */\r\n    static defaultSizeGrid: any[] = [4, 4, 4, 4, 0];\r\n\r\n    //-----------------Label-----------------\r\n    /**\r\n     * 标签颜色。\r\n     */\r\n    static labelColor: string = \"#000000\";\r\n    /**\r\n     * 标签的边距。\r\n     * <p><b>格式：</b>[上边距，右边距，下边距，左边距]。</p>\r\n     */\r\n    static labelPadding: any[] = [2, 2, 2, 2];\r\n\r\n    /**\r\n     * 标签的边距。\r\n     * <p><b>格式：</b>[上边距，右边距，下边距，左边距]。</p>\r\n     */\r\n    static inputLabelPadding: any[] = [1, 1, 1, 3];\r\n\r\n    //-----------------Button-----------------\r\n    /**\r\n     * 按钮皮肤的状态数，支持1,2,3三种状态值。\r\n     */\r\n    static buttonStateNum: number = 3;\r\n    /**\r\n     * 按钮标签颜色。\r\n     * <p><b>格式：</b>[upColor,overColor,downColor]。</p>\r\n     */\r\n    static buttonLabelColors: any[] = [\"#32556b\", \"#32cc6b\", \"#ff0000\"];\r\n\r\n    //-----------------ComboBox-----------------\r\n    /**\r\n     * 下拉框项颜色。\r\n     * <p><b>格式：</b>[overBgColor,overLabelColor,outLabelColor,borderColor,bgColor]。</p>\r\n     */\r\n    static comboBoxItemColors: any[] = [\"#5e95b6\", \"#ffffff\", \"#000000\", \"#8fa4b1\", \"#ffffff\"];\r\n\r\n    //-----------------ScrollBar-----------------\r\n    /**\r\n     * 滚动条的最小值。\r\n     */\r\n    static scrollBarMinNum: number = 15;\r\n    /**\r\n     * 长按按钮，等待时间，使其可激活连续滚动。\r\n     */\r\n    static scrollBarDelayTime: number = 500;\r\n}\r\n\r\nexport enum ScrollType {\r\n    None,\r\n    Horizontal,\r\n    Vertical,\r\n    Both\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { ISelect } from \"./ISelect\";\r\nimport { Styles } from \"./Styles\";\r\nimport { NodeFlags, HideFlags } from \"../Const\"\r\nimport { Text } from \"../display/Text\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { AutoBitmap } from \"./AutoBitmap\"\r\nimport { UIUtils } from \"./UIUtils\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { URL } from \"../net/URL\";\r\n\r\n/**\r\n * 当按钮的选中状态（ <code>selected</code> 属性）发生改变时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Button</code> 组件用来表示常用的多态按钮。 <code>Button</code> 组件可显示文本标签、图标或同时显示两者。\t *\r\n * <p>可以是单态，两态和三态，默认三态(up,over,down)。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Button</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Button;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class Button_Example\r\n *\t\t{\r\n *\t\t\tpublic function Button_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"资源加载完成！\");\r\n *\t\t\t\tvar button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,并传入它的皮肤。\r\n *\t\t\t\tbutton.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n *\t\t\t\tbutton.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n *\t\t\t\tbutton.clickHandler = new Handler(this, onClickButton,[button]);//设置 button 的点击事件处理器。\r\n *\t\t\t\tLaya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onClickButton(button:Button):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"按钮button被点击了！\");\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete()\r\n * {\r\n *     console.log(\"资源加载完成！\");\r\n *     var button = new laya.ui.Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\r\n *     button.x =100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n *     button.y =100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n *     button.clickHandler = laya.utils.Handler.create(this,onClickButton,[button],false);//设置 button 的点击事件处理函数。\r\n *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n * }\r\n * function onClickButton(button)\r\n * {\r\n *     console.log(\"按钮被点击了。\",button);\r\n * }\r\n * @example\r\n * import Button=laya.ui.Button;\r\n * import Handler=laya.utils.Handler;\r\n * class Button_Example{\r\n *     constructor()\r\n *     {\r\n *         Laya.init(640, 800);\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/button.png\", laya.utils.Handler.create(this,this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete()\r\n *     {\r\n *         var button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,并传入它的皮肤。\r\n *         button.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n *         button.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n *         button.clickHandler = new Handler(this, this.onClickButton,[button]);//设置 button 的点击事件处理器。\r\n *         Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n *     }\r\n *     private onClickButton(button:Button):void\r\n *     {\r\n *         console.log(\"按钮button被点击了！\")\r\n *     }\r\n * }\r\n */\r\nexport class Button extends UIComponent implements ISelect {\r\n    /**\r\n     * 指定按钮按下时是否是切换按钮的显示状态。\r\n     *\r\n     * @example 以下示例代码，创建了一个 <code>Button</code> 实例，并设置为切换按钮。\r\n     * @example\r\n     * package\r\n     *\t{\r\n     *\t\timport laya.ui.Button;\r\n     *\t\timport laya.utils.Handler;\r\n     *\t\tpublic class Button_toggle\r\n     *\t\t{\r\n     *\t\t\tpublic function Button_toggle()\r\n     *\t\t\t{\r\n     *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n     *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n     *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));\r\n     *\t\t\t}\r\n     *\t\t\tprivate function onLoadComplete():void\r\n     *\t\t\t{\r\n     *\t\t\t\ttrace(\"资源加载完成！\");\r\n     *\t\t\t\tvar button:Button = new Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 实例对象 button ,传入它的皮肤skin和标签label。\r\n     *\t\t\t\tbutton.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n     *\t\t\t\tbutton.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n     *\t\t\t\tbutton.toggle = true;//设置 button 对象为切换按钮。\r\n     *\t\t\t\tbutton.clickHandler = new Handler(this, onClickButton,[button]);//设置 button 的点击事件处理器。\r\n     *\t\t\t\tLaya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n     *\t \t\t}\r\n     *\t\t\tprivate function onClickButton(button:Button):void\r\n     *\t\t\t{\r\n     *\t\t\t\ttrace(\"button.selected = \"+ button.selected);\r\n     *\t\t\t}\r\n     *\t\t}\r\n     *\t}\r\n     * @example\r\n     * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n     * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n     * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n     * function loadComplete()\r\n     * {\r\n     *     console.log(\"资源加载完成！\");\r\n     *     var button = new laya.ui.Button(\"resource/ui/button.png\",\"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\r\n     *     button.x =100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n     *     button.y =100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n     *     button.toggle = true;//设置 button 对象为切换按钮。\r\n     *     button.clickHandler = laya.utils.Handler.create(this,onClickButton,[button],false);//设置 button 的点击事件处理器。\r\n     *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n     * }\r\n     * function onClickButton(button)\r\n     * {\r\n     *     console.log(\"button.selected = \",button.selected);\r\n     * }\r\n     * @example\r\n     * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n     * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n     * Laya.loader.load(\"button.png\", null,null, null, null, null);//加载资源\r\n     * function loadComplete() {\r\n     *     console.log(\"资源加载完成！\");\r\n     *     var button:laya.ui.Button = new laya.ui.Button(\"button.png\", \"label\");//创建一个 Button 类的实例对象 button ,传入它的皮肤skin和标签label。\r\n     *     button.x = 100;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n     *     button.y = 100;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n     *     button.toggle = true;//设置 button 对象为切换按钮。\r\n     *     button.clickHandler = laya.utils.Handler.create(this, onClickButton, [button], false);//设置 button 的点击事件处理器。\r\n     *     Laya.stage.addChild(button);//将此 button 对象添加到显示列表。\r\n     * }\r\n     * function onClickButton(button) {\r\n     *     console.log(\"button.selected = \", button.selected);\r\n     * }\r\n     */\r\n    toggle: boolean;\r\n    /**\r\n     * @private\r\n     * 按钮上的文本。\r\n     */\r\n    protected _text: Text;\r\n    /**\r\n     * @private\r\n     * 按钮文本标签的颜色值。\r\n     */\r\n    protected _labelColors: string[];\r\n    /**\r\n     * @private\r\n     * 按钮文本标签描边的颜色值。\r\n     */\r\n    protected _strokeColors: string[];\r\n    /**\r\n     * @private\r\n     * 按钮的状态值。\r\n     */\r\n    protected _state: number = 0;\r\n    /**\r\n     * @private\r\n     * 表示按钮的选中状态。\r\n     */\r\n    protected _selected: boolean;\r\n\r\n    protected _skin: string;\r\n\r\n    /**\r\n     * @private\r\n     * 指定此显示对象是否自动计算并改变大小等属性。\r\n     */\r\n    protected _autoSize: boolean = true;\r\n    /**\r\n     * @private\r\n     * 按钮的状态数。\r\n     */\r\n    protected _stateNum: number;\r\n    /**\r\n     * @private\r\n     * 按钮的点击事件函数。\r\n     */\r\n    protected _clickHandler: Handler;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _stateChanged: boolean = false;\r\n\r\n    declare _graphics: AutoBitmap;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Button</code> 类实例。\r\n     * @param skin 皮肤资源地址。\r\n     * @param label 按钮的文本内容。\r\n     */\r\n    constructor(skin: string = null, label: string = \"\") {\r\n        super();\r\n        this._labelColors = Styles.buttonLabelColors;\r\n        this._stateNum = Styles.buttonStateNum;\r\n\r\n        if (skin)\r\n            this.skin = skin;\r\n        this.label = label;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._text && this._text.destroy(destroyChild);\r\n        this._text = null;\r\n        this._clickHandler = null;\r\n        this._labelColors = this._strokeColors = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this.setGraphics(new AutoBitmap(), true);\r\n    }\r\n\r\n    /**@private */\r\n    protected createText(): void {\r\n        if (!this._text) {\r\n            this._text = new Text();\r\n            this._text.overflow = Text.HIDDEN;\r\n            this._text.align = \"center\";\r\n            this._text.valign = \"middle\";\r\n            this._text.width = this._width;\r\n            this._text.height = this._height;\r\n            this._text.hideFlags = HideFlags.HideAndDontSave;\r\n        }\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    protected initialize(): void {\r\n        if (this._mouseState !== 1) {\r\n            this.mouseEnabled = true;\r\n            this._setBit(NodeFlags.HAS_MOUSE, true);\r\n        }\r\n        this.on(Event.MOUSE_OVER, this, this.onMouse);\r\n        this.on(Event.MOUSE_OUT, this, this.onMouse);\r\n        this.on(Event.MOUSE_DOWN, this, this.onMouse);\r\n        this.on(Event.MOUSE_UP, this, this.onMouse);\r\n        this.on(Event.CLICK, this, this.onMouse);\r\n    }\r\n\r\n    /**\r\n     * 对象的 <code>Event.MOUSE_OVER、Event.MOUSE_OUT、Event.MOUSE_DOWN、Event.MOUSE_UP、Event.CLICK</code> 事件侦听处理函数。\r\n     * @param e Event 对象。\r\n     */\r\n    protected onMouse(e: Event): void {\r\n        if (this.toggle === false && this._selected) return;\r\n        let type = e ? e.type : Event.CLICK;\r\n        if (type === Event.CLICK) {\r\n            this.toggle && (this.selected = !this._selected);\r\n            this._clickHandler && this._clickHandler.run();\r\n            return;\r\n        }\r\n        !this._selected && (this.state = stateMap[type]);\r\n    }\r\n\r\n    /**\r\n     * <p>对象的皮肤资源地址。</p>\r\n     * 支持单态，两态和三态，用 <code>stateNum</code> 属性设置\r\n     * <p>对象的皮肤地址，以字符串表示。</p>\r\n     * @see #stateNum\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            let tex = Loader.getRes(url);\r\n            if (!tex)\r\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded(tex));\r\n            else {\r\n                this._skinLoaded(tex);\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n        else {\r\n            this._skinLoaded(null);\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(tex: any): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._graphics.source = tex;\r\n        if (tex)\r\n            this.callLater(this.changeClips);\r\n        this._setStateChanged();\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * <p>指定对象的状态值，以数字表示。</p>\r\n     * <p>默认值为3。此值决定皮肤资源图片的切割方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>1：单态。图片不做切割，按钮的皮肤状态只有一种。</li>\r\n     * <li>2：两态。图片将以竖直方向被等比切割为2部分，从上向下，依次为\r\n     * 弹起状态皮肤、\r\n     * 按下和经过及选中状态皮肤。</li>\r\n     * <li>3：三态。图片将以竖直方向被等比切割为3部分，从上向下，依次为\r\n     * 弹起状态皮肤、\r\n     * 经过状态皮肤、\r\n     * 按下和选中状态皮肤</li>\r\n     * </p>\r\n     */\r\n    get stateNum(): number {\r\n        return this._stateNum;\r\n    }\r\n\r\n    set stateNum(value: number) {\r\n        if (typeof (value as any) == 'string') {\r\n            value = parseInt(value as any);\r\n        }\r\n        if (this._stateNum != value) {\r\n            this._stateNum = value < 1 ? 1 : value > 3 ? 3 : value;\r\n            this._graphics.setState(this._state, this._stateNum);\r\n            if (this._skin) {\r\n                this.callLater(this.changeClips);\r\n                this._setStateChanged();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对象的资源切片发生改变。\r\n     */\r\n    protected changeClips(): void {\r\n        let width: number = 0, height: number = 0;\r\n\r\n        let img: Texture = Loader.getRes(this._skin);\r\n        if (!img) {\r\n            console.log(`lose skin ${this._skin}`);\r\n            return;\r\n        }\r\n\r\n        width = img.sourceWidth;\r\n        height = img.sourceHeight / (img._stateNum || this._stateNum);\r\n\r\n        if (this._autoSize) {\r\n            this._graphics.width = this._isWidthSet ? this._width : width;\r\n            this._graphics.height = this._isHeightSet ? this._height : height;\r\n            if (this._text) {\r\n                this._text.width = this._graphics.width;\r\n                this._text.height = this._graphics.height;\r\n            }\r\n        } else {\r\n            if (this._text) {\r\n                this._text.x = width;\r\n                this._text.height = height;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        if (this._skin)\r\n            this.runCallLater(this.changeClips);\r\n        if (this._autoSize) return this._graphics.width;\r\n        this.runCallLater(this.changeState);\r\n        return this._graphics.width + (this._text ? this._text.width : 0);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        if (this._skin)\r\n            this.runCallLater(this.changeClips);\r\n        return this._text ? Math.max(this._graphics.height, this._text.height) : this._graphics.height;\r\n    }\r\n\r\n    /**\r\n     * 按钮的文本内容。\r\n     */\r\n    get label(): string {\r\n        return this._text ? this._text.text : null;\r\n    }\r\n\r\n    set label(value: string) {\r\n        if (!this._text && !value) return;\r\n        this.createText();\r\n        if (this._text.text != value) {\r\n            value && !this._text.parent && this.addChild(this._text);\r\n            this._text.text = (value + \"\").replace(/\\\\n/g, \"\\n\");\r\n            this._setStateChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮的选中状态。\r\n     * <p>如果值为true，表示该对象处于选中状态。否则该对象处于未选中状态。</p>\r\n     * @implements\r\n     */\r\n    get selected(): boolean {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(value: boolean) {\r\n        if (this._selected != value) {\r\n            this._selected = value;\r\n            this.state = this._selected ? 2 : 0;\r\n            this.event(Event.CHANGE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对象的状态值。\r\n     * @see #stateMap\r\n     */\r\n    protected get state(): number {\r\n        return this._state;\r\n    }\r\n\r\n    protected set state(value: number) {\r\n        if (this._state != value) {\r\n            this._state = value;\r\n            this._setStateChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变对象的状态。\r\n     */\r\n    protected changeState(): void {\r\n        this._stateChanged = false;\r\n        if (this._skin)\r\n            this.runCallLater(this.changeClips);\r\n        let index = Math.max(this._state, 0);\r\n        this._graphics.setState(index, this._stateNum);\r\n        if (this.label) {\r\n            this._text.color = this._labelColors[index];\r\n            if (this._strokeColors) this._text.strokeColor = this._strokeColors[index];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮各个状态下的文本颜色。\r\n     * <p><b>格式:</b> \"upColor,overColor,downColor\"。</p>\r\n     */\r\n    get labelColors(): string {\r\n        return this._labelColors.join(\",\");\r\n    }\r\n\r\n    set labelColors(value: string) {\r\n        this._labelColors = UIUtils.fillArray(Styles.buttonLabelColors, value, String);\r\n        this._setStateChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示按钮各个状态下的描边颜色。\r\n     * <p><b>格式:</b> \"upColor,overColor,downColor\"。</p>\r\n     */\r\n    get strokeColors(): string {\r\n        return this._strokeColors ? this._strokeColors.join(\",\") : \"\";\r\n    }\r\n\r\n    set strokeColors(value: string) {\r\n        this._strokeColors = UIUtils.fillArray(Styles.buttonLabelColors, value, String);\r\n        this._setStateChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的边距。\r\n     * <p><b>格式：</b>\"上边距,右边距,下边距,左边距\"。</p>\r\n     */\r\n    get labelPadding(): string {\r\n        this.createText();\r\n        return this._text.padding.join(\",\");\r\n    }\r\n\r\n    set labelPadding(value: string) {\r\n        this.createText();\r\n        this._text.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体大小。\r\n     * @see laya.display.Text.fontSize()\r\n     */\r\n    get labelSize(): number {\r\n        this.createText();\r\n        return this._text.fontSize;\r\n    }\r\n\r\n    set labelSize(value: number) {\r\n        this.createText();\r\n        this._text.fontSize = value\r\n    }\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @see laya.display.Text.stroke()\r\n     */\r\n    get labelStroke(): number {\r\n        this.createText();\r\n        return this._text.stroke;\r\n    }\r\n\r\n    set labelStroke(value: number) {\r\n        this.createText();\r\n        this._text.stroke = value\r\n    }\r\n\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * 默认值为 \"#000000\"（黑色）;\r\n     * @see laya.display.Text.strokeColor()\r\n     */\r\n    get labelStrokeColor(): string {\r\n        this.createText();\r\n        return this._text.strokeColor;\r\n    }\r\n\r\n    set labelStrokeColor(value: string) {\r\n        this.createText();\r\n        this._text.strokeColor = value\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签是否为粗体字。\r\n     * @see laya.display.Text.bold()\r\n     */\r\n    get labelBold(): boolean {\r\n        this.createText();\r\n        return this._text.bold;\r\n    }\r\n\r\n    set labelBold(value: boolean) {\r\n        this.createText();\r\n        this._text.bold = value;\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\r\n     */\r\n    get labelFont(): string {\r\n        this.createText();\r\n        return this._text.font;\r\n    }\r\n\r\n    set labelFont(value: string) {\r\n        this.createText();\r\n        this._text.font = value;\r\n    }\r\n\r\n    /**\r\n     * 标签对齐模式，\r\n     */\r\n    get labelAlign(): string {\r\n        this.createText()\r\n        return this._text.align;\r\n    }\r\n\r\n    set labelAlign(value: string) {\r\n        this.createText()\r\n        this._text.align = value;\r\n    }\r\n\r\n    /**\r\n     * 标签垂直对齐模式，\r\n     */\r\n    get labelVAlign(): string {\r\n        this.createText()\r\n        return this._text.valign;\r\n    }\r\n\r\n    set labelVAlign(value: string) {\r\n        this.createText()\r\n        this._text.valign = value;\r\n    }\r\n\r\n    /**\r\n     * 对象的点击事件处理器函数（无默认参数）。\r\n     * @implements\r\n     */\r\n    get clickHandler(): Handler {\r\n        return this._clickHandler;\r\n    }\r\n\r\n    set clickHandler(value: Handler) {\r\n        this._clickHandler = value;\r\n    }\r\n\r\n    /**\r\n     * 按钮文本标签 <code>Text</code> 控件。\r\n     */\r\n    get text(): Text {\r\n        this.createText();\r\n        return this._text;\r\n    }\r\n\r\n    /**\r\n     * 兼容老IDE\r\n     * @private\r\n    */\r\n    set text(value: Text) {\r\n        if (typeof (value) == \"string\") {\r\n            this._text && (this._text.text = value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\r\n        return null;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        if (value)\r\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\r\n        else\r\n            this._graphics.sizeGrid = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        if (this._autoSize) {\r\n            this._graphics.width = value;\r\n            this._text && (this._text.width = value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        if (this._autoSize) {\r\n            this._graphics.height = value;\r\n            this._text && (this._text.height = value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        if (typeof (value) == 'number' || typeof (value) == 'string') {\r\n            this._dataSource = value;\r\n            this.label = value + \"\";\r\n        }\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**图标x,y偏移，格式：100,100*/\r\n    get iconOffset(): string {\r\n        return this._graphics._offset ? this._graphics._offset.join(\",\") : null;\r\n    }\r\n\r\n    set iconOffset(value: string) {\r\n        if (value)\r\n            this._graphics._offset = UIUtils.fillArray([1, 1], value, Number);\r\n        else\r\n            this._graphics._offset = [];\r\n    }\r\n\r\n    /**@private */\r\n    protected _setStateChanged(): void {\r\n        if (!this._stateChanged) {\r\n            this._stateChanged = true;\r\n            this.callLater(this.changeState);\r\n        }\r\n    }\r\n}\r\n\r\nconst stateMap: any = { \"mouseup\": 0, \"mouseover\": 1, \"mousedown\": 2, \"mouseout\": 0 };","import { Button } from \"./Button\"\r\n\r\n/**\r\n * 当按钮的选中状态（ <code>selected</code> 属性）发生改变时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>CheckBox</code> 组件显示一个小方框，该方框内可以有选中标记。\r\n * <code>CheckBox</code> 组件还可以显示可选的文本标签，默认该标签位于 CheckBox 右侧。\r\n * <p><code>CheckBox</code> 使用 <code>dataSource</code>赋值时的的默认属性是：<code>selected</code>。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>CheckBox</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.CheckBox;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class CheckBox_Example\r\n *\t\t{\r\n *\t\t\tpublic function CheckBox_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n * \t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/check.png\", Handler.create(this,onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"资源加载完成！\");\r\n *\t\t\t\tvar checkBox:CheckBox = new CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的实例对象 checkBox ,传入它的皮肤skin和标签label。\r\n *\t\t\t\tcheckBox.x = 100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\r\n *\t\t\t\tcheckBox.y = 100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\r\n *\t\t\t\tcheckBox.clickHandler = new Handler(this, onClick, [checkBox]);//设置 checkBox 的点击事件处理器。\r\n *\t\t\t\tLaya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onClick(checkBox:CheckBox):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"输出选中状态: checkBox.selected = \" + checkBox.selected);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load(\"resource/ui/check.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete()\r\n * {\r\n *     console.log(\"资源加载完成！\");\r\n *     var checkBox:laya.ui.CheckBox= new laya.ui.CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的类的实例对象 checkBox ,传入它的皮肤skin和标签label。\r\n *     checkBox.x =100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\r\n *     checkBox.y =100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\r\n *     checkBox.clickHandler = new laya.utils.Handler(this,this.onClick,[checkBox],false);//设置 checkBox 的点击事件处理器。\r\n *     Laya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\r\n * }\r\n * function onClick(checkBox)\r\n * {\r\n *     console.log(\"checkBox.selected = \",checkBox.selected);\r\n * }\r\n * @example\r\n * import CheckBox= laya.ui.CheckBox;\r\n * import Handler=laya.utils.Handler;\r\n * class CheckBox_Example{\r\n *     constructor()\r\n *     {\r\n *         Laya.init(640, 800);\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/check.png\", Handler.create(this,this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete()\r\n *     {\r\n *         var checkBox:CheckBox = new CheckBox(\"resource/ui/check.png\", \"这个是一个CheckBox组件。\");//创建一个 CheckBox 类的实例对象 checkBox ,传入它的皮肤skin和标签label。\r\n *         checkBox.x = 100;//设置 checkBox 对象的属性 x 的值，用于控制 checkBox 对象的显示位置。\r\n *         checkBox.y = 100;//设置 checkBox 对象的属性 y 的值，用于控制 checkBox 对象的显示位置。\r\n *         checkBox.clickHandler = new Handler(this, this.onClick,[checkBox]);//设置 checkBox 的点击事件处理器。\r\n *         Laya.stage.addChild(checkBox);//将此 checkBox 对象添加到显示列表。\r\n *     }\r\n *     private onClick(checkBox:CheckBox):void\r\n *     {\r\n *         console.log(\"输出选中状态: checkBox.selected = \" + checkBox.selected);\r\n *     }\r\n * }\r\n */\r\nexport class CheckBox extends Button {\r\n\r\n    /**\r\n     * 创建一个新的 <code>CheckBox</code> 组件实例。\r\n     * @param skin 皮肤资源地址。\r\n     * @param label 文本标签的内容。\r\n     */\r\n    constructor(skin: string = null, label: string = \"\") {\r\n        super(skin, label);\r\n        this.toggle = true;\r\n        this._autoSize = false;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected preinitialize(): void {\r\n        super.preinitialize();\r\n        this.toggle = true;\r\n        this._autoSize = false;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected initialize(): void {\r\n        super.initialize();\r\n        this.createText();\r\n        this._text.align = \"left\";\r\n        this._text.valign = \"top\";\r\n        this._text.width = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (value instanceof Boolean)\r\n            this.selected = value as boolean;\r\n        else if (typeof (value) == 'string')\r\n            this.selected = value === \"true\";\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { AutoBitmap } from \"./AutoBitmap\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Styles } from \"./Styles\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { URL } from \"../net/URL\";\r\n\r\n/**\r\n * 图片加载完成后调度。\r\n * @eventType Event.LOADED\r\n */\r\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当前帧发生变化后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Clip</code> 类是位图切片动画。</p>\r\n * <p> <code>Clip</code> 可将一张图片，按横向分割数量 <code>clipX</code> 、竖向分割数量 <code>clipY</code> ，\r\n * 或横向分割每个切片的宽度 <code>clipWidth</code> 、竖向分割每个切片的高度 <code>clipHeight</code> ，\r\n * 从左向右，从上到下，分割组合为一个切片动画。</p>\r\n * Image和Clip组件是唯一支持异步加载的两个组件，比如clip.skin = \"abc/xxx.png\"，其他UI组件均不支持异步加载。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Clip</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Clip;\r\n *\t\tpublic class Clip_Example\r\n *\t\t{\r\n *\t\t\tprivate var clip:Clip;\r\n *\t\t\tpublic function Clip_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tonInit();\r\n *\t\t\t}\r\n *\t\t\tprivate function onInit():void\r\n *\t\t\t{\r\n *\t\t\t\tclip = new Clip(\"resource/ui/clip_num.png\", 10, 1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\r\n *\t\t\t\tclip.autoPlay = true;//设置 clip 动画自动播放。\r\n *\t\t\t\tclip.interval = 100;//设置 clip 动画的播放时间间隔。\r\n *\t\t\t\tclip.x = 100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\r\n *\t\t\t\tclip.y = 100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\r\n *\t\t\t\tclip.on(Event.CLICK, this, onClick);//给 clip 添加点击事件函数侦听。\r\n *\t\t\t\tLaya.stage.addChild(clip);//将此 clip 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onClick():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"clip 的点击事件侦听处理函数。clip.total=\"+ clip.total);\r\n *\t\t\t\tif (clip.isPlaying == true)\r\n *\t\t\t\t{\r\n *\t\t\t\t\tclip.stop();//停止动画。\r\n *\t\t\t\t}else {\r\n *\t\t\t\t\tclip.play();//播放动画。\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var clip;\r\n * Laya.loader.load(\"resource/ui/clip_num.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     clip = new laya.ui.Clip(\"resource/ui/clip_num.png\",10,1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\r\n *     clip.autoPlay = true;//设置 clip 动画自动播放。\r\n *     clip.interval = 100;//设置 clip 动画的播放时间间隔。\r\n *     clip.x =100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\r\n *     clip.y =100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\r\n *     clip.on(Event.CLICK,this,onClick);//给 clip 添加点击事件函数侦听。\r\n *     Laya.stage.addChild(clip);//将此 clip 对象添加到显示列表。\r\n * }\r\n * function onClick()\r\n * {\r\n *     console.log(\"clip 的点击事件侦听处理函数。\");\r\n *     if(clip.isPlaying == true)\r\n *     {\r\n *         clip.stop();\r\n *     }else {\r\n *         clip.play();\r\n *     }\r\n * }\r\n * @example\r\n * import Clip = laya.ui.Clip;\r\n * import Handler = laya.utils.Handler;\r\n * class Clip_Example {\r\n *     private clip: Clip;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         this.clip = new Clip(\"resource/ui/clip_num.png\", 10, 1);//创建一个 Clip 类的实例对象 clip ,传入它的皮肤skin和横向分割数量、竖向分割数量。\r\n *         this.clip.autoPlay = true;//设置 clip 动画自动播放。\r\n *         this.clip.interval = 100;//设置 clip 动画的播放时间间隔。\r\n *         this.clip.x = 100;//设置 clip 对象的属性 x 的值，用于控制 clip 对象的显示位置。\r\n *         this.clip.y = 100;//设置 clip 对象的属性 y 的值，用于控制 clip 对象的显示位置。\r\n *         this.clip.on(laya.events.Event.CLICK, this, this.onClick);//给 clip 添加点击事件函数侦听。\r\n *         Laya.stage.addChild(this.clip);//将此 clip 对象添加到显示列表。\r\n *     }\r\n *     private onClick(): void {\r\n *         console.log(\"clip 的点击事件侦听处理函数。clip.total=\" + this.clip.total);\r\n *         if (this.clip.isPlaying == true) {\r\n *             this.clip.stop();//停止动画。\r\n *         } else {\r\n *             this.clip.play();//播放动画。\r\n *         }\r\n *     }\r\n * }\r\n *\r\n */\r\nexport class Clip extends UIComponent {\r\n    /**@private */\r\n    protected _sources: Texture[];\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _clipX: number = 1;\r\n    /**@private */\r\n    protected _clipY: number = 1;\r\n    /**@private */\r\n    protected _clipWidth: number = 0;\r\n    /**@private */\r\n    protected _clipHeight: number = 0;\r\n    /**@private */\r\n    protected _autoPlay: boolean;\r\n    /**@private */\r\n    protected _interval: number = 50;\r\n    /**@private */\r\n    protected _complete: Handler;\r\n    /**@private */\r\n    protected _isPlaying: boolean;\r\n    /**@private */\r\n    protected _index: number = 0;\r\n    /**@private */\r\n    protected _clipChanged: boolean;\r\n    /**@private */\r\n    protected _group: string;\r\n    /**@private */\r\n    protected _toIndex: number = -1;\r\n\r\n    declare _graphics: AutoBitmap;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Clip</code> 示例。\r\n     * @param url 资源类库名或者地址\r\n     * @param clipX x方向分割个数\r\n     * @param clipY y方向分割个数\r\n     */\r\n    constructor(url: string = null, clipX: number = 1, clipY: number = 1) {\r\n        super();\r\n\r\n        this._sources = [];\r\n        this._clipX = clipX;\r\n        this._clipY = clipY;\r\n        this.skin = url;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override \r\n     */\r\n    protected createChildren(): void {\r\n        this.setGraphics(new AutoBitmap(), true);\r\n    }\r\n\r\n    /**@private\t @override*/\r\n    protected _onDisplay(e?: boolean): void {\r\n        if (this._isPlaying) {\r\n            if (this._getBit(NodeFlags.DISPLAYED_INSTAGE)) this.play();\r\n            else this.stop();\r\n        } else if (this._autoPlay) {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            if (!Loader.getRes(url))\r\n                return ILaya.loader.load(url, Loader.IMAGE).then(() => this._skinLoaded());\r\n            else {\r\n                this._skinLoaded();\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n        else {\r\n            this._graphics.source = null;\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._setClipChanged();\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**X轴（横向）切片数量。*/\r\n    get clipX(): number {\r\n        return this._clipX;\r\n    }\r\n\r\n    set clipX(value: number) {\r\n        this._clipX = value || 1;\r\n        this._setClipChanged()\r\n    }\r\n\r\n    /**Y轴(竖向)切片数量。*/\r\n    get clipY(): number {\r\n        return this._clipY;\r\n    }\r\n\r\n    set clipY(value: number) {\r\n        this._clipY = value || 1;\r\n        this._setClipChanged()\r\n    }\r\n\r\n    /**\r\n     * 横向分割时每个切片的宽度，与 <code>clipX</code> 同时设置时优先级高于 <code>clipX</code> 。\r\n     */\r\n    get clipWidth(): number {\r\n        return this._clipWidth;\r\n    }\r\n\r\n    set clipWidth(value: number) {\r\n        this._clipWidth = value;\r\n        this._setClipChanged()\r\n    }\r\n\r\n    /**\r\n     * 竖向分割时每个切片的高度，与 <code>clipY</code> 同时设置时优先级高于 <code>clipY</code> 。\r\n     */\r\n    get clipHeight(): number {\r\n        return this._clipHeight;\r\n    }\r\n\r\n    set clipHeight(value: number) {\r\n        this._clipHeight = value;\r\n        this._setClipChanged()\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变切片的资源、切片的大小。\r\n     */\r\n    protected changeClip(): void {\r\n        this._clipChanged = false;\r\n        if (!this._skin || this._destroyed) return;\r\n\r\n        let url = this._skinBaseUrl ? URL.formatURL(this._skin, this._skinBaseUrl) : this._skin;\r\n\r\n        let img: any = Loader.getRes(url);\r\n        if (img) {\r\n            this.loadComplete(this._skin, img);\r\n        } else {\r\n            ILaya.loader.load(url, Handler.create(this, this.loadComplete, [this._skin]), null, Loader.IMAGE);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 加载切片图片资源完成函数。\r\n     * @param url 资源地址。\r\n     * @param img 纹理。\r\n     */\r\n    protected loadComplete(url: string, img: Texture): void {\r\n        if (url !== this._skin)\r\n            return;\r\n\r\n        this._sources.length = 0;\r\n        if (img) {\r\n            var w: number = this._clipWidth || Math.ceil(img.sourceWidth / this._clipX);\r\n            var h: number = this._clipHeight || Math.ceil(img.sourceHeight / this._clipY);\r\n\r\n            for (let i = 0; i < this._clipY; i++) {\r\n                for (let j = 0; j < this._clipX; j++) {\r\n                    this._sources.push(img.getCachedClip(w * j, h * i, w, h));\r\n                }\r\n            }\r\n        }\r\n\r\n        this.index = this._index;\r\n        this.event(Event.LOADED);\r\n        this.onCompResize();\r\n    }\r\n\r\n    /**\r\n     * 源数据。\r\n     */\r\n    get sources(): Texture[] {\r\n        return this._sources;\r\n    }\r\n\r\n    set sources(value: Texture[]) {\r\n        this._sources = value;\r\n        this.index = this._index;\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * 资源分组。\r\n     */\r\n    get group(): string {\r\n        return this._group;\r\n    }\r\n\r\n    set group(value: string) {\r\n        if (value && this._skin) Loader.setGroup(this._skin, value);\r\n        this._group = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._graphics.width = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._graphics.height = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        this.runCallLater(this.changeClip);\r\n        return this._graphics.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        this.runCallLater(this.changeClip);\r\n        return this._graphics.height;\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\r\n        return null;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        if (value)\r\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\r\n        else\r\n            this._graphics.sizeGrid = null;\r\n    }\r\n\r\n    /**\r\n     * 当前帧索引。\r\n     */\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n        this._graphics && (this._graphics.source = this._sources[value]);\r\n        this.event(Event.CHANGE);\r\n    }\r\n\r\n    /**\r\n     * 切片动画的总帧数。\r\n     */\r\n    get total(): number {\r\n        this.runCallLater(this.changeClip);\r\n        return this._sources.length;\r\n    }\r\n\r\n    /**\r\n     * 表示是否自动播放切片动画，若自动播放值为true,否则值为false;\r\n     * <p>可控制切片动画的播放、停止。</p>\r\n     */\r\n    get autoPlay(): boolean {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    set autoPlay(value: boolean) {\r\n        if (this._autoPlay != value) {\r\n            this._autoPlay = value;\r\n            value ? this.play() : this.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示切片动画播放间隔时间(以毫秒为单位)。\r\n     */\r\n    get interval(): number {\r\n        return this._interval;\r\n    }\r\n\r\n    set interval(value: number) {\r\n        if (this._interval != value) {\r\n            this._interval = value;\r\n            if (this._isPlaying) this.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示切片动画的当前播放状态。\r\n     * 如果切片动画正在播放中，则为true，否则为flash。\r\n     */\r\n    get isPlaying(): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    set isPlaying(value: boolean) {\r\n        this._isPlaying = value;\r\n    }\r\n\r\n    /**\r\n     * 播放切片动画。\r\n     * @param\tfrom\t开始索引\r\n     * @param\tto\t\t结束索引，-1为不限制\r\n     */\r\n    play(from: number = 0, to: number = -1): void {\r\n        this._setClipChanged();\r\n        this._isPlaying = true;\r\n        this.index = from;\r\n        this._toIndex = to;\r\n        // this._index++;\r\n        //修复clip重复播放丢失帧的问题\r\n        ILaya.timer.loop(this.interval, this, this._loop);\r\n\r\n        this.on(Event.DISPLAY, this, this._onDisplay);\r\n        this.on(Event.UNDISPLAY, this, this._onDisplay);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _loop(): void {\r\n        if (this._visible) {\r\n            this._index++;\r\n            if (this._toIndex > -1 && this._index >= this._toIndex)\r\n                this.stop();\r\n            else if (this._index >= this._sources.length)\r\n                this._index = 0;\r\n            this.index = this._index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止切片动画。\r\n     */\r\n    stop(): void {\r\n        this._isPlaying = false;\r\n        ILaya.timer.clear(this, this._loop);\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any): void {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.index = parseInt(value as string);\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**@private */\r\n    protected _setClipChanged(): void {\r\n        if (!this._clipChanged) {\r\n            this._clipChanged = true;\r\n            this.callLater(this.changeClip);\r\n        }\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Box } from \"./Box\";\r\nimport { Button } from \"./Button\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Input } from \"../display/Input\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\n\r\n/**\r\n * 选择项改变后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>ColorPicker</code> 组件将显示包含多个颜色样本的列表，用户可以从中选择颜色。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>ColorPicker</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.ColorPicker;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class ColorPicker_Example\r\n *\t\t{\r\n *\t\t\tpublic function ColorPicker_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/color.png\", Handler.create(this,onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"资源加载完成！\");\r\n *\t\t\t\tvar colorPicket:ColorPicker = new ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\r\n *\t\t\t\tcolorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\r\n *\t\t\t\tcolorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\r\n *\t\t\t\tcolorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\r\n *\t\t\t\tcolorPicket.changeHandler = new Handler(this, onChangeColor,[colorPicket]);//设置 colorPicket 的颜色改变回调函数。\r\n *\t\t\t\tLaya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChangeColor(colorPicket:ColorPicker):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选择的颜色： \" + colorPicket.selectedColor);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load(\"resource/ui/color.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete()\r\n * {\r\n *     console.log(\"资源加载完成！\");\r\n *     var colorPicket = new laya.ui.ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\r\n *     colorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\r\n *     colorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\r\n *     colorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\r\n *     colorPicket.changeHandler = laya.utils.Handler.create(this, onChangeColor,[colorPicket],false);//设置 colorPicket 的颜色改变回调函数。\r\n *     Laya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\r\n * }\r\n * function onChangeColor(colorPicket)\r\n * {\r\n *     console.log(\"当前选择的颜色： \" + colorPicket.selectedColor);\r\n * }\r\n * @example\r\n * import ColorPicker = laya.ui.ColorPicker;\r\n * import Handler = laya.utils.Handler;\r\n * class ColorPicker_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/color.png\", Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         console.log(\"资源加载完成！\");\r\n *         var colorPicket: ColorPicker = new ColorPicker();//创建一个 ColorPicker 类的实例对象 colorPicket 。\r\n *         colorPicket.skin = \"resource/ui/color.png\";//设置 colorPicket 的皮肤。\r\n *         colorPicket.x = 100;//设置 colorPicket 对象的属性 x 的值，用于控制 colorPicket 对象的显示位置。\r\n *         colorPicket.y = 100;//设置 colorPicket 对象的属性 y 的值，用于控制 colorPicket 对象的显示位置。\r\n *         colorPicket.changeHandler = new Handler(this, this.onChangeColor, [colorPicket]);//设置 colorPicket 的颜色改变回调函数。\r\n *         Laya.stage.addChild(colorPicket);//将此 colorPicket 对象添加到显示列表。\r\n *     }\r\n *     private onChangeColor(colorPicket: ColorPicker): void {\r\n *         console.log(\"当前选择的颜色： \" + colorPicket.selectedColor);\r\n *     }\r\n * }\r\n */\r\nexport class ColorPicker extends UIComponent {\r\n\r\n    /**\r\n     * 当颜色发生改变时执行的函数处理器。\r\n     * 默认返回参数color：颜色值字符串。\r\n     */\r\n    changeHandler: Handler;\r\n\r\n    /**\r\n     * @private\r\n     * 指定每个正方形的颜色小格子的宽高（以像素为单位）。\r\n     */\r\n    protected _gridSize: number = 11;\r\n    /**\r\n     * @private\r\n     * 表示颜色样本列表面板的背景颜色值。\r\n     */\r\n    protected _bgColor: string = \"#ffffff\";\r\n    /**\r\n     * @private\r\n     * 表示颜色样本列表面板的边框颜色值。\r\n     */\r\n    protected _borderColor: string = \"#000000\";\r\n    /**\r\n     * @private\r\n     * 表示颜色样本列表面板选择或输入的颜色值。\r\n     */\r\n    protected _inputColor: string = \"#000000\";\r\n    /**\r\n     * @private\r\n     * 表示颜色输入框的背景颜色值。\r\n     */\r\n    protected _inputBgColor: string = \"#efefef\";\r\n    /**\r\n     * @private\r\n     * 表示颜色样本列表面板。\r\n     */\r\n    protected _colorPanel: Box;\r\n    /**\r\n     * @private\r\n     * 表示颜色网格。\r\n     */\r\n    protected _colorTiles: Sprite;\r\n    /**\r\n     * @private\r\n     * 表示颜色块显示对象。\r\n     */\r\n    protected _colorBlock: Sprite;\r\n    /**\r\n     * @private\r\n     * 表示颜色输入框控件 <code>Input</code> 。\r\n     */\r\n    protected _colorInput: Input;\r\n    /**\r\n     * @private\r\n     * 表示点击后显示颜色样本列表面板的按钮控件 <code>Button</code> 。\r\n     */\r\n    protected _colorButton: Button;\r\n    /**\r\n     * @private\r\n     * 表示颜色值列表。\r\n     */\r\n    protected _colors: any[] = [];\r\n    /**\r\n     * @private\r\n     * 表示选择的颜色值。\r\n     */\r\n    protected _selectedColor: string = \"#000000\";\r\n    /** @private */\r\n    protected _panelChanged: boolean;\r\n\r\n    constructor(createChildren = true) {\r\n        super(false);\r\n        if (createChildren) {\r\n            this.preinitialize();\r\n            this.createChildren();\r\n            this.initialize();\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeColorBox);\r\n        super.destroy(destroyChild);\r\n        this._colorPanel && this._colorPanel.destroy(destroyChild);\r\n        this._colorButton && this._colorButton.destroy(destroyChild);\r\n        this._colorPanel = null;\r\n        this._colorTiles = null;\r\n        this._colorBlock = null;\r\n        this._colorInput = null;\r\n        this._colorButton = null;\r\n        this._colors = null;\r\n        this.changeHandler = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this._colorButton = new Button()\r\n        this._colorButton.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._colorButton);\r\n        this._colorPanel = new Box();\r\n        this._colorPanel.hideFlags = HideFlags.HideAndDontSave;\r\n        this._colorPanel.size(230, 166);\r\n        this._colorPanel.addChild(this._colorTiles = new Sprite());\r\n        this._colorPanel.addChild(this._colorBlock = new Sprite());\r\n        this._colorPanel.addChild(this._colorInput = new Input());\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected initialize(): void {\r\n        this._colorButton.on(Event.CLICK, this, this.onColorButtonClick);\r\n\r\n        this._colorBlock.pos(5, 5);\r\n\r\n        this._colorInput.pos(60, 5);\r\n        this._colorInput.size(60, 20);\r\n        this._colorInput.on(Event.CHANGE, this, this.onColorInputChange);\r\n        this._colorInput.on(Event.KEY_DOWN, this, this.onColorFieldKeyDown);\r\n\r\n        this._colorTiles.pos(5, 30);\r\n        this._colorTiles.on(Event.MOUSE_MOVE, this, this.onColorTilesMouseMove);\r\n        this._colorTiles.on(Event.CLICK, this, this.onColorTilesClick);\r\n        this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize);\r\n\r\n        this._colorPanel.on(Event.MOUSE_DOWN, this, this.onPanelMouseDown);\r\n\r\n        this.bgColor = this._bgColor;\r\n    }\r\n\r\n    private onPanelMouseDown(e: Event): void {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * 改变颜色样本列表面板。\r\n     */\r\n    protected changePanel(): void {\r\n        this._panelChanged = false;\r\n        var g: Graphics = this._colorPanel.graphics;\r\n        g.clear(true);\r\n        //g.drawRect(0, 0, 230, 166, _bgColor);\r\n        g.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor);\r\n\r\n        this.drawBlock(this._selectedColor);\r\n\r\n        this._colorInput.borderColor = this._borderColor;\r\n        this._colorInput.bgColor = this._inputBgColor;\r\n        this._colorInput.color = this._inputColor;\r\n\r\n        g = this._colorTiles.graphics;\r\n        g.clear(true);\r\n\r\n        var mainColors: any[] = [0x000000, 0x333333, 0x666666, 0x999999, 0xCCCCCC, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0x00FFFF, 0xFF00FF];\r\n        for (var i: number = 0; i < 12; i++) {\r\n            for (var j: number = 0; j < 20; j++) {\r\n                var color: number;\r\n                if (j === 0) color = mainColors[i];\r\n                else if (j === 1) color = 0x000000;\r\n                else color = (((i * 3 + j / 6) % 3 << 0) + ((i / 6) << 0) * 3) * 0x33 << 16 | j % 6 * 0x33 << 8 | (i << 0) % 6 * 0x33;\r\n\r\n                var strColor: string = UIUtils.toColor(color);\r\n                this._colors.push(strColor);\r\n\r\n                var x: number = j * this._gridSize;\r\n                var y: number = i * this._gridSize;\r\n\r\n                g.drawRect(x, y, this._gridSize, this._gridSize, strColor, \"#000000\");\r\n                //g.drawRect(x + 1, y + 1, _gridSize - 1, _gridSize - 1, strColor);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 颜色样本列表面板的显示按钮的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    private onColorButtonClick(e: Event): void {\r\n        if (this._colorPanel.parent) this.close();\r\n        else this.open();\r\n    }\r\n\r\n    /**\r\n     * 打开颜色样本列表面板。\r\n     */\r\n    open(): void {\r\n        let stage = ILaya.stage;\r\n        var p: Point = this.localToGlobal(new Point());\r\n        var px: number = p.x + this._colorPanel.width <= stage.width ? p.x : stage.width - this._colorPanel.width;\r\n        var py: number = p.y + this._colorButton.height;\r\n        py = py + this._colorPanel.height <= stage.height ? py : p.y - this._colorPanel.height;\r\n        this._colorPanel.pos(px, py);\r\n        this._colorPanel.zOrder = 1001;\r\n        stage.addChild(this._colorPanel);\r\n        stage.on(Event.MOUSE_DOWN, this, this.removeColorBox);\r\n    }\r\n\r\n    /**\r\n     * 关闭颜色样本列表面板。\r\n     */\r\n    close(): void {\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeColorBox);\r\n        this._colorPanel.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * 舞台的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    private removeColorBox(e: Event = null): void {\r\n        this.close();\r\n        //var target:Sprite = e.target as Sprite;\r\n        //if (!_colorButton.contains(target) && !_colorPanel.contains(target)) {\r\n        //close();\r\n        //}\r\n    }\r\n\r\n    /**\r\n     * 小格子色块的 <code>Event.KEY_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    private onColorFieldKeyDown(e: Event): void {\r\n        if (e.keyCode == 13) {\r\n            if (this._colorInput.text) this.selectedColor = this._colorInput.text;\r\n            else this.selectedColor = null;\r\n            this.close();\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 颜色值输入框 <code>Event.CHANGE</code> 事件侦听处理函数。\r\n     */\r\n    private onColorInputChange(e: Event = null): void {\r\n        if (this._colorInput.text) this.drawBlock(this._colorInput.text);\r\n        else this.drawBlock(\"#FFFFFF\");\r\n    }\r\n\r\n    /**\r\n     * 小格子色块的 <code>Event.CLICK</code> 事件侦听处理函数。\r\n     */\r\n    private onColorTilesClick(e: Event): void {\r\n        this.selectedColor = this.getColorByMouse();\r\n        this.close();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 小格子色块的 <code>Event.MOUSE_MOVE</code> 事件侦听处理函数。\r\n     */\r\n    private onColorTilesMouseMove(e: Event): void {\r\n        this._colorInput.focus = false;\r\n        var color: string = this.getColorByMouse();\r\n        this._colorInput.text = color;\r\n        this.drawBlock(color);\r\n    }\r\n\r\n    /**\r\n     * 通过鼠标位置取对应的颜色块的颜色值。\r\n     */\r\n    protected getColorByMouse(): string {\r\n        var point: Point = this._colorTiles.getMousePoint();\r\n        var x: number = Math.floor(point.x / this._gridSize);\r\n        var y: number = Math.floor(point.y / this._gridSize);\r\n        return this._colors[y * 20 + x];\r\n    }\r\n\r\n    /**\r\n     * 绘制颜色块。\r\n     * @param color 需要绘制的颜色块的颜色值。\r\n     */\r\n    private drawBlock(color: string): void {\r\n        var g: Graphics = this._colorBlock.graphics;\r\n        g.clear(true);\r\n        var showColor: string = color ? color : \"#ffffff\";\r\n        g.drawRect(0, 0, 50, 20, showColor, this._borderColor);\r\n\r\n        color || g.drawLine(0, 0, 50, 20, \"#ff0000\");\r\n    }\r\n\r\n    /**\r\n     * 表示选择的颜色值。\r\n     */\r\n    get selectedColor(): string {\r\n        return this._selectedColor;\r\n    }\r\n\r\n    set selectedColor(value: string) {\r\n        if (this._selectedColor != value) {\r\n            this._selectedColor = this._colorInput.text = value;\r\n            this.drawBlock(value);\r\n            this.changeColor();\r\n            this.changeHandler && this.changeHandler.runWith(this._selectedColor);\r\n            this.event(Event.CHANGE, Event.EMPTY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Button#skin\r\n     */\r\n    get skin(): string {\r\n        return this._colorButton.skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        this._colorButton.once(Event.LOADED, this, this.changeColor);\r\n        this._colorButton.skin = value;\r\n        //changeColor();\r\n    }\r\n\r\n    /**\r\n     * 改变颜色。\r\n     */\r\n    private changeColor(): void {\r\n        var g: Graphics = this.graphics;\r\n        g.clear(true);\r\n        var showColor: string = this._selectedColor || \"#000000\";\r\n        g.drawRect(0, 0, this._colorButton.width, this._colorButton.height, showColor);\r\n    }\r\n\r\n    /**\r\n     * 表示颜色样本列表面板的背景颜色值。\r\n     */\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        this._setPanelChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示颜色样本列表面板的边框颜色值。\r\n     */\r\n    get borderColor(): string {\r\n        return this._borderColor;\r\n    }\r\n\r\n    set borderColor(value: string) {\r\n        this._borderColor = value;\r\n        this._setPanelChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示颜色样本列表面板选择或输入的颜色值。\r\n     */\r\n    get inputColor(): string {\r\n        return this._inputColor;\r\n    }\r\n\r\n    set inputColor(value: string) {\r\n        this._inputColor = value;\r\n        this._setPanelChanged();\r\n    }\r\n\r\n    /**\r\n     * 表示颜色输入框的背景颜色值。\r\n     */\r\n    get inputBgColor(): string {\r\n        return this._inputBgColor;\r\n    }\r\n\r\n    set inputBgColor(value: string) {\r\n        this._inputBgColor = value;\r\n        this._setPanelChanged();\r\n    }\r\n\r\n    /**@private */\r\n    protected _setPanelChanged(): void {\r\n        if (!this._panelChanged) {\r\n            this._panelChanged = true;\r\n            this.callLater(this.changePanel);\r\n        }\r\n    }\r\n}","import { Styles } from \"./Styles\";\r\nimport { Text } from \"../display/Text\"\r\nimport { Event } from \"../events/Event\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { UIUtils } from \"./UIUtils\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\nexport type LabelFitContent = \"no\" | \"yes\" | \"height\";\r\n\r\n/**\r\n * 文本内容发生改变后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Label</code> 类用于创建显示对象以显示文本。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Label</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Label;\r\n *\t\tpublic class Label_Example\r\n *\t\t{\r\n *\t\t\tpublic function Label_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tonInit();\r\n *\t\t\t}\r\n *\t\t\tprivate function onInit():void\r\n *\t\t\t{\r\n *\t\t\t\tvar label:Label = new Label();//创建一个 Label 类的实例对象 label 。\r\n *\t\t\t\tlabel.font = \"Arial\";//设置 label 的字体。\r\n *\t\t\t\tlabel.bold = true;//设置 label 显示为粗体。\r\n *\t\t\t\tlabel.leading = 4;//设置 label 的行间距。\r\n *\t\t\t\tlabel.wordWrap = true;//设置 label 自动换行。\r\n *\t\t\t\tlabel.padding = \"10,10,10,10\";//设置 label 的边距。\r\n *\t\t\t\tlabel.color = \"#ff00ff\";//设置 label 的颜色。\r\n *\t\t\t\tlabel.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\r\n *\t\t\t\tlabel.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\r\n *\t\t\t\tlabel.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\r\n *\t\t\t\tlabel.width = 300;//设置 label 的宽度。\r\n *\t\t\t\tlabel.height = 200;//设置 label 的高度。\r\n *\t\t\t\tLaya.stage.addChild(label);//将 label 添加到显示列表。\r\n *\t\t\t\tvar passwordLabel:Label = new Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\r\n *\t\t\t\tpasswordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\r\n *\t\t\t\tpasswordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\r\n *\t\t\t\tpasswordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\r\n *\t\t\t\tpasswordLabel.width = 300;//设置 passwordLabel 的宽度。\r\n *\t\t\t\tpasswordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\r\n *\t\t\t\tpasswordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\r\n *\t\t\t\tpasswordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\r\n *\t\t\t\tLaya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * onInit();\r\n * function onInit(){\r\n *     var label = new laya.ui.Label();//创建一个 Label 类的实例对象 label 。\r\n *     label.font = \"Arial\";//设置 label 的字体。\r\n *     label.bold = true;//设置 label 显示为粗体。\r\n *     label.leading = 4;//设置 label 的行间距。\r\n *     label.wordWrap = true;//设置 label 自动换行。\r\n *     label.padding = \"10,10,10,10\";//设置 label 的边距。\r\n *     label.color = \"#ff00ff\";//设置 label 的颜色。\r\n *     label.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\r\n *     label.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\r\n *     label.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\r\n *     label.width = 300;//设置 label 的宽度。\r\n *     label.height = 200;//设置 label 的高度。\r\n *     Laya.stage.addChild(label);//将 label 添加到显示列表。\r\n *     var passwordLabel = new laya.ui.Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\r\n *     passwordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\r\n *     passwordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\r\n *     passwordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\r\n *     passwordLabel.width = 300;//设置 passwordLabel 的宽度。\r\n *     passwordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\r\n *     passwordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\r\n *     passwordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\r\n *     Laya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\r\n * }\r\n * @example\r\n * import Label = laya.ui.Label;\r\n * class Label_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         var label: Label = new Label();//创建一个 Label 类的实例对象 label 。\r\n *         label.font = \"Arial\";//设置 label 的字体。\r\n *         label.bold = true;//设置 label 显示为粗体。\r\n *         label.leading = 4;//设置 label 的行间距。\r\n *         label.wordWrap = true;//设置 label 自动换行。\r\n *         label.padding = \"10,10,10,10\";//设置 label 的边距。\r\n *         label.color = \"#ff00ff\";//设置 label 的颜色。\r\n *         label.text = \"Hello everyone,我是一个可爱的文本！\";//设置 label 的文本内容。\r\n *         label.x = 100;//设置 label 对象的属性 x 的值，用于控制 label 对象的显示位置。\r\n *         label.y = 100;//设置 label 对象的属性 y 的值，用于控制 label 对象的显示位置。\r\n *         label.width = 300;//设置 label 的宽度。\r\n *         label.height = 200;//设置 label 的高度。\r\n *         Laya.stage.addChild(label);//将 label 添加到显示列表。\r\n *         var passwordLabel: Label = new Label(\"请原谅我，我不想被人看到我心里话。\");//创建一个 Label 类的实例对象 passwordLabel 。\r\n *         passwordLabel.asPassword = true;//设置 passwordLabel 的显示反式为密码显示。\r\n *         passwordLabel.x = 100;//设置 passwordLabel 对象的属性 x 的值，用于控制 passwordLabel 对象的显示位置。\r\n *         passwordLabel.y = 350;//设置 passwordLabel 对象的属性 y 的值，用于控制 passwordLabel 对象的显示位置。\r\n *         passwordLabel.width = 300;//设置 passwordLabel 的宽度。\r\n *         passwordLabel.color = \"#000000\";//设置 passwordLabel 的文本颜色。\r\n *         passwordLabel.bgColor = \"#ccffff\";//设置 passwordLabel 的背景颜色。\r\n *         passwordLabel.fontSize = 20;//设置 passwordLabel 的文本字体大小。\r\n *         Laya.stage.addChild(passwordLabel);//将 passwordLabel 添加到显示列表。\r\n *     }\r\n * }\r\n * @see laya.display.Text\r\n */\r\nexport class Label extends UIComponent {\r\n\r\n    /**\r\n     * @private\r\n     * 文本 <code>Text</code> 实例。\r\n     */\r\n    protected _tf: Text;\r\n    protected _fitContent: LabelFitContent;\r\n    /** @internal */\r\n    private _fitFlag: boolean;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Label</code> 实例。\r\n     * @param text 文本内容字符串。\r\n     */\r\n    constructor(text?: string) {\r\n        super();\r\n        this._fitContent = \"no\";\r\n        if (text != null)\r\n            this.text = text;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @inheritDoc \r\n    */\r\n    protected createChildren(): void {\r\n        this._tf = new Text();\r\n        this._tf.hideFlags = HideFlags.HideAndDontSave;\r\n        this._tf._parseEscapeChars = true;\r\n        this._tf._onPostLayout = () => this._onPostLayout();\r\n        this._tf.on(Event.CHANGE, () => {\r\n            this.event(Event.CHANGE);\r\n            if (!this._isWidthSet || !this._isHeightSet)\r\n                this.onCompResize();\r\n        });\r\n        this.addChild(this._tf);\r\n    }\r\n\r\n    protected _onPostLayout() {\r\n        if ((this._fitContent == \"yes\" || this._fitContent == \"height\") && (LayaEnv.isPlaying || this._tf.textWidth > 0 && this._tf.textHeight > 0)) {\r\n            this._fitFlag = true;\r\n            if (this._fitContent == \"height\")\r\n                this.height = this._tf.textHeight;\r\n            else\r\n                this.size(this._tf.textWidth, this._tf.textHeight);\r\n            this._fitFlag = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当前文本内容字符串。\r\n     * @see laya.display.Text.text\r\n     */\r\n    get text(): string {\r\n        return this._tf.text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this._tf.text = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#wordWrap\r\n     */\r\n    get wordWrap(): boolean {\r\n        return this._tf.wordWrap;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#wordWrap\r\n     */\r\n    set wordWrap(value: boolean) {\r\n        this._tf.wordWrap = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#color\r\n     */\r\n    get color(): string {\r\n        return this._tf.color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._tf.color = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#font\r\n     */\r\n    get font(): string {\r\n        return this._tf.font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._tf.font = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#align\r\n     */\r\n    get align(): string {\r\n        return this._tf.align;\r\n    }\r\n\r\n    set align(value: string) {\r\n        this._tf.align = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#valign\r\n     */\r\n    get valign(): string {\r\n        return this._tf.valign;\r\n    }\r\n\r\n    set valign(value: string) {\r\n        this._tf.valign = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#alignItems\r\n     */\r\n    get alignItems(): string {\r\n        return this._tf.alignItems;\r\n    }\r\n\r\n    set alignItems(value: string) {\r\n        this._tf.alignItems = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#bold\r\n     */\r\n    get bold(): boolean {\r\n        return this._tf.bold;\r\n    }\r\n\r\n    set bold(value: boolean) {\r\n        this._tf.bold = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#italic\r\n     */\r\n    get italic(): boolean {\r\n        return this._tf.italic;\r\n    }\r\n\r\n    set italic(value: boolean) {\r\n        this._tf.italic = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#leading\r\n     */\r\n    get leading(): number {\r\n        return this._tf.leading;\r\n    }\r\n\r\n    set leading(value: number) {\r\n        this._tf.leading = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#fontSize\r\n     */\r\n    get fontSize(): number {\r\n        return this._tf.fontSize;\r\n    }\r\n\r\n    set fontSize(value: number) {\r\n        this._tf.fontSize = value;\r\n    }\r\n\r\n    /**\r\n     * <p>边距信息</p>\r\n     * <p>\"上边距，右边距，下边距 , 左边距（边距以像素为单位）\"</p>\r\n     */\r\n    get padding(): string {\r\n        return this._tf.padding.join(\",\");\r\n    }\r\n\r\n    set padding(value: string) {\r\n        this._tf.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#bgColor\r\n     */\r\n    get bgColor(): string {\r\n        return this._tf.bgColor\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._tf.bgColor = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#borderColor\r\n     */\r\n    get borderColor(): string {\r\n        return this._tf.borderColor\r\n    }\r\n\r\n    set borderColor(value: string) {\r\n        this._tf.borderColor = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#stroke\r\n     */\r\n    get stroke(): number {\r\n        return this._tf.stroke;\r\n    }\r\n\r\n    set stroke(value: number) {\r\n        this._tf.stroke = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#strokeColor\r\n     */\r\n    get strokeColor(): string {\r\n        return this._tf.strokeColor;\r\n    }\r\n\r\n    set strokeColor(value: string) {\r\n        this._tf.strokeColor = value;\r\n    }\r\n\r\n    get html(): boolean {\r\n        return this._tf.html;\r\n    }\r\n\r\n    /** 设置是否富文本，支持html语法 */\r\n    set html(value: boolean) {\r\n        this._tf.html = value;\r\n    }\r\n\r\n    get ubb(): boolean {\r\n        return this._tf.ubb;\r\n    }\r\n\r\n    /** 设置是否使用UBB语法解析文本 */\r\n    set ubb(value: boolean) {\r\n        this._tf.ubb = value;\r\n    }\r\n\r\n    get maxWidth(): number {\r\n        return this._tf.maxWidth;\r\n    }\r\n\r\n    /** 设置当文本达到最大允许的宽度时，自定换行，设置为0则此限制不生效。*/\r\n    set maxWidth(value: number) {\r\n        this._tf.maxWidth = value;\r\n    }\r\n\r\n    get fitContent(): LabelFitContent {\r\n        return this._fitContent;\r\n    }\r\n\r\n    /** 设置文本框大小是否自动适应文本内容的大小。可取值为both或者height */\r\n    set fitContent(value: LabelFitContent) {\r\n        if (typeof (value) === \"boolean\")\r\n            value = value ? \"yes\" : \"no\";\r\n        if (this._fitContent != value) {\r\n            if ((value == \"yes\" || value == \"height\") && !SerializeUtil.isDeserializing && (LayaEnv.isPlaying || this._tf.textWidth > 0 && this._tf.textHeight > 0)) {\r\n                if (value == \"height\")\r\n                    this.height = this._tf.textHeight;\r\n                else\r\n                    this.size(this._tf.textWidth, this._tf.textHeight);\r\n            }\r\n            this._fitContent = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 文本控件实体 <code>Text</code> 实例。\r\n     */\r\n    get textField(): Text {\r\n        return this._tf;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        return this._tf.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        return this._tf.height;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet || this._tf.text) return super.get_width();\r\n        return 0;\r\n    }\r\n\r\n    set_width(value: number): void {\r\n        if (this._fitContent == \"yes\" && !this._fitFlag)\r\n            return;\r\n        super.set_width(value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _setWidth(value: number): void {\r\n        super._setWidth(value);\r\n        this._tf.width = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet || this._tf.text) return super.get_height();\r\n        return 0;\r\n    }\r\n\r\n    set_height(value: number): void {\r\n        if ((this._fitContent == \"yes\" || this._fitContent == \"height\") && !this._fitFlag)\r\n            return;\r\n        super.set_height(value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._tf.height = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.text = value + \"\";\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#overflow\r\n     */\r\n    get overflow(): string {\r\n        return this._tf.overflow;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#overflow\r\n     */\r\n    set overflow(value: string) {\r\n        this._tf.overflow = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#underline\r\n     */\r\n    get underline(): boolean {\r\n        return this._tf.underline;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#underline\r\n     */\r\n    set underline(value: boolean) {\r\n        this._tf.underline = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#underlineColor\r\n     */\r\n    get underlineColor(): string {\r\n        return this._tf.underlineColor;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#underlineColor\r\n     */\r\n    set underlineColor(value: string) {\r\n        this._tf.underlineColor = value;\r\n    }\r\n\r\n    /**\r\n     * @en Text decoration style of the text, specifically whether it is underlined.\r\n     * @zh 文本是否显示下划线。\r\n     * @copy laya.display.Text#underline\r\n     */\r\n    get strikethrough(): boolean {\r\n        return this._tf.strikethrough;\r\n    }\r\n\r\n    set strikethrough(value: boolean) {\r\n        this._tf.strikethrough = value;\r\n    }\r\n\r\n    /**\r\n     * @en Color of the text underline.\r\n     * @zh 文本下划线的颜色。\r\n     * @copy laya.display.Text#underlineColor\r\n     */\r\n    get strikethroughColor(): string {\r\n        return this._tf.strikethroughColor;\r\n    }\r\n\r\n    set strikethroughColor(value: string) {\r\n        this._tf.strikethroughColor = value;\r\n    } \r\n\r\n    /**\r\n     * @copy laya.display.Text#ignoreLang\r\n     */\r\n    get ignoreLang(): boolean {\r\n        return this._tf.ignoreLang;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Text#ignoreLang\r\n     */\r\n    set ignoreLang(value: boolean) {\r\n        this._tf.ignoreLang = value;\r\n    }\r\n\r\n    public get templateVars(): Record<string, any> {\r\n        return this._tf.templateVars;\r\n    }\r\n\r\n    public set templateVars(value: Record<string, any> | boolean) {\r\n        this._tf.templateVars = value;\r\n    }\r\n\r\n    public setVar(name: string, value: any): Label {\r\n        this._tf.setVar(name, value);\r\n\r\n        return this;\r\n    }\r\n}","import { Styles } from \"./Styles\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { AutoBitmap } from \"./AutoBitmap\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { UIUtils } from \"./UIUtils\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { URL } from \"../net/URL\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * 资源加载完成后调度。\r\n * @eventType Event.LOADED\r\n */\r\n/*[Event(name = \"loaded\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Image</code> 类是用于表示位图图像或绘制图形的显示对象。\r\n * Image和Clip组件是唯一支持异步加载的两个组件，比如img.skin = \"abc/xxx.png\"，其他UI组件均不支持异步加载。\r\n * \r\n * @example <caption>以下示例代码，创建了一个新的 <code>Image</code> 实例，设置了它的皮肤、位置信息，并添加到舞台上。</caption>\r\n *\tpackage\r\n *\t {\r\n *\t\timport laya.ui.Image;\r\n *\t\tpublic class Image_Example\r\n *\t\t{\r\n *\t\t\tpublic function Image_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tonInit();\r\n *\t\t\t}\r\n *\t\t\tprivate function onInit():void\r\n *\t \t\t{\r\n *\t\t\t\tvar bg:Image = new Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\r\n *\t\t\t\tbg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\r\n *\t\t\t\tbg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\r\n *\t\t\t\tbg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\r\n *\t\t\t\tbg.width = 150;//设置 bg 对象的宽度。\r\n *\t\t\t\tbg.height = 250;//设置 bg 对象的高度。\r\n *\t\t\t\tLaya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\r\n *\t\t\t\tvar image:Image = new Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\r\n *\t\t\t\timage.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\r\n *\t\t\t\timage.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\r\n *\t\t\t\tLaya.stage.addChild(image);//将此 image 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t }\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * onInit();\r\n * function onInit() {\r\n *     var bg = new laya.ui.Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\r\n *     bg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\r\n *     bg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\r\n *     bg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\r\n *     bg.width = 150;//设置 bg 对象的宽度。\r\n *     bg.height = 250;//设置 bg 对象的高度。\r\n *     Laya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\r\n *     var image = new laya.ui.Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\r\n *     image.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\r\n *     image.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\r\n *     Laya.stage.addChild(image);//将此 image 对象添加到显示列表。\r\n * }\r\n * @example\r\n * class Image_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         var bg: laya.ui.Image = new laya.ui.Image(\"resource/ui/bg.png\");//创建一个 Image 类的实例对象 bg ,并传入它的皮肤。\r\n *         bg.x = 100;//设置 bg 对象的属性 x 的值，用于控制 bg 对象的显示位置。\r\n *         bg.y = 100;//设置 bg 对象的属性 y 的值，用于控制 bg 对象的显示位置。\r\n *         bg.sizeGrid = \"40,10,5,10\";//设置 bg 对象的网格信息。\r\n *         bg.width = 150;//设置 bg 对象的宽度。\r\n *         bg.height = 250;//设置 bg 对象的高度。\r\n *         Laya.stage.addChild(bg);//将此 bg 对象添加到显示列表。\r\n *         var image: laya.ui.Image = new laya.ui.Image(\"resource/ui/image.png\");//创建一个 Image 类的实例对象 image ,并传入它的皮肤。\r\n *         image.x = 100;//设置 image 对象的属性 x 的值，用于控制 image 对象的显示位置。\r\n *         image.y = 100;//设置 image 对象的属性 y 的值，用于控制 image 对象的显示位置。\r\n *         Laya.stage.addChild(image);//将此 image 对象添加到显示列表。\r\n *     }\r\n * }\r\n * @see AutoBitmap\r\n */\r\nexport class Image extends UIComponent {\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _group: string;\r\n    protected _useSourceSize: boolean;\r\n\r\n    declare _graphics: AutoBitmap;\r\n\r\n    /**\r\n     * 创建一个 <code>Image</code> 实例。\r\n     * @param skin 皮肤资源地址。\r\n     */\r\n    constructor(skin: string | null = null) {\r\n        super();\r\n        this.skin = skin;\r\n    }\r\n\r\n    /**\r\n     * 销毁对象并释放加载的皮肤资源。\r\n     */\r\n    dispose(): void {\r\n        this.destroy(true);\r\n        ILaya.loader.clearRes(this._skin);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this.setGraphics(new AutoBitmap(), true);\r\n    }\r\n\r\n    /**\r\n     * <p>对象的皮肤地址，以字符串表示。</p>\r\n     * <p>如果资源未加载，则先加载资源，加载完成后应用于此对象。</p>\r\n     * <b>注意：</b>资源加载完成后，会自动缓存至资源库中。\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            let source = Loader.getRes(url);\r\n            if (source) {\r\n                this.source = source;\r\n                return Promise.resolve();\r\n            }\r\n            else {\r\n                let sk = this._skin;\r\n                return ILaya.loader.load(url, { type: Loader.IMAGE, group: this._group }).then(tex => {\r\n                    if (sk == this._skin)\r\n                        this.source = tex;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.source = null;\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    get source(): Texture {\r\n        return this._graphics.source;\r\n    }\r\n\r\n    set source(value: Texture) {\r\n        if (!this._graphics) return;\r\n        this._graphics.source = value;\r\n        this.event(Event.LOADED);\r\n        this.repaint();\r\n\r\n        if (this._useSourceSize && value) {\r\n            this.size(value.sourceWidth, value.sourceHeight);\r\n            this._useSourceSize = true; //重置，因为size会改变\r\n        }\r\n        else\r\n            this.onCompResize();\r\n    }\r\n\r\n    get color() {\r\n        return this._graphics.color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._graphics.color = value;\r\n    }\r\n\r\n    /**\r\n     * 资源分组。\r\n     */\r\n    get group(): string {\r\n        return this._group;\r\n    }\r\n\r\n    set group(value: string) {\r\n        if (value && this._skin) Loader.setGroup(this._skin, value);\r\n        this._group = value;\r\n    }\r\n\r\n    get useSourceSize(): boolean {\r\n        return this._useSourceSize;\r\n    }\r\n\r\n    set useSourceSize(value: boolean) {\r\n        if (this._useSourceSize != value) {\r\n            if (value && this._graphics.source)\r\n                this.size(this._graphics.source.sourceWidth, this._graphics.source.sourceHeight);\r\n            this._useSourceSize = value; //放最后，因为size会改变autoSize的值\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        return this._graphics.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        return this._graphics.height;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._graphics.width = value;\r\n        if (!SerializeUtil.isDeserializing)\r\n            this._useSourceSize = false;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._graphics.height = value;\r\n        if (!SerializeUtil.isDeserializing)\r\n            this._useSourceSize = false;\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"。</li></ul></p>\r\n     * @see laya.ui.AutoBitmap#sizeGrid\r\n     */\r\n    get sizeGrid(): string {\r\n        if (this._graphics.sizeGrid) return this._graphics.sizeGrid.join(\",\");\r\n        return null;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        if (value)\r\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\r\n        else\r\n            this._graphics.sizeGrid = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any): void {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'string')\r\n            this.skin = value as string;\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Label } from \"./Label\";\r\nimport { Image } from \"./Image\";\r\nimport { Button } from \"./Button\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * 移动滑块位置时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 移动滑块位置完成（用户鼠标抬起）后调度。\r\n * @eventType @eventType laya.events.EventD\r\n *\r\n */\r\n/*[Event(name = \"changed\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 使用 <code>Slider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\r\n * <p>滑块的当前值由滑块端点（对应于滑块的最小值和最大值）之间滑块的相对位置确定。</p>\r\n * <p>滑块允许最小值和最大值之间特定间隔内的值。滑块还可以使用数据提示显示其当前值。</p>\r\n *\r\n * @see laya.ui.HSlider\r\n * @see laya.ui.VSlider\r\n */\r\nexport class Slider extends UIComponent {\r\n\r\n    /** @private 获取对 <code>Slider</code> 组件所包含的 <code>Label</code> 组件的引用。*/\r\n    static label: Label = null;// new Label(); 静态的可能还没有初始化\r\n\r\n    /**\r\n     * 数据变化处理器。\r\n     * <p>默认回调参数为滑块位置属性 <code>value</code>属性值：Number 。</p>\r\n     */\r\n    changeHandler: Handler;\r\n\r\n    /**\r\n     * 一个布尔值，指示是否为垂直滚动。如果值为true，则为垂直方向，否则为水平方向。\r\n     * <p>默认值为：true。</p>\r\n     * @default true\r\n     */\r\n    isVertical: boolean = true;\r\n\r\n    /**\r\n     * 一个布尔值，指示是否显示标签。\r\n     * @default true\r\n     */\r\n    showLabel: boolean = true;\r\n\r\n    /**\r\n     * 一个布尔值，指示是否显示进度条。\r\n     */\r\n    protected _showProgress: boolean = false;\r\n\r\n    /**@private */\r\n    protected _allowClickBack: boolean;\r\n    /**@private */\r\n    protected _max: number = 100;\r\n    /**@private */\r\n    protected _min: number = 0;\r\n    /**@private */\r\n    protected _tick: number = 1;\r\n    /**@private */\r\n    protected _value: number = 0;\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _bg: Image;\r\n    /**@private */\r\n    protected _progress: Image;\r\n    /**@private */\r\n    protected _bar: Button;\r\n    /**@private */\r\n    protected _tx: number;\r\n    /**@private */\r\n    protected _ty: number;\r\n    /**@private */\r\n    protected _maxMove: number;\r\n    /**@private */\r\n    protected _globalSacle: Point;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Slider</code> 类示例。\r\n     * @param skin 皮肤。\r\n     */\r\n    constructor(skin: string = null) {\r\n        super();\r\n        if (!Slider.label) {\r\n            Slider.label = new Label();\r\n            Slider.label.hideFlags = HideFlags.HideAndDontSave;\r\n        }\r\n        this.skin = skin;\r\n    }\r\n\r\n    /**\r\n     *@inheritDoc\r\n     @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._bg && this._bg.destroy(destroyChild);\r\n        this._bar && this._bar.destroy(destroyChild);\r\n        this._progress && this._progress.destroy(destroyChild);\r\n        this._bg = null;\r\n        this._bar = null;\r\n        this._progress = null;\r\n        this.changeHandler = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected createChildren(): void {\r\n        this._bg = new Image();\r\n        this._bg.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._bg);\r\n\r\n        this._progress = new Image();\r\n        this._progress.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChildAt(this._progress, 1);\r\n\r\n        this._bar = new Button();\r\n        this._bar.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._bar);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected initialize(): void {\r\n        this._bar.on(Event.MOUSE_DOWN, this, this.onBarMouseDown);\r\n        this.allowClickBack = true;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滑块的的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    protected onBarMouseDown(e: Event): void {\r\n        let stage = ILaya.stage;\r\n        this._globalSacle || (this._globalSacle = new Point());\r\n        this._globalSacle.setTo(this.globalScaleX || 0.01, this.globalScaleY || 0.01);\r\n\r\n        this._maxMove = this.isVertical ? (this.height - this._bar.height) : (this.width - this._bar.width);\r\n        this._tx = stage.mouseX;\r\n        this._ty = stage.mouseY;\r\n        stage.on(Event.MOUSE_MOVE, this, this.mouseMove);\r\n        stage.once(Event.MOUSE_UP, this, this.mouseUp);\r\n        stage.once(Event.MOUSE_OUT, this, this.mouseUp);\r\n        //显示提示\r\n        this.showValueText();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 显示标签。\r\n     */\r\n    protected showValueText(): void {\r\n        if (this.showLabel) {\r\n            var label: Label = Slider.label;\r\n            this.addChild(label);\r\n            label.textField.text = this._value + \"\";\r\n            if (this.isVertical) {\r\n                label.x = this._bar._x + 20;\r\n                label.y = (this._bar.height - label.height) * 0.5 + this._bar._y;\r\n            } else {\r\n                label.y = this._bar._y - 20;\r\n                label.x = (this._bar.width - label.width) * 0.5 + this._bar._x;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 隐藏标签。\r\n     */\r\n    protected hideValueText(): void {\r\n        Slider.label && Slider.label.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private mouseUp(e: Event): void {\r\n        let stage = ILaya.stage;\r\n        stage.off(Event.MOUSE_MOVE, this, this.mouseMove);\r\n        stage.off(Event.MOUSE_UP, this, this.mouseUp);\r\n        stage.off(Event.MOUSE_OUT, this, this.mouseUp);\r\n        this.sendChangeEvent(Event.CHANGED);\r\n        this.hideValueText();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private mouseMove(e: Event): void {\r\n        let stage = ILaya.stage;\r\n        var oldValue: number = this._value;\r\n        if (this.isVertical) {\r\n            this._bar.y += (stage.mouseY - this._ty) / this._globalSacle.y;\r\n            if (this._bar._y > this._maxMove) this._bar.y = this._maxMove;\r\n            else if (this._bar._y < 0) this._bar.y = 0;\r\n            this._value = this._bar._y / this._maxMove * (this._max - this._min) + this._min;\r\n            this._progress.height = this._bar._y + 0.5 * this._bar.height;\r\n        } else {\r\n            this._bar.x += (stage.mouseX - this._tx) / this._globalSacle.x;\r\n            if (this._bar._x > this._maxMove) this._bar.x = this._maxMove;\r\n            else if (this._bar._x < 0) this._bar.x = 0;\r\n            this._value = this._bar._x / this._maxMove * (this._max - this._min) + this._min;\r\n            this._progress.width = this._bar._x + 0.5 * this._bar.width;\r\n        }\r\n\r\n        this._tx = stage.mouseX;\r\n        this._ty = stage.mouseY;\r\n\r\n        if (this._tick != 0) {\r\n            var pow: number = Math.pow(10, (this._tick + \"\").length - 1);\r\n            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * pow) / pow;\r\n        }\r\n\r\n        if (this._value != oldValue) {\r\n            this.sendChangeEvent();\r\n        }\r\n        this.showValueText();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected sendChangeEvent(type: string = Event.CHANGE): void {\r\n        this.event(type);\r\n        this.changeHandler && this.changeHandler.runWith(this._value);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    get showProgress(): boolean {\r\n        return this._showProgress;\r\n    }\r\n\r\n    set showProgress(value: boolean) {\r\n        this._showProgress = value;\r\n        if (value) {\r\n            if (this._skin && !SerializeUtil.isDeserializing)\r\n                this._setSkin(this._skin);\r\n        }\r\n        else\r\n            this._progress.skin = null;\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n\r\n        if (url) {\r\n            return AssetDb.inst.resolveURL(url).then(url => {\r\n                if (this._destroyed)\r\n                    return null;\r\n\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n                let tasks = [\r\n                    this._bg._setSkin(url),\r\n                    this._bar._setSkin(Utils.replaceFileExtension(url, \"$bar.png\", true))\r\n                ];\r\n                if (this._showProgress)\r\n                    tasks.push(this._progress._setSkin(Utils.replaceFileExtension(url, \"$progress.png\", true)));\r\n                else\r\n                    this._progress.skin = null;\r\n\r\n                return Promise.all(tasks).then(() => this._skinLoaded());\r\n            });\r\n        }\r\n        else {\r\n            this._bg.skin = null;\r\n            this._bar.skin = null;\r\n            this._progress.skin = null;\r\n            this._skinLoaded();\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this.setBarPoint();\r\n        this.callLater(this.changeValue);\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置滑块的位置信息。\r\n     */\r\n    protected setBarPoint(): void {\r\n        if (this.isVertical) this._bar.x = Math.round((this._bg.width - this._bar.width) * 0.5);\r\n        else this._bar.y = Math.round((this._bg.height - this._bar.height) * 0.5);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    protected measureWidth(): number {\r\n        return Math.max(this._bg.width, this._bar.width);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureHeight(): number {\r\n        return Math.max(this._bg.height, this._bar.height);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        super._sizeChanged();\r\n        if (this.isVertical) this._bg.height = this.height;\r\n        else this._bg.width = this.width;\r\n        this.setBarPoint();\r\n        this.changeValue();\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的背景图（ <code>Image</code> ）和滑块按钮（ <code>Button</code> ）实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this._bg.sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        this._bg.sizeGrid = value;\r\n        this._bar.sizeGrid = value;\r\n        this._progress.sizeGrid = this._bar.sizeGrid;\r\n    }\r\n\r\n    /**\r\n     * 设置滑动条的信息。\r\n     * @param min 滑块的最小值。\r\n     * @param max 滑块的最小值。\r\n     * @param value 滑块的当前值。\r\n     */\r\n    setSlider(min: number, max: number, value?: number): void {\r\n        let scaleValue: number;\r\n        if (null == value) {\r\n            if (min >= max) {\r\n                value = this.value;\r\n            } else {\r\n                if (this._max == this._min) {\r\n                    scaleValue = 0;\r\n                } else {\r\n                    scaleValue = this._value / (this._max - this._min);\r\n                }\r\n            }\r\n        }\r\n        this._value = -1;\r\n        this._min = min;\r\n        this._max = max > min ? max : min;\r\n        if (null == scaleValue) {\r\n            this.value = value < min ? min : value > max ? max : value;\r\n        } else {\r\n            this.value = (this._max - this._min) * scaleValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 滑动的刻度值，滑动数值为tick的整数倍。默认值为1。\r\n     */\r\n    get tick(): number {\r\n        return this._tick;\r\n    }\r\n\r\n    set tick(value: number) {\r\n        if (this._tick != value) {\r\n            this._tick = value;\r\n            this.callLater(this.changeValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变滑块的位置值。\r\n     */\r\n    changeValue(): void {\r\n        if (this.tick != 0) {\r\n            var pow: number = Math.pow(10, (this._tick + \"\").length - 1);\r\n            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * pow) / pow;\r\n        }\r\n\r\n        if (this._max >= this._min) {\r\n            this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value;\r\n        } else {\r\n            //当设置的最小值大于最大值的时候，滑动条会反向处理，滑动条限制也应反向处理。\r\n            this._value = this._value > this._min ? this._min : this._value < this._max ? this._max : this._value;\r\n        }\r\n\r\n        var num: number = this._max - this._min;\r\n        if (num === 0) num = 1;\r\n        if (this.isVertical) {\r\n            this._bar.y = (this._value - this._min) / num * (this.height - this._bar.height);\r\n            this._progress.height = this._bar._y + 0.5 * this._bar.height;\r\n        }\r\n        else {\r\n            this._bar.x = (this._value - this._min) / num * (this.width - this._bar.width);\r\n            this._progress.width = this._bar._x + 0.5 * this._bar.width;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示最高位置的数字。 默认值为100。\r\n     */\r\n    get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: number) {\r\n        if (this._max != value) {\r\n            this._max = value;\r\n            this.callLater(this.changeValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示最低位置的数字。 默认值为0。\r\n     */\r\n    get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: number) {\r\n        if (this._min != value) {\r\n            this._min = value;\r\n            this.callLater(this.changeValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示当前滑块位置的数字。\r\n     */\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n\r\n    set value(num: number) {\r\n        if (this._value != num) {\r\n            var oldValue: number = this._value;\r\n            this._value = num;\r\n            this.changeValue();\r\n            if (this._value != oldValue) {\r\n                this.sendChangeEvent();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 一个布尔值，指定是否允许通过点击滑动条改变 <code>Slider</code> 的 <code>value</code> 属性值。\r\n     */\r\n    get allowClickBack(): boolean {\r\n        return this._allowClickBack;\r\n    }\r\n\r\n    set allowClickBack(value: boolean) {\r\n        if (this._allowClickBack != value) {\r\n            this._allowClickBack = value;\r\n            if (value) this._bg.on(Event.MOUSE_DOWN, this, this.onBgMouseDown);\r\n            else this._bg.off(Event.MOUSE_DOWN, this, this.onBgMouseDown);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滑动条的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    protected onBgMouseDown(e: Event): void {\r\n        var point: Point = this._bg.getMousePoint();\r\n        if (this.isVertical) this.value = point.y / (this.height - this._bar.height) * (this._max - this._min) + this._min;\r\n        else this.value = point.x / (this.width - this._bar.width) * (this._max - this._min) + this._min;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.value = Number(value);\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**\r\n     * 表示滑块按钮的引用。\r\n     */\r\n    get bar(): Button {\r\n        return this._bar;\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Button } from \"./Button\";\r\nimport { Slider } from \"./Slider\";\r\nimport { UIConfig } from \"./../../UIConfig\";\r\nimport { Styles } from \"./Styles\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Ease } from \"../utils/Ease\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Tween } from \"../utils/Tween\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\n\r\n/**\r\n * 滚动条滑块位置发生变化后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 开始滑动。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"start\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 结束滑动。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"end\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>ScrollBar</code> 组件是一个滚动条组件。\r\n * <p>当数据太多以至于显示区域无法容纳时，最终用户可以使用 <code>ScrollBar</code> 组件控制所显示的数据部分。</p>\r\n * <p> 滚动条由四部分组成：两个箭头按钮、一个轨道和一个滑块。 </p>\t *\r\n *\r\n * @see laya.ui.VScrollBar\r\n * @see laya.ui.HScrollBar\r\n */\r\nexport class ScrollBar extends UIComponent {\r\n    /** 设置全局的滚动速度变化曲线函数 */\r\n    public static easeFunction = Ease.sineOut;\r\n\r\n    /**滚动衰减系数*/\r\n    rollRatio: number = 0.97;\r\n    /**滚动变化时回调，回传value参数。*/\r\n    changeHandler: Handler;\r\n    /**是否缩放滑动条，默认值为true。 */\r\n    scaleBar: boolean = true;\r\n    /**一个布尔值，指定是否自动隐藏滚动条(无需滚动时)，默认值为false。*/\r\n    autoHide: boolean = false;\r\n    /**橡皮筋效果极限距离，0为没有橡皮筋效果。*/\r\n    elasticDistance: number = 0;\r\n    /**橡皮筋回弹时间，单位为毫秒。*/\r\n    elasticBackTime: number = 500;\r\n    /**上按钮 */\r\n    upButton: Button;\r\n    /**下按钮 */\r\n    downButton: Button;\r\n    /**滑条 */\r\n    slider: Slider;\r\n    /**顶部移动限制（达到限制后，会抛出dragTopLimit事件，配合stopMoveLimit()，可让开发者做一些动态数据更新的操作）*/\r\n    topMoveLimit: number = 0;\r\n    /**底部移动限制（达到限制后，会抛出dragTopLimit事件，配合stopMoveLimit()，可让开发者做一些动态数据更新的操作）*/\r\n    bottomMoveLimit: number = 0;\r\n    /** 调用滚动停止接口stopMoveLimit时，是否禁止内容的拖拽 */\r\n    disableDrag: boolean = false;\r\n\r\n    /**@private */\r\n    protected _showButtons: boolean;\r\n    /**@private */\r\n    protected _scrollSize: number = 1;\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _thumbPercent: number = 1;\r\n    /**@private */\r\n    protected _target: Sprite;\r\n    /**@private */\r\n    protected _lastPoint: Point;\r\n    /**@private */\r\n    protected _lastOffset: number = 0;\r\n    /**@private */\r\n    protected _checkElastic: boolean = false;\r\n    /**@private */\r\n    protected _isElastic: boolean = false;\r\n    /**@private */\r\n    protected _value: number;\r\n    /**@private */\r\n    protected _hide: boolean = false;\r\n    /**@private */\r\n    protected _clickOnly: boolean = true;\r\n    /**@private */\r\n    protected _offsets: any[];\r\n    /**@private */\r\n    protected _touchScrollEnable: boolean;\r\n    /**@private */\r\n    protected _mouseWheelEnable: boolean;\r\n\r\n    /**\r\n     * 创建一个新的 <code>ScrollBar</code> 实例。\r\n     * @param skin 皮肤资源地址。\r\n     */\r\n    constructor(skin: string = null) {\r\n        super();\r\n\r\n        this._showButtons = UIConfig.showButtons;\r\n        this._touchScrollEnable = UIConfig.touchScrollEnable;\r\n        this._mouseWheelEnable = UIConfig.mouseWheelEnable;\r\n\r\n        this.skin = skin;\r\n        this.max = 1;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this.stopScroll();\r\n        this.target = null;\r\n        super.destroy(destroyChild);\r\n        this.upButton && this.upButton.destroy(destroyChild);\r\n        this.downButton && this.downButton.destroy(destroyChild);\r\n        this.slider && this.slider.destroy(destroyChild);\r\n        this.upButton = this.downButton = null;\r\n        this.slider = null;\r\n        this.changeHandler = null;\r\n        this._offsets = null;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this.slider = new Slider();\r\n        this.slider.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this.slider);\r\n\r\n        this.upButton = new Button();\r\n        this.upButton.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this.upButton);\r\n\r\n        this.downButton = new Button();\r\n        this.downButton.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this.downButton);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected initialize(): void {\r\n        this.slider.showLabel = false;\r\n        this.slider.tick = 0;\r\n        this.slider.on(Event.CHANGE, this, this.onSliderChange);\r\n        this.slider.setSlider(0, 0, 0);\r\n\r\n        this.upButton.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\r\n        this.downButton.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滑块位置发生改变的处理函数。\r\n     */\r\n    protected onSliderChange(): void {\r\n        if (this._value != this.slider.value) this.value = this.slider.value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 向上和向下按钮的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    protected onButtonMouseDown(e: Event): void {\r\n        var isUp: boolean = e.currentTarget === this.upButton;\r\n        this.slide(isUp);\r\n        ILaya.timer.once(Styles.scrollBarDelayTime, this, this.startLoop, [isUp]);\r\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n    }\r\n\r\n    /**@private */\r\n    protected startLoop(isUp: boolean): void {\r\n        ILaya.timer.frameLoop(1, this, this.slide, [isUp]);\r\n    }\r\n\r\n    /**@private */\r\n    protected slide(isUp: boolean): void {\r\n        if (isUp) this.value -= this._scrollSize;\r\n        else this.value += this._scrollSize;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 舞台的 <code>Event.MOUSE_DOWN</code> 事件侦听处理函数。\r\n     */\r\n    protected onStageMouseUp(e: Event): void {\r\n        ILaya.timer.clear(this, this.startLoop);\r\n        ILaya.timer.clear(this, this.slide);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n\r\n        if (url) {\r\n            return AssetDb.inst.resolveURL(url).then(url => {\r\n                if (this._destroyed)\r\n                    return null;\r\n\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n                return Promise.all([\r\n                    this.slider._setSkin(url),\r\n                    this.upButton._setSkin(Utils.replaceFileExtension(url, \"$up.png\", true)),\r\n                    this.downButton._setSkin(Utils.replaceFileExtension(url, \"$down.png\", true))\r\n                ]).then(() => this._skinLoaded());\r\n            });\r\n        }\r\n        else {\r\n            this.slider.skin = null;\r\n            this.upButton.skin = null;\r\n            this.downButton.skin = null;\r\n            this._skinLoaded();\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this.callLater(this.changeScrollBar);\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 更改对象的皮肤及位置。\r\n     */\r\n    protected changeScrollBar(): void {\r\n        this.upButton.visible = this._showButtons;\r\n        this.downButton.visible = this._showButtons;\r\n        if (this.slider.isVertical)\r\n            this.slider.y = this._showButtons ? this.upButton.height : 0;\r\n        else\r\n            this.slider.x = this._showButtons ? this.upButton.width : 0;\r\n        this.resetPositions();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        super._sizeChanged();\r\n        this.repaint();\r\n        this.resetPositions();\r\n        this.event(Event.CHANGE);\r\n        this.changeHandler && this.changeHandler.runWith(this.value);\r\n    }\r\n\r\n    /**@private */\r\n    private resetPositions(): void {\r\n        if (this.slider.isVertical) this.slider.height = this.height - (this._showButtons ? (this.upButton.height + this.downButton.height) : 0);\r\n        else this.slider.width = this.width - (this._showButtons ? (this.upButton.width + this.downButton.width) : 0);\r\n        this.resetButtonPosition();\r\n\r\n    }\r\n\r\n    /**@private */\r\n    protected resetButtonPosition(): void {\r\n        if (this.slider.isVertical) this.downButton.y = this.slider._y + this.slider.height;\r\n        else this.downButton.x = this.slider._x + this.slider.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureWidth(): number {\r\n        if (this.slider.isVertical) return this.slider.width;\r\n        return 100;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureHeight(): number {\r\n        if (this.slider.isVertical) return 100;\r\n        return this.slider.height;\r\n    }\r\n\r\n    /**\r\n     * 设置滚动条信息。\r\n     * @param min 滚动条最小位置值。\r\n     * @param max 滚动条最大位置值。\r\n     * @param value 滚动条当前位置值。\r\n     */\r\n    setScroll(min: number, max: number, value?: number): void {\r\n        this.runCallLater(this._sizeChanged);\r\n        this.slider.setSlider(min, max, value);\r\n        //_upButton.disabled = max <= 0;\r\n        //_downButton.disabled = max <= 0;\r\n        this.slider.bar.visible = max > 0;\r\n        if (!this._hide && this.autoHide) this.visible = false;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示最高滚动位置的数字。\r\n     */\r\n    get max(): number {\r\n        return this.slider.max;\r\n    }\r\n\r\n    set max(value: number) {\r\n        this.slider.max = value;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示最低滚动位置的数字。\r\n     */\r\n    get min(): number {\r\n        return this.slider.min;\r\n    }\r\n\r\n    set min(value: number) {\r\n        this.slider.min = value;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置表示当前滚动位置的数字。\r\n     */\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n\r\n    set value(v: number) {\r\n        if (v !== this._value) {\r\n            this._value = v;\r\n            if (!this._isElastic) {\r\n                if (this.slider[\"_value\"] != v) {\r\n                    this.slider[\"_value\"] = v;\r\n                    this.slider.changeValue();\r\n                }\r\n                this._value = this.slider[\"_value\"];\r\n            }\r\n            this.event(Event.CHANGE);\r\n            this.changeHandler && this.changeHandler.runWith(this._value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 一个布尔值，指示滚动条是否为垂直滚动。如果值为true，则为垂直滚动，否则为水平滚动。\r\n     * <p>默认值为：true。</p>\r\n     */\r\n    get isVertical(): boolean {\r\n        return this.slider.isVertical;\r\n    }\r\n\r\n    set isVertical(value: boolean) {\r\n        this.slider.isVertical = value;\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的 <code>Slider</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this.slider.sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        this.slider.sizeGrid = value;\r\n    }\r\n\r\n    /**获取或设置一个值，该值表示按下滚动条轨道时页面滚动的增量。 */\r\n    get scrollSize(): number {\r\n        return this._scrollSize;\r\n    }\r\n\r\n    set scrollSize(value: number) {\r\n        this._scrollSize = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.value = Number(value);\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**获取或设置一个值，该值表示滑条长度比例，值为：（0-1）。 */\r\n    get thumbPercent(): number {\r\n        return this._thumbPercent;\r\n    }\r\n\r\n    set thumbPercent(value: number) {\r\n        this.runCallLater(this.changeScrollBar);\r\n        this.runCallLater(this._sizeChanged);\r\n        value = value >= 1 ? 0.99 : value;\r\n        this._thumbPercent = value;\r\n        if (this.scaleBar) {\r\n            if (this.slider.isVertical) this.slider.bar.height = Math.max(this.slider.height * value, Styles.scrollBarMinNum);\r\n            else this.slider.bar.width = Math.max(this.slider.width * value, Styles.scrollBarMinNum);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置滚动对象。\r\n     * @see laya.ui.TouchScroll#target\r\n     */\r\n    get target(): Sprite {\r\n        return this._target;\r\n    }\r\n\r\n    set target(value: Sprite) {\r\n        if (this._target) {\r\n            this._target.off(Event.MOUSE_WHEEL, this, this.onTargetMouseWheel);\r\n            this._target.off(Event.MOUSE_DOWN, this, this.onTargetMouseDown);\r\n        }\r\n        this._target = value;\r\n        if (value) {\r\n            this._mouseWheelEnable && this._target.on(Event.MOUSE_WHEEL, this, this.onTargetMouseWheel);\r\n            this._touchScrollEnable && this._target.on(Event.MOUSE_DOWN, this, this.onTargetMouseDown);\r\n        }\r\n    }\r\n\r\n    /**是否隐藏滚动条，不显示滚动条，但是可以正常滚动，默认为false。*/\r\n    get hide(): boolean {\r\n        return this._hide;\r\n    }\r\n\r\n    set hide(value: boolean) {\r\n        this._hide = value;\r\n        this.visible = !value;\r\n    }\r\n\r\n    /**一个布尔值，指定是否显示向上、向下按钮，默认值为true。*/\r\n    get showButtons(): boolean {\r\n        return this._showButtons;\r\n    }\r\n\r\n    set showButtons(value: boolean) {\r\n        this._showButtons = value;\r\n        this.callLater(this.changeScrollBar);\r\n    }\r\n\r\n    /**一个布尔值，指定是否开启触摸，默认值为true。*/\r\n    get touchScrollEnable(): boolean {\r\n        return this._touchScrollEnable;\r\n    }\r\n\r\n    set touchScrollEnable(value: boolean) {\r\n        this._touchScrollEnable = value;\r\n        this.target = this._target;\r\n    }\r\n\r\n    /** 一个布尔值，指定是否滑轮滚动，默认值为true。*/\r\n    get mouseWheelEnable(): boolean {\r\n        return this._mouseWheelEnable;\r\n    }\r\n\r\n    set mouseWheelEnable(value: boolean) {\r\n        this._mouseWheelEnable = value;\r\n        this.target = this._target;\r\n    }\r\n\r\n    /**@private */\r\n    protected onTargetMouseWheel(e: Event): void {\r\n        this.value += e.delta * this._scrollSize;\r\n        this.target = this._target;\r\n    }\r\n\r\n    isLockedFun: Function;\r\n\r\n    /**@private */\r\n    protected onTargetMouseDown(e: Event): void {\r\n        if ((this.isLockedFun) && !this.isLockedFun(e)) return;\r\n        this.event(Event.END);\r\n        this._clickOnly = true;\r\n        this._lastOffset = 0;\r\n        this._checkElastic = false;\r\n        this._lastPoint || (this._lastPoint = new Point());\r\n        this._lastPoint.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY);\r\n        ILaya.timer.clear(this, this.tweenMove);\r\n        Tween.clearTween(this);\r\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp2);\r\n        ILaya.stage.once(Event.MOUSE_OUT, this, this.onStageMouseUp2);\r\n        ILaya.timer.frameLoop(1, this, this.loop);\r\n    }\r\n\r\n    startDragForce(): void {\r\n        this._clickOnly = true;\r\n        this._lastOffset = 0;\r\n        this._checkElastic = false;\r\n        this._lastPoint || (this._lastPoint = new Point());\r\n        this._lastPoint.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY);\r\n        ILaya.timer.clear(this, this.tweenMove);\r\n        Tween.clearTween(this);\r\n        ILaya.stage.once(Event.MOUSE_UP, this, this.onStageMouseUp2);\r\n        ILaya.stage.once(Event.MOUSE_OUT, this, this.onStageMouseUp2);\r\n        ILaya.timer.frameLoop(1, this, this.loop);\r\n    }\r\n\r\n    private cancelDragOp(): void {\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp2);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp2);\r\n        ILaya.timer.clear(this, this.tweenMove);\r\n        ILaya.timer.clear(this, this.loop);\r\n        this._target.mouseEnabled = true;\r\n    }\r\n\r\n\r\n    triggerDownDragLimit: Function;\r\n    triggerUpDragLimit: Function;\r\n    /** 暂停滚动的重载方法-add:xiaosong */\r\n    stopMoveLimit: Function;\r\n    private checkTriggers(isTweenMove: boolean = false): boolean {\r\n        if (this.value >= 0 && this.value - this._lastOffset <= 0) {\r\n            if ((this.triggerDownDragLimit) && this.triggerDownDragLimit(isTweenMove)) {\r\n                this.cancelDragOp();\r\n                this.value = 0;\r\n                return true;\r\n            }\r\n        }\r\n        if (this.value <= this.max && (this.value - this._lastOffset >= this.max)) {\r\n            if ((this.triggerUpDragLimit) && this.triggerUpDragLimit(isTweenMove)) {\r\n                this.cancelDragOp();\r\n                this.value = this.max;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    get lastOffset(): number {\r\n        return this._lastOffset;\r\n    }\r\n\r\n    startTweenMoveForce(lastOffset: number): void {\r\n        this._lastOffset = lastOffset;\r\n        ILaya.timer.frameLoop(1, this, this.tweenMove, [200]);\r\n    }\r\n    /**@private */\r\n    protected loop(): void {\r\n        if (this.disableDrag) return;\r\n        var mouseY: number = ILaya.stage.mouseY;\r\n        var mouseX: number = ILaya.stage.mouseX;\r\n        this._lastOffset = this.isVertical ? (mouseY - this._lastPoint.y) : (mouseX - this._lastPoint.x);\r\n\r\n        if (this._clickOnly) {\r\n            if (Math.abs(this._lastOffset * (this.isVertical ? ILaya.stage._canvasTransform.getScaleY() : ILaya.stage._canvasTransform.getScaleX())) > 1) {\r\n                this._clickOnly = false;\r\n                if (this.checkTriggers()) return;\r\n                this._offsets || (this._offsets = []);\r\n                this._offsets.length = 0;\r\n                this._target.mouseEnabled = false;\r\n                if (!this.hide && this.autoHide) {\r\n                    this.alpha = 1;\r\n                    this.visible = true;\r\n                }\r\n                this.event(Event.START);\r\n            } else return;\r\n        } else {\r\n            if (this.checkTriggers()) return;\r\n        }\r\n        this._offsets.push(this._lastOffset);\r\n\r\n        this._lastPoint.x = mouseX;\r\n        this._lastPoint.y = mouseY;\r\n\r\n        if (this._lastOffset === 0) return;\r\n\r\n        if (!this._checkElastic) {\r\n            if (this.elasticDistance > 0) {\r\n                if (!this._checkElastic && this._lastOffset != 0) {\r\n                    if ((this._lastOffset > 0 && this._value <= this.min) || (this._lastOffset < 0 && this._value >= this.max)) {\r\n                        this._isElastic = true;\r\n                        this._checkElastic = true;\r\n                    } else {\r\n                        this._isElastic = false;\r\n                    }\r\n                }\r\n            } else {\r\n                this._checkElastic = true;\r\n            }\r\n        }\r\n\r\n        if (this._isElastic) {\r\n            if (this._value <= this.min) {\r\n                if (this._lastOffset > 0) {\r\n                    this.value -= this._lastOffset * Math.max(0, (1 - ((this.min - this._value) / this.elasticDistance)));\r\n                } else {\r\n                    this.value -= this._lastOffset * 0.5;\r\n                    if (this._value >= this.min)\r\n                        this._checkElastic = false;\r\n                }\r\n            } else if (this._value >= this.max) {\r\n                if (this._lastOffset < 0) {\r\n                    this.value -= this._lastOffset * Math.max(0, (1 - ((this._value - this.max) / this.elasticDistance)));\r\n                } else {\r\n                    this.value -= this._lastOffset * 0.5;\r\n                    if (this._value <= this.max)\r\n                        this._checkElastic = false;\r\n                }\r\n\r\n            }\r\n        } else {\r\n            this.value -= this._lastOffset;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected onStageMouseUp2(e: Event): void {\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp2);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp2);\r\n        ILaya.timer.clear(this, this.loop);\r\n\r\n        if (this._clickOnly) {\r\n            if (this._value >= this.min && this._value <= this.max)\r\n                return;\r\n        }\r\n        this._target.mouseEnabled = true;\r\n\r\n        if (this._isElastic) {\r\n            if (this._value < this.min) {\r\n                if (this.min - this._value >= this.topMoveLimit) {\r\n                    this.event(\"dragTopLimit\");\r\n                }\r\n                var moveValue: number = (this.stopMoveLimit && this.stopMoveLimit()) ? (this.min - this.topMoveLimit) : this.min;\r\n                Tween.to(this, { value: moveValue }, this.elasticBackTime, ScrollBar.easeFunction, Handler.create(this, this.elasticOver));\r\n            } else if (this._value > this.max) {\r\n                if (this._value - this.max >= this.bottomMoveLimit) {\r\n                    this.event(\"dragBottomLimit\");\r\n                }\r\n                var moveValue: number = (this.stopMoveLimit && this.stopMoveLimit()) ? (this.max + this.bottomMoveLimit) : this.max;\r\n                Tween.to(this, { value: moveValue }, this.elasticBackTime, ScrollBar.easeFunction, Handler.create(this, this.elasticOver));\r\n            }\r\n        } else {\r\n            if (!this._offsets) return;\r\n            //计算平均值\r\n            if (this._offsets.length < 1) {\r\n                this._offsets[0] = this.isVertical ? ILaya.stage.mouseY - this._lastPoint.y : ILaya.stage.mouseX - this._lastPoint.x;\r\n            }\r\n            var offset: number = 0;\r\n            var n: number = Math.min(this._offsets.length, 3);\r\n            for (var i: number = 0; i < n; i++) {\r\n                offset += this._offsets[this._offsets.length - 1 - i];\r\n            }\r\n            this._lastOffset = offset / n;\r\n\r\n            offset = Math.abs(this._lastOffset);\r\n            if (offset < 2) {\r\n                this.event(Event.END);\r\n                return;\r\n            }\r\n            if (offset > 250) this._lastOffset = this._lastOffset > 0 ? 250 : -250;\r\n            var dis: number = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 150)));\r\n            ILaya.timer.frameLoop(1, this, this.tweenMove, [dis]);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private elasticOver(): void {\r\n        this._isElastic = false;\r\n        if (!this.hide && this.autoHide) {\r\n            Tween.to(this, { alpha: 0 }, 500);\r\n        }\r\n        this.event(Event.END);\r\n    }\r\n\r\n    /**@private */\r\n    protected tweenMove(maxDistance: number): void {\r\n        this._lastOffset *= this.rollRatio;\r\n        if (this.checkTriggers(true)) {\r\n            return;\r\n        }\r\n        var tarSpeed: number;\r\n        if (maxDistance > 0) {\r\n            if (this._lastOffset > 0 && this.value <= this.min) {\r\n                this._isElastic = true;\r\n                tarSpeed = -(this.min - maxDistance - this.value) * 0.5;\r\n                if (this._lastOffset > tarSpeed) this._lastOffset = tarSpeed;\r\n            } else if (this._lastOffset < 0 && this.value >= this.max) {\r\n                this._isElastic = true;\r\n                tarSpeed = -(this.max + maxDistance - this.value) * 0.5;\r\n                if (this._lastOffset < tarSpeed) this._lastOffset = tarSpeed;\r\n            }\r\n        }\r\n\r\n        this.value -= this._lastOffset;\r\n        //if (Math.abs(_lastOffset) < 1 || value == max || value == min) \r\n        if (Math.abs(this._lastOffset) < 0.1) {\r\n            ILaya.timer.clear(this, this.tweenMove);\r\n            if (this._isElastic) {\r\n                if (this._value < this.min) {\r\n                    Tween.to(this, { value: this.min }, this.elasticBackTime, ScrollBar.easeFunction, Handler.create(this, this.elasticOver));\r\n                } else if (this._value > this.max) {\r\n                    Tween.to(this, { value: this.max }, this.elasticBackTime, ScrollBar.easeFunction, Handler.create(this, this.elasticOver));\r\n                } else {\r\n                    this.elasticOver();\r\n                }\r\n                return;\r\n            }\r\n            this.event(Event.END);\r\n            if (!this.hide && this.autoHide) {\r\n                Tween.to(this, { alpha: 0 }, 500);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止滑动。\r\n     */\r\n    stopScroll(): void {\r\n        this.onStageMouseUp2(null);\r\n        ILaya.timer.clear(this, this.tweenMove);\r\n        Tween.clearTween(this);\r\n    }\r\n\r\n    /**\r\n     * 滚动的刻度值，滑动数值为tick的整数倍。默认值为1。\r\n     */\r\n    get tick(): number {\r\n        return this.slider.tick;\r\n    }\r\n\r\n    set tick(value: number) {\r\n        this.slider.tick = value;\r\n    }\r\n\r\n    /** 恢复到正常的弹性缓动效果 */\r\n    backToNormal(): void {\r\n        if (this._value < this.min) {\r\n            this._backToNormal(this.min);\r\n        } else if (this._value > this.max) {\r\n            this._backToNormal(this.max);\r\n        }\r\n    }\r\n\r\n    private _backToNormal(value: number) {\r\n        Tween.to(this, { value: value }, this.elasticBackTime, ScrollBar.easeFunction, Handler.create(this, this.elasticOver));\r\n    }\r\n}","import { ScrollBar } from \"./ScrollBar\";\r\n\r\n/**\r\n *\r\n * 使用 <code>VScrollBar</code> （垂直 <code>ScrollBar</code> ）控件，可以在因数据太多而不能在显示区域完全显示时控制显示的数据部分。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>VScrollBar</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.vScrollBar;\r\n *\t\timport laya.ui.VScrollBar;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class VScrollBar_Example\r\n *\t\t{\r\n *\t\t\tprivate var vScrollBar:VScrollBar;\r\n *\t\t\tpublic function VScrollBar_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, onLoadComplete));\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvScrollBar = new VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\r\n *\t\t\t\tvScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\r\n *\t\t\t\tvScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\r\n *\t\t\t\tvScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\r\n *\t\t\t\tvScrollBar.changeHandler = new Handler(this, onChange);//设置 vScrollBar 的滚动变化处理器。\r\n *\t\t\t\tLaya.stage.addChild(vScrollBar);//将此 vScrollBar 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"滚动条的位置： value=\" + value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var vScrollBar;\r\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"];\r\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     vScrollBar = new laya.ui.VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\r\n *     vScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\r\n *     vScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\r\n *     vScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\r\n *     vScrollBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 vScrollBar 的滚动变化处理器。\r\n *     Laya.stage.addChild(vScrollBar);//将此 vScrollBar 对象添加到显示列表。\r\n * }\r\n * function onChange(value) {\r\n *     console.log(\"滚动条的位置： value=\" + value);\r\n * }\r\n * @example\r\n * import VScrollBar = laya.ui.VScrollBar;\r\n * import Handler = laya.utils.Handler;\r\n * class VScrollBar_Example {\r\n *     private vScrollBar: VScrollBar;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, this.onLoadComplete));\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.vScrollBar = new VScrollBar();//创建一个 vScrollBar 类的实例对象 hScrollBar 。\r\n *         this.vScrollBar.skin = \"resource/ui/vscroll.png\";//设置 vScrollBar 的皮肤。\r\n *         this.vScrollBar.x = 100;//设置 vScrollBar 对象的属性 x 的值，用于控制 vScrollBar 对象的显示位置。\r\n *         this.vScrollBar.y = 100;//设置 vScrollBar 对象的属性 y 的值，用于控制 vScrollBar 对象的显示位置。\r\n *         this.vScrollBar.changeHandler = new Handler(this, this.onChange);//设置 vScrollBar 的滚动变化处理器。\r\n *         Laya.stage.addChild(this.vScrollBar);//将此 vScrollBar 对象添加到显示列表。\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"滚动条的位置： value=\" + value);\r\n *     }\r\n * }\r\n */\r\nexport class VScrollBar extends ScrollBar {\r\n\r\n}","import { ScrollBar } from \"./ScrollBar\";\r\n\r\n/**\r\n * 使用 <code>HScrollBar</code> （水平 <code>ScrollBar</code> ）控件，可以在因数据太多而不能在显示区域完全显示时控制显示的数据部分。\r\n * @example <caption>以下示例代码，创建了一个 <code>HScrollBar</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.HScrollBar;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class HScrollBar_Example\r\n *\t\t{\r\n *\t\t\tprivate var hScrollBar:HScrollBar;\r\n *\t\t\tpublic function HScrollBar_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\thScrollBar = new HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\r\n *\t\t\t\thScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\r\n *\t\t\t\thScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\r\n *\t\t\t\thScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\r\n *\t\t\t\thScrollBar.changeHandler = new Handler(this, onChange);//设置 hScrollBar 的滚动变化处理器。\r\n *\t\t\t\tLaya.stage.addChild(hScrollBar);//将此 hScrollBar 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"滚动条的位置： value=\" + value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var hScrollBar;\r\n * var res  = [\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"];\r\n * Laya.loader.load(res,laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     hScrollBar = new laya.ui.HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\r\n *     hScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\r\n *     hScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\r\n *     hScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\r\n *     hScrollBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 hScrollBar 的滚动变化处理器。\r\n *     Laya.stage.addChild(hScrollBar);//将此 hScrollBar 对象添加到显示列表。\r\n * }\r\n * function onChange(value)\r\n * {\r\n *     console.log(\"滚动条的位置： value=\" + value);\r\n * }\r\n * @example\r\n * import HScrollBar = laya.ui.HScrollBar;\r\n * import Handler = laya.utils.Handler;\r\n * class HScrollBar_Example {\r\n *     private hScrollBar: HScrollBar;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/hscroll.png\", \"resource/ui/hscroll$bar.png\", \"resource/ui/hscroll$down.png\", \"resource/ui/hscroll$up.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.hScrollBar = new HScrollBar();//创建一个 HScrollBar 类的实例对象 hScrollBar 。\r\n *         this.hScrollBar.skin = \"resource/ui/hscroll.png\";//设置 hScrollBar 的皮肤。\r\n *         this.hScrollBar.x = 100;//设置 hScrollBar 对象的属性 x 的值，用于控制 hScrollBar 对象的显示位置。\r\n *         this.hScrollBar.y = 100;//设置 hScrollBar 对象的属性 y 的值，用于控制 hScrollBar 对象的显示位置。\r\n *         this.hScrollBar.changeHandler = new Handler(this, this.onChange);//设置 hScrollBar 的滚动变化处理器。\r\n *         Laya.stage.addChild(this.hScrollBar);//将此 hScrollBar 对象添加到显示列表。\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"滚动条的位置： value=\" + value);\r\n *     }\r\n * }\r\n*/\r\nexport class HScrollBar extends ScrollBar {\r\n\r\n    /**\r\n     * @override\r\n     * @inheritDoc \r\n     */\r\n    protected initialize(): void {\r\n        super.initialize();\r\n        this.slider.isVertical = false;\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { ScrollBar } from \"./ScrollBar\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { HScrollBar } from \"./HScrollBar\";\r\nimport { Clip } from \"./Clip\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Tween } from \"../utils/Tween\"\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { HierarchyParser } from \"../loaders/HierarchyParser\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nimport { ScrollType } from \"./Styles\";\r\n\r\n/**\r\n * 当对象的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 渲染列表的单元项对象时调度。\r\n * @eventType Event.RENDER\r\n */\r\n/*[Event(name = \"render\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>List</code> 控件可显示项目列表。默认为垂直方向列表。可通过UI编辑器自定义列表。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>List</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.List;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class List_Example\r\n *\t\t{\r\n *\t\t\tpublic function List_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800, \"false\");//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, onLoadComplete));\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar arr:Array = [];//创建一个数组，用于存贮列表的数据信息。\r\n *\t\t\t\tfor (var i:int = 0; i &lt; 20; i++)\r\n *\t\t\t\t{\r\n *\t\t\t\t\tarr.push({label: \"item\" + i});\r\n *\t\t\t\t}\r\n *\t\t\t\tvar list:List = new List();//创建一个 List 类的实例对象 list 。\r\n *\t\t\t\tlist.itemRender = Item;//设置 list 的单元格渲染器。\r\n *\t\t\t\tlist.repeatX = 1;//设置 list 的水平方向单元格数量。\r\n *\t\t\t\tlist.repeatY = 10;//设置 list 的垂直方向单元格数量。\r\n *\t\t\t\tlist.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\r\n *\t\t\t\tlist.array = arr;//设置 list 的列表数据源。\r\n *\t\t\t\tlist.pos(100, 100);//设置 list 的位置。\r\n *\t\t\t\tlist.selectEnable = true;//设置 list 可选。\r\n *\t\t\t\tlist.selectHandler = new Handler(this, onSelect);//设置 list 改变选择项执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(list);//将 list 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onSelect(index:int):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选择的项目索引： index= \", index);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n *\timport laya.ui.Box;\r\n *\timport laya.ui.Label;\r\n *\tclass Item extends Box\r\n *\t{\r\n *\t\tpublic function Item()\r\n *\t\t{\r\n *\t\t\tgraphics.drawRect(0, 0, 100, 20,null, \"#ff0000\");\r\n *\t\t\tvar label:Label = new Label();\r\n *\t\t\tlabel.text = \"100000\";\r\n *\t\t\tlabel.name = \"label\";//设置 label 的name属性值。\r\n *\t\t\tlabel.size(100, 20);\r\n *\t\t\taddChild(label);\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * (function (_super){\r\n *     function Item(){\r\n *         Item.__super.call(this);//初始化父类\r\n *         this.graphics.drawRect(0, 0, 100, 20, \"#ff0000\");\r\n *         var label = new laya.ui.Label();//创建一个 Label 类的实例对象 label 。\r\n *         label.text = \"100000\";//设置 label 的文本内容。\r\n *         label.name = \"label\";//设置 label 的name属性值。\r\n *         label.size(100, 20);//设置 label 的宽度、高度。\r\n *         this.addChild(label);//将 label 添加到显示列表。\r\n *     };\r\n *     Laya.class(Item,\"mypackage.listExample.Item\",_super);//注册类 Item 。\r\n * })(laya.ui.Box);\r\n    \r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"];\r\n * Laya.loader.load(res, new laya.utils.Handler(this, onLoadComplete));//加载资源。\r\n    \r\n * function onLoadComplete() {\r\n *     var arr = [];//创建一个数组，用于存贮列表的数据信息。\r\n *     for (var i = 0; i &lt; 20; i++) {\r\n *         arr.push({label: \"item\" + i});\r\n *     }\r\n    \r\n *     var list = new laya.ui.List();//创建一个 List 类的实例对象 list 。\r\n *     list.itemRender = mypackage.listExample.Item;//设置 list 的单元格渲染器。\r\n *     list.repeatX = 1;//设置 list 的水平方向单元格数量。\r\n *     list.repeatY = 10;//设置 list 的垂直方向单元格数量。\r\n *     list.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\r\n *     list.array = arr;//设置 list 的列表数据源。\r\n *     list.pos(100, 100);//设置 list 的位置。\r\n *     list.selectEnable = true;//设置 list 可选。\r\n *     list.selectHandler = new laya.utils.Handler(this, onSelect);//设置 list 改变选择项执行的处理器。\r\n *     Laya.stage.addChild(list);//将 list 添加到显示列表。\r\n * }\r\n    \r\n * function onSelect(index)\r\n * {\r\n *     console.log(\"当前选择的项目索引： index= \", index);\r\n * }\r\n *\r\n * @example\r\n * import List = laya.ui.List;\r\n * import Handler = laya.utils.Handler;\r\n * public class List_Example {\r\n *     public List_Example() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\"], Handler.create(this, this.onLoadComplete));\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var arr= [];//创建一个数组，用于存贮列表的数据信息。\r\n *         for (var i: number = 0; i &lt; 20; i++)\r\n *         {\r\n *             arr.push({ label: \"item\" + i });\r\n *         }\r\n *         var list: List = new List();//创建一个 List 类的实例对象 list 。\r\n *         list.itemRender = Item;//设置 list 的单元格渲染器。\r\n *         list.repeatX = 1;//设置 list 的水平方向单元格数量。\r\n *         list.repeatY = 10;//设置 list 的垂直方向单元格数量。\r\n *         list.vScrollBarSkin = \"resource/ui/vscroll.png\";//设置 list 的垂直方向滚动条皮肤。\r\n *         list.array = arr;//设置 list 的列表数据源。\r\n *         list.pos(100, 100);//设置 list 的位置。\r\n *         list.selectEnable = true;//设置 list 可选。\r\n *         list.selectHandler = new Handler(this, this.onSelect);//设置 list 改变选择项执行的处理器。\r\n *         Laya.stage.addChild(list);//将 list 添加到显示列表。\r\n *     }\r\n *     private onSelect(index: number): void {\r\n *         console.log(\"当前选择的项目索引： index= \", index);\r\n *     }\r\n * }\r\n * import Box = laya.ui.Box;\r\n * import Label = laya.ui.Label;\r\n * class Item extends Box {\r\n *     constructor() {\r\n *         this.graphics.drawRect(0, 0, 100, 20, null, \"#ff0000\");\r\n *         var label: Label = new Label();\r\n *         label.text = \"100000\";\r\n *         label.name = \"label\";//设置 label 的name属性值。\r\n *         label.size(100, 20);\r\n *         this.addChild(label);\r\n *     }\r\n * }\r\n */\r\nexport class List extends Box {\r\n\r\n    /**改变 <code>List</code> 的选择项时执行的处理器，(默认返回参数： 项索引（index:int）)。*/\r\n    selectHandler: Handler | null;\r\n    /**单元格渲染处理器(默认返回参数cell:UIComponent,index:int)。*/\r\n    renderHandler: Handler | null;\r\n    /**单元格鼠标事件处理器(默认返回参数e:Event,index:int)。*/\r\n    mouseHandler: Handler | null;\r\n    /**指定是否可以选择，若值为true则可以选择，否则不可以选择。 @default false*/\r\n    selectEnable: boolean = false;\r\n    /**最大分页数。*/\r\n    totalPage: number = 0;\r\n    /**禁用滚动条停止 */\r\n    disableStopScroll: boolean = false;\r\n\r\n    /**@private */\r\n    protected _content!: Box;\r\n    /**@private */\r\n    protected _scrollBar: ScrollBar | null;\r\n    /**@private */\r\n    protected _itemRender: any;\r\n    /**@private */\r\n    protected _repeatX: number = 0;\r\n    /**@private */\r\n    protected _repeatY: number = 0;\r\n    /**@private */\r\n    protected _repeatX2: number = 0;\r\n    /**@private */\r\n    protected _repeatY2: number = 0;\r\n    /**@private */\r\n    protected _spaceX: number = 0;\r\n    /**@private */\r\n    protected _spaceY: number = 0;\r\n    /**@private */\r\n    protected _cells: UIComponent[] = [];\r\n    /**@private */\r\n    protected _array: any[] | null;\r\n    /**@private */\r\n    protected _startIndex: number = 0;\r\n    /**@private */\r\n    protected _selectedIndex: number = -1;\r\n    /**@private */\r\n    protected _page: number = 0;\r\n    /**@private */\r\n    protected _isVertical: boolean = true;\r\n    /**@private */\r\n    protected _cellSize: number = 20;\r\n    /**@private */\r\n    protected _cellOffset: number = 0;\r\n    /**@private */\r\n    protected _isMoved: boolean;\r\n    /**是否缓存内容，如果数据源较少，并且list内无动画，设置此属性为true能大大提高性能 */\r\n    cacheContent: boolean;\r\n    /**@private */\r\n    protected _createdLine: number = 0;\r\n    /**@private */\r\n    protected _cellChanged: boolean;\r\n    /**@private */\r\n    protected _offset: Point = new Point();\r\n    /**@private */\r\n    protected _usedCache: string | null = null;\r\n    /**@private */\r\n    protected _elasticEnabled: boolean = false;\r\n\r\n    protected _scrollType: ScrollType = 0;\r\n    protected _vScrollBarSkin: string;\r\n    protected _hScrollBarSkin: string;\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._content && this._content.destroy(destroyChild);\r\n        this._scrollBar && this._scrollBar.destroy(destroyChild);\r\n        super.destroy(destroyChild);\r\n        this._content = null;\r\n        this._scrollBar = null;\r\n        this._itemRender = null;\r\n        this._cells = null;\r\n        this._array = null;\r\n        this.selectHandler = this.renderHandler = this.mouseHandler = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this._content = new Box();\r\n        this._content.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._content);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set cacheAs(value: string) {\r\n        super.cacheAs = value;\r\n        if (this._scrollBar) {\r\n            this._usedCache = null;\r\n            if (value !== \"none\") this._scrollBar.on(Event.START, this, this.onScrollStart);\r\n            else this._scrollBar.off(Event.START, this, this.onScrollStart);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get cacheAs() {\r\n        return super.cacheAs;\r\n    }\r\n\r\n    private onScrollStart(): void {\r\n        this._usedCache || (this._usedCache = super.cacheAs);\r\n        super.cacheAs = \"none\";\r\n        this._scrollBar!.once(Event.END, this, this.onScrollEnd);\r\n    }\r\n\r\n    private onScrollEnd(): void {\r\n        super.cacheAs = this._usedCache || 'none';\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>List</code> 组件所包含的内容容器 <code>Box</code> 组件的引用。\r\n     */\r\n    get content() {\r\n        return this._content;\r\n    }\r\n\r\n    /**\r\n     * 滚动类型\r\n     */\r\n    get scrollType() {\r\n        return this._scrollType;\r\n    }\r\n\r\n    set scrollType(value: ScrollType) {\r\n        this._scrollType = value;\r\n\r\n        if (this._scrollType == ScrollType.None) {\r\n            if (this._scrollBar) {\r\n                this._scrollBar.destroy();\r\n                this._scrollBar = null;\r\n                this._content.scrollRect = null;\r\n            }\r\n        }\r\n        else if (this._scrollType == ScrollType.Horizontal) {\r\n            if (this._scrollBar && !this._scrollBar.isVertical) {\r\n                this._scrollBar.skin = this._hScrollBarSkin;\r\n                return;\r\n            }\r\n\r\n            if (this._scrollBar) {\r\n                this._scrollBar.destroy();\r\n                this._scrollBar = null;\r\n            }\r\n\r\n            let scrollBar = new HScrollBar();\r\n            scrollBar.name = \"scrollBar\";\r\n            scrollBar.bottom = 0;\r\n            scrollBar._skinBaseUrl = this._skinBaseUrl;\r\n            scrollBar.skin = this._hScrollBarSkin;\r\n            scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\r\n            scrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n            this.scrollBar = scrollBar;\r\n            this._setCellChanged();\r\n        }\r\n        else {\r\n            if (this._scrollBar && this._scrollBar.isVertical) {\r\n                this._scrollBar.skin = this._vScrollBarSkin;\r\n                return;\r\n            }\r\n\r\n            if (this._scrollBar) {\r\n                this._scrollBar.destroy();\r\n                this._scrollBar = null;\r\n            }\r\n\r\n            let scrollBar = new VScrollBar();\r\n            scrollBar.name = \"scrollBar\";\r\n            scrollBar.right = 0;\r\n            scrollBar._skinBaseUrl = this._skinBaseUrl;\r\n            scrollBar.skin = this._vScrollBarSkin;\r\n            scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\r\n            scrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n            this.scrollBar = scrollBar;\r\n            this._setCellChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 垂直方向滚动条皮肤。\r\n     */\r\n    get vScrollBarSkin(): string {\r\n        return this._vScrollBarSkin;\r\n    }\r\n\r\n    set vScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._vScrollBarSkin != value) {\r\n            this._vScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Vertical;\r\n            else\r\n                this.scrollType = this._scrollType;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 水平方向滚动条皮肤。\r\n     */\r\n    get hScrollBarSkin(): string {\r\n        return this._hScrollBarSkin;\r\n    }\r\n\r\n    set hScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._hScrollBarSkin != value) {\r\n            this._hScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Horizontal;\r\n            else\r\n                this.scrollType = this._scrollType;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>List</code> 组件所包含的滚动条 <code>ScrollBar</code> 组件的引用。\r\n     */\r\n    get scrollBar(): ScrollBar | null {\r\n        return this._scrollBar;\r\n    }\r\n\r\n    set scrollBar(value: ScrollBar | null) {\r\n        if (this._scrollBar != value) {\r\n            this._scrollBar = value;\r\n            if (value) {\r\n                this._isVertical = this._scrollBar.isVertical;\r\n                this._scrollBar.target = this._content;\r\n                this._scrollBar.on(Event.CHANGE, this, this.onScrollBarChange);\r\n                this.addChild(this._scrollBar);\r\n                this._content.scrollRect = Rectangle.create();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 单元格渲染器。\r\n     * <p><b>取值：</b>\r\n     * <ol>\r\n     * <li>单元格类对象。</li>\r\n     * <li> UI 的 JSON 描述。</li>\r\n     * </ol></p>\r\n     * @implements\r\n     */\r\n    get itemRender(): any {\r\n        return this._itemRender;\r\n    }\r\n\r\n    set itemRender(value: any) {\r\n        if (this._itemRender != value) {\r\n            this._itemRender = value;\r\n            //销毁老单元格\r\n            for (let i = this._cells!.length - 1; i > -1; i--) {\r\n                this._cells![i].destroy();\r\n            }\r\n            this._cells!.length = 0;\r\n            this._setCellChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._setCellChanged();\r\n    }\r\n\r\n\r\n    /**\r\n     * 水平方向显示的单元格数量。\r\n     */\r\n    get repeatX(): number {\r\n        return this._repeatX > 0 ? this._repeatX : this._repeatX2 > 0 ? this._repeatX2 : 1;\r\n    }\r\n\r\n    set repeatX(value: number) {\r\n        this._repeatX = value;\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * 垂直方向显示的单元格数量。\r\n     */\r\n    get repeatY(): number {\r\n        return this._repeatY > 0 ? this._repeatY : this._repeatY2 > 0 ? this._repeatY2 : 1;\r\n    }\r\n\r\n    set repeatY(value: number) {\r\n        this._repeatY = value;\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * 水平方向显示的单元格之间的间距（以像素为单位）。\r\n     */\r\n    get spaceX(): number {\r\n        return this._spaceX;\r\n    }\r\n\r\n    set spaceX(value: number) {\r\n        this._spaceX = value;\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * 垂直方向显示的单元格之间的间距（以像素为单位）。\r\n     */\r\n    get spaceY(): number {\r\n        return this._spaceY;\r\n    }\r\n\r\n    set spaceY(value: number) {\r\n        this._spaceY = value;\r\n        this._setCellChanged();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 更改单元格的信息。\r\n     * 在此销毁、创建单元格，并设置单元格的位置等属性。相当于此列表内容发送改变时调用此函数。\r\n     */\r\n    protected changeCells(): void {\r\n        this._cellChanged = false;\r\n        if (this._itemRender) {\r\n            //获取滚动条\r\n            this.scrollBar = (<ScrollBar>this.getChildByName(\"scrollBar\"));\r\n\r\n            //自适应宽高\r\n            let cell = this._getOneCell();\r\n\r\n            let cellWidth = (cell.width + this._spaceX) || 1;\r\n            let cellHeight = (cell.height + this._spaceY) || 1;\r\n            if (this._width > 0) this._repeatX2 = this._isVertical ? Math.round(this._width / cellWidth) : Math.ceil(this._width / cellWidth);\r\n            if (this._height > 0) this._repeatY2 = this._isVertical ? Math.ceil(this._height / cellHeight) : Math.round(this._height / cellHeight);\r\n\r\n            let listWidth = this._isWidthSet ? this._width : (cellWidth * this.repeatX - this._spaceX);\r\n            let listHeight = this._isHeightSet ? this._height : (cellHeight * this.repeatY - this._spaceY);\r\n            this._cellSize = this._isVertical ? cellHeight : cellWidth;\r\n            this._cellOffset = this._isVertical ? (cellHeight * Math.max(this._repeatY2, this._repeatY) - listHeight - this._spaceY) : (cellWidth * Math.max(this._repeatX2, this._repeatX) - listWidth - this._spaceX);\r\n\r\n            if (this._scrollBar) {\r\n                if (this._isVertical)\r\n                    this._scrollBar.height = listHeight;\r\n                else\r\n                    this._scrollBar.width = listWidth;\r\n            }\r\n            this.setContentSize(listWidth, listHeight);\r\n\r\n            //创建新单元格\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            let numY = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0);\r\n            this._createItems(0, numX, numY);\r\n            this._createdLine = numY;\r\n\r\n            if (this._array) {\r\n                this.array = this._array;\r\n                this.runCallLater(this.renderItems);\r\n            }\r\n            else\r\n                this.changeSelectStatus();\r\n        }\r\n    }\r\n\r\n    private _getOneCell(): UIComponent {\r\n        if (this._cells.length === 0) {\r\n            let item = this.createItem();\r\n            this._offset.setTo(item._x, item._y);\r\n            if (this.cacheContent) return item;\r\n            this._cells.push(item);\r\n        }\r\n        return this._cells[0];\r\n    }\r\n\r\n    private _createItems(startY: number, numX: number, numY: number): void {\r\n        let box = this._content;\r\n        let cell = this._getOneCell();\r\n        let cellWidth = cell.width + this._spaceX;\r\n        let cellHeight = cell.height + this._spaceY;\r\n        let arr: Array<UIComponent>;\r\n\r\n        if (this.cacheContent) {\r\n            let cacheBox = new Box();\r\n            cacheBox.hideFlags = HideFlags.HideAndDontSave;\r\n            cacheBox.cacheAs = \"normal\";\r\n            cacheBox.pos((this._isVertical ? 0 : startY) * cellWidth, (this._isVertical ? startY : 0) * cellHeight);\r\n            this._content.addChild(cacheBox);\r\n            box = cacheBox;\r\n        } else {\r\n            arr = [];\r\n            for (let i = this._cells.length - 1; i > -1; i--) {\r\n                let item = this._cells[i];\r\n                item.removeSelf();\r\n                arr.push(item);\r\n            }\r\n            this._cells.length = 0;\r\n        }\r\n\r\n        for (let k = startY; k < numY; k++) {\r\n            for (let l = 0; l < numX; l++) {\r\n                if (arr && arr.length) {\r\n                    cell = arr.pop();\r\n                } else {\r\n                    cell = this.createItem();\r\n                    cell.hideFlags = HideFlags.HideAndDontSave;\r\n                }\r\n                cell.x = (this._isVertical ? l : k) * cellWidth - box._x;\r\n                cell.y = (this._isVertical ? k : l) * cellHeight - box._y;\r\n                cell.name = \"item\" + (k * numX + l);\r\n                box.addChild(cell);\r\n                this.addCell(cell);\r\n            }\r\n        }\r\n\r\n        if (arr && arr.length > 0) {\r\n            for (let e of arr)\r\n                e.destroy();\r\n        }\r\n    }\r\n\r\n    protected createItem(): UIComponent {\r\n        let arr: any[] = [];\r\n        let box: UIComponent;\r\n        if (typeof (this._itemRender) == \"function\") {//TODO:\r\n            box = new this._itemRender();\r\n            box._skinBaseUrl = this._skinBaseUrl;\r\n        } else {\r\n            if (this._itemRender._$type || this._itemRender._$prefab)\r\n                box = <UIComponent>HierarchyParser.parse(this._itemRender, { skinBaseUrl: this._skinBaseUrl })[0];\r\n            else\r\n                box = LegacyUIParser.createComp(this._itemRender, null, null, arr);\r\n            if (!box) {\r\n                console.warn(\"cannot create item\");\r\n                box = new Box();\r\n            }\r\n        }\r\n        box.hideFlags = HideFlags.HideAndDontSave;\r\n\r\n        if (arr.length == 0 && (<any>box)[\"_watchMap\"]) {\r\n            let watchMap = (<any>box)[\"_watchMap\"];\r\n            for (let name in watchMap) {\r\n                let a: any[] = watchMap[name];\r\n                for (let i = 0; i < a.length; i++) {\r\n                    let watcher = a[i];\r\n                    arr.push(watcher.comp, watcher.prop, watcher.value)\r\n                }\r\n            }\r\n        }\r\n        if (arr.length) (<any>box)[\"_$bindData\"] = arr;\r\n\r\n        return box;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 添加单元格。\r\n     * @param cell 需要添加的单元格对象。\r\n     */\r\n    protected addCell(cell: UIComponent): void {\r\n        cell.on(Event.CLICK, this, this.onCellMouse);\r\n        cell.on(Event.RIGHT_CLICK, this, this.onCellMouse);\r\n        cell.on(Event.MOUSE_OVER, this, this.onCellMouse);\r\n        cell.on(Event.MOUSE_OUT, this, this.onCellMouse);\r\n        cell.on(Event.MOUSE_DOWN, this, this.onCellMouse);\r\n        cell.on(Event.MOUSE_UP, this, this.onCellMouse);\r\n        this._cells.push(cell);\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n        this.initItems();\r\n    }\r\n\r\n    /**@internal */\r\n    _afterInited(): void {\r\n        this.initItems();\r\n    }\r\n\r\n    /**\r\n     * 初始化单元格信息。\r\n     */\r\n    initItems(): void {\r\n        if (!this._itemRender && this.getChildByName(\"item0\") != null) {\r\n            this.repeatX = 1;\r\n            let count: number;\r\n            count = 0;\r\n            for (let i = 0; i < 10000; i++) {\r\n                let cell = <UIComponent>this.getChildByName(\"item\" + i);\r\n                if (cell) {\r\n                    this.addCell(cell);\r\n                    count++;\r\n                    continue;\r\n                }\r\n                break;\r\n            }\r\n            this.repeatY = count;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置可视区域大小。\r\n     * <p>以（0，0，width参数，height参数）组成的矩形区域为可视区域。</p>\r\n     * @param width 可视区域宽度。\r\n     * @param height 可视区域高度。\r\n     */\r\n    setContentSize(width: number, height: number): void {\r\n        this._content.width = width;\r\n        this._content.height = height;\r\n        if (this._scrollBar) {\r\n            let r = this._content.scrollRect;\r\n            if (!r)\r\n                r = Rectangle.create();\r\n            r.setTo(-this._offset.x, -this._offset.y, width, height);\r\n            this._content.scrollRect = r;\r\n        }\r\n        this.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 单元格的鼠标事件侦听处理函数。\r\n     */\r\n    protected onCellMouse(e: Event): void {\r\n        if (e.type === Event.MOUSE_DOWN) this._isMoved = false;\r\n        let cell = (<UIComponent>e.currentTarget);\r\n        let index = this._startIndex + this._cells.indexOf(cell);\r\n        if (index < 0) return;\r\n        if (e.type === Event.CLICK || e.type === Event.RIGHT_CLICK) {\r\n            if (this.selectEnable && !this._isMoved) this.selectedIndex = index;\r\n            else this.changeCellState(cell, true, 0);\r\n        } else if ((e.type === Event.MOUSE_OVER || e.type === Event.MOUSE_OUT) && this._selectedIndex !== index) {\r\n            this.changeCellState(cell, e.type === Event.MOUSE_OVER, 0);\r\n        }\r\n        this.mouseHandler && this.mouseHandler.runWith([e, index]);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变单元格的可视状态。\r\n     * @param cell 单元格对象。\r\n     * @param visable 是否显示。\r\n     * @param index 单元格的属性 <code>index</code> 值。\r\n     */\r\n    protected changeCellState(cell: UIComponent, visible: boolean, index: number): void {\r\n        let selectBox = (<Clip>cell.getChildByName(\"selectBox\"));\r\n        if (selectBox) {\r\n            this.selectEnable = true;\r\n            selectBox.visible = visible;\r\n            selectBox.index = index;\r\n        }\r\n    }\r\n\r\n    /** \r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        super._sizeChanged();\r\n        this.setContentSize(this.width, this.height);\r\n        if (this._scrollBar) this.callLater(this.onScrollBarChange);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滚动条的 <code>Event.CHANGE</code> 事件侦听处理函数。\r\n     */\r\n    protected onScrollBarChange(e: Event | null = null): void {\r\n        this.runCallLater(this.changeCells);\r\n        let scrollValue = this._scrollBar!.value;\r\n        let lineX = (this._isVertical ? this.repeatX : this.repeatY);\r\n        let lineY = (this._isVertical ? this.repeatY : this.repeatX);\r\n        let scrollLine = Math.floor(scrollValue / this._cellSize);\r\n\r\n        if (!this.cacheContent) {\r\n            let index = scrollLine * lineX;\r\n            let num = 0;\r\n            let down = true;\r\n            let toIndex = 0;\r\n            if (index > this._startIndex) {\r\n                num = index - this._startIndex;\r\n                //let down = true;\r\n                toIndex = this._startIndex + lineX * (lineY + 1);\r\n                this._isMoved = true;\r\n            } else if (index < this._startIndex) {\r\n                num = this._startIndex - index;\r\n                down = false;\r\n                toIndex = this._startIndex - 1;\r\n                this._isMoved = true;\r\n            }\r\n\r\n            let cell: UIComponent;\r\n            let cellIndex: number;\r\n            for (let i = 0; i < num; i++) {\r\n                if (down) {\r\n                    cell = this._cells.shift();\r\n                    this._cells[this._cells.length] = cell;\r\n                    cellIndex = toIndex + i;\r\n                } else {\r\n                    cell = this._cells.pop();\r\n                    this._cells.unshift(cell);\r\n                    cellIndex = toIndex - i;\r\n                }\r\n                let pos = Math.floor(cellIndex / lineX) * this._cellSize;\r\n                this._isVertical ? cell.y = pos : cell.x = pos;\r\n                this.renderItem(cell, cellIndex);\r\n            }\r\n            this._startIndex = index;\r\n            this.changeSelectStatus();\r\n        } else {\r\n            let num = (lineY + 1);\r\n            if (this._createdLine - scrollLine < num) {\r\n                this._createItems(this._createdLine, lineX, this._createdLine + num);\r\n                this.renderItems(this._createdLine * lineX, 0);\r\n                this._createdLine += num;\r\n            }\r\n        }\r\n\r\n        let r = this._content._style.scrollRect;\r\n        if (this._isVertical) {\r\n            r.y = scrollValue - this._offset.y;\r\n            r.x = -this._offset.x;\r\n        } else {\r\n            r.y = -this._offset.y;\r\n            r.x = scrollValue - this._offset.x;\r\n        }\r\n        this._content.scrollRect = r;\r\n    }\r\n\r\n    private posCell(cell: UIComponent, cellIndex: number): void {\r\n        if (!this._scrollBar) return;\r\n        let lineX = (this._isVertical ? this.repeatX : this.repeatY);\r\n        //let lineY = (this._isVertical ? this.repeatY : this.repeatX);\r\n        let pos = Math.floor(cellIndex / lineX) * this._cellSize;\r\n        this._isVertical ? cell._y = pos : cell.x = pos;\r\n    }\r\n\r\n    /**\r\n     * 表示当前选择的项索引。selectedIndex值更改会引起list重新渲染\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        if (this._selectedIndex != value) {\r\n            this._selectedIndex = value;\r\n            this.changeSelectStatus();\r\n            this.event(Event.CHANGE);\r\n            this.selectHandler && this.selectHandler.runWith(value);\r\n            //选择发生变化，自动渲染一次\r\n            this.startIndex = this._startIndex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 改变单元格的选择状态。\r\n     */\r\n    protected changeSelectStatus(): void {\r\n        for (let i: number = 0, n: number = this._cells.length; i < n; i++) {\r\n            this.changeCellState(this._cells[i], this._selectedIndex === this._startIndex + i, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当前选中的单元格数据源。\r\n     */\r\n    get selectedItem(): any {\r\n        if (!this._array) return null;\r\n        return this._selectedIndex != -1 ? this._array[this._selectedIndex] : null;\r\n    }\r\n\r\n    set selectedItem(value: any) {\r\n        this._array && (this.selectedIndex = this._array.indexOf(value));\r\n    }\r\n\r\n    /**\r\n     * 获取或设置当前选择的单元格对象。\r\n     */\r\n    get selection(): UIComponent {\r\n        return this.getCell(this._selectedIndex);\r\n    }\r\n\r\n    set selection(value: UIComponent) {\r\n        this.selectedIndex = this._startIndex + this._cells.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     * 当前显示的单元格列表的开始索引。\r\n     */\r\n    get startIndex(): number {\r\n        return this._startIndex;\r\n    }\r\n\r\n    set startIndex(value: number) {\r\n        this._startIndex = value > 0 ? value : 0;\r\n        this.callLater(this.renderItems);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 渲染单元格列表。\r\n     */\r\n    protected renderItems(from: number = 0, to: number = 0): void {\r\n        for (let i = from, n = to || this._cells.length; i < n; i++) {\r\n            this.renderItem(this._cells[i], this._startIndex + i);\r\n        }\r\n        this.changeSelectStatus();\r\n    }\r\n\r\n    /**\r\n     * 渲染一个单元格。\r\n     * @param cell 需要渲染的单元格对象。\r\n     * @param index 单元格索引。\r\n     */\r\n    protected renderItem(cell: UIComponent, index: number): void {\r\n        if (!this._array || index >= 0 && index < this._array.length) {\r\n            cell.visible = true;\r\n\r\n            if (this._array) {\r\n                if ((cell as any)[\"_$bindData\"]) {\r\n                    cell[\"_dataSource\"] = this._array[index];\r\n                    this._bindData(cell, this._array[index]);\r\n                } else\r\n                    cell.dataSource = this._array[index];\r\n            }\r\n\r\n            if (!this.cacheContent) {\r\n                //TODO:\r\n                this.posCell(cell, index);\r\n            }\r\n            if (this.hasListener(Event.RENDER)) this.event(Event.RENDER, [cell, index]);\r\n            if (this.renderHandler) this.renderHandler.runWith([cell, index]);\r\n        } else {\r\n            cell.visible = false;\r\n            cell.dataSource = null;\r\n        }\r\n    }\r\n\r\n    private _bindData(cell: any, data: any): void {\r\n        let arr: any[] = cell._$bindData;\r\n        for (let i = 0, n = arr.length; i < n; i++) {\r\n            let ele: any = arr[i++];\r\n            let prop: string = arr[i++];\r\n            let value: string = arr[i];\r\n            let fun = UIUtils.getBindFun(value);\r\n            ele[prop] = fun.call(this, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 列表数据源。\r\n     */\r\n    get array(): any[] {\r\n        return this._array as any[];\r\n    }\r\n\r\n    private _preLen = 0;\r\n\r\n    set array(value: any[]) {\r\n        this.runCallLater(this.changeCells);\r\n        this._array = value || [];\r\n        this._preLen = this._array.length;\r\n        let length = this._array.length;\r\n        this.totalPage = Math.ceil(length / (this.repeatX * this.repeatY));\r\n        //重设selectedIndex\r\n        this._selectedIndex = this._selectedIndex < length ? this._selectedIndex : length - 1;\r\n        //重设startIndex\r\n        this.startIndex = this._startIndex;\r\n        //重设滚动条\r\n        if (this._scrollBar) {\r\n            //根据开关决定滚动条是否停止，默认在重设的时候会停止滚动\r\n            (!this.disableStopScroll && this._scrollBar.stopScroll());\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            let numY = this._isVertical ? this.repeatY : this.repeatX;\r\n            let lineCount = Math.ceil(length / numX);\r\n            let total = this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage;\r\n            if (total > 1 && lineCount >= numY) {\r\n                this._scrollBar.scrollSize = this._cellSize;\r\n                this._scrollBar.thumbPercent = numY / lineCount;\r\n                this._scrollBar.setScroll(0, (lineCount - numY) * this._cellSize + this._cellOffset, this._scrollBar.value);\r\n            } else {\r\n                this._scrollBar.setScroll(0, 0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新数据源，不刷新list，只增加滚动长度\r\n     * @param\tarray 数据源\r\n     */\r\n    updateArray(array: any[]): void {\r\n        this._array = array;\r\n        if (this._array) {\r\n            let freshStart = this._preLen - this._startIndex;\r\n            if (freshStart >= 0)\r\n                this.renderItems(freshStart);\r\n            this._preLen = this._array.length;\r\n        }\r\n        if (this._scrollBar) {\r\n            let length = array.length;\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            let numY = this._isVertical ? this.repeatY : this.repeatX;\r\n            let lineCount = Math.ceil(length / numX);\r\n            if (lineCount >= numY) {\r\n                this._scrollBar.thumbPercent = numY / lineCount;\r\n                this._scrollBar.slider[\"_max\"] = (lineCount - numY) * this._cellSize + this._cellOffset;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 列表的当前页码。\r\n     */\r\n    get page(): number {\r\n        return this._page;\r\n    }\r\n\r\n    set page(value: number) {\r\n        this._page = value\r\n        if (this._array) {\r\n            this._page = value > 0 ? value : 0;\r\n            this._page = this._page < this.totalPage ? this._page : this.totalPage - 1;\r\n            this.startIndex = this._page * this.repeatX * this.repeatY;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 列表的数据总个数。\r\n     */\r\n    get length(): number {\r\n        return this._array ? this._array.length : 0;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.selectedIndex = parseInt(value as string);\r\n        else if (value instanceof Array)\r\n            this.array = (<any[]>value)\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * 单元格集合。\r\n     */\r\n    get cells(): UIComponent[] {\r\n        this.runCallLater(this.changeCells);\r\n        return this._cells;\r\n    }\r\n\r\n    /**是否开启橡皮筋效果*/\r\n    get elasticEnabled(): boolean {\r\n        return this._elasticEnabled;\r\n    }\r\n\r\n    set elasticEnabled(value: boolean) {\r\n        this._elasticEnabled = value;\r\n        if (this._scrollBar) {\r\n            this._scrollBar.elasticDistance = value ? 200 : 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 刷新列表数据源。\r\n     */\r\n    refresh(): void {\r\n        this.array = this._array as any[];\r\n        //startIndex = _startIndex;\r\n    }\r\n\r\n    /**\r\n     * 获取单元格数据源。\r\n     * @param index 单元格索引。\r\n     */\r\n    getItem(index: number): any {\r\n        if (!this._array)\r\n            return null;\r\n        if (index > -1 && index < this._array.length) {\r\n            return this._array[index];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 修改单元格数据源。\r\n     * @param index 单元格索引。\r\n     * @param source 单元格数据源。\r\n     */\r\n    changeItem(index: number, source: any): void {\r\n        if (index > -1 && this._array && index < this._array.length) {\r\n            this._array[index] = source;\r\n            //如果是可视范围，则重新渲染\r\n            if (index >= this._startIndex && index < this._startIndex + this._cells.length) {\r\n                this.renderItem(this.getCell(index)!, index);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置单元格数据源。\r\n     * @param index 单元格索引。\r\n     * @param source 单元格数据源。\r\n     */\r\n    setItem(index: number, source: any): void {\r\n        this.changeItem(index, source);\r\n    }\r\n\r\n    /**\r\n     * 添加单元格数据源。\r\n     * @param source 数据源。\r\n     */\r\n    addItem(source: any): void {\r\n        if (!this.array) {\r\n            this.array = [source];\r\n        } else {\r\n            this._array!.push(source);\r\n        }\r\n        this.array = this._array as any[];\r\n    }\r\n\r\n    /**\r\n     * 添加单元格数据源到对应的数据索引处。\r\n     * @param souce 单元格数据源。\r\n     * @param index 索引。\r\n     */\r\n    addItemAt(souce: any, index: number): void {\r\n        this._array!.splice(index, 0, souce);\r\n        this.array = this._array!;\r\n    }\r\n\r\n    /**\r\n     * 通过数据源索引删除单元格数据源。\r\n     * @param index 需要删除的数据源索引值。\r\n     */\r\n    deleteItem(index: number): void {\r\n        if (this._array) {\r\n            this._array.splice(index, 1);\r\n            this.array = this._array;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过可视单元格索引，获取单元格。\r\n     * @param index 可视单元格索引。\r\n     * @return 单元格对象。\r\n     */\r\n    getCell(index: number): UIComponent | null {\r\n        this.runCallLater(this.changeCells);\r\n        if (index > -1 && this._cells) {\r\n            return this._cells[(index - this._startIndex) % this._cells.length];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * <p>滚动列表，以设定的数据索引对应的单元格为当前可视列表的第一项。</p>\r\n     * @param index 单元格在数据列表中的索引。\r\n     */\r\n    scrollTo(index: number): void {\r\n        if (this._scrollBar) {\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            this._scrollBar.value = Math.floor(index / numX) * this._cellSize;\r\n        } else {\r\n            this.startIndex = index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>缓动滚动列表，以设定的数据索引对应的单元格为当前可视列表的第一项。</p>\r\n     * @param index 单元格在数据列表中的索引。\r\n     * @param time\t缓动时间。\r\n     * @param complete\t缓动结束回掉\r\n     */\r\n    tweenTo(index: number, time: number = 200, complete: Handler | null = null): void {\r\n        if (this._scrollBar) {\r\n            this._scrollBar.stopScroll();\r\n            let numX = this._isVertical ? this.repeatX : this.repeatY;\r\n            Tween.to(this._scrollBar, { value: Math.floor(index / numX) * this._cellSize }, time, null, complete, 0, true);\r\n        } else {\r\n            this.startIndex = index;\r\n            if (complete) complete.run();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _setCellChanged(): void {\r\n        if (!this._cellChanged) {\r\n            this._cellChanged = true;\r\n            this.callLater(this.changeCells);\r\n        }\r\n    }\r\n    /**@override */\r\n    protected commitMeasure(): void {\r\n        this.runCallLater(this.changeCells);\r\n    }\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Button } from \"./Button\";\r\nimport { List } from \"./List\";\r\nimport { ScrollType, Styles } from \"./Styles\";\r\nimport { Label } from \"./Label\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\n\r\n/**\r\n * 当用户更改 <code>ComboBox</code> 组件中的选定内容时调度。\r\n * @eventType laya.events.Event\r\n * selectedIndex属性变化时调度。\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>ComboBox</code> 组件包含一个下拉列表，用户可以从该列表中选择单个值。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>ComboBox</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.ComboBox;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class ComboBox_Example\r\n *\t\t{\r\n *\t\t\tpublic function ComboBox_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/button.png\", Handler.create(this,onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"资源加载完成！\");\r\n *\t\t\t\tvar comboBox:ComboBox = new ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\r\n *\t\t\t\tcomboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *\t\t\t\tcomboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *\t\t\t\tcomboBox.selectHandler = new Handler(this, onSelect);//设置 comboBox 选择项改变时执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onSelect(index:int):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选中的项对象索引： \",index);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高。\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * Laya.loader.load(\"resource/ui/button.png\",laya.utils.Handler.create(this,loadComplete));//加载资源\r\n * function loadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     var comboBox = new laya.ui.ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\r\n *     comboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *     comboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *     comboBox.selectHandler = new laya.utils.Handler(this, onSelect);//设置 comboBox 选择项改变时执行的处理器。\r\n *     Laya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\r\n * }\r\n * function onSelect(index)\r\n * {\r\n *     console.log(\"当前选中的项对象索引： \",index);\r\n * }\r\n * @example\r\n * import ComboBox = laya.ui.ComboBox;\r\n * import Handler = laya.utils.Handler;\r\n * class ComboBox_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/button.png\", Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         console.log(\"资源加载完成！\");\r\n *         var comboBox: ComboBox = new ComboBox(\"resource/ui/button.png\", \"item0,item1,item2,item3,item4,item5\");//创建一个 ComboBox 类的实例对象 comboBox ,传入它的皮肤和标签集。\r\n *         comboBox.x = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *         comboBox.y = 100;//设置 comboBox 对象的属性 x 的值，用于控制 comboBox 对象的显示位置。\r\n *         comboBox.selectHandler = new Handler(this, this.onSelect);//设置 comboBox 选择项改变时执行的处理器。\r\n *         Laya.stage.addChild(comboBox);//将此 comboBox 对象添加到显示列表。\r\n *     }\r\n *     private onSelect(index: number): void {\r\n *         console.log(\"当前选中的项对象索引： \", index);\r\n *     }\r\n * }\r\n *\r\n */\r\nexport class ComboBox extends UIComponent {\r\n    /**@private */\r\n    protected _visibleNum: number = 6;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _button: Button;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _list: List;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _isOpen: boolean;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _itemColors: string[];\r\n    /**\r\n     * @private\r\n     */\r\n    protected _itemPadding: number[];\r\n    /**\r\n     * @private\r\n     */\r\n    protected _itemSize: number = 12;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _labels: string[] = [];\r\n    /**\r\n     * @private\r\n     * 下拉提示文本\r\n     */\r\n    protected _defaultLabel: string = '';\r\n    /**\r\n     * @private\r\n     */\r\n    protected _selectedIndex: number = -1;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _selectHandler: Handler;\r\n    /**\r\n     * @private 下拉框列表单元的高度\r\n     */\r\n    protected _itemHeight: number;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _listHeight: number;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _listChanged: boolean;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _itemChanged: boolean;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _scrollBarSkin: string;\r\n    protected _scrollType: ScrollType = 0;\r\n    /**\r\n     * @private\r\n     */\r\n    protected _isCustomList: boolean;\r\n    /**\r\n     * 渲染项，用来显示下拉列表展示对象\r\n     */\r\n    itemRender: any = null;\r\n\r\n    /**\r\n     * 创建一个新的 <code>ComboBox</code> 组件实例。\r\n     * @param skin 皮肤资源地址。\r\n     * @param labels 下拉列表的标签集字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\r\n     */\r\n    constructor(skin: string = null, labels: string = null) {\r\n        super();\r\n\r\n        this._itemColors = Styles.comboBoxItemColors;\r\n        this._itemPadding = [3, 3, 3, 3];\r\n\r\n        this.skin = skin;\r\n        this.labels = labels;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeList);\r\n        ILaya.stage.off(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\r\n        super.destroy(destroyChild);\r\n        this._button && this._button.destroy(destroyChild);\r\n        this._list && this._list.destroy(destroyChild);\r\n        this._button = null;\r\n        this._list = null;\r\n        this._itemColors = null;\r\n        this._itemPadding = null;\r\n        this._itemHeight = null;\r\n        this._labels = null;\r\n        this._selectHandler = null;\r\n        this._defaultLabel = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected createChildren(): void {\r\n        this._button = new Button();\r\n        this._button.hideFlags = HideFlags.HideAndDontSave;\r\n        this._button.text.align = \"left\";\r\n        this._button.labelPadding = \"0,0,0,5\";\r\n        this._button.on(Event.MOUSE_DOWN, this, this.onButtonMouseDown);\r\n        this.addChild(this._button);\r\n    }\r\n\r\n    private _createList(): void {\r\n        this._list = new List();\r\n        this._list.hideFlags = HideFlags.HideAndDontSave;\r\n        this._list.scrollType = this._scrollType;\r\n        if (this._scrollBarSkin)\r\n            this._list.vScrollBarSkin = this._scrollBarSkin;\r\n        this._setListEvent(this._list);\r\n    }\r\n\r\n    private _setListEvent(list: List): void {\r\n        this._list.selectEnable = true;\r\n        this._list.on(Event.MOUSE_DOWN, this, this.onListDown);\r\n        this._list.mouseHandler = Handler.create(this, this.onlistItemMouse, null, false);\r\n        if (this._list.scrollBar) this._list.scrollBar.on(Event.MOUSE_DOWN, this, this.onScrollBarDown);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private onListDown(e: Event): void {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    private onScrollBarDown(e: Event): void {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    private onButtonMouseDown(e: Event): void {\r\n        this.callLater(this.switchTo, [!this._isOpen]);\r\n    }\r\n\r\n    get skin(): string {\r\n        return this._button.skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (this._button.skin != value) {\r\n            this._button.skin = value;\r\n            this._listChanged = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureWidth(): number {\r\n        return this._button.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureHeight(): number {\r\n        return this._button.height;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected changeList(): void {\r\n        this._listChanged = false;\r\n        var labelWidth: number = this.width - 2;\r\n        var labelColor: string = this._itemColors[2];\r\n        this._itemHeight = (this._itemHeight) ? this._itemHeight : this._itemSize + 6;\r\n        let _padding: string = (this.itemPadding) ? this.itemPadding : \"3,3,3,3\";\r\n        this._list.itemRender = this.itemRender || { type: \"Box\", child: [{ type: \"Label\", props: { name: \"label\", x: 1, padding: _padding, width: labelWidth, height: this._itemHeight, fontSize: this._itemSize, color: labelColor } }] };\r\n        this._list.repeatY = this._visibleNum;\r\n        this._list.refresh();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 下拉列表的鼠标事件响应函数。\r\n     */\r\n    protected onlistItemMouse(e: Event, index: number): void {\r\n        let type: string = e.type;\r\n        if (type === Event.MOUSE_OVER || type === Event.MOUSE_OUT) {\r\n            if (this._isCustomList) return;\r\n            let box = this._list.getCell(index);\r\n            if (!box) return;\r\n            let label: Label = (<Label>box.getChildByName(\"label\"));\r\n            if (label) {\r\n                if (type === Event.ROLL_OVER) {\r\n                    label.bgColor = this._itemColors[0];\r\n                    label.color = this._itemColors[1];\r\n                } else {\r\n                    label.bgColor = null;\r\n                    label.color = this._itemColors[2];\r\n                }\r\n            }\r\n        } else if (type === Event.CLICK) {\r\n            this.selectedIndex = index;\r\n            this.isOpen = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private switchTo(value: boolean): void {\r\n        this.isOpen = value;\r\n    }\r\n\r\n    /**\r\n     * 更改下拉列表的打开状态。\r\n     */\r\n    protected changeOpen(): void {\r\n        this.isOpen = !this._isOpen;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._button.width = this._width;\r\n        this._itemChanged = true;\r\n        this._listChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 下拉列表文本的边距Padding\r\n     * @readme <p><b>格式：</b>上边距,右边距,下边距,左边距</p>\r\n     */\r\n    get itemPadding(): string {\r\n        return this._itemPadding.join(\",\");\r\n    }\r\n\r\n    set itemPadding(value: string) {\r\n        this._itemPadding = UIUtils.fillArray(this._itemPadding, value, Number);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._button.height = this._height;\r\n    }\r\n\r\n    /**\r\n     * 标签集合字符串。\r\n     */\r\n    get labels(): string {\r\n        return this._labels.join(\",\");\r\n    }\r\n\r\n    set labels(value: string) {\r\n        if (this._labels.length > 0)\r\n            this.selectedIndex = -1;\r\n        if (value)\r\n            this._labels = value.split(\",\");\r\n        else\r\n            this._labels.length = 0;\r\n        this._itemChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 更改下拉列表。\r\n     */\r\n    protected changeItem(): void {\r\n        this._itemChanged = false;\r\n        //显示边框\r\n        this._listHeight = this._labels.length > 0 ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight;\r\n        if (!this._isCustomList) {\r\n            //填充背景\r\n            var g: Graphics = this._list.graphics;\r\n            g.clear();\r\n            g.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3]);\r\n        }\r\n\r\n        //填充数据\r\n        let a: any[] = this._list.array || [];\r\n        a.length = 0;\r\n        for (let i = 0, n = this._labels.length; i < n; i++) {\r\n            a.push({ label: this._labels[i] });\r\n        }\r\n        this._list.size(this.width, this._listHeight);\r\n        this._list.array = a;\r\n\r\n        //if (_visibleNum > a.length) {\r\n        //_list.height = _listHeight;\r\n        //} else {\r\n        //_list.height = 0;\r\n        //}\r\n    }\r\n\r\n    /**\r\n     * 表示选择的下拉列表项的索引。\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        if (this._selectedIndex != value) {\r\n            this._selectedIndex = value;\r\n\r\n            if (this._labels.length > 0)\r\n                this.changeSelected();\r\n            else\r\n                this.callLater(this.changeSelected);\r\n\r\n            this.event(Event.CHANGE, Event.EMPTY);\r\n            this._selectHandler && this._selectHandler.runWith(this._selectedIndex);\r\n        }\r\n    }\r\n\r\n    private changeSelected(): void {\r\n        this._button.label = this.selectedLabel;\r\n    }\r\n\r\n    /**\r\n    * 默认的下拉提示文本。\r\n    */\r\n    get defaultLabel(): string {\r\n        return this._defaultLabel;\r\n    }\r\n\r\n    set defaultLabel(value: string) {\r\n        this._defaultLabel = value;\r\n        this._selectedIndex < 0 && (this._button.label = value);\r\n    }\r\n\r\n    /**\r\n     * 改变下拉列表的选择项时执行的处理器(默认返回参数index:int)。\r\n     */\r\n    get selectHandler(): Handler {\r\n        return this._selectHandler;\r\n    }\r\n\r\n    set selectHandler(value: Handler) {\r\n        this._selectHandler = value;\r\n    }\r\n\r\n    /**\r\n     * 表示选择的下拉列表项的的标签。\r\n     */\r\n    get selectedLabel(): string {\r\n        return this._selectedIndex > -1 && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : this.defaultLabel;\r\n    }\r\n\r\n    set selectedLabel(value: string) {\r\n        this.selectedIndex = this._labels.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     * 获取或设置没有滚动条的下拉列表中可显示的最大行数。\r\n     */\r\n    get visibleNum(): number {\r\n        return this._visibleNum;\r\n    }\r\n\r\n    set visibleNum(value: number) {\r\n        this._visibleNum = value;\r\n        this._listChanged = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * 下拉列表项的高度\r\n     */\r\n    get itemHeight(): number {\r\n        return this._itemHeight;\r\n    }\r\n    set itemHeight(value: number) {\r\n        this._itemHeight = value;\r\n        this._listChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 下拉列表项颜色。\r\n     * <p><b>格式：</b>\"悬停或被选中时背景颜色,悬停或被选中时标签颜色,标签颜色,边框颜色,背景颜色\"</p>\r\n     */\r\n    get itemColors(): string {\r\n        return this._itemColors.join(\",\");\r\n    }\r\n\r\n    set itemColors(value: string) {\r\n        this._itemColors = UIUtils.fillArray(this._itemColors, value, String);\r\n        this._listChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 下拉列表项标签的字体大小。\r\n     */\r\n    get itemSize(): number {\r\n        return this._itemSize;\r\n    }\r\n\r\n    set itemSize(value: number) {\r\n        this._itemSize = value;\r\n        this._listChanged = true;\r\n    }\r\n\r\n    /**\r\n     * 表示下拉列表的打开状态。\r\n     */\r\n    get isOpen(): boolean {\r\n        return this._isOpen;\r\n    }\r\n\r\n    set isOpen(value: boolean) {\r\n        //var Laya = ILaya.Laya;\r\n        if (this._isOpen != value) {\r\n            this._isOpen = value;\r\n            this._button.selected = this._isOpen;\r\n            if (this._isOpen) {\r\n                this._list || this._createList();\r\n                this._listChanged && !this._isCustomList && this.changeList();\r\n                this._itemChanged && this.changeItem();\r\n\r\n                var p: Point = this.localToGlobal(Point.TEMP.setTo(0, 0));\r\n                var py: number = p.y + this._button.height;\r\n                py = py + this._listHeight <= ILaya.stage.height ? py : p.y - this._listHeight < 0 ? py : p.y - this._listHeight;\r\n\r\n                this._list.pos(p.x, py);\r\n                this._list.zOrder = 1001;\r\n\r\n                ILaya.stage.addChild(this._list);\r\n                //Laya.stage.once(Event.MOUSE_DOWN, this, removeList);\r\n                //Laya.stage.on(Event.MOUSE_WHEEL, this, _onStageMouseWheel);\r\n                //parent.addChild(_list);\r\n                ILaya.stage.once(Event.MOUSE_DOWN, this, this.removeList);\r\n                ILaya.stage.on(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\r\n                this._list.selectedIndex = this._selectedIndex;\r\n            } else {\r\n                this._list && this._list.removeSelf();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onStageMouseWheel(e: Event): void {\r\n        if (!this._list || this._list.contains(e.target)) return;\r\n        this.removeList(null);\r\n    }\r\n\r\n    /**\r\n     * 关闭下拉列表。\r\n     */\r\n    protected removeList(e: Event): void {\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this.removeList);\r\n        ILaya.stage.off(Event.MOUSE_WHEEL, this, this._onStageMouseWheel);\r\n        this.isOpen = false;\r\n    }\r\n\r\n    /**\r\n     * 滚动类型\r\n     */\r\n    get scrollType() {\r\n        return this._scrollType;\r\n    }\r\n\r\n    set scrollType(value: ScrollType) {\r\n        this._scrollType = value;\r\n    }\r\n\r\n    /**\r\n     * 滚动条皮肤。\r\n     */\r\n    get scrollBarSkin(): string {\r\n        return this._scrollBarSkin;\r\n    }\r\n\r\n    set scrollBarSkin(value: string) {\r\n        this._scrollBarSkin = value;\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的位图 <code>AutoImage</code> 实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this._button.sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        this._button.sizeGrid = value;\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>VScrollBar</code> 滚动条组件的引用。\r\n     */\r\n    get scrollBar(): VScrollBar {\r\n        return (<VScrollBar>this.list.scrollBar);\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的引用。\r\n     */\r\n    get button(): Button {\r\n        return this._button;\r\n    }\r\n\r\n    /**\r\n     * 获取对 <code>ComboBox</code> 组件所包含的 <code>List</code> 列表组件的引用。\r\n     */\r\n    get list(): List {\r\n        this._list || this._createList();\r\n        return this._list;\r\n    }\r\n\r\n    set list(value: List) {\r\n        if (value) {\r\n            value.removeSelf();\r\n            this._isCustomList = true;\r\n            this._list = value;\r\n            this._setListEvent(value);\r\n            this._itemHeight = value.getCell(0).height + value.spaceY;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_dataSource(value: any): void {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.selectedIndex = parseInt(value as string);\r\n        else if (value instanceof Array)\r\n            this.labels = ((<any[]>value)).join(\",\");\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**\r\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的文本标签颜色。\r\n     * <p><b>格式：</b>upColor,overColor,downColor</p>\r\n     */\r\n    get labelColors(): string {\r\n        return this._button.labelColors;\r\n    }\r\n\r\n    set labelColors(value: string) {\r\n        if (this._button.labelColors != value) {\r\n            this._button.labelColors = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的文本边距。\r\n     * <p><b>格式：</b>上边距,右边距,下边距,左边距</p>\r\n     */\r\n    get labelPadding(): string {\r\n        return this._button.text.padding.join(\",\");\r\n    }\r\n\r\n    set labelPadding(value: string) {\r\n        this._button.text.padding = UIUtils.fillArray(Styles.labelPadding, value, Number);\r\n    }\r\n\r\n    /**\r\n     * 获取或设置对 <code>ComboBox</code> 组件所包含的 <code>Button</code> 组件的标签字体大小。\r\n     */\r\n    get labelSize(): number {\r\n        return this._button.text.fontSize;\r\n    }\r\n\r\n    set labelSize(value: number) {\r\n        this._button.text.fontSize = value\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签是否为粗体字。\r\n     * @see laya.display.Text#bold\r\n     */\r\n    get labelBold(): boolean {\r\n        return this._button.text.bold;\r\n    }\r\n\r\n    set labelBold(value: boolean) {\r\n        this._button.text.bold = value\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\r\n     * @see laya.display.Text#font\r\n     */\r\n    get labelFont(): string {\r\n        return this._button.text.font;\r\n    }\r\n\r\n    set labelFont(value: string) {\r\n        this._button.text.font = value\r\n    }\r\n\r\n    /**\r\n     * 表示按钮的状态值。\r\n     * @see laya.ui.Button#stateNum\r\n     */\r\n    get stateNum(): number {\r\n        return this._button.stateNum;\r\n    }\r\n\r\n    set stateNum(value: number) {\r\n        this._button.stateNum = value\r\n    }\r\n}","import { Scene } from \"../display/Scene\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>View</code> 是一个视图类\r\n * 在2.0里，View继承自Scene类，但这是不合理的，Scene是一个2D+3D的大概念。所以在3.0里请忽略这个继承。\r\n */\r\nexport class View extends Scene {\r\n    /**@private 兼容老版本*/\r\n    static uiMap: any = {};\r\n    /**@internal */\r\n    _watchMap: any = {};\r\n    /**@private 控件的数据源。 */\r\n    protected _dataSource: any;\r\n\r\n    constructor() {\r\n        super(false);   // 先不要createChildren 因为 this._widget还没有赋值\r\n\r\n        //3.0里View并不是Scene\r\n        this._scene = null;\r\n\r\n        this.createChildren();\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老版本\r\n     * 注册UI配置信息，比如注册一个路径为\"test/TestPage\"的页面，UI内容是IDE生成的json\r\n     * @param\turl\t\tUI的路径\r\n     * @param\tjson\tUI内容\r\n     */\r\n    static regUI(url: string, json: any): void {\r\n        ILaya.loader.cacheRes(url, json);\r\n    }\r\n\r\n\r\n    /**@private */\r\n    changeData(key: string): void {\r\n        let arr: any[] = this._watchMap[key];\r\n        if (!arr) return;\r\n        for (let i = 0, n = arr.length; i < n; i++) {\r\n            let watcher: any = arr[i];\r\n            watcher.exe(this);\r\n        }\r\n    }\r\n\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        for (let name in value) {\r\n            let comp = this.getChildByName(name);\r\n            if (comp instanceof UIComponent)\r\n                comp.dataSource = value[name];\r\n            else if (name in this && !((this as any)[name] instanceof Function))\r\n                (this as any)[name] = value[name];\r\n        }\r\n    }\r\n}","import { UIConfig } from \"./../../UIConfig\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Box } from \"./Box\"\r\nimport { Dialog } from \"./Dialog\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { Ease } from \"../utils/Ease\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Tween } from \"../utils/Tween\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**打开任意窗口后调度。\r\n * @eventType Event.OPEN\r\n */\r\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\r\n/**关闭任意窗口后调度。\r\n * @eventType Event.CLOSE\r\n */\r\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>DialogManager</code> 对话框管理容器，所有的对话框都在该容器内，并且受管理器管理。\r\n * 任意对话框打开和关闭，都会出发管理类的open和close事件\r\n * 可以通过UIConfig设置弹出框背景透明度，模式窗口点击边缘是否关闭，点击窗口是否切换层次等\r\n * 通过设置对话框的zOrder属性，可以更改弹出的层次\r\n */\r\nexport class DialogManager extends Sprite {\r\n    /**遮罩层*/\r\n    maskLayer: Sprite = new Sprite();\r\n    /**锁屏层*/\r\n    lockLayer: Sprite;\r\n\r\n    /**@private 全局默认弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null*/\r\n    popupEffect = (dialog: Dialog) => {\r\n        dialog.scale(1, 1);\r\n        dialog._effectTween = Tween.from(dialog, { x: ILaya.stage.width / 2, y: ILaya.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, Ease.backOut, Handler.create(this, this.doOpen, [dialog]), 0, false, false);\r\n    }\r\n\r\n    /**@private 全局默认关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null*/\r\n    closeEffect = (dialog: Dialog) => {\r\n        dialog._effectTween = Tween.to(dialog, { x: ILaya.stage.width / 2, y: ILaya.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, Ease.strongOut, Handler.create(this, this.doClose, [dialog]), 0, false, false);\r\n    }\r\n\r\n    /**全局默认关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null*/\r\n    popupEffectHandler: Handler = new Handler(this, this.popupEffect);\r\n    /**全局默认弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null*/\r\n    closeEffectHandler: Handler = new Handler(this, this.closeEffect);\r\n\r\n    /**\r\n     * 创建一个新的 <code>DialogManager</code> 类实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.mouseEnabled = this.maskLayer.mouseEnabled = true;\r\n        this.zOrder = 1000;\r\n        ILaya.stage.addChild(this);\r\n        ILaya.stage.on(Event.RESIZE, this, this._onResize);\r\n        if (UIConfig.closeDialogOnSide) this.maskLayer.on(\"click\", this, this._closeOnSide);\r\n        this._onResize(null);\r\n    }\r\n\r\n    private _closeOnSide(): void {\r\n        var dialog: Dialog = (<Dialog>this.getChildAt(this.numChildren - 1));\r\n        if (dialog instanceof Dialog) dialog.close(\"side\");\r\n    }\r\n\r\n    /**设置锁定界面，如果为空则什么都不显示*/\r\n    setLockView(value: UIComponent): void {\r\n        if (!this.lockLayer) {\r\n            this.lockLayer = new Box();\r\n            this.lockLayer.mouseEnabled = true;\r\n            this.lockLayer.size(ILaya.stage.width, ILaya.stage.height);\r\n        }\r\n        this.lockLayer.removeChildren();\r\n        if (value) {\r\n            value.centerX = value.centerY = 0;\r\n            this.lockLayer.addChild(value);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _onResize(e: Event = null): void {\r\n        var width: number = this.maskLayer.width = ILaya.stage.width;\r\n        var height: number = this.maskLayer.height = ILaya.stage.height;\r\n        if (this.lockLayer) this.lockLayer.size(width, height);\r\n\r\n        this.maskLayer.graphics.clear(true);\r\n        this.maskLayer.graphics.drawRect(0, 0, width, height, UIConfig.popupBgColor);\r\n        this.maskLayer.alpha = UIConfig.popupBgAlpha;\r\n\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var item: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (item.isPopupCenter) this._centerDialog(item);\r\n        }\r\n    }\r\n\r\n    private _centerDialog(dialog: Dialog): void {\r\n        dialog.x = Math.round(((ILaya.stage.width - dialog.width) >> 1) + dialog.pivotX);\r\n        dialog.y = Math.round(((ILaya.stage.height - dialog.height) >> 1) + dialog.pivotY);\r\n    }\r\n\r\n    /**\r\n     * 显示对话框\r\n     * @param dialog 需要显示的对象框 <code>Dialog</code> 实例。\r\n     * @param closeOther 是否关闭其它对话框，若值为ture，则关闭其它的对话框。\r\n     * @param showEffect 是否显示弹出效果\r\n     */\r\n    open(dialog: Dialog, closeOther: boolean = false, showEffect: boolean = false): void {\r\n        if (closeOther) this._closeAll();\r\n        this._clearDialogEffect(dialog);\r\n        if (dialog.isPopupCenter) this._centerDialog(dialog);\r\n        this.addChild(dialog);\r\n        if (dialog.isModal || this._getBit(NodeFlags.HAS_ZORDER)) ILaya.timer.callLater(this, this._checkMask);\r\n        if (showEffect && dialog.popupEffect != null) dialog.popupEffect.runWith(dialog);\r\n        else this.doOpen(dialog);\r\n        this.event(Event.OPEN);\r\n    }\r\n\r\n    /**@private */\r\n    private _clearDialogEffect(dialog: Dialog): void {\r\n        if (dialog._effectTween) {\r\n            Tween.clear(dialog._effectTween);\r\n            dialog._effectTween = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 执行打开对话框。\r\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\r\n     */\r\n    doOpen(dialog: Dialog): void {\r\n        dialog.onOpened(dialog._param);\r\n    }\r\n\r\n    /**\r\n     * 锁定所有层，显示加载条信息，防止双击\r\n     */\r\n    lock(value: boolean): void {\r\n        if (this.lockLayer) {\r\n            if (value) this.addChild(this.lockLayer);\r\n            else this.lockLayer.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭对话框。\r\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\r\n     */\r\n    close(dialog: Dialog): void {\r\n        this._clearDialogEffect(dialog);\r\n        if (dialog.isShowEffect && dialog.closeEffect != null) dialog.closeEffect.runWith([dialog]);\r\n        else this.doClose(dialog);\r\n        this.event(Event.CLOSE);\r\n    }\r\n\r\n    /**\r\n     * 执行关闭对话框。\r\n     * @param dialog 需要关闭的对象框 <code>Dialog</code> 实例。\r\n     */\r\n    doClose(dialog: Dialog): void {\r\n        dialog.removeSelf();\r\n        dialog.isModal && this._checkMask();\r\n        dialog.closeHandler && dialog.closeHandler.runWith(dialog.closeType);\r\n        dialog.onClosed(dialog.closeType);\r\n        if (dialog.autoDestroyAtClosed) dialog.destroy();\r\n    }\r\n\r\n    /**\r\n     * 关闭所有的对话框。\r\n     */\r\n    closeAll(): void {\r\n        this._closeAll();\r\n        this.event(Event.CLOSE);\r\n    }\r\n\r\n    /**@private */\r\n    private _closeAll(): void {\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var item: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (item && item.close != null) {\r\n                this.doClose(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据组获取所有对话框\r\n     * @param\tgroup 组名称\r\n     * @return\t对话框数组\r\n     */\r\n    getDialogsByGroup(group: string): any[] {\r\n        var arr: any[] = [];\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var item: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (item && item.group === group) {\r\n                arr.push(item);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 根据组关闭所有弹出框\r\n     * @param\tgroup 需要关闭的组名称\r\n     * @return\t需要关闭的对话框数组\r\n     */\r\n    closeByGroup(group: string): any[] {\r\n        var arr: any[] = [];\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var item: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (item && item.group === group) {\r\n                item.close();\r\n                arr.push(item);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**@internal 发生层次改变后，重新检查遮罩层是否正确*/\r\n    _checkMask(): void {\r\n        if (this._destroyed) return;\r\n        this.maskLayer.removeSelf();\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var dialog: Dialog = (<Dialog>this.getChildAt(i));\r\n            if (dialog && dialog.isModal) {\r\n                //trace(numChildren,i);\r\n                this.addChildAt(this.maskLayer, i);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}","import { View } from \"./View\";\r\nimport { DialogManager } from \"./DialogManager\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Button } from \"./Button\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Tween } from \"../utils/Tween\"\r\n\r\n/**\r\n * <code>Dialog</code> 组件是一个弹出对话框，实现对话框弹出，拖动，模式窗口功能。\r\n * 可以通过UIConfig设置弹出框背景透明度，模式窗口点击边缘是否关闭等\r\n * 通过设置zOrder属性，可以更改弹出的层次\r\n * 通过设置popupEffect和closeEffect可以设置弹出效果和关闭效果，如果不想有任何弹出关闭效果，可以设置前述属性为空\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Dialog</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Dialog;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class Dialog_Example\r\n *\t\t{\r\n *\t\t\tprivate var dialog:Dialog_Instance;\r\n *\t\t\tpublic function Dialog_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load(\"resource/ui/btn_close.png\", Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tdialog = new Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\r\n *\t\t\t\tdialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\r\n *\t\t\t\tdialog.show();//显示 dialog。\r\n *\t\t\t\tdialog.closeHandler = new Handler(this, onClose);//设置 dialog 的关闭函数处理器。\r\n *\t\t\t}\r\n *\t\t\tprivate function onClose(name:String):void\r\n *\t\t\t{\r\n *\t\t\t\tif (name == Dialog.CLOSE)\r\n *\t\t\t\t{\r\n *\t\t\t\t\ttrace(\"通过点击 name 为\" + name +\"的组件，关闭了dialog。\");\r\n *\t\t\t\t}\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n *\timport laya.ui.Button;\r\n *\timport laya.ui.Dialog;\r\n *\timport laya.ui.Image;\r\n *\tclass Dialog_Instance extends Dialog\r\n *\t{\r\n *\t\tfunction Dialog_Instance():void\r\n *\t\t{\r\n *\t\t\tvar bg:Image = new Image(\"resource/ui/bg.png\");\r\n *\t\t\tbg.sizeGrid = \"40,10,5,10\";\r\n *\t\t\tbg.width = 150;\r\n *\t\t\tbg.height = 250;\r\n *\t\t\taddChild(bg);\r\n *\t\t\tvar image:Image = new Image(\"resource/ui/image.png\");\r\n *\t\t\taddChild(image);\r\n *\t\t\tvar button:Button = new Button(\"resource/ui/btn_close.png\");\r\n *\t\t\tbutton.name = Dialog.CLOSE;//设置button的name属性值。\r\n *\t\t\tbutton.x = 0;\r\n *\t\t\tbutton.y = 0;\r\n *\t\t\taddChild(button);\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var dialog;\r\n * Laya.loader.load(\"resource/ui/btn_close.png\", laya.utils.Handler.create(this, loadComplete));//加载资源\r\n * (function (_super) {//新建一个类Dialog_Instance继承自laya.ui.Dialog。\r\n *     function Dialog_Instance() {\r\n *         Dialog_Instance.__super.call(this);//初始化父类\r\n *         var bg = new laya.ui.Image(\"resource/ui/bg.png\");//新建一个 Image 类的实例 bg 。\r\n *         bg.sizeGrid = \"10,40,10,5\";//设置 bg 的网格信息。\r\n *         bg.width = 150;//设置 bg 的宽度。\r\n *         bg.height = 250;//设置 bg 的高度。\r\n *         this.addChild(bg);//将 bg 添加到显示列表。\r\n *         var image = new laya.ui.Image(\"resource/ui/image.png\");//新建一个 Image 类的实例 image 。\r\n *         this.addChild(image);//将 image 添加到显示列表。\r\n *         var button = new laya.ui.Button(\"resource/ui/btn_close.png\");//新建一个 Button 类的实例 bg 。\r\n *         button.name = laya.ui.Dialog.CLOSE;//设置 button 的 name 属性值。\r\n *         button.x = 0;//设置 button 对象的属性 x 的值，用于控制 button 对象的显示位置。\r\n *         button.y = 0;//设置 button 对象的属性 y 的值，用于控制 button 对象的显示位置。\r\n *         this.addChild(button);//将 button 添加到显示列表。\r\n *     };\r\n *     Laya.class(Dialog_Instance,\"mypackage.dialogExample.Dialog_Instance\",_super);//注册类Dialog_Instance。\r\n * })(laya.ui.Dialog);\r\n * function loadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     dialog = new mypackage.dialogExample.Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\r\n *     dialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\r\n *     dialog.show();//显示 dialog。\r\n *     dialog.closeHandler = new laya.utils.Handler(this, onClose);//设置 dialog 的关闭函数处理器。\r\n * }\r\n * function onClose(name) {\r\n *     if (name == laya.ui.Dialog.CLOSE) {\r\n *         console.log(\"通过点击 name 为\" + name + \"的组件，关闭了dialog。\");\r\n *     }\r\n * }\r\n * @example\r\n * import Dialog = laya.ui.Dialog;\r\n * import Handler = laya.utils.Handler;\r\n * class Dialog_Example {\r\n *     private dialog: Dialog_Instance;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load(\"resource/ui/btn_close.png\", Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.dialog = new Dialog_Instance();//创建一个 Dialog_Instance 类的实例对象 dialog。\r\n *         this.dialog.dragArea = \"0,0,150,50\";//设置 dialog 的拖拽区域。\r\n *         this.dialog.show();//显示 dialog。\r\n *         this.dialog.closeHandler = new Handler(this, this.onClose);//设置 dialog 的关闭函数处理器。\r\n *     }\r\n *     private onClose(name: string): void {\r\n *         if (name == Dialog.CLOSE) {\r\n *             console.log(\"通过点击 name 为\" + name + \"的组件，关闭了dialog。\");\r\n *         }\r\n *     }\r\n * }\r\n * import Button = laya.ui.Button;\r\n * class Dialog_Instance extends Dialog {\r\n *     Dialog_Instance(): void {\r\n *         var bg: laya.ui.Image = new laya.ui.Image(\"resource/ui/bg.png\");\r\n *         bg.sizeGrid = \"40,10,5,10\";\r\n *         bg.width = 150;\r\n *         bg.height = 250;\r\n *         this.addChild(bg);\r\n *         var image: laya.ui.Image = new laya.ui.Image(\"resource/ui/image.png\");\r\n *         this.addChild(image);\r\n *         var button: Button = new Button(\"resource/ui/btn_close.png\");\r\n *         button.name = Dialog.CLOSE;//设置button的name属性值。\r\n *         button.x = 0;\r\n *         button.y = 0;\r\n *         this.addChild(button);\r\n *     }\r\n * }\r\n */\r\nexport class Dialog extends View {\r\n    /**对话框内的某个按钮命名为close，点击此按钮则会关闭*/\r\n    static CLOSE: string = \"close\";\r\n    /**对话框内的某个按钮命名为cancel，点击此按钮则会关闭*/\r\n    static CANCEL: string = \"cancel\";\r\n    /**对话框内的某个按钮命名为sure，点击此按钮则会关闭*/\r\n    static SURE: string = \"sure\";\r\n    /**对话框内的某个按钮命名为no，点击此按钮则会关闭*/\r\n    static NO: string = \"no\";\r\n    /**对话框内的某个按钮命名为yes，点击此按钮则会关闭*/\r\n    static YES: string = \"yes\";\r\n    /**对话框内的某个按钮命名为ok，点击此按钮则会关闭*/\r\n    static OK: string = \"ok\";\r\n\r\n    /**@private 表示对话框管理器。*/\r\n    private static _manager: DialogManager;\r\n\r\n    /**对话框管理容器，所有的对话框都在该容器内，并且受管理器管理，可以自定义自己的管理器，来更改窗口管理的流程。\r\n     * 任意对话框打开和关闭，都会触发管理类的open和close事件*/\r\n    static get manager(): DialogManager {\r\n        return Dialog._manager = Dialog._manager || new DialogManager();\r\n    }\r\n\r\n    static set manager(value: DialogManager) {\r\n        Dialog._manager = value;\r\n    }\r\n\r\n    /**\r\n     * 对话框被关闭时会触发的回调函数处理器。\r\n     * <p>回调函数参数为用户点击的按钮名字name:String。</p>\r\n     */\r\n    closeHandler: Handler;\r\n    /**\r\n     * 弹出对话框效果，可以设置一个效果代替默认的弹出效果，如果不想有任何效果，可以赋值为null\r\n     * 全局默认弹出效果可以通过manager.popupEffect修改\r\n     */\r\n    popupEffect: Handler;\r\n    /**\r\n     * 关闭对话框效果，可以设置一个效果代替默认的关闭效果，如果不想有任何效果，可以赋值为null\r\n     * 全局默认关闭效果可以通过manager.closeEffect修改\r\n     */\r\n    closeEffect: Handler;\r\n    /**组名称*/\r\n    group: string;\r\n    /**是否是模式窗口*/\r\n    isModal: boolean;\r\n    /**是否显示弹出效果*/\r\n    isShowEffect: boolean = true;\r\n    /**指定对话框是否居中弹。<p>如果值为true，则居中弹出，否则，则根据对象坐标显示，默认为true。</p>*/\r\n    isPopupCenter: boolean = true;\r\n    /**关闭类型，点击name为\"close\"，\"cancel\"，\"sure\"，\"no\"，\"yes\"，\"no\"的按钮时，会自动记录点击按钮的名称*/\r\n    closeType: string;\r\n    /**@private */\r\n    private _dragArea: Rectangle;\r\n    /**@internal */\r\n    _param: any;\r\n    /**@internal */\r\n    _effectTween: Tween;\r\n\r\n    constructor() {\r\n        super();\r\n        this.popupEffect = Dialog.manager.popupEffectHandler;\r\n        this.closeEffect = Dialog.manager.closeEffectHandler;\r\n        this._dealDragArea();\r\n        this.on(Event.CLICK, this, this._onClick);\r\n    }\r\n\r\n    /**@private 提取拖拽区域*/\r\n    protected _dealDragArea(): void {\r\n        var dragTarget: Sprite = (<Sprite>this.getChildByName(\"drag\"));\r\n        if (dragTarget) {\r\n            this.dragArea = dragTarget._x + \",\" + dragTarget._y + \",\" + dragTarget.width + \",\" + dragTarget.height;\r\n            dragTarget.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 用来指定对话框的拖拽区域。默认值为\"0,0,0,0\"。\r\n     * <p><b>格式：</b>构成一个矩形所需的 x,y,width,heith 值，用逗号连接为字符串。\r\n     * 例如：\"0,0,100,200\"。</p>\r\n     * @see #includeExamplesSummary 请参考示例\r\n     */\r\n    get dragArea(): string {\r\n        if (this._dragArea) return this._dragArea.toString();\r\n        return null;\r\n    }\r\n\r\n    set dragArea(value: string) {\r\n        if (value) {\r\n            var a: any[] = UIUtils.fillArray([0, 0, 0, 0], value, Number);\r\n            this._dragArea = new Rectangle(a[0], a[1], a[2], a[3]);\r\n            this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        } else {\r\n            this._dragArea = null;\r\n            this.off(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _onMouseDown(e: Event): void {\r\n        var point: Point = this.getMousePoint();\r\n        if (this._dragArea.contains(point.x, point.y)) this.startDrag();\r\n        else this.stopDrag();\r\n    }\r\n\r\n    /**@private 处理默认点击事件*/\r\n    protected _onClick(e: Event): void {\r\n        var btn: Button = (<Button>e.target);\r\n        if (btn) {\r\n            switch (btn.name) {\r\n                case Dialog.CLOSE:\r\n                case Dialog.CANCEL:\r\n                case Dialog.SURE:\r\n                case Dialog.NO:\r\n                case Dialog.OK:\r\n                case Dialog.YES:\r\n                    this.close(btn.name);\r\n                    return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    open(closeOther: boolean = true, param: any = null): void {\r\n        this._dealDragArea();\r\n        this._param = param;\r\n        Dialog.manager.open(this, closeOther, this.isShowEffect);\r\n        Dialog.manager.lock(false);\r\n    }\r\n\r\n    /**\r\n     * 关闭对话框。\r\n     * @param type 关闭的原因，会传递给onClosed函数\r\n     * @override\r\n     */\r\n    close(type: string = null): void {\r\n        this.closeType = type;\r\n        Dialog.manager.close(this);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this.closeHandler = null;\r\n        this.popupEffect = null;\r\n        this.closeEffect = null;\r\n        this._dragArea = null;\r\n        super.destroy(destroyChild);\r\n        Dialog.manager._checkMask();\r\n    }\r\n\r\n    /**\r\n     * 显示对话框（以非模式窗口方式显示）。\r\n     * @param closeOther 是否关闭其它的对话框。若值为true则关闭其它对话框。\r\n     * @param showEffect 是否显示弹出效果\r\n     */\r\n    show(closeOther: boolean = false, showEffect: boolean = true): void {\r\n        this._open(false, closeOther, showEffect);\r\n    }\r\n\r\n    /**\r\n     * 显示对话框（以模式窗口方式显示）。\r\n     * @param closeOther 是否关闭其它的对话框。若值为true则关闭其它对话框。\r\n     * @param showEffect 是否显示弹出效果\r\n     */\r\n    popup(closeOther: boolean = false, showEffect: boolean = true): void {\r\n        this._open(true, closeOther, showEffect);\r\n    }\r\n\r\n    /**@private */\r\n    protected _open(modal: boolean, closeOther: boolean, showEffect: boolean): void {\r\n        this.isModal = modal;\r\n        this.isShowEffect = showEffect;\r\n        Dialog.manager.lock(true);\r\n        this.open(closeOther);\r\n    }\r\n\r\n    /**弹出框的显示状态；如果弹框处于显示中，则为true，否则为false;*/\r\n    get isPopup(): boolean {\r\n        return this.parent != null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set zOrder(value: number) {\r\n        super.zOrder = value;\r\n        Dialog.manager._checkMask();\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get zOrder() {\r\n        return super.zOrder;\r\n    }\r\n\r\n    /**\r\n     * 设置锁定界面，在界面未准备好前显示锁定界面，准备完毕后则移除锁定层，如果为空则什么都不显示\r\n     * @param\tview 锁定界面内容\r\n     */\r\n    static setLockView(view: UIComponent): void {\r\n        Dialog.manager.setLockView(view);\r\n    }\r\n\r\n    /**\r\n     * 锁定所有层，显示加载条信息，防止下面内容被点击\r\n     */\r\n    static lock(value: boolean): void {\r\n        Dialog.manager.lock(value);\r\n    }\r\n\r\n    /**关闭所有对话框。*/\r\n    static closeAll(): void {\r\n        Dialog.manager.closeAll();\r\n    }\r\n\r\n    /**\r\n     * 根据组获取对话框集合\r\n     * @param\tgroup 组名称\r\n     * @return\t对话框数组\r\n     */\r\n    static getDialogsByGroup(group: string): any[] {\r\n        return Dialog.manager.getDialogsByGroup(group);\r\n    }\r\n\r\n    /**\r\n     * 根据组关闭所有弹出框\r\n     * @param\tgroup 需要关闭的组名称\r\n     */\r\n    static closeByGroup(group: string): any[] {\r\n        return Dialog.manager.closeByGroup(group);\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { Clip } from \"./Clip\"\r\n\r\n/**\r\n * 字体切片，简化版的位图字体，只需设置一个切片图片和文字内容即可使用，效果同位图字体\r\n * 使用方式：设置位图字体皮肤skin，设置皮肤对应的字体内容sheet（如果多行，可以使用空格换行），示例：\r\n * fontClip.skin = \"font1.png\";//设置皮肤\r\n * fontClip.sheet = \"abc123 456\";//设置皮肤对应的内容，空格换行。此皮肤为2行5列（显示时skin会被等分为2行5列），第一行对应的文字为\"abc123\"，第二行为\"456\"\r\n * fontClip.value = \"a1326\";//显示\"a1326\"文字\r\n */\r\nexport class FontClip extends Clip {\r\n    /**数值*/\r\n    protected _valueArr: string = '';\r\n    /**文字内容数组**/\r\n    protected _indexMap: Record<string, number> = null;\r\n    /**位图字体内容**/\r\n    protected _sheet: string = null;\r\n    /**@private */\r\n    protected _direction: string = \"horizontal\";\r\n    /**X方向间隙*/\r\n    protected _spaceX: number = 0;\r\n    /**Y方向间隙*/\r\n    protected _spaceY: number = 0;\r\n    /**@private 水平对齐方式*/\r\n    private _align: string = \"left\";\r\n    /**@private 显示文字宽*/\r\n    private _wordsW: number = 0;\r\n    /**@private 显示文字高*/\r\n    private _wordsH: number = 0;\r\n\r\n    /**\r\n     * @param skin 位图字体皮肤\r\n     * @param sheet 位图字体内容，空格代表换行\r\n     */\r\n    constructor(skin: string = null, sheet: string = null) {\r\n        super();\r\n        if (skin) this.skin = skin;\r\n        if (sheet) this.sheet = sheet;\r\n    }\r\n\r\n    /**\r\n     * 资源加载完毕\r\n     */\r\n    protected loadComplete(url: string, img: Texture): void {\r\n        super.loadComplete(url, img);\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n        ////屏蔽Clip类操作\r\n    }\r\n\r\n    /**\r\n     * 设置位图字体内容，空格代表换行。比如\"abc123 456\"，代表第一行对应的文字为\"abc123\"，第二行为\"456\"\r\n     */\r\n    get sheet(): string {\r\n        return this._sheet;\r\n    }\r\n\r\n    set sheet(value: string) {\r\n        value += \"\";\r\n        this._sheet = value;\r\n        //根据空格换行\r\n        var arr: any[] = value.split(\" \");\r\n        this._clipX = String(arr[0]).length;\r\n        this.clipY = arr.length;\r\n\r\n        this._indexMap = {};\r\n        for (var i: number = 0; i < this._clipY; i++) {\r\n            var line: any[] = arr[i].split(\"\");\r\n            for (var j: number = 0, n: number = line.length; j < n; j++) {\r\n                this._indexMap[line[j]] = i * this._clipX + j;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置位图字体的显示内容\r\n     */\r\n    get value(): string {\r\n        if (!this._valueArr) return \"\";\r\n        return this._valueArr;\r\n    }\r\n\r\n    set value(value: string) {\r\n        value += \"\";\r\n        this._valueArr = value;\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**\r\n     * 布局方向。\r\n     * <p>默认值为\"horizontal\"。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"horizontal\"：表示水平布局。</li>\r\n     * <li>\"vertical\"：表示垂直布局。</li>\r\n     * </p>\r\n     */\r\n    get direction(): string {\r\n        return this._direction;\r\n    }\r\n\r\n    set direction(value: string) {\r\n        this._direction = value;\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**X方向文字间隙*/\r\n    get spaceX(): number {\r\n        return this._spaceX;\r\n    }\r\n\r\n    set spaceX(value: number) {\r\n        this._spaceX = value;\r\n        if (this._direction === \"horizontal\") this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**Y方向文字间隙*/\r\n    get spaceY(): number {\r\n        return this._spaceY;\r\n    }\r\n\r\n    set spaceY(value: number) {\r\n        this._spaceY = value;\r\n        if (!(this._direction === \"horizontal\")) this.callLater(this.changeValue);\r\n    }\r\n\r\n\r\n    set align(v: string) {\r\n        this._align = v;\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**水平对齐方式*/\r\n    get align(): string {\r\n        return this._align;\r\n    }\r\n\r\n    /**渲染数值*/\r\n    protected changeValue(): void {\r\n        if (!this._sources) return;\r\n        if (!this._valueArr) return;\r\n        this.graphics.clear(true);\r\n        let texture: Texture;\r\n        texture = this._sources[0];\r\n        if (!texture) return;\r\n        var isHorizontal: boolean = (this._direction === \"horizontal\");\r\n        if (isHorizontal) {\r\n            this._wordsW = this._valueArr.length * (texture.sourceWidth + this.spaceX);\r\n            this._wordsH = texture.sourceHeight;\r\n        } else {\r\n            this._wordsW = texture.sourceWidth;\r\n            this._wordsH = (texture.sourceHeight + this.spaceY) * this._valueArr.length;\r\n        }\r\n        let dX: number = 0;\r\n        if (this._isWidthSet) {\r\n            switch (this._align) {\r\n                case \"center\":\r\n                    dX = 0.5 * (this._width - this._wordsW);\r\n                    break;\r\n                case \"right\":\r\n                    dX = this._width - this._wordsW;\r\n                    break;\r\n                default:\r\n                    dX = 0;\r\n            }\r\n        }\r\n\r\n        for (let i = 0, sz = this._valueArr.length; i < sz; i++) {\r\n            let index = this._indexMap[this._valueArr.charAt(i)];\r\n            texture = this._sources[index];\r\n            if (!texture)\r\n                continue;\r\n\r\n            if (isHorizontal)\r\n                this.graphics.drawImage(texture, dX + i * (texture.sourceWidth + this.spaceX), 0, texture.sourceWidth, texture.sourceHeight);\r\n            else\r\n                this.graphics.drawImage(texture, 0 + dX, i * (texture.sourceHeight + this.spaceY), texture.sourceWidth, texture.sourceHeight);\r\n        }\r\n\r\n        if (!this._isWidthSet) {\r\n            this._widget.resetLayoutX();\r\n            this.callLater(this._sizeChanged);\r\n        }\r\n        if (!this._isHeightSet) {\r\n            this._widget.resetLayoutY();\r\n            this.callLater(this._sizeChanged);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected measureWidth(): number {\r\n        return this._wordsW;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected measureHeight(): number {\r\n        return this._wordsH;\r\n    }\r\n    /**\r\n     * \r\n     * @param destroyChild \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._valueArr = null;\r\n        this._indexMap = null;\r\n        this.graphics.clear(true);\r\n\r\n        super.destroy(destroyChild);\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * <code>LayoutBox</code> 是一个布局容器类。\r\n */\r\nexport class LayoutBox extends Box {\r\n    /**@private */\r\n    protected _space: number = 0;\r\n    /**@private */\r\n    protected _align: string = \"none\";\r\n    /**@private */\r\n    protected _itemChanged: boolean = false;\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n    */\r\n    addChild<T extends Node>(child: T): T {\r\n        child.on(Event.RESIZE, this, this.onResize);\r\n        this._setItemChanged();\r\n        return super.addChild(child);\r\n    }\r\n\r\n    private onResize(e: Event): void {\r\n        this._setItemChanged();\r\n    }\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n    */\r\n    addChildAt(child: Node, index: number): Node {\r\n        child.on(Event.RESIZE, this, this.onResize);\r\n        this._setItemChanged();\r\n        return super.addChildAt(child, index);\r\n    }\r\n\r\n    /**\r\n     *  @inheritDoc\t\r\n     * @override\r\n    */\r\n    removeChildAt(index: number): Node {\r\n        this.getChildAt(index).off(Event.RESIZE, this, this.onResize);\r\n        this._setItemChanged();\r\n        return super.removeChildAt(index);\r\n    }\r\n\r\n    /** 刷新。*/\r\n    refresh(): void {\r\n        this._setItemChanged();\r\n    }\r\n\r\n    /**\r\n     * 改变子对象的布局。\r\n     */\r\n    protected changeItems(): void {\r\n        this._itemChanged = false;\r\n    }\r\n\r\n    /** 子对象的间隔。*/\r\n    get space(): number {\r\n        return this._space;\r\n    }\r\n\r\n    set space(value: number) {\r\n        this._space = value;\r\n        this._setItemChanged();\r\n    }\r\n\r\n    /** 子对象对齐方式。*/\r\n    get align(): string {\r\n        return this._align;\r\n    }\r\n\r\n    set align(value: string) {\r\n        this._align = value;\r\n        this._setItemChanged();\r\n    }\r\n\r\n    /**\r\n     * 排序项目列表。可通过重写改变默认排序规则。\r\n     * @param items  项目列表。\r\n     */\r\n    protected sortItem(items: any[]): void {\r\n        if (items) items.sort(function (a: any, b: any): number { return a.y - b.y; });\r\n    }\r\n\r\n    protected _setItemChanged(): void {\r\n        if (!this._itemChanged) {\r\n            this._itemChanged = true;\r\n            this.callLater(this.changeItems);\r\n        }\r\n    }\r\n}","import { LayoutBox } from \"./LayoutBox\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n * <code>HBox</code> 是一个水平布局容器类。\r\n */\r\nexport class HBox extends LayoutBox {\r\n    /**\r\n     * 无对齐。\r\n     */\r\n    static NONE: string = \"none\";\r\n    /**\r\n     * 居顶部对齐。\r\n     */\r\n    static TOP: string = \"top\";\r\n    /**\r\n     * 居中对齐。\r\n     */\r\n    static MIDDLE: string = \"middle\";\r\n    /**\r\n     * 居底部对齐。\r\n     */\r\n    static BOTTOM: string = \"bottom\";\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n     */\r\n    protected sortItem(items: any[]): void {\r\n        if (items) items.sort(function (a: any, b: any): number { return a.x - b.x; });\r\n    }\r\n    /**\r\n     * @inheritDoc\t\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this.callLater(this.changeItems);\r\n    }\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n     */\r\n    protected changeItems(): void {\r\n        this._itemChanged = false;\r\n        var items: any[] = [];\r\n        var maxHeight = 0;\r\n        for (let i = 0, n = this.numChildren; i < n; i++) {\r\n            let item = (<UIComponent>this.getChildAt(i));\r\n            if (item) {\r\n                item.x = 0;\r\n                items.push(item);\r\n                maxHeight = this._isHeightSet ? this._height : Math.max(maxHeight, item.height * item.scaleY);\r\n            }\r\n        }\r\n        this.sortItem(items);\r\n        let left = 0;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            let item = items[i];\r\n            item.x = left;\r\n            left += item.width * item.scaleX + this._space;\r\n            if (this._align == HBox.TOP) {\r\n                item.y = 0;\r\n            } else if (this._align == HBox.MIDDLE) {\r\n                item.y = (maxHeight - item.height * item.scaleY) * 0.5;\r\n            } else if (this._align == HBox.BOTTOM) {\r\n                item.y = maxHeight - item.height * item.scaleY;\r\n            }\r\n        }\r\n        this._sizeChanged();\r\n    }\r\n}","import { Slider } from \"./Slider\";\r\n\r\n/**\r\n * 使用 <code>HSlider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\r\n * <p> <code>HSlider</code> 控件采用水平方向。滑块轨道从左向右扩展，而标签位于轨道的顶部或底部。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>HSlider</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.HSlider;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class HSlider_Example\r\n *\t\t{\r\n *\t\t\tprivate var hSlider:HSlider;\r\n *\t\t\tpublic function HSlider_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\thSlider = new HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\r\n *\t\t\t\thSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\r\n *\t\t\t\thSlider.min = 0;//设置 hSlider 最低位置值。\r\n *\t\t\t\thSlider.max = 10;//设置 hSlider 最高位置值。\r\n *\t\t\t\thSlider.value = 2;//设置 hSlider 当前位置值。\r\n *\t\t\t\thSlider.tick = 1;//设置 hSlider 刻度值。\r\n *\t\t\t\thSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\r\n *\t\t\t\thSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\r\n *\t\t\t\thSlider.changeHandler = new Handler(this, onChange);//设置 hSlider 位置变化处理器。\r\n *\t\t\t\tLaya.stage.addChild(hSlider);//把 hSlider 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"滑块的位置： value=\" + value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800, \"canvas\");//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var hSlider;\r\n * var res = [\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"];\r\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));\r\n * function onLoadComplete() {\r\n *     console.log(\"资源加载完成！\");\r\n *     hSlider = new laya.ui.HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\r\n *     hSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\r\n *     hSlider.min = 0;//设置 hSlider 最低位置值。\r\n *     hSlider.max = 10;//设置 hSlider 最高位置值。\r\n *     hSlider.value = 2;//设置 hSlider 当前位置值。\r\n *     hSlider.tick = 1;//设置 hSlider 刻度值。\r\n *     hSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\r\n *     hSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\r\n *     hSlider.changeHandler = new laya.utils.Handler(this, onChange);//设置 hSlider 位置变化处理器。\r\n *     Laya.stage.addChild(hSlider);//把 hSlider 添加到显示列表。\r\n * }\r\n * function onChange(value)\r\n * {\r\n *     console.log(\"滑块的位置： value=\" + value);\r\n * }\r\n * @example\r\n * import Handler = laya.utils.Handler;\r\n * import HSlider = laya.ui.HSlider;\r\n * class HSlider_Example {\r\n *     private hSlider: HSlider;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/hslider.png\", \"resource/ui/hslider$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.hSlider = new HSlider();//创建一个 HSlider 类的实例对象 hSlider 。\r\n *         this.hSlider.skin = \"resource/ui/hslider.png\";//设置 hSlider 的皮肤。\r\n *         this.hSlider.min = 0;//设置 hSlider 最低位置值。\r\n *         this.hSlider.max = 10;//设置 hSlider 最高位置值。\r\n *         this.hSlider.value = 2;//设置 hSlider 当前位置值。\r\n *         this.hSlider.tick = 1;//设置 hSlider 刻度值。\r\n *         this.hSlider.x = 100;//设置 hSlider 对象的属性 x 的值，用于控制 hSlider 对象的显示位置。\r\n *         this.hSlider.y = 100;//设置 hSlider 对象的属性 y 的值，用于控制 hSlider 对象的显示位置。\r\n *         this.hSlider.changeHandler = new Handler(this, this.onChange);//设置 hSlider 位置变化处理器。\r\n *         Laya.stage.addChild(this.hSlider);//把 hSlider 添加到显示列表。\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"滑块的位置： value=\" + value);\r\n *     }\r\n * }\r\n *\r\n * @see laya.ui.Slider\r\n*/\r\nexport class HSlider extends Slider {\r\n\r\n    /**\r\n     * 创建一个 <code>HSlider</code> 类实例。\r\n     * @param skin 皮肤。\r\n     */\r\n    constructor(skin: string = null) {\r\n        super(skin);\r\n        this.isVertical = false;\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { HScrollBar } from \"./HScrollBar\";\r\nimport { ScrollBar } from \"./ScrollBar\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { ScrollType } from \"./Styles\";\r\n\r\n/**\r\n * <code>Panel</code> 是一个面板容器类。\r\n */\r\nexport class Panel extends Box {\r\n    /**@private */\r\n    protected _content: Box;\r\n    /**@private */\r\n    protected _vScrollBar: VScrollBar;\r\n    /**@private */\r\n    protected _hScrollBar: HScrollBar;\r\n    /**@private */\r\n    protected _scrollChanged: boolean;\r\n    /**@private */\r\n    protected _usedCache: string = null;\r\n    /**@private */\r\n    protected _elasticEnabled: boolean = false;\r\n\r\n    protected _scrollType: ScrollType = 0;\r\n    protected _vScrollBarSkin: string;\r\n    protected _hScrollBarSkin: string;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Panel</code> 类实例。\r\n     * <p>在 <code>Panel</code> 构造函数中设置属性width、height的值都为100。</p>\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.width = this.height = 100;\r\n        //子对象缩放的情况下，优化会有问题，先屏蔽掉\r\n        //_content.optimizeScrollRect = true;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._content && this._content.destroy(destroyChild);\r\n        this._vScrollBar && this._vScrollBar.destroy(destroyChild);\r\n        this._hScrollBar && this._hScrollBar.destroy(destroyChild);\r\n        this._vScrollBar = null;\r\n        this._hScrollBar = null;\r\n        this._content = null;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    destroyChildren(): void {\r\n        this._content.destroyChildren();\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    protected createChildren(): void {\r\n        this._content = new Box();\r\n        this._content.hideFlags = HideFlags.HideAndDontSave;\r\n        super.addChild(this._content);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    addChild<T extends Node>(child: T): T {\r\n        child.on(Event.RESIZE, this, this.onResize);\r\n        this._setScrollChanged();\r\n        return this._content.addChild(child);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 子对象的 <code>Event.RESIZE</code> 事件侦听处理函数。\r\n     */\r\n    private onResize(): void {\r\n        this._setScrollChanged();\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    addChildAt(child: Node, index: number): Node {\r\n        child.on(Event.RESIZE, this, this.onResize);\r\n        this._setScrollChanged();\r\n        return this._content.addChildAt(child, index);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    removeChild(child: Node): Node {\r\n        child.off(Event.RESIZE, this, this.onResize);\r\n        this._setScrollChanged();\r\n        if (child._parent == this && this._children) {\r\n            let index = this._children.indexOf(child);\r\n            if (index != -1) {\r\n                this._children.splice(index, 1);\r\n                (<any>child)._setParent(null);\r\n            }\r\n            return child;\r\n        }\r\n        else\r\n            return this._content.removeChild(child);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    removeChildAt(index: number): Node {\r\n        this.getChildAt(index).off(Event.RESIZE, this, this.onResize);\r\n        this._setScrollChanged();\r\n        return this._content.removeChildAt(index);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\r\n        this._content.removeChildren(beginIndex, endIndex);\r\n        this._setScrollChanged();\r\n        return this;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getChildAt(index: number): Node {\r\n        return this._content.getChildAt(index);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getChildByName(name: string): Node {\r\n        return this._content.getChildByName(name);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getChildIndex(child: Node): number {\r\n        return this._content.getChildIndex(child);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    get numChildren(): number {\r\n        return this._content.numChildren;\r\n    }\r\n\r\n    /**@private */\r\n    private changeScroll(): void {\r\n        this._scrollChanged = false;\r\n        var contentW = this.contentWidth || 1;\r\n        var contentH = this.contentHeight || 1;\r\n\r\n        var vscroll = this._vScrollBar;\r\n        var hscroll = this._hScrollBar;\r\n\r\n        var vShow = vscroll && contentH > this._height;\r\n        var hShow = hscroll && contentW > this._width;\r\n        var showWidth = vShow ? this._width - vscroll.width : this._width;\r\n        var showHeight = hShow ? this._height - hscroll.height : this._height;\r\n\r\n        if (vscroll) {\r\n            vscroll.height = this._height - (hShow ? hscroll.height : 0);\r\n            vscroll.scrollSize = Math.max(this._height * 0.033, 1);\r\n            vscroll.thumbPercent = showHeight / contentH;\r\n            vscroll.setScroll(0, contentH - showHeight);\r\n        }\r\n        if (hscroll) {\r\n            hscroll.width = this._width - (vShow ? vscroll.width : 0);\r\n            hscroll.scrollSize = Math.max(this._width * 0.033, 1);\r\n            hscroll.thumbPercent = showWidth / contentW;\r\n            hscroll.setScroll(0, contentW - showWidth);\r\n        }\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    protected _sizeChanged(): void {\r\n        super._sizeChanged();\r\n        this.setContentSize(this._width, this._height);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取内容宽度（以像素为单位）。\r\n     */\r\n    get contentWidth(): number {\r\n        var max = 0;\r\n        for (var i = this._content.numChildren - 1; i > -1; i--) {\r\n            var comp = <Sprite>this._content.getChildAt(i);\r\n            max = Math.max(comp._x + comp.width * comp.scaleX - comp.pivotX, max);\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取内容高度（以像素为单位）。\r\n     */\r\n    get contentHeight(): number {\r\n        let max = 0;\r\n        for (let i = this._content.numChildren - 1; i > -1; i--) {\r\n            let comp = <Sprite>this._content.getChildAt(i);\r\n            max = Math.max(comp._y + comp.height * comp.scaleY - comp.pivotY, max);\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置内容的宽度、高度（以像素为单位）。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     */\r\n    private setContentSize(width: number, height: number): void {\r\n        let content = this._content;\r\n        content.width = width;\r\n        content.height = height;\r\n        content._style.scrollRect || (content.scrollRect = Rectangle.create());\r\n        content._style.scrollRect.setTo(0, 0, width, height);\r\n        content.scrollRect = content.scrollRect;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._setScrollChanged();\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._setScrollChanged();\r\n    }\r\n\r\n\r\n    get scrollType() {\r\n        return this._scrollType;\r\n    }\r\n\r\n    set scrollType(value: ScrollType) {\r\n        this._scrollType = value;\r\n\r\n        if (this._scrollType == ScrollType.None) {\r\n            if (this._hScrollBar) {\r\n                this._hScrollBar.destroy();\r\n                this._hScrollBar = null;\r\n            }\r\n            if (this._vScrollBar) {\r\n                this._vScrollBar.destroy();\r\n                this._vScrollBar = null;\r\n            }\r\n        }\r\n        else if (this._scrollType == ScrollType.Horizontal) {\r\n            if (this._vScrollBar) {\r\n                this._vScrollBar.destroy();\r\n                this._vScrollBar = null;\r\n            }\r\n\r\n            if (this._hScrollBar)\r\n                this._hScrollBar.skin = this._hScrollBarSkin;\r\n            else\r\n                this.createHScrollBar();\r\n        }\r\n        else if (this._scrollType == ScrollType.Vertical) {\r\n            if (this._hScrollBar) {\r\n                this._hScrollBar.destroy();\r\n                this._hScrollBar = null;\r\n            }\r\n\r\n            if (this._vScrollBar)\r\n                this._vScrollBar.skin = this._vScrollBarSkin;\r\n            else\r\n                this.createVScrollBar();\r\n        }\r\n        else { //both\r\n            if (this._hScrollBar)\r\n                this._hScrollBar.skin = this._hScrollBarSkin;\r\n            else\r\n                this.createHScrollBar();\r\n            if (this._vScrollBar)\r\n                this._vScrollBar.skin = this._vScrollBarSkin;\r\n            else\r\n                this.createVScrollBar();\r\n        }\r\n    }\r\n\r\n    private createHScrollBar() {\r\n        let scrollBar = this._hScrollBar = new HScrollBar();\r\n        scrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n        scrollBar.on(Event.CHANGE, this, this.onScrollBarChange, [scrollBar]);\r\n        scrollBar.target = this._content;\r\n        scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\r\n        scrollBar.bottom = 0;\r\n        scrollBar._skinBaseUrl = this._skinBaseUrl;\r\n        scrollBar.skin = this._hScrollBarSkin;\r\n        scrollBar.on(Event.LOADED, this, this._setScrollChanged);\r\n        super.addChild(scrollBar);\r\n        this._setScrollChanged();\r\n    }\r\n\r\n    private createVScrollBar() {\r\n        let scrollBar = this._vScrollBar = new VScrollBar();\r\n        scrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n        scrollBar.on(Event.CHANGE, this, this.onScrollBarChange, [scrollBar]);\r\n        scrollBar.target = this._content;\r\n        scrollBar.elasticDistance = this._elasticEnabled ? 200 : 0;\r\n        scrollBar.right = 0;\r\n        scrollBar._skinBaseUrl = this._skinBaseUrl;\r\n        scrollBar.skin = this._vScrollBarSkin;\r\n        scrollBar.on(Event.LOADED, this, this._setScrollChanged);\r\n        super.addChild(scrollBar);\r\n        this._setScrollChanged();\r\n    }\r\n\r\n    /**\r\n     * 垂直方向滚动条皮肤。\r\n     */\r\n    get vScrollBarSkin(): string {\r\n        return this._vScrollBarSkin;\r\n    }\r\n\r\n    set vScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._vScrollBarSkin != value) {\r\n            this._vScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Vertical;\r\n            else if (this._scrollType == ScrollType.Horizontal)\r\n                this.scrollType = ScrollType.Both;\r\n            else\r\n                this.scrollType = this._scrollType;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 水平方向滚动条皮肤。\r\n     */\r\n    get hScrollBarSkin(): string {\r\n        return this._hScrollBarSkin;\r\n    }\r\n\r\n    set hScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._hScrollBarSkin != value) {\r\n            this._hScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Horizontal;\r\n            else if (this._scrollType == ScrollType.Vertical)\r\n                this.scrollType = ScrollType.Both;\r\n            this.scrollType = this._scrollType;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 垂直方向滚动条对象。\r\n     */\r\n    get vScrollBar(): ScrollBar {\r\n        return this._vScrollBar;\r\n    }\r\n\r\n    /**\r\n     * 水平方向滚动条对象。\r\n     */\r\n    get hScrollBar(): ScrollBar {\r\n        return this._hScrollBar;\r\n    }\r\n\r\n    /**\r\n     * 获取内容容器对象。\r\n     */\r\n    get content(): Sprite {\r\n        return this._content;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滚动条的<code><code>Event.MOUSE_DOWN</code>事件侦听处理函数。</code>事件侦听处理函数。\r\n     * @param scrollBar 滚动条对象。\r\n     * @param e Event 对象。\r\n     */\r\n    protected onScrollBarChange(scrollBar: ScrollBar): void {\r\n        var rect = this._content._style.scrollRect;\r\n        if (rect) {\r\n            var start = Math.round(scrollBar.value);\r\n            scrollBar.isVertical ? rect.y = start : rect.x = start;\r\n            this._content.scrollRect = rect;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>滚动内容容器至设定的垂直、水平方向滚动条位置。</p>\r\n     * @param x 水平方向滚动条属性value值。滚动条位置数字。\r\n     * @param y 垂直方向滚动条属性value值。滚动条位置数字。\r\n     */\r\n    scrollTo(x: number = 0, y: number = 0): void {\r\n        if (this.vScrollBar) this.vScrollBar.value = y;\r\n        if (this.hScrollBar) this.hScrollBar.value = x;\r\n    }\r\n\r\n    /**\r\n     * 刷新滚动内容。\r\n     */\r\n    refresh(): void {\r\n        this.changeScroll();\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set cacheAs(value: string) {\r\n        super.cacheAs = value;\r\n        this._usedCache = null;\r\n        if (value !== \"none\") {\r\n            this._hScrollBar && this._hScrollBar.on(Event.START, this, this.onScrollStart);\r\n            this._vScrollBar && this._vScrollBar.on(Event.START, this, this.onScrollStart);\r\n        } else {\r\n            this._hScrollBar && this._hScrollBar.off(Event.START, this, this.onScrollStart);\r\n            this._vScrollBar && this._vScrollBar.off(Event.START, this, this.onScrollStart);\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get cacheAs() {\r\n        return super.cacheAs;\r\n    }\r\n\r\n    /**是否开启橡皮筋效果*/\r\n    get elasticEnabled(): boolean {\r\n        return this._elasticEnabled;\r\n    }\r\n\r\n    set elasticEnabled(value: boolean) {\r\n        this._elasticEnabled = value;\r\n        if (this._vScrollBar) {\r\n            this._vScrollBar.elasticDistance = value ? 200 : 0;\r\n        }\r\n        if (this._hScrollBar) {\r\n            this._hScrollBar.elasticDistance = value ? 200 : 0;\r\n        }\r\n    }\r\n\r\n    private onScrollStart(): void {\r\n        this._usedCache || (this._usedCache = super.cacheAs);\r\n        super.cacheAs = \"none\";\r\n        this._hScrollBar && this._hScrollBar.once(Event.END, this, this.onScrollEnd);\r\n        this._vScrollBar && this._vScrollBar.once(Event.END, this, this.onScrollEnd);\r\n    }\r\n\r\n    private onScrollEnd(): void {\r\n        super.cacheAs = this._usedCache;\r\n    }\r\n\r\n    /**@private */\r\n    protected _setScrollChanged(): void {\r\n        if (!this._scrollChanged) {\r\n            this._scrollChanged = true;\r\n            this.callLater(this.changeScroll);\r\n        }\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { Image } from \"./Image\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { HideFlags } from \"../Const\"\r\nimport { URL } from \"../net/URL\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { AssetDb } from \"../resource/AssetDb\"\r\n\r\n/**\r\n * 值发生改变后调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>ProgressBar</code> 组件显示内容的加载进度。\r\n * @example <caption>以下示例代码，创建了一个新的 <code>ProgressBar</code> 实例，设置了它的皮肤、位置、宽高、网格等信息，并添加到舞台上。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.ProgressBar;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class ProgressBar_Example\r\n *\t\t{\r\n *\t\t\tprivate var progressBar:ProgressBar;\r\n *\t\t\tpublic function ProgressBar_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tprogressBar = new ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\r\n *\t\t\t\tprogressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\r\n *\t\t\t\tprogressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\r\n *\t\t\t\tprogressBar.value = 0.3;//设置 progressBar 的进度值。\r\n *\t\t\t\tprogressBar.width = 200;//设置 progressBar 的宽度。\r\n *\t\t\t\tprogressBar.height = 50;//设置 progressBar 的高度。\r\n *\t\t\t\tprogressBar.sizeGrid = \"5,10,5,10\";//设置 progressBar 的网格信息。\r\n *\t\t\t\tprogressBar.changeHandler = new Handler(this, onChange);//设置 progressBar 的value值改变时执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(progressBar);//将 progressBar 添加到显示列表。\r\n *\t\t\t\tLaya.timer.once(3000, this, changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\r\n *\t\t\t}\r\n *\t\t\tprivate function changeValue():void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"改变进度条的进度值。\");\r\n *\t\t\t\tprogressBar.value = 0.6;\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"进度发生改变： value=\" ,value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var res = [\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"];\r\n * Laya.loader.load(res, laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete()\r\n * {\r\n *     progressBar = new laya.ui.ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\r\n *     progressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\r\n *     progressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\r\n *     progressBar.value = 0.3;//设置 progressBar 的进度值。\r\n *     progressBar.width = 200;//设置 progressBar 的宽度。\r\n *     progressBar.height = 50;//设置 progressBar 的高度。\r\n *     progressBar.sizeGrid = \"10,5,10,5\";//设置 progressBar 的网格信息。\r\n *     progressBar.changeHandler = new laya.utils.Handler(this, onChange);//设置 progressBar 的value值改变时执行的处理器。\r\n *     Laya.stage.addChild(progressBar);//将 progressBar 添加到显示列表。\r\n *     Laya.timer.once(3000, this, changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\r\n * }\r\n * function changeValue()\r\n * {\r\n *     console.log(\"改变进度条的进度值。\");\r\n *     progressBar.value = 0.6;\r\n * }\r\n * function onChange(value)\r\n * {\r\n *     console.log(\"进度发生改变： value=\" ,value);\r\n * }\r\n * @example\r\n * import ProgressBar = laya.ui.ProgressBar;\r\n * import Handler = laya.utils.Handler;\r\n * class ProgressBar_Example {\r\n *     private progressBar: ProgressBar;\r\n *     public ProgressBar_Example() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/progress.png\", \"resource/ui/progress$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.progressBar = new ProgressBar(\"resource/ui/progress.png\");//创建一个 ProgressBar 类的实例对象 progressBar 。\r\n *         this.progressBar.x = 100;//设置 progressBar 对象的属性 x 的值，用于控制 progressBar 对象的显示位置。\r\n *         this.progressBar.y = 100;//设置 progressBar 对象的属性 y 的值，用于控制 progressBar 对象的显示位置。\r\n *         this.progressBar.value = 0.3;//设置 progressBar 的进度值。\r\n *         this.progressBar.width = 200;//设置 progressBar 的宽度。\r\n *         this.progressBar.height = 50;//设置 progressBar 的高度。\r\n *         this.progressBar.sizeGrid = \"5,10,5,10\";//设置 progressBar 的网格信息。\r\n *         this.progressBar.changeHandler = new Handler(this, this.onChange);//设置 progressBar 的value值改变时执行的处理器。\r\n *         Laya.stage.addChild(this.progressBar);//将 progressBar 添加到显示列表。\r\n *         Laya.timer.once(3000, this, this.changeValue);//设定 3000ms（毫秒）后，执行函数changeValue。\r\n *     }\r\n *     private changeValue(): void {\r\n *         console.log(\"改变进度条的进度值。\");\r\n *         this.progressBar.value = 0.6;\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"进度发生改变： value=\", value);\r\n *     }\r\n * }\r\n */\r\nexport class ProgressBar extends UIComponent {\r\n    /**\r\n     * 当 <code>ProgressBar</code> 实例的 <code>value</code> 属性发生变化时的函数处理器。\r\n     * <p>默认返回参数<code>value</code> 属性（进度值）。</p>\r\n     */\r\n    changeHandler: Handler;\r\n    /**@private */\r\n    protected _bg: Image;\r\n    /**@private */\r\n    protected _bar: Image;\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _value: number = 0.5;\r\n\r\n    /**\r\n     * 创建一个新的 <code>ProgressBar</code> 类实例。\r\n     * @param skin 皮肤地址。\r\n     */\r\n    constructor(skin: string = null) {\r\n        super();\r\n        this.skin = skin;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._bg && this._bg.destroy(destroyChild);\r\n        this._bar && this._bar.destroy(destroyChild);\r\n        this._bg = this._bar = null;\r\n        this.changeHandler = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected createChildren(): void {\r\n        this._bg = new Image();\r\n        this._bg.left = 0;\r\n        this._bg.right = 0;\r\n        this._bg.top = 0;\r\n        this._bg.bottom = 0;\r\n        this._bg.hideFlags = HideFlags.HideAndDontSave;\r\n        this.addChild(this._bg);\r\n\r\n        this._bar = new Image();\r\n        this._bar.hideFlags = HideFlags.HideAndDontSave;\r\n        this._bar.top = 0;\r\n        this._bar.bottom = 0;\r\n        this.addChild(this._bar);\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n\r\n        if (url) {\r\n            return AssetDb.inst.resolveURL(url).then(url => {\r\n                if (this._destroyed)\r\n                    return null;\r\n\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n\r\n                return Promise.all([\r\n                    this._bg._setSkin(url),\r\n                    this._bar._setSkin(Utils.replaceFileExtension(url, \"$bar.png\", true))\r\n                ]).then(() => this._skinLoaded());\r\n            });\r\n        }\r\n        else {\r\n            this._bg.skin = null;\r\n            this._bar.skin = null;\r\n            this._skinLoaded();\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this.callLater(this.changeValue);\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureWidth(): number {\r\n        return this._bg.width;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected measureHeight(): number {\r\n        return this._bg.height;\r\n    }\r\n\r\n    /**\r\n     * 当前的进度量。\r\n     * <p><b>取值：</b>介于0和1之间。</p>\r\n     */\r\n    get value(): number {\r\n        return this._value;\r\n    }\r\n\r\n    set value(num: number) {\r\n        if (this._value != num) {\r\n            num = num > 1 ? 1 : num < 0 ? 0 : num;\r\n            this._value = num;\r\n            this.callLater(this.changeValue);\r\n            this.event(Event.CHANGE);\r\n            this.changeHandler && this.changeHandler.runWith(num);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 更改进度值的显示。\r\n     */\r\n    protected changeValue(): void {\r\n        if (this.sizeGrid) {\r\n            let grid = this.sizeGrid.split(\",\");\r\n            let left = parseInt(grid[3]);\r\n            if (isNaN(left))\r\n                left = 0;\r\n            let right = parseInt(grid[1]);\r\n            if (isNaN(right))\r\n                right = 0;\r\n            let max = this.width - left - right;\r\n            let sw = max * this._value;\r\n            this._bar.width = left + right + sw;\r\n            this._bar.visible = this._bar.width > left + right;\r\n        } else {\r\n            this._bar.width = this.width * this._value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取进度条对象。\r\n     */\r\n    get bar(): Image {\r\n        return this._bar;\r\n    }\r\n\r\n    /**\r\n     * 获取背景条对象。\r\n     */\r\n    get bg(): Image {\r\n        return this._bg;\r\n    }\r\n\r\n    /**\r\n     * <p>当前 <code>ProgressBar</code> 实例的进度条背景位图（ <code>Image</code> 实例）的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this._bg.sizeGrid;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        this._bg.sizeGrid = this._bar.sizeGrid = value;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_width(value: number): void {\r\n        super.set_width(value);\r\n        this.callLater(this.changeValue);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_dataSource(value: any): void {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.value = Number(value);\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { Button } from \"./Button\"\r\n\r\n/**\r\n * <code>Radio</code> 控件使用户可在一组互相排斥的选择中做出一种选择。\r\n * 用户一次只能选择 <code>Radio</code> 组中的一个成员。选择未选中的组成员将取消选择该组中当前所选的 <code>Radio</code> 控件。 \r\n * @see laya.ui.RadioGroup\r\n */\r\nexport class Radio extends Button {\r\n\r\n    /**@private */\r\n    protected _value: any;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Radio</code> 类实例。 \r\n     * @param skin 皮肤。\r\n     * @param label 标签。\r\n     */\r\n    constructor(skin: string = null, label: string = \"\") {\r\n        super(skin, label);\r\n        // preinitialize 放到这里了，因为不知道什么时候调用\r\n        this.toggle = false;\r\n        this._autoSize = false;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    protected preinitialize(): void {\r\n        super.preinitialize();\r\n        this.toggle = false;\r\n        this._autoSize = false;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     * */\r\n    protected initialize(): void {\r\n        super.initialize();\r\n        this.createText();\r\n        this._text.align = \"left\";\r\n        this._text.valign = \"top\";\r\n        this._text.width = null;\r\n        this.on(Event.CLICK, this, this.onClick);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对象的<code>Event.CLICK</code>事件侦听处理函数。 \r\n     */\r\n    protected onClick(e: Event): void {\r\n        this.selected = true;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置 <code>Radio</code> 关联的可选用户定义值。\r\n     */\r\n    get value(): any {\r\n        return this._value != null ? this._value : this.label;\r\n    }\r\n\r\n    set value(obj: any) {\r\n        this._value = obj;\r\n    }\r\n    protected changeClips(): void {\r\n        super.changeClips();\r\n        this._setWidth(this._width);\r\n    }\r\n    _setWidth(value: number): void {\r\n        if (!this._autoSize) {\r\n            this._text.width = this.width - this._text.x;\r\n        }\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { ISelect } from \"./ISelect\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Button } from \"./Button\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { URL } from \"../net/URL\";\r\n\r\n/**\r\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Group</code> 是一个可以自动布局的项集合控件。\r\n * <p> <code>Group</code> 的默认项对象为 <code>Button</code> 类实例。\r\n * <code>Group</code> 是 <code>Tab</code> 和 <code>RadioGroup</code> 的基类。</p>\r\n */\r\nexport class UIGroup extends Box {\r\n\r\n    /**\r\n     * 改变 <code>Group</code> 的选择项时执行的处理器，(默认返回参数： 项索引（index:int）)。\r\n     */\r\n    selectHandler: Handler;\r\n\r\n    /**@private */\r\n    protected _items: ISelect[];\r\n    /**@private */\r\n    protected _selectedIndex: number = -1;\r\n    /**@private */\r\n    protected _skin: string;\r\n    /**@private */\r\n    protected _direction: string = \"horizontal\";\r\n    /**@private */\r\n    protected _space: number = 0;\r\n    /**@private */\r\n    protected _labels: string;\r\n    /**@private */\r\n    protected _labelColors: string;\r\n    /**@private */\r\n    private _labelFont: string;\r\n    /**@private */\r\n    protected _labelStrokeColor: string;\r\n    /**@private */\r\n    protected _strokeColors: string;\r\n    /**@private */\r\n    protected _labelStroke: number;\r\n    /**@private */\r\n    protected _labelSize: number;\r\n    /**@private */\r\n    protected _labelBold: boolean;\r\n    /**@private */\r\n    protected _labelPadding: string;\r\n    /**@private */\r\n    protected _labelAlign: string;\r\n    /**@private */\r\n    protected _stateNum: number;\r\n    /**@private */\r\n    protected _labelChanged: boolean;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Group</code> 类实例。\r\n     * @param labels 标签集字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\r\n     * @param skin 皮肤。\r\n     */\r\n    constructor(labels: string = null, skin: string = null) {\r\n        super();\r\n        this._items = [];\r\n        this.skin = skin;\r\n        this.labels = labels;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected preinitialize(): void {\r\n        this.mouseEnabled = true;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._items && (this._items.length = 0);\r\n        this._items = null;\r\n        this.selectHandler = null;\r\n    }\r\n\r\n    /**\r\n     * 添加一个项对象，返回此项对象的索引id。\r\n     *\r\n     * @param item 需要添加的项对象。\r\n     * @param autoLayout 是否自动布局，如果为true，会根据 <code>direction</code> 和 <code>space</code> 属性计算item的位置。\r\n     * @return\r\n     */\r\n    addItem(item: ISelect, autoLayout: boolean = true): number {\r\n        let display = (<Sprite>(item as any));\r\n        let index = this._items.length;\r\n        display.name = \"item\" + index;\r\n        this.addChild(display);\r\n        this.initItems();\r\n\r\n        if (autoLayout && index > 0) {\r\n            let preItem = (<Sprite>(this._items[index - 1] as any));\r\n            if (this._direction == \"horizontal\") {\r\n                display.x = preItem._x + preItem.width + this._space;\r\n            } else {\r\n                display.y = preItem._y + preItem.height + this._space;\r\n            }\r\n        } else {\r\n            if (autoLayout) {\r\n                display.x = 0;\r\n                display.y = 0;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * 删除一个项对象。\r\n     * @param item 需要删除的项对象。\r\n     * @param autoLayout 是否自动布局，如果为true，会根据 <code>direction</code> 和 <code>space</code> 属性计算item的位置。\r\n     */\r\n    delItem(item: ISelect, autoLayout: boolean = true): void {\r\n        var index: number = this._items.indexOf(item);\r\n        if (index != -1) {\r\n            let display: Sprite = (<Sprite>(item as any));\r\n            this.removeChild(display);\r\n            for (let i = index + 1, n = this._items.length; i < n; i++) {\r\n                let child = (<Sprite>(this._items[i] as any));\r\n                child.name = \"item\" + (i - 1);\r\n                if (autoLayout) {\r\n                    if (this._direction == \"horizontal\") {\r\n                        child.x -= display.width + this._space;\r\n                    } else {\r\n                        child.y -= display.height + this._space;\r\n                    }\r\n                }\r\n            }\r\n            this.initItems();\r\n            if (this._selectedIndex > -1) {\r\n                let newIndex = this._selectedIndex < this._items.length ? this._selectedIndex : (this._selectedIndex - 1);\r\n                this._selectedIndex = -1;\r\n                this.selectedIndex = newIndex;\r\n            }\r\n        }\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n        if (!this._labels)\r\n            this.initItems();\r\n    }\r\n\r\n    /**@internal 2.0解析会调用 */\r\n    _afterInited(): void {\r\n        this.initItems();\r\n    }\r\n\r\n    /**\r\n     * 初始化项对象们。\r\n     */\r\n    initItems(): void {\r\n        this._items.length = 0;\r\n        for (let i = 0; i < 10000; i++) {\r\n            let item = <ISelect>this.getChildByName(\"item\" + i);\r\n            if (item == null)\r\n                break;\r\n            this._items.push(item);\r\n            item.selected = (i === this._selectedIndex);\r\n            item.clickHandler = Handler.create(this, this.itemClick, [i], false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 项对象的点击事件侦听处理函数。\r\n     * @param index 项索引。\r\n     */\r\n    protected itemClick(index: number): void {\r\n        this.selectedIndex = index;\r\n    }\r\n\r\n    /**\r\n     * 表示当前选择的项索引。默认值为-1。\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        if (this._selectedIndex != value) {\r\n            this.setSelect(this._selectedIndex, false);\r\n            this._selectedIndex = value;\r\n            this.setSelect(value, true);\r\n            this.event(Event.CHANGE);\r\n            this.selectHandler && this.selectHandler.runWith(this._selectedIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过对象的索引设置项对象的 <code>selected</code> 属性值。\r\n     * @param index 需要设置的项对象的索引。\r\n     * @param selected 表示项对象的选中状态。\r\n     */\r\n    protected setSelect(index: number, selected: boolean): void {\r\n        if (this._items && index > -1 && index < this._items.length) this._items[index].selected = selected;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            if (Loader.getRes(url)) {\r\n                this._skinLoaded();\r\n                return Promise.resolve();\r\n            }\r\n            else\r\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded());\r\n        }\r\n        else {\r\n            this._skinLoaded();\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._setLabelChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * 标签集合字符串。以逗号做分割，如\"item0,item1,item2,item3,item4,item5\"。\r\n     */\r\n    get labels(): string {\r\n        return this._labels;\r\n    }\r\n\r\n    set labels(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._labels != value) {\r\n            this._labels = value;\r\n            let i = 0;\r\n            let n = this.numChildren;\r\n            while (i < n) {\r\n                let item = this.getChildAt(i);\r\n                if (item.hasHideFlag(HideFlags.HideAndDontSave) && item.name && item.name.startsWith(\"item\")) {\r\n                    this.removeChildAt(i);\r\n                    n--;\r\n                }\r\n                else\r\n                    i++;\r\n            }\r\n            this._setLabelChanged();\r\n            if (this._labels) {\r\n                let a = this._labels.split(\",\");\r\n                for (let i = 0, n = a.length; i < n; i++) {\r\n                    let item = this.createItem(this._skin, a[i]);\r\n                    item.name = \"item\" + i;\r\n                    item.hideFlags = HideFlags.HideAndDontSave;\r\n                    this.addChild(item);\r\n                }\r\n            }\r\n            this.initItems();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 创建一个项显示对象。\r\n     * @param skin 项对象的皮肤。\r\n     * @param label 项对象标签。\r\n     */\r\n    protected createItem(skin: string, label: string): Sprite {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Button#labelColors()\r\n     */\r\n    get labelColors(): string {\r\n        return this._labelColors;\r\n    }\r\n\r\n    set labelColors(value: string) {\r\n        if (this._labelColors != value) {\r\n            this._labelColors = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @see laya.display.Text.stroke()\r\n     */\r\n    get labelStroke(): number {\r\n        return this._labelStroke;\r\n    }\r\n\r\n    set labelStroke(value: number) {\r\n        if (this._labelStroke != value) {\r\n            this._labelStroke = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * 默认值为 \"#000000\"（黑色）;\r\n     * @see laya.display.Text.strokeColor()\r\n     */\r\n    get labelStrokeColor(): string {\r\n        return this._labelStrokeColor;\r\n    }\r\n\r\n    set labelStrokeColor(value: string) {\r\n        if (this._labelStrokeColor != value) {\r\n            this._labelStrokeColor = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示各个状态下的描边颜色。</p>\r\n     * @see laya.display.Text.strokeColor()\r\n     */\r\n    get strokeColors(): string {\r\n        return this._strokeColors;\r\n    }\r\n\r\n    set strokeColors(value: string) {\r\n        if (this._strokeColors != value) {\r\n            this._strokeColors = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体大小。\r\n     */\r\n    get labelSize(): number {\r\n        return this._labelSize;\r\n    }\r\n\r\n    set labelSize(value: number) {\r\n        if (this._labelSize != value) {\r\n            this._labelSize = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮的状态值，以数字表示，默认为3态。\r\n     * @see laya.ui.Button#stateNum\r\n     */\r\n    get stateNum(): number {\r\n        return this._stateNum;\r\n    }\r\n\r\n    set stateNum(value: number) {\r\n        if (this._stateNum != value) {\r\n            this._stateNum = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签是否为粗体字。\r\n     */\r\n    get labelBold(): boolean {\r\n        return this._labelBold;\r\n    }\r\n\r\n    set labelBold(value: boolean) {\r\n        if (this._labelBold != value) {\r\n            this._labelBold = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示按钮文本标签的字体名称，以字符串形式表示。\r\n     * @see laya.display.Text.font()\r\n     */\r\n    get labelFont(): string {\r\n        return this._labelFont;\r\n    }\r\n\r\n    set labelFont(value: string) {\r\n        if (this._labelFont != value) {\r\n            this._labelFont = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n    /**\r\n     * 表示按钮文本标签的边距。\r\n     * <p><b>格式：</b>\"上边距,右边距,下边距,左边距\"。</p>\r\n     */\r\n    get labelPadding(): string {\r\n        return this._labelPadding;\r\n    }\r\n\r\n    set labelPadding(value: string) {\r\n        if (this._labelPadding != value) {\r\n            this._labelPadding = value;\r\n            this._setLabelChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 布局方向。\r\n     * <p>默认值为\"horizontal\"。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"horizontal\"：表示水平布局。</li>\r\n     * <li>\"vertical\"：表示垂直布局。</li>\r\n     * </p>\r\n     */\r\n    get direction(): string {\r\n        return this._direction;\r\n    }\r\n\r\n    set direction(value: string) {\r\n        this._direction = value;\r\n        this._setLabelChanged();\r\n    }\r\n\r\n    /**\r\n     * 项对象们之间的间隔（以像素为单位）。\r\n     */\r\n    get space(): number {\r\n        return this._space;\r\n    }\r\n\r\n    set space(value: number) {\r\n        this._space = value;\r\n        this._setLabelChanged();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 更改项对象的属性值。\r\n     */\r\n    protected changeLabels(): void {\r\n        this._labelChanged = false;\r\n        if (this._items) {\r\n            var left: number = 0\r\n            for (var i: number = 0, n: number = this._items.length; i < n; i++) {\r\n                var btn: Button = (<Button>this._items[i]);\r\n                this._skin && (btn.skin = this._skin);\r\n                this._labelColors && (btn.labelColors = this._labelColors);\r\n                this._labelSize != null && (btn.labelSize = this._labelSize);\r\n                this._labelStroke != null && (btn.labelStroke = this._labelStroke);\r\n                this._labelStrokeColor && (btn.labelStrokeColor = this._labelStrokeColor);\r\n                this._strokeColors && (btn.strokeColors = this._strokeColors);\r\n                this._labelBold && (btn.labelBold = this._labelBold);\r\n                this._labelPadding && (btn.labelPadding = this._labelPadding);\r\n                this._labelAlign && (btn.labelAlign = this._labelAlign);\r\n                this._stateNum != null && (btn.stateNum = this._stateNum);\r\n                this._labelFont && (btn.labelFont = this._labelFont);\r\n                if (this._direction === \"horizontal\") {\r\n                    btn.y = 0;\r\n                    btn.x = left;\r\n                    left += btn.width + this._space;\r\n                } else {\r\n                    btn.x = 0;\r\n                    btn.y = left;\r\n                    left += btn.height + this._space;\r\n                }\r\n            }\r\n        }\r\n        this._sizeChanged();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected commitMeasure(): void {\r\n        this.runCallLater(this.changeLabels);\r\n    }\r\n\r\n    /**\r\n     * 项对象们的存放数组。\r\n     */\r\n    get items(): ISelect[] {\r\n        return this._items;\r\n    }\r\n\r\n    /**\r\n     * 获取或设置当前选择的项对象。\r\n     */\r\n    get selection(): ISelect {\r\n        return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;\r\n    }\r\n\r\n    set selection(value: ISelect) {\r\n        this.selectedIndex = this._items.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string')\r\n            this.selectedIndex = parseInt(value as string);\r\n        else if (value instanceof Array)\r\n            this.labels = ((<any[]>value)).join(\",\");\r\n        else\r\n            super.set_dataSource(value);\r\n    }\r\n\r\n    /**@private */\r\n    protected _setLabelChanged(): void {\r\n        if (!this._labelChanged) {\r\n            this._labelChanged = true;\r\n            this.callLater(this.changeLabels);\r\n        }\r\n    }\r\n}","import { UIGroup } from \"./UIGroup\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Radio } from \"./Radio\"\r\n\r\n/**\r\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>RadioGroup</code> 控件定义一组 <code>Radio</code> 控件，这些控件相互排斥；\r\n * 因此，用户每次只能选择一个 <code>Radio</code> 控件。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>RadioGroup</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Radio;\r\n *\t\timport laya.ui.RadioGroup;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class RadioGroup_Example\r\n *\t\t{\r\n *\t\t\tpublic function RadioGroup_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/radio.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar radioGroup:RadioGroup = new RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\r\n *\t\t\t\tradioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\r\n *\t\t\t\tradioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\r\n *\t\t\t\tradioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\r\n *\t\t\t\tradioGroup.space = 10;//设置 radioGroup 的项间隔距离。\r\n *\t\t\t\tradioGroup.selectHandler = new Handler(this, onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onSelect(index:int):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选择的单选按钮索引: index= \", index);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load([\"resource/ui/radio.png\"], laya.utils.Handler.create(this, onLoadComplete));\r\n * function onLoadComplete() {\r\n *     var radioGroup= new laya.ui.RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\r\n *     radioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\r\n *     radioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\r\n *     radioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\r\n *     radioGroup.space = 10;//设置 radioGroup 的项间隔距离。\r\n *     radioGroup.selectHandler = new laya.utils.Handler(this, onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\r\n *     Laya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\r\n * }\r\n * function onSelect(index) {\r\n *     console.log(\"当前选择的单选按钮索引: index= \", index);\r\n * }\r\n * @example\r\n * import Radio = laya.ui.Radio;\r\n * import RadioGroup = laya.ui.RadioGroup;\r\n * import Handler = laya.utils.Handler;\r\n * class RadioGroup_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/radio.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var radioGroup: RadioGroup = new RadioGroup();//创建一个 RadioGroup 类的实例对象 radioGroup 。\r\n *         radioGroup.pos(100, 100);//设置 radioGroup 的位置信息。\r\n *         radioGroup.labels = \"item0,item1,item2\";//设置 radioGroup 的标签集。\r\n *         radioGroup.skin = \"resource/ui/radio.png\";//设置 radioGroup 的皮肤。\r\n *         radioGroup.space = 10;//设置 radioGroup 的项间隔距离。\r\n *         radioGroup.selectHandler = new Handler(this, this.onSelect);//设置 radioGroup 的选择项发生改变时执行的处理器。\r\n *         Laya.stage.addChild(radioGroup);//将 radioGroup 添加到显示列表。\r\n *     }\r\n *     private onSelect(index: number): void {\r\n *         console.log(\"当前选择的单选按钮索引: index= \", index);\r\n *     }\r\n * }\r\n */\r\nexport class RadioGroup extends UIGroup {\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    protected createItem(skin: string, label: string): Sprite {\r\n        let btn = new Radio();\r\n        btn._skinBaseUrl = this._skinBaseUrl;\r\n        if (skin)\r\n            btn.skin = skin;\r\n        btn.label = label;\r\n        return btn;\r\n    }\r\n}","import { Box } from \"./Box\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 自适应缩放容器，容器设置大小后，容器大小始终保持stage大小，子内容按照原始最小宽高比缩放\r\n */\r\nexport class ScaleBox extends Box {\r\n    private _oldW: number = 0;\r\n    private _oldH: number = 0;\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    onEnable(): void {\r\n        ILaya.stage.on(\"resize\", this, this.onResize);\r\n        this.onResize();\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    onDisable(): void {\r\n        ILaya.stage.off(\"resize\", this, this.onResize);\r\n    }\r\n\r\n    private onResize(): void {\r\n        if (this.width > 0 && this.height > 0) {\r\n            let stage = ILaya.stage;\r\n            let scale = Math.min(stage.width / this._oldW, stage.height / this._oldH);\r\n            super.width = stage.width;\r\n            super.height = stage.height;\r\n            this.scale(scale, scale);\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    set_width(value: number): void {\r\n        super.set_width(value);\r\n        this._oldW = value;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set_height(value: number) {\r\n        super.set_height(value);\r\n        this._oldH = value;\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\"\r\nimport { Button } from \"./Button\"\r\nimport { Styles } from \"./Styles\";\r\nimport { UIGroup } from \"./UIGroup\"\r\n\r\n/**\r\n * 当 <code>Group</code> 实例的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Tab</code> 组件用来定义选项卡按钮组。\t *\r\n * <p>属性：<code>selectedIndex</code> 的默认值为-1。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>Tab</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Tab;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class Tab_Example\r\n *\t\t{\r\n *\t\t\tpublic function Tab_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/tab.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar tab:Tab = new Tab();//创建一个 Tab 类的实例对象 tab 。\r\n *\t\t\t\ttab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\r\n *\t\t\t\ttab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\r\n *\t\t\t\ttab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\r\n *\t\t\t\ttab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\r\n *\t\t\t\ttab.selectHandler = new Handler(this, onSelect);//设置 tab 的选择项发生改变时执行的处理器。\r\n *\t\t\t\tLaya.stage.addChild(tab);//将 tab 添到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onSelect(index:int):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"当前选择的表情页索引: index= \", index);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load([\"resource/ui/tab.png\"], laya.utils.Handler.create(this, onLoadComplete));\r\n * function onLoadComplete() {\r\n *     var tab = new laya.ui.Tab();//创建一个 Tab 类的实例对象 tab 。\r\n *     tab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\r\n *     tab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\r\n *     tab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\r\n *     tab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\r\n *     tab.selectHandler = new laya.utils.Handler(this, onSelect);//设置 tab 的选择项发生改变时执行的处理器。\r\n *     Laya.stage.addChild(tab);//将 tab 添到显示列表。\r\n * }\r\n * function onSelect(index) {\r\n *     console.log(\"当前选择的标签页索引: index= \", index);\r\n * }\r\n * @example\r\n * import Tab = laya.ui.Tab;\r\n * import Handler = laya.utils.Handler;\r\n * class Tab_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/tab.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var tab: Tab = new Tab();//创建一个 Tab 类的实例对象 tab 。\r\n *         tab.skin = \"resource/ui/tab.png\";//设置 tab 的皮肤。\r\n *         tab.labels = \"item0,item1,item2\";//设置 tab 的标签集。\r\n *         tab.x = 100;//设置 tab 对象的属性 x 的值，用于控制 tab 对象的显示位置。\r\n *         tab.y = 100;//设置 tab 对象的属性 y 的值，用于控制 tab 对象的显示位置。\r\n *         tab.selectHandler = new Handler(this, this.onSelect);//设置 tab 的选择项发生改变时执行的处理器。\r\n *         Laya.stage.addChild(tab);//将 tab 添到显示列表。\r\n *     }\r\n *     private onSelect(index: number): void {\r\n *         console.log(\"当前选择的表情页索引: index= \", index);\r\n *     }\r\n * }\r\n */\r\nexport class Tab extends UIGroup {\r\n    constructor() {\r\n        super();\r\n        this._stateNum = Styles.buttonStateNum;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected createItem(skin: string, label: string): Sprite {\r\n        let btn = new Button();\r\n        btn._skinBaseUrl = this._skinBaseUrl;\r\n        if (skin)\r\n            btn.skin = skin;\r\n        btn.label = label;\r\n        return btn;\r\n    }\r\n}","import { Label } from \"./Label\";\r\nimport { Input } from \"../display/Input\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { AutoBitmap } from \"./AutoBitmap\"\r\nimport { Styles } from \"./Styles\"\r\nimport { UIUtils } from \"./UIUtils\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { URL } from \"../net/URL\";\r\n\r\n/**\r\n * 输入文本后调度。\r\n * @eventType Event.INPUT\r\n */\r\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 在输入框内敲回车键后调度。\r\n * @eventType Event.ENTER\r\n */\r\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当获得输入焦点后调度。\r\n * @eventType Event.FOCUS\r\n */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当失去输入焦点后调度。\r\n * @eventType Event.BLUR\r\n */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>TextInput</code> 类用于创建显示对象以显示和输入文本。\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>TextInput</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.display.Stage;\r\n *\t\timport laya.ui.TextInput;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class TextInput_Example\r\n *\t\t{\r\n *\t\t\tpublic function TextInput_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/input.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar textInput:TextInput = new TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\r\n *\t\t\t\ttextInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\r\n *\t\t\t\ttextInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\r\n *\t\t\t\ttextInput.color = \"#008fff\";//设置 textInput 的文本颜色。\r\n *\t\t\t\ttextInput.font = \"Arial\";//设置 textInput 的文本字体。\r\n *\t\t\t\ttextInput.bold = true;//设置 textInput 的文本显示为粗体。\r\n *\t\t\t\ttextInput.fontSize = 30;//设置 textInput 的字体大小。\r\n *\t\t\t\ttextInput.wordWrap = true;//设置 textInput 的文本自动换行。\r\n *\t\t\t\ttextInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\r\n *\t\t\t\ttextInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\r\n *\t\t\t\ttextInput.width = 300;//设置 textInput 的宽度。\r\n *\t\t\t\ttextInput.height = 200;//设置 textInput 的高度。\r\n *\t\t\t\tLaya.stage.addChild(textInput);//将 textInput 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load([\"resource/ui/input.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     var textInput = new laya.ui.TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\r\n *     textInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\r\n *     textInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\r\n *     textInput.color = \"#008fff\";//设置 textInput 的文本颜色。\r\n *     textInput.font = \"Arial\";//设置 textInput 的文本字体。\r\n *     textInput.bold = true;//设置 textInput 的文本显示为粗体。\r\n *     textInput.fontSize = 30;//设置 textInput 的字体大小。\r\n *     textInput.wordWrap = true;//设置 textInput 的文本自动换行。\r\n *     textInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\r\n *     textInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\r\n *     textInput.width = 300;//设置 textInput 的宽度。\r\n *     textInput.height = 200;//设置 textInput 的高度。\r\n *     Laya.stage.addChild(textInput);//将 textInput 添加到显示列表。\r\n * }\r\n * @example\r\n * import Stage = laya.display.Stage;\r\n * import TextInput = laya.ui.TextInput;\r\n * import Handler = laya.utils.Handler;\r\n * class TextInput_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/input.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var textInput: TextInput = new TextInput(\"这是一个TextInput实例。\");//创建一个 TextInput 类的实例对象 textInput 。\r\n *         textInput.skin = \"resource/ui/input.png\";//设置 textInput 的皮肤。\r\n *         textInput.sizeGrid = \"4,4,4,4\";//设置 textInput 的网格信息。\r\n *         textInput.color = \"#008fff\";//设置 textInput 的文本颜色。\r\n *         textInput.font = \"Arial\";//设置 textInput 的文本字体。\r\n *         textInput.bold = true;//设置 textInput 的文本显示为粗体。\r\n *         textInput.fontSize = 30;//设置 textInput 的字体大小。\r\n *         textInput.wordWrap = true;//设置 textInput 的文本自动换行。\r\n *         textInput.x = 100;//设置 textInput 对象的属性 x 的值，用于控制 textInput 对象的显示位置。\r\n *         textInput.y = 100;//设置 textInput 对象的属性 y 的值，用于控制 textInput 对象的显示位置。\r\n *         textInput.width = 300;//设置 textInput 的宽度。\r\n *         textInput.height = 200;//设置 textInput 的高度。\r\n *         Laya.stage.addChild(textInput);//将 textInput 添加到显示列表。\r\n *     }\r\n * }\r\n */\r\nexport class TextInput extends Label {\r\n    /** @private */\r\n    protected _skin: string;\r\n\r\n    declare _graphics: AutoBitmap;\r\n    declare _tf: Input;\r\n\r\n    /**\r\n     * 创建一个新的 <code>TextInput</code> 类实例。\r\n     * @param text 文本内容。\r\n     */\r\n    constructor(text?: string) {\r\n        super();\r\n        if (text != null)\r\n            this.text = text;\r\n        this.skin = this.skin;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected preinitialize(): void {\r\n        this.mouseEnabled = true;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override \r\n    */\r\n    protected createChildren(): void {\r\n        this.setGraphics(new AutoBitmap(), true);\r\n\r\n        this._tf = new Input();\r\n        this._tf.hideFlags = HideFlags.HideAndDontSave;\r\n        this._tf.padding = Styles.inputLabelPadding;\r\n        this._tf._onPostLayout = () => this._onPostLayout();\r\n        this._tf.on(Event.INPUT, () => this.event(Event.INPUT));\r\n        this._tf.on(Event.ENTER, () => this.event(Event.ENTER));\r\n        this._tf.on(Event.BLUR, () => this.event(Event.BLUR));\r\n        this._tf.on(Event.FOCUS, () => this.event(Event.FOCUS));\r\n        this.addChild(this._tf);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    protected initialize(): void {\r\n        this.width = 128;\r\n        this.height = 22;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.ui.Image#skin\r\n     */\r\n    get skin(): string {\r\n        return this._skin;\r\n    }\r\n\r\n    set skin(value: string) {\r\n        if (value == \"\")\r\n            value = null;\r\n        if (this._skin == value)\r\n            return;\r\n\r\n        this._setSkin(value);\r\n    }\r\n\r\n    _setSkin(url: string): Promise<void> {\r\n        this._skin = url;\r\n        if (url) {\r\n            if (this._skinBaseUrl)\r\n                url = URL.formatURL(url, this._skinBaseUrl);\r\n            let source = Loader.getRes(url);\r\n            if (source) {\r\n                this._skinLoaded(source);\r\n                return Promise.resolve();\r\n            }\r\n            else\r\n                return ILaya.loader.load(url, Loader.IMAGE).then(tex => this._skinLoaded(tex));\r\n        }\r\n        else {\r\n            this._skinLoaded(null);\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    protected _skinLoaded(source: any): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._graphics.source = source;\r\n        this._sizeChanged();\r\n        this.event(Event.LOADED);\r\n    }\r\n\r\n    /**\r\n     * <p>当前实例的背景图（ <code>AutoBitmap</code> ）实例的有效缩放网格数据。</p>\r\n     * <p>数据格式：\"上边距,右边距,下边距,左边距,是否重复填充(值为0：不重复填充，1：重复填充)\"，以逗号分隔。\r\n     * <ul><li>例如：\"4,4,4,4,1\"</li></ul></p>\r\n     */\r\n    get sizeGrid(): string {\r\n        return this._graphics && this._graphics.sizeGrid ? this._graphics.sizeGrid.join(\",\") : null;\r\n    }\r\n\r\n    set sizeGrid(value: string) {\r\n        if (value)\r\n            this._graphics.sizeGrid = UIUtils.fillArray(Styles.defaultSizeGrid, value, Number);\r\n        else\r\n            this._graphics.sizeGrid = null;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this._graphics && (this._graphics.width = value);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this._graphics && (this._graphics.height = value);\r\n    }\r\n\r\n    /**\r\n     * <p>指示当前是否是文本域。</p>\r\n     * 值为true表示当前是文本域，否则不是文本域。\r\n     */\r\n    get multiline(): boolean {\r\n        return this._tf.multiline;\r\n    }\r\n\r\n    set multiline(value: boolean) {\r\n        this._tf.multiline = value;\r\n    }\r\n\r\n    /**\r\n     * 设置可编辑状态。\r\n     */\r\n    set editable(value: boolean) {\r\n        this._tf.editable = value;\r\n    }\r\n\r\n    get editable(): boolean {\r\n        return this._tf.editable;\r\n    }\r\n\r\n    /**选中输入框内的文本。*/\r\n    select(): void {\r\n        this._tf.select();\r\n    }\r\n\r\n    /**限制输入的字符。*/\r\n    get restrict(): string {\r\n        return this._tf.restrict;\r\n    }\r\n\r\n    set restrict(pattern: string) {\r\n        this._tf.restrict = pattern;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#prompt\r\n     */\r\n    get prompt(): string {\r\n        return this._tf.prompt;\r\n    }\r\n\r\n    set prompt(value: string) {\r\n        this._tf.prompt = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#promptColor\r\n     */\r\n    get promptColor(): string {\r\n        return this._tf.promptColor;\r\n    }\r\n\r\n    set promptColor(value: string) {\r\n        this._tf.promptColor = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#maxChars\r\n     */\r\n    get maxChars(): number {\r\n        return this._tf.maxChars;\r\n    }\r\n\r\n    set maxChars(value: number) {\r\n        this._tf.maxChars = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#focus\r\n     */\r\n    get focus(): boolean {\r\n        return this._tf.focus;\r\n    }\r\n\r\n    set focus(value: boolean) {\r\n        this._tf.focus = value;\r\n    }\r\n\r\n    /**\r\n     * @copy laya.display.Input#type\r\n     */\r\n    get type(): string {\r\n        return this._tf.type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._tf.type = value;\r\n    }\r\n\r\n    setSelection(startIndex: number, endIndex: number): void {\r\n        this._tf.setSelection(startIndex, endIndex);\r\n    }\r\n}","import { TextInput } from \"./TextInput\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { HScrollBar } from \"./HScrollBar\";\r\nimport { ScrollType, Styles } from \"./Styles\";\r\nimport { Event } from \"../events/Event\"\r\nimport { HideFlags } from \"../Const\";\r\n\r\n/**\r\n * <code>TextArea</code> 类用于创建显示对象以显示和输入文本。\r\n * @example <caption>以下示例代码，创建了一个 <code>TextArea</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.TextArea;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class TextArea_Example\r\n *\t\t{\r\n *\t\t\tpublic function TextArea_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/input.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar textArea:TextArea = new TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\r\n *\t\t\t\ttextArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\r\n *\t\t\t\ttextArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\r\n *\t\t\t\ttextArea.color = \"#008fff\";//设置 textArea 的文本颜色。\r\n *\t\t\t\ttextArea.font = \"Arial\";//设置 textArea 的字体。\r\n *\t\t\t\ttextArea.bold = true;//设置 textArea 的文本显示为粗体。\r\n *\t\t\t\ttextArea.fontSize = 20;//设置 textArea 的文本字体大小。\r\n *\t\t\t\ttextArea.wordWrap = true;//设置 textArea 的文本自动换行。\r\n *\t\t\t\ttextArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\r\n *\t\t\t\ttextArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\r\n *\t\t\t\ttextArea.width = 300;//设置 textArea 的宽度。\r\n *\t\t\t\ttextArea.height = 200;//设置 textArea 的高度。\r\n *\t\t\t\tLaya.stage.addChild(textArea);//将 textArea 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * Laya.loader.load([\"resource/ui/input.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     var textArea = new laya.ui.TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\r\n *     textArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\r\n *     textArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\r\n *     textArea.color = \"#008fff\";//设置 textArea 的文本颜色。\r\n *     textArea.font = \"Arial\";//设置 textArea 的字体。\r\n *     textArea.bold = true;//设置 textArea 的文本显示为粗体。\r\n *     textArea.fontSize = 20;//设置 textArea 的文本字体大小。\r\n *     textArea.wordWrap = true;//设置 textArea 的文本自动换行。\r\n *     textArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\r\n *     textArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\r\n *     textArea.width = 300;//设置 textArea 的宽度。\r\n *     textArea.height = 200;//设置 textArea 的高度。\r\n *     Laya.stage.addChild(textArea);//将 textArea 添加到显示列表。\r\n * }\r\n * @example\r\n * import TextArea = laya.ui.TextArea;\r\n * import Handler = laya.utils.Handler;\r\n * class TextArea_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/input.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n\t\r\n *     private onLoadComplete(): void {\r\n *         var textArea: TextArea = new TextArea(\"这个一个TextArea实例。\");//创建一个 TextArea 类的实例对象 textArea 。\r\n *         textArea.skin = \"resource/ui/input.png\";//设置 textArea 的皮肤。\r\n *         textArea.sizeGrid = \"4,4,4,4\";//设置 textArea 的网格信息。\r\n *         textArea.color = \"#008fff\";//设置 textArea 的文本颜色。\r\n *         textArea.font = \"Arial\";//设置 textArea 的字体。\r\n *         textArea.bold = true;//设置 textArea 的文本显示为粗体。\r\n *         textArea.fontSize = 20;//设置 textArea 的文本字体大小。\r\n *         textArea.wordWrap = true;//设置 textArea 的文本自动换行。\r\n *         textArea.x = 100;//设置 textArea 对象的属性 x 的值，用于控制 textArea 对象的显示位置。\r\n *         textArea.y = 100;//设置 textArea 对象的属性 y 的值，用于控制 textArea 对象的显示位置。\r\n *         textArea.width = 300;//设置 textArea 的宽度。\r\n *         textArea.height = 200;//设置 textArea 的高度。\r\n *         Laya.stage.addChild(textArea);//将 textArea 添加到显示列表。\r\n *     }\r\n * }\r\n */\r\nexport class TextArea extends TextInput {\r\n    protected _scrollType: ScrollType = 0;\r\n    protected _vScrollBarSkin: string;\r\n    protected _hScrollBarSkin: string;\r\n    /**@private */\r\n    protected _vScrollBar: VScrollBar;\r\n    /**@private */\r\n    protected _hScrollBar: HScrollBar;\r\n\r\n    /**\r\n     * <p>创建一个新的 <code>TextArea</code> 示例。</p>\r\n     * @param text 文本内容字符串。\r\n     */\r\n    constructor(text?: string) {\r\n        super(text);\r\n    }\r\n\r\n    protected _onPostLayout(): void {\r\n        super._onPostLayout();\r\n        this.callLater(this.changeScroll);\r\n    }\r\n    /**\r\n     * \r\n     * @param destroyChild \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._vScrollBar && this._vScrollBar.destroy();\r\n        this._hScrollBar && this._hScrollBar.destroy();\r\n        this._vScrollBar = null;\r\n        this._hScrollBar = null;\r\n        super.destroy(destroyChild);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected initialize(): void {\r\n        this.width = 180;\r\n        this.height = 150;\r\n        this._tf.wordWrap = true;\r\n        this.multiline = true;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this.callLater(this.changeScroll);\r\n    }\r\n    /**\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        this.callLater(this.changeScroll);\r\n    }\r\n\r\n    get scrollType() {\r\n        return this._scrollType;\r\n    }\r\n\r\n    set scrollType(value: ScrollType) {\r\n        this._scrollType = value;\r\n\r\n        if (this._scrollType == ScrollType.None) {\r\n            if (this._hScrollBar) {\r\n                this._hScrollBar.destroy();\r\n                this._hScrollBar = null;\r\n            }\r\n            if (this._vScrollBar) {\r\n                this._vScrollBar.destroy();\r\n                this._vScrollBar = null;\r\n            }\r\n        }\r\n        else if (this._scrollType == ScrollType.Horizontal) {\r\n            if (this._vScrollBar) {\r\n                this._vScrollBar.destroy();\r\n                this._vScrollBar = null;\r\n            }\r\n\r\n            if (this._hScrollBar)\r\n                this._hScrollBar.skin = this._hScrollBarSkin;\r\n            else\r\n                this.createHScrollBar();\r\n        }\r\n        else if (this._scrollType == ScrollType.Vertical) {\r\n            if (this._hScrollBar) {\r\n                this._hScrollBar.destroy();\r\n                this._hScrollBar = null;\r\n            }\r\n\r\n            if (this._vScrollBar)\r\n                this._vScrollBar.skin = this._vScrollBarSkin;\r\n            else\r\n                this.createVScrollBar();\r\n        }\r\n        else { //both\r\n            if (this._hScrollBar)\r\n                this._hScrollBar.skin = this._hScrollBarSkin;\r\n            else\r\n                this.createHScrollBar();\r\n            if (this._vScrollBar)\r\n                this._vScrollBar.skin = this._vScrollBarSkin;\r\n            else\r\n                this.createVScrollBar();\r\n        }\r\n    }\r\n\r\n    private createHScrollBar() {\r\n        this._hScrollBar = new HScrollBar();\r\n        this._hScrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n        this._hScrollBar._skinBaseUrl = this._skinBaseUrl;\r\n        this._hScrollBar.skin = this._hScrollBarSkin;\r\n        this.addChild(this._hScrollBar);\r\n        this._hScrollBar.on(Event.CHANGE, this, this.onHBarChanged);\r\n        this._hScrollBar.on(Event.LOADED, this, this.changeScroll);\r\n        this._hScrollBar.mouseWheelEnable = false;\r\n        this._hScrollBar.touchScrollEnable = false;\r\n        this._hScrollBar.target = this._tf;\r\n        this.callLater(this.changeScroll);\r\n    }\r\n\r\n    private createVScrollBar() {\r\n        this._vScrollBar = new VScrollBar();\r\n        this._vScrollBar.hideFlags = HideFlags.HideAndDontSave;\r\n        this._vScrollBar._skinBaseUrl = this._skinBaseUrl;\r\n        this._vScrollBar.skin = this._vScrollBarSkin;\r\n        this.addChild(this._vScrollBar);\r\n        this._vScrollBar.on(Event.CHANGE, this, this.onVBarChanged);\r\n        this._vScrollBar.on(Event.LOADED, this, this.changeScroll);\r\n        this._vScrollBar.touchScrollEnable = false;\r\n        this._vScrollBar.target = this._tf;\r\n        this.callLater(this.changeScroll);\r\n    }\r\n\r\n    /**\r\n     * 垂直方向滚动条皮肤。\r\n     */\r\n    get vScrollBarSkin(): string {\r\n        return this._vScrollBarSkin;\r\n    }\r\n\r\n    set vScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._vScrollBarSkin != value) {\r\n            this._vScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Vertical;\r\n            else if (this._scrollType == ScrollType.Horizontal)\r\n                this.scrollType = ScrollType.Both;\r\n            else\r\n                this.scrollType = this._scrollType;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 水平方向滚动条皮肤。\r\n     */\r\n    get hScrollBarSkin(): string {\r\n        return this._hScrollBarSkin;\r\n    }\r\n\r\n    set hScrollBarSkin(value: string) {\r\n        if (value == \"\") value = null;\r\n        if (this._hScrollBarSkin != value) {\r\n            this._hScrollBarSkin = value;\r\n            if (this._scrollType == 0)\r\n                this.scrollType = ScrollType.Horizontal;\r\n            else if (this._scrollType == ScrollType.Vertical)\r\n                this.scrollType = ScrollType.Both;\r\n            this.scrollType = this._scrollType;\r\n        }\r\n    }\r\n\r\n    protected onVBarChanged(e: Event): void {\r\n        if (this._tf.scrollY != this._vScrollBar.value) {\r\n            this._tf.scrollY = this._vScrollBar.value;\r\n        }\r\n    }\r\n\r\n    protected onHBarChanged(e: Event): void {\r\n        if (this._tf.scrollX != this._hScrollBar.value) {\r\n            this._tf.scrollX = this._hScrollBar.value;\r\n        }\r\n    }\r\n\r\n    /**垂直滚动条实体*/\r\n    get vScrollBar(): VScrollBar {\r\n        return this._vScrollBar;\r\n    }\r\n\r\n    /**水平滚动条实体*/\r\n    get hScrollBar(): HScrollBar {\r\n        return this._hScrollBar;\r\n    }\r\n\r\n    /**垂直滚动最大值*/\r\n    get maxScrollY(): number {\r\n        return this._tf.maxScrollY;\r\n    }\r\n\r\n    /**垂直滚动值*/\r\n    get scrollY(): number {\r\n        return this._tf.scrollY;\r\n    }\r\n\r\n    /**水平滚动最大值*/\r\n    get maxScrollX(): number {\r\n        return this._tf.maxScrollX;\r\n    }\r\n\r\n    /**水平滚动值*/\r\n    get scrollX(): number {\r\n        return this._tf.scrollX;\r\n    }\r\n\r\n    private changeScroll(): void {\r\n        let vShow = this._vScrollBar && this._tf.maxScrollY > 0;\r\n        let hShow = this._hScrollBar && this._tf.maxScrollX > 0;\r\n        let padding = this._tf.padding;\r\n        let showWidth = vShow ? this._width - this._vScrollBar.width - padding[2] : this._width;\r\n        let showHeight = hShow ? this._height - this._hScrollBar.height - padding[3] : this._height;\r\n\r\n        this._tf.size(showWidth, showHeight);\r\n\r\n        if (this._vScrollBar) {\r\n            this._vScrollBar.x = this._width - this._vScrollBar.width - padding[2];\r\n            this._vScrollBar.y = padding[1];\r\n            this._vScrollBar.height = this._height - (hShow ? this._hScrollBar.height : 0) - padding[1] - padding[3];\r\n            this._vScrollBar.scrollSize = 1;\r\n            this._vScrollBar.thumbPercent = showHeight / Math.max(this._tf.textHeight, showHeight);\r\n            this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY);\r\n            this._vScrollBar.visible = vShow;\r\n        }\r\n        if (this._hScrollBar) {\r\n            this._hScrollBar.x = padding[0];\r\n            this._hScrollBar.y = this._height - this._hScrollBar.height - padding[3];\r\n            this._hScrollBar.width = this._width - (vShow ? this._vScrollBar.width : 0) - padding[0] - padding[2];\r\n            this._hScrollBar.scrollSize = Math.max(showWidth * 0.033, 1);\r\n            this._hScrollBar.thumbPercent = showWidth / Math.max(this._tf.textWidth, showWidth);\r\n            this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX);\r\n            this._hScrollBar.visible = hShow;\r\n        }\r\n    }\r\n\r\n    /**滚动到某个位置*/\r\n    scrollTo(y: number): void {\r\n        this.commitMeasure();\r\n        this._tf.scrollY = y;\r\n    }\r\n}","import { Graphics } from \"../display/Graphics\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Text } from \"../display/Text\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { UIComponent } from \"./UIComponent\"\r\nimport { UIEvent } from \"./UIEvent\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**鼠标提示管理类*/\r\nexport class TipManager extends UIComponent {\r\n    static offsetX: number = 10;\r\n    static offsetY: number = 15;\r\n    static tipTextColor: string = \"#ffffff\";\r\n    static tipBackColor: string = \"#111111\";\r\n    static tipDelay: number = 200;\r\n    private _tipBox: UIComponent;\r\n    private _tipText: Text;\r\n    private _defaultTipHandler: Function;\r\n\r\n    constructor() {\r\n        super();\r\n        this._tipBox = new UIComponent();\r\n        this._tipBox.addChild(this._tipText = new Text());\r\n        this._tipText.x = this._tipText.y = 5;\r\n        this._tipText.color = TipManager.tipTextColor;\r\n        this._defaultTipHandler = this._showDefaultTip;\r\n        ILaya.stage.on(UIEvent.SHOW_TIP, this, this._onStageShowTip);\r\n        ILaya.stage.on(UIEvent.HIDE_TIP, this, this._onStageHideTip);\r\n        this.zOrder = 1100\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _onStageHideTip(e: any): void {\r\n        ILaya.timer.clear(this, this._showTip);\r\n        this.closeAll();\r\n        this.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _onStageShowTip(data: any): void {\r\n        ILaya.timer.once(TipManager.tipDelay, this, this._showTip, [data], true);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _showTip(tip: any): void {\r\n        if (typeof (tip) == 'string') {\r\n            var text: string = String(tip);\r\n            if (Boolean(text)) {\r\n                this._defaultTipHandler(text);\r\n            }\r\n        } else if (tip instanceof Handler) {\r\n            ((<Handler>tip)).run();\r\n        } else if (tip instanceof Function) {\r\n            tip.apply();\r\n        }\r\n        if (true) {\r\n            ILaya.stage.on(Event.MOUSE_MOVE, this, this._onStageMouseMove);\r\n            ILaya.stage.on(Event.MOUSE_DOWN, this, this._onStageMouseDown);\r\n        }\r\n\r\n        this._onStageMouseMove(null);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _onStageMouseDown(e: Event): void {\r\n        this.closeAll();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _onStageMouseMove(e: Event): void {\r\n        this._showToStage(this, TipManager.offsetX, TipManager.offsetY);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _showToStage(dis: Sprite, offX: number = 0, offY: number = 0): void {\r\n        var rec: Rectangle = dis.getBounds();\r\n        dis.x = ILaya.stage.mouseX + offX;\r\n        dis.y = ILaya.stage.mouseY + offY;\r\n        if (dis._x + rec.width > ILaya.stage.width) {\r\n            dis.x -= rec.width + offX;\r\n        }\r\n        if (dis._y + rec.height > ILaya.stage.height) {\r\n            dis.y -= rec.height + offY;\r\n        }\r\n    }\r\n\r\n    /**关闭所有鼠标提示*/\r\n    closeAll(): void {\r\n        ILaya.timer.clear(this, this._showTip);\r\n        ILaya.stage.off(Event.MOUSE_MOVE, this, this._onStageMouseMove);\r\n        ILaya.stage.off(Event.MOUSE_DOWN, this, this._onStageMouseDown);\r\n        this.removeChildren();\r\n    }\r\n\r\n    /**\r\n     * 显示显示对象类型的tip\r\n     */\r\n    showDislayTip(tip: Sprite): void {\r\n        this.addChild(tip);\r\n        this._showToStage(this);\r\n        ILaya.stage.addChild(this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _showDefaultTip(text: string): void {\r\n        this._tipText.text = text;\r\n        var g: Graphics = this._tipBox.graphics;\r\n        g.clear(true);\r\n        g.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, TipManager.tipBackColor);\r\n        this.addChild(this._tipBox);\r\n        this._showToStage(this);\r\n        ILaya.stage.addChild(this);\r\n    }\r\n\r\n    /**默认鼠标提示函数*/\r\n    get defaultTipHandler(): Function {\r\n        return this._defaultTipHandler;\r\n    }\r\n\r\n    set defaultTipHandler(value: Function) {\r\n        this._defaultTipHandler = value;\r\n    }\r\n}","import { Box } from \"./Box\";\r\nimport { List } from \"./List\";\r\nimport { ScrollBar } from \"./ScrollBar\";\r\nimport { Clip } from \"./Clip\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**@private */\r\ninterface ITreeDataSource {\r\n    x: number;\r\n    hasChild: boolean;\r\n    isOpen: boolean;\r\n    isDirectory: boolean;\r\n}\r\n\r\n/**\r\n * 实例的 <code>selectedIndex</code> 属性发生变化时调度。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 节点打开关闭时触发。\r\n * @eventType laya.events.Event\r\n */\r\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>Tree</code> 控件使用户可以查看排列为可扩展树的层次结构数据。\r\n *\r\n * @example\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.Tree;\r\n *\t\timport laya.utils.Browser;\r\n *\t\timport laya.utils.Handler;\r\n\t\r\n *\t\tpublic class Tree_Example\r\n *\t\t{\r\n\t\r\n *\t\t\tpublic function Tree_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder.png\", \"resource/ui/clip_tree_arrow.png\"], Handler.create(this, onLoadComplete));\r\n *\t\t\t}\r\n\t\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvar xmlString:String;//创建一个xml字符串，用于存储树结构数据。\r\n *\t\t\t\txmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\r\n *\t\t\t\tvar domParser:* = new Browser.window.DOMParser();//创建一个DOMParser实例domParser。\r\n *\t\t\t\tvar xml:* = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\r\n\t\r\n *\t\t\t\tvar tree:Tree = new Tree();//创建一个 Tree 类的实例对象 tree 。\r\n *\t\t\t\ttree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\r\n *\t\t\t\ttree.itemRender = Item;//设置 tree 的项渲染器。\r\n *\t\t\t\ttree.xml = xml;//设置 tree 的树结构数据。\r\n *\t\t\t\ttree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\r\n *\t\t\t\ttree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\r\n *\t\t\t\ttree.width = 200;//设置 tree 的宽度。\r\n *\t\t\t\ttree.height = 100;//设置 tree 的高度。\r\n *\t\t\t\tLaya.stage.addChild(tree);//将 tree 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n\t\r\n * import laya.ui.Box;\r\n * import laya.ui.Clip;\r\n * import laya.ui.Label;\r\n *\tclass Item extends Box\r\n *\t{\r\n *\t\tpublic function Item()\r\n *\t\t{\r\n *\t\t\tthis.name = \"render\";\r\n *\t\t\tthis.right = 0;\r\n *\t\t\tthis.left = 0;\r\n\t\r\n *\t\t\tvar selectBox:Clip = new Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\r\n *\t\t\tselectBox.name = \"selectBox\";\r\n *\t\t\tselectBox.height = 24;\r\n *\t\t\tselectBox.x = 13;\r\n *\t\t\tselectBox.y = 0;\r\n *\t\t\tselectBox.left = 12;\r\n *\t\t\taddChild(selectBox);\r\n\t\r\n *\t\t\tvar folder:Clip = new Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\r\n *\t\t\tfolder.name = \"folder\";\r\n *\t\t\tfolder.x = 14;\r\n *\t\t\tfolder.y = 4;\r\n *\t\t\taddChild(folder);\r\n\t\r\n *\t\t\tvar label:Label = new Label(\"treeItem\");\r\n *\t\t\tlabel.name = \"label\";\r\n *\t\t\tlabel.color = \"#ffff00\";\r\n *\t\t\tlabel.width = 150;\r\n *\t\t\tlabel.height = 22;\r\n *\t\t\tlabel.x = 33;\r\n *\t\t\tlabel.y = 1;\r\n *\t\t\tlabel.left = 33;\r\n *\t\t\tlabel.right = 0;\r\n *\t\t\taddChild(label);\r\n\t\r\n *\t\t\tvar arrow:Clip = new Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\r\n *\t\t\tarrow.name = \"arrow\";\r\n *\t\t\tarrow.x = 0;\r\n *\t\t\tarrow.y = 5;\r\n *\t\t\taddChild(arrow);\r\n *\t\t}\r\n *\t }\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高、渲染模式\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var res = [\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder.png\", \"resource/ui/clip_tree_arrow.png\"];\r\n * Laya.loader.load(res, new laya.utils.Handler(this, onLoadComplete));\r\n * function onLoadComplete() {\r\n *     var xmlString;//创建一个xml字符串，用于存储树结构数据。\r\n *     xmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\r\n *     var domParser = new laya.utils.Browser.window.DOMParser();//创建一个DOMParser实例domParser。\r\n *     var xml = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\r\n\t\r\n *     var tree = new laya.ui.Tree();//创建一个 Tree 类的实例对象 tree 。\r\n *     tree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\r\n *     tree.itemRender = mypackage.treeExample.Item;//设置 tree 的项渲染器。\r\n *     tree.xml = xml;//设置 tree 的树结构数据。\r\n *     tree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\r\n *     tree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\r\n *     tree.width = 200;//设置 tree 的宽度。\r\n *     tree.height = 100;//设置 tree 的高度。\r\n *     Laya.stage.addChild(tree);//将 tree 添加到显示列表。\r\n * }\r\n * (function (_super) {\r\n *     function Item() {\r\n *         Item.__super.call(this);//初始化父类。\r\n *         this.right = 0;\r\n *         this.left = 0;\r\n\t\r\n *         var selectBox = new laya.ui.Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\r\n *         selectBox.name = \"selectBox\";//设置 selectBox 的name 为“selectBox”时，将被识别为树结构的项的背景。2帧：悬停时背景、选中时背景。\r\n *         selectBox.height = 24;\r\n *         selectBox.x = 13;\r\n *         selectBox.y = 0;\r\n *         selectBox.left = 12;\r\n *         this.addChild(selectBox);//需要使用this.访问父类的属性或方法。\r\n\t\r\n *         var folder = new laya.ui.Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\r\n *         folder.name = \"folder\";//设置 folder 的name 为“folder”时，将被识别为树结构的文件夹开启状态图表。2帧：折叠状态、打开状态。\r\n *         folder.x = 14;\r\n *         folder.y = 4;\r\n *         this.addChild(folder);\r\n\t\r\n *         var label = new laya.ui.Label(\"treeItem\");\r\n *         label.name = \"label\";//设置 label 的name 为“label”时，此值将用于树结构数据赋值。\r\n *         label.color = \"#ffff00\";\r\n *         label.width = 150;\r\n *         label.height = 22;\r\n *         label.x = 33;\r\n *         label.y = 1;\r\n *         label.left = 33;\r\n *         label.right = 0;\r\n *         this.addChild(label);\r\n\t\r\n *         var arrow = new laya.ui.Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\r\n *         arrow.name = \"arrow\";//设置 arrow 的name 为“arrow”时，将被识别为树结构的文件夹开启状态图表。2帧：折叠状态、打开状态。\r\n *         arrow.x = 0;\r\n *         arrow.y = 5;\r\n *         this.addChild(arrow);\r\n *     };\r\n *     Laya.class(Item,\"mypackage.treeExample.Item\",_super);//注册类 Item 。\r\n * })(laya.ui.Box);\r\n * @example\r\n * import Tree = laya.ui.Tree;\r\n * import Browser = laya.utils.Browser;\r\n * import Handler = laya.utils.Handler;\r\n * class Tree_Example {\r\n\t\r\n *     constructor() {\r\n *         Laya.init(640, 800);\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/vscroll.png\", \"resource/ui/vscroll$bar.png\", \"resource/ui/vscroll$down.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/vscroll$up.png\", \"resource/ui/clip_selectBox.png\", \"resource/ui/clip_tree_folder * . * png\", \"resource/ui/clip_tree_arrow.png\"], Handler.create(this, this.onLoadComplete));\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         var xmlString: String;//创建一个xml字符串，用于存储树结构数据。\r\n *         xmlString = \"&lt;root&gt;&lt;item label='box1'&gt;&lt;abc label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;abc label='child5'/&gt;&lt;/item&gt;&lt;item label='box2'&gt;&lt;abc  * label='child1'/&gt;&lt;abc label='child2'/&gt;&lt;abc label='child3'/&gt;&lt;abc label='child4'/&gt;&lt;/item&gt;&lt;/root&gt;\";\r\n *         var domParser: any = new Browser.window.DOMParser();//创建一个DOMParser实例domParser。\r\n *         var xml: any = domParser.parseFromString(xmlString, \"text/xml\");//解析xml字符。\r\n\t\r\n *         var tree: Tree = new Tree();//创建一个 Tree 类的实例对象 tree 。\r\n *         tree.scrollBarSkin = \"resource/ui/vscroll.png\";//设置 tree 的皮肤。\r\n *         tree.itemRender = Item;//设置 tree 的项渲染器。\r\n *         tree.xml = xml;//设置 tree 的树结构数据。\r\n *         tree.x = 100;//设置 tree 对象的属性 x 的值，用于控制 tree 对象的显示位置。\r\n *         tree.y = 100;//设置 tree 对象的属性 y 的值，用于控制 tree 对象的显示位置。\r\n *         tree.width = 200;//设置 tree 的宽度。\r\n *         tree.height = 100;//设置 tree 的高度。\r\n *         Laya.stage.addChild(tree);//将 tree 添加到显示列表。\r\n *     }\r\n * }\r\n * import Box = laya.ui.Box;\r\n * import Clip = laya.ui.Clip;\r\n * import Label = laya.ui.Label;\r\n * class Item extends Box {\r\n *     constructor() {\r\n *         super();\r\n *         this.name = \"render\";\r\n *         this.right = 0;\r\n *         this.left = 0;\r\n *         var selectBox: Clip = new Clip(\"resource/ui/clip_selectBox.png\", 1, 2);\r\n *         selectBox.name = \"selectBox\";\r\n *         selectBox.height = 24;\r\n *         selectBox.x = 13;\r\n *         selectBox.y = 0;\r\n *         selectBox.left = 12;\r\n *         this.addChild(selectBox);\r\n\t\r\n *         var folder: Clip = new Clip(\"resource/ui/clip_tree_folder.png\", 1, 3);\r\n *         folder.name = \"folder\";\r\n *         folder.x = 14;\r\n *         folder.y = 4;\r\n *         this.addChild(folder);\r\n\t\r\n *         var label: Label = new Label(\"treeItem\");\r\n *         label.name = \"label\";\r\n *         label.color = \"#ffff00\";\r\n *         label.width = 150;\r\n *         label.height = 22;\r\n *         label.x = 33;\r\n *         label.y = 1;\r\n *         label.left = 33;\r\n *         label.right = 0;\r\n *         this.addChild(label);\r\n\t\r\n *         var arrow: Clip = new Clip(\"resource/ui/clip_tree_arrow.png\", 1, 2);\r\n *         arrow.name = \"arrow\";\r\n *         arrow.x = 0;\r\n *         arrow.y = 5;\r\n *         this.addChild(arrow);\r\n *     }\r\n * }\r\n */\r\nexport class Tree extends Box {\r\n    /**@private */\r\n    protected _list: List;\r\n    /**@private */\r\n    protected _source: any[];\r\n    /**@private */\r\n    protected _renderHandler: Handler;\r\n    /**@private */\r\n    protected _spaceLeft: number = 10;\r\n    /**@private */\r\n    protected _spaceBottom: number = 0;\r\n    /**@private */\r\n    protected _keepStatus: boolean = true;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Tree</code> 类实例。\r\n     * <p>在 <code>Tree</code> 构造函数中设置属性width、height的值都为200。</p>\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.width = this.height = 200;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._list && this._list.destroy(destroyChild);\r\n        this._list = null;\r\n        this._source = null;\r\n        this._renderHandler = null;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected createChildren(): void {\r\n        this._list = new List();\r\n        this._list.hideFlags = HideFlags.HideAndDontSave;\r\n        this._list.left = 0;\r\n        this._list.right = 0;\r\n        this._list.top = 0;\r\n        this._list.bottom = 0;\r\n        this._list._skinBaseUrl = this._skinBaseUrl;\r\n        this.addChild(this._list);\r\n        this._list.renderHandler = Handler.create(this, this.renderItem, null, false);\r\n        this._list.repeatX = 1;\r\n        this._list.on(Event.CHANGE, this, this.onListChange);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 此对象包含的<code>List</code>实例的<code>Event.CHANGE</code>事件侦听处理函数。\r\n     */\r\n    protected onListChange(e: Event = null): void {\r\n        this.event(Event.CHANGE);\r\n    }\r\n\r\n    /**\r\n     * 数据源发生变化后，是否保持之前打开状态，默认为true。\r\n     * <p><b>取值：</b>\r\n     * <li>true：保持之前打开状态。</li>\r\n     * <li>false：不保持之前打开状态。</li>\r\n     * </p>\r\n     */\r\n    get keepStatus(): boolean {\r\n        return this._keepStatus;\r\n    }\r\n\r\n    set keepStatus(value: boolean) {\r\n        this._keepStatus = value;\r\n    }\r\n\r\n    /**\r\n     * 列表数据源，只包含当前可视节点数据。\r\n     */\r\n    get array(): any[] {\r\n        return this._list.array;\r\n    }\r\n\r\n    set array(value: any[]) {\r\n        if (this._keepStatus && this._list.array && value) {\r\n            this.parseOpenStatus(this._list.array, value);\r\n        }\r\n        this._source = value;\r\n        this._list.array = this.getArray();\r\n    }\r\n\r\n    /**\r\n     * 数据源，全部节点数据。\r\n     */\r\n    get source(): any[] {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * 此对象包含的<code>List</code>实例对象。\r\n     */\r\n    get list(): List {\r\n        return this._list;\r\n    }\r\n\r\n    /**\r\n     * 此对象包含的<code>List</code>实例的单元格渲染器。\r\n     * <p><b>取值：</b>\r\n     * <ol>\r\n     * <li>单元格类对象。</li>\r\n     * <li> UI 的 JSON 描述。</li>\r\n     * </ol></p>\r\n     * @implements\r\n     */\r\n    get itemRender(): any {\r\n        return this._list.itemRender;\r\n    }\r\n\r\n    set itemRender(value: any) {\r\n        this._list.itemRender = value;\r\n    }\r\n\r\n    /**\r\n     * 滚动条皮肤。\r\n     */\r\n    get scrollBarSkin(): string {\r\n        return this._list.vScrollBarSkin;\r\n    }\r\n\r\n    set scrollBarSkin(value: string) {\r\n        this._list.vScrollBarSkin = value;\r\n    }\r\n\r\n    /**滚动条*/\r\n    get scrollBar(): ScrollBar {\r\n        return this._list.scrollBar;\r\n    }\r\n\r\n    /**\r\n     * 单元格鼠标事件处理器。\r\n     * <p>默认返回参数（e:Event,index:int）。</p>\r\n     */\r\n    get mouseHandler(): Handler {\r\n        return this._list.mouseHandler;\r\n    }\r\n\r\n    set mouseHandler(value: Handler) {\r\n        this._list.mouseHandler = value;\r\n    }\r\n\r\n    /**\r\n     * <code>Tree</code> 实例的渲染处理器。\r\n     */\r\n    get renderHandler(): Handler {\r\n        return this._renderHandler;\r\n    }\r\n\r\n    set renderHandler(value: Handler) {\r\n        this._renderHandler = value;\r\n    }\r\n\r\n    /**\r\n     * 左侧缩进距离（以像素为单位）。\r\n     */\r\n    get spaceLeft(): number {\r\n        return this._spaceLeft;\r\n    }\r\n\r\n    set spaceLeft(value: number) {\r\n        this._spaceLeft = value;\r\n    }\r\n\r\n    /**\r\n     * 每一项之间的间隔距离（以像素为单位）。\r\n     */\r\n    get spaceBottom(): number {\r\n        return this._list.spaceY;\r\n    }\r\n\r\n    set spaceBottom(value: number) {\r\n        this._list.spaceY = value;\r\n    }\r\n\r\n    /**\r\n     * 表示当前选择的项索引。\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._list.selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        this._list.selectedIndex = value;\r\n    }\r\n\r\n    /**\r\n     * 当前选中的项对象的数据源。\r\n     */\r\n    get selectedItem(): any {\r\n        return this._list.selectedItem;\r\n    }\r\n\r\n    set selectedItem(value: any) {\r\n        this._list.selectedItem = value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取数据源集合。\r\n     */\r\n    protected getArray(): any[] {\r\n        var arr: any[] = [];\r\n        for (let key in this._source) {//TODO TS\r\n            let item = this._source[key];\r\n            if (this.getParentOpenStatus(item)) {\r\n                item.x = this._spaceLeft * this.getDepth(item);\r\n                arr.push(item);\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取项对象的深度。\r\n     */\r\n    protected getDepth(item: any, num: number = 0): number {\r\n        if (item.nodeParent == null) return num;\r\n        else return this.getDepth(item.nodeParent, num + 1);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取项对象的上一级的打开状态。\r\n     */\r\n    protected getParentOpenStatus(item: any): boolean {\r\n        var parent: any = item.nodeParent;\r\n        if (parent == null) {\r\n            return true;\r\n        } else {\r\n            if (parent.isOpen) {\r\n                if (parent.nodeParent != null) return this.getParentOpenStatus(parent);\r\n                else return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 渲染一个项对象。\r\n     * @param cell 一个项对象。\r\n     * @param index 项的索引。\r\n     */\r\n    protected renderItem(cell: Box, index: number): void {\r\n        var item: ITreeDataSource = cell.dataSource;\r\n        if (item) {\r\n            cell.left = item.x;\r\n            var arrow = cell.getChildByName(\"arrow\") as Clip;\r\n            if (arrow) {\r\n                if (item.hasChild) {\r\n                    arrow.visible = true;\r\n                    arrow.index = item.isOpen ? 1 : 0;\r\n                    (<any>arrow).__cellIndex = index;\r\n                    arrow.off(Event.CLICK, this, this.onArrowClick);\r\n                    arrow.on(Event.CLICK, this, this.onArrowClick);\r\n                } else {\r\n                    arrow.visible = false;\r\n                }\r\n            }\r\n            var folder = cell.getChildByName(\"folder\") as Clip;\r\n            if (folder) {\r\n                if (folder.clipY == 2) {\r\n                    folder.index = item.isDirectory ? 0 : 1;\r\n                } else {\r\n                    folder.index = item.isDirectory ? item.isOpen ? 1 : 0 : 2;\r\n                }\r\n            }\r\n            this._renderHandler && this._renderHandler.runWith([cell, index]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private onArrowClick(e: Event): void {\r\n        var arrow = e.currentTarget;\r\n        var index = arrow.__cellIndex;\r\n        this._list.array[index].isOpen = !this._list.array[index].isOpen;\r\n        this.event(Event.OPEN);\r\n        this._list.array = this.getArray();\r\n    }\r\n\r\n    /**\r\n     * 设置指定项索引的项对象的打开状态。\r\n     * @param index 项索引。\r\n     * @param isOpen 是否处于打开状态。\r\n     */\r\n    setItemState(index: number, isOpen: boolean): void {\r\n        if (!this._list.array[index]) return;\r\n        this._list.array[index].isOpen = isOpen;\r\n        this._list.array = this.getArray();\r\n    }\r\n\r\n    /**\r\n     * 刷新项列表。\r\n     */\r\n    fresh(): void {\r\n        this._list.array = this.getArray();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        //if (value is XmlDom) xml = value as XmlDom;\r\n        super.set_dataSource(value);\r\n    }\r\n\r\n    /**\r\n     *  xml结构的数据源。\r\n     */\r\n    set xml(value: XML) {\r\n        var arr: any[] = [];\r\n        this.parseXml(value, arr, null, true);\r\n\r\n        this.array = arr;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 解析并处理XML类型的数据源。\r\n     */\r\n    protected parseXml(xml: XML, source: any[], nodeParent: any, isRoot: boolean): void {\r\n        var obj: any;\r\n        var list = xml.elements();\r\n        var childCount = list.length;\r\n        if (!isRoot) {\r\n            obj = {};\r\n            var list2 = xml.attributes;\r\n            for (let key in list2) {\r\n                var value = list2[key];\r\n                obj[key] = value == \"true\" ? true : value == \"false\" ? false : value;\r\n            }\r\n            obj.nodeParent = nodeParent;\r\n            if (childCount > 0) obj.isDirectory = true;\r\n            obj.hasChild = childCount > 0;\r\n            source.push(obj);\r\n        }\r\n        for (var i = 0; i < childCount; i++) {\r\n            var node = list[i];\r\n            this.parseXml(node, source, obj, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 处理数据项的打开状态。\r\n     */\r\n    protected parseOpenStatus(oldSource: any[], newSource: any[]): void {\r\n        for (var i = 0, n = newSource.length; i < n; i++) {\r\n            var newItem = newSource[i];\r\n            if (newItem.isDirectory) {\r\n                for (var j = 0, m = oldSource.length; j < m; j++) {\r\n                    var oldItem = oldSource[j];\r\n                    if (oldItem.isDirectory && this.isSameParent(oldItem, newItem) && newItem.label == oldItem.label) {\r\n                        newItem.isOpen = oldItem.isOpen;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 判断两个项对象在树结构中的父节点是否相同。\r\n     * @param item1 项对象。\r\n     * @param item2 项对象。\r\n     * @return 如果父节点相同值为true，否则值为false。\r\n     */\r\n    protected isSameParent(item1: any, item2: any): boolean {\r\n        if (item1.nodeParent == null && item2.nodeParent == null) return true;\r\n        else if (item1.nodeParent == null || item2.nodeParent == null) return false\r\n        else {\r\n            if (item1.nodeParent.label == item2.nodeParent.label) return this.isSameParent(item1.nodeParent, item2.nodeParent);\r\n            else return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示选择的树节点项的<code>path</code>属性值。\r\n     */\r\n    get selectedPath(): string {\r\n        if (this._list.selectedItem) {\r\n            return this._list.selectedItem.path;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 更新项列表，显示指定键名的数据项。\r\n     * @param\tkey 键名。\r\n     */\r\n    filter(key: string): void {\r\n        if (Boolean(key)) {\r\n            var result: any[] = [];\r\n            this.getFilterSource(this._source, result, key);\r\n            this._list.array = result;\r\n        } else {\r\n            this._list.array = this.getArray();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取数据源中指定键名的值。\r\n     */\r\n    private getFilterSource(array: any[], result: any[], key: string): void {\r\n        key = key.toLocaleLowerCase();\r\n        for (let item of array) {\r\n            if (!item.isDirectory && String(item.label).toLowerCase().indexOf(key) > -1) {\r\n                item.x = 0;\r\n                result.push(item);\r\n            }\r\n            if (item.child && item.child.length > 0) {\r\n                this.getFilterSource(item.child, result, key);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { LayoutBox } from \"./LayoutBox\";\r\nimport { UIComponent } from \"./UIComponent\";\r\n\r\n/**\r\n     * <code>VBox</code> 是一个垂直布局容器类。\r\n     */\r\nexport class VBox extends LayoutBox {\r\n    /**\r\n     * 无对齐。\r\n     */\r\n    static NONE: string = \"none\";\r\n    /**\r\n     * 左对齐。\r\n     */\r\n    static LEFT: string = \"left\";\r\n    /**\r\n     * 居中对齐。\r\n     */\r\n    static CENTER: string = \"center\";\r\n    /**\r\n     * 右对齐。\r\n     */\r\n    static RIGHT: string = \"right\";\r\n\r\n    /** 兼容以前的changeItems逻辑，是否在发生变动时，使用 sortItem 排序所有item */\r\n    public isSortItem: boolean = false;\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        this.callLater(this.changeItems);\r\n    }\r\n\r\n\r\n    /** \r\n     * @inheritDoc\t\r\n     * @override\r\n    */\r\n    protected changeItems(): void {\r\n        this._itemChanged = false;\r\n        let items: any[] = [];\r\n        let maxWidth = 0;\r\n\r\n        for (let i = 0, n = this.numChildren; i < n; i++) {\r\n            let item = (<UIComponent>this.getChildAt(i));\r\n            if (item) {\r\n                item.y = 0;\r\n                items.push(item);\r\n                maxWidth = this._isWidthSet ? this._width : Math.max(maxWidth, item.width * item.scaleX);\r\n            }\r\n        }\r\n        if (this.isSortItem) {\r\n            this.sortItem(items);\r\n        }\r\n        let top = 0;\r\n        for (let i = 0, n = items.length; i < n; i++) {\r\n            let item = items[i];\r\n            item.y = top;\r\n            top += item.height * item.scaleY + this._space;\r\n            if (this._align == VBox.LEFT) {\r\n                item.x = 0;\r\n            } else if (this._align == VBox.CENTER) {\r\n                item.x = (maxWidth - item.width * item.scaleX) * 0.5;\r\n            } else if (this._align == VBox.RIGHT) {\r\n                item.x = maxWidth - item.width * item.scaleX;\r\n            }\r\n        }\r\n        this._sizeChanged();\r\n    }\r\n}","/**\r\n * Morn UI Version 3.0 http://www.mornui.com/\r\n * Feedback yung http://weibo.com/newyung\r\n */\r\nimport { Node } from \"../display/Node\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Box } from \"./Box\"\r\nimport { Handler } from \"../utils/Handler\"\r\n\r\n/**\r\n * <code>ViewStack</code> 类用于视图堆栈类，用于视图的显示等设置处理。\r\n */\r\nexport class ViewStack extends Box {\r\n    /**@private */\r\n    protected _items: any[];\r\n    /**@private */\r\n    protected _setIndexHandler: Handler = Handler.create(this, this.setIndex, null, false);\r\n    /**@private */\r\n    protected _selectedIndex: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._items = [];\r\n    }\r\n\r\n    /**\r\n     * 批量设置视图对象。\r\n     * @param views 视图对象数组。\r\n     */\r\n    setItems(views: any[]): void {\r\n        this.removeChildren();\r\n        var index: number = 0;\r\n        for (var i: number = 0, n: number = views.length; i < n; i++) {\r\n            var item: Node = views[i];\r\n            if (item) {\r\n                item.name = \"item\" + index;\r\n                this.addChild(item);\r\n                index++;\r\n            }\r\n        }\r\n        this.initItems();\r\n    }\r\n\r\n    /**\r\n     * 添加视图。\r\n     * 添加视图对象，并设置此视图对象的<code>name</code> 属性。\r\n     * @param view 需要添加的视图对象。\r\n     */\r\n    addItem(view: Node): void {\r\n        view.name = \"item\" + this._items.length;\r\n        this.addChild(view);\r\n        this.initItems();\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n        this.initItems();\r\n    }\r\n\r\n    /**@internal */\r\n    _afterInited(): void {\r\n        this.initItems();\r\n    }\r\n\r\n    /**\r\n     * 初始化视图对象集合。\r\n     */\r\n    initItems(): void {\r\n        this._items.length = 0;\r\n        for (var i: number = 0; i < 10000; i++) {\r\n            var item: Sprite = (<Sprite>this.getChildByName(\"item\" + i));\r\n            if (item == null) {\r\n                break;\r\n            }\r\n            this._items.push(item);\r\n            item.visible = (i == this._selectedIndex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表示当前视图索引。\r\n     */\r\n    get selectedIndex(): number {\r\n        return this._selectedIndex;\r\n    }\r\n\r\n    set selectedIndex(value: number) {\r\n        if (this._selectedIndex != value) {\r\n            this.setSelect(this._selectedIndex, false);\r\n            this._selectedIndex = value;\r\n            this.setSelect(this._selectedIndex, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过对象的索引设置项对象的 <code>selected</code> 属性值。\r\n     * @param index 需要设置的对象的索引。\r\n     * @param selected 表示对象的选中状态。\r\n     */\r\n    protected setSelect(index: number, selected: boolean): void {\r\n        if (this._items && index > -1 && index < this._items.length) {\r\n            this._items[index].visible = selected;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取或设置当前选择的项对象。\r\n     */\r\n    get selection(): Node {\r\n        return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;\r\n    }\r\n\r\n    set selection(value: Node) {\r\n        this.selectedIndex = this._items.indexOf(value);\r\n    }\r\n\r\n    /**\r\n     *  索引设置处理器。\r\n     * <p>默认回调参数：index:int</p>\r\n     */\r\n    get setIndexHandler(): Handler {\r\n        return this._setIndexHandler;\r\n    }\r\n\r\n    set setIndexHandler(value: Handler) {\r\n        this._setIndexHandler = value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置属性<code>selectedIndex</code>的值。\r\n     * @param index 选中项索引值。\r\n     */\r\n    protected setIndex(index: number): void {\r\n        this.selectedIndex = index;\r\n    }\r\n\r\n    /**\r\n     * 视图集合数组。\r\n     */\r\n    get items(): any[] {\r\n        return this._items;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    set_dataSource(value: any) {\r\n        this._dataSource = value;\r\n        if (typeof (value) == 'number' || typeof (value) == 'string') {\r\n            this.selectedIndex = parseInt(value as string);\r\n        } else {\r\n            for (var prop in this._dataSource) {\r\n                if (prop in this) {\r\n                    (this as any)[prop] = this._dataSource[prop];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Slider } from \"./Slider\";\r\n\r\n/**\r\n * 使用 <code>VSlider</code> 控件，用户可以通过在滑块轨道的终点之间移动滑块来选择值。\r\n * <p> <code>VSlider</code> 控件采用垂直方向。滑块轨道从下往上扩展，而标签位于轨道的左右两侧。</p>\r\n *\r\n * @example <caption>以下示例代码，创建了一个 <code>VSlider</code> 实例。</caption>\r\n * package\r\n *\t{\r\n *\t\timport laya.ui.HSlider;\r\n *\t\timport laya.ui.VSlider;\r\n *\t\timport laya.utils.Handler;\r\n *\t\tpublic class VSlider_Example\r\n *\t\t{\r\n *\t\t\tprivate var vSlider:VSlider;\r\n *\t\t\tpublic function VSlider_Example()\r\n *\t\t\t{\r\n *\t\t\t\tLaya.init(640, 800);//设置游戏画布宽高。\r\n *\t\t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *\t\t\t\tLaya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], Handler.create(this, onLoadComplete));//加载资源。\r\n *\t\t\t}\r\n *\t\t\tprivate function onLoadComplete():void\r\n *\t\t\t{\r\n *\t\t\t\tvSlider = new VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\r\n *\t\t\t\tvSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\r\n *\t\t\t\tvSlider.min = 0;//设置 vSlider 最低位置值。\r\n *\t\t\t\tvSlider.max = 10;//设置 vSlider 最高位置值。\r\n *\t\t\t\tvSlider.value = 2;//设置 vSlider 当前位置值。\r\n *\t\t\t\tvSlider.tick = 1;//设置 vSlider 刻度值。\r\n *\t\t\t\tvSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\r\n *\t\t\t\tvSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\r\n *\t\t\t\tvSlider.changeHandler = new Handler(this, onChange);//设置 vSlider 位置变化处理器。\r\n *\t\t\t\tLaya.stage.addChild(vSlider);//把 vSlider 添加到显示列表。\r\n *\t\t\t}\r\n *\t\t\tprivate function onChange(value:Number):void\r\n *\t\t\t{\r\n *\t\t\t\ttrace(\"滑块的位置： value=\" + value);\r\n *\t\t\t}\r\n *\t\t}\r\n *\t}\r\n * @example\r\n * Laya.init(640, 800);//设置游戏画布宽高\r\n * Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色\r\n * var vSlider;\r\n * Laya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], laya.utils.Handler.create(this, onLoadComplete));//加载资源。\r\n * function onLoadComplete() {\r\n *     vSlider = new laya.ui.VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\r\n *     vSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\r\n *     vSlider.min = 0;//设置 vSlider 最低位置值。\r\n *     vSlider.max = 10;//设置 vSlider 最高位置值。\r\n *     vSlider.value = 2;//设置 vSlider 当前位置值。\r\n *     vSlider.tick = 1;//设置 vSlider 刻度值。\r\n *     vSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\r\n *     vSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\r\n *     vSlider.changeHandler = new laya.utils.Handler(this, onChange);//设置 vSlider 位置变化处理器。\r\n *     Laya.stage.addChild(vSlider);//把 vSlider 添加到显示列表。\r\n * }\r\n * function onChange(value) {\r\n *     console.log(\"滑块的位置： value=\" + value);\r\n * }\r\n * @example\r\n * import HSlider = laya.ui.HSlider;\r\n * import VSlider = laya.ui.VSlider;\r\n * import Handler = laya.utils.Handler;\r\n * class VSlider_Example {\r\n *     private vSlider: VSlider;\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         Laya.loader.load([\"resource/ui/vslider.png\", \"resource/ui/vslider$bar.png\"], Handler.create(this, this.onLoadComplete));//加载资源。\r\n *     }\r\n *     private onLoadComplete(): void {\r\n *         this.vSlider = new VSlider();//创建一个 VSlider 类的实例对象 vSlider 。\r\n *         this.vSlider.skin = \"resource/ui/vslider.png\";//设置 vSlider 的皮肤。\r\n *         this.vSlider.min = 0;//设置 vSlider 最低位置值。\r\n *         this.vSlider.max = 10;//设置 vSlider 最高位置值。\r\n *         this.vSlider.value = 2;//设置 vSlider 当前位置值。\r\n *         this.vSlider.tick = 1;//设置 vSlider 刻度值。\r\n *         this.vSlider.x = 100;//设置 vSlider 对象的属性 x 的值，用于控制 vSlider 对象的显示位置。\r\n *         this.vSlider.y = 100;//设置 vSlider 对象的属性 y 的值，用于控制 vSlider 对象的显示位置。\r\n *         this.vSlider.changeHandler = new Handler(this, this.onChange);//设置 vSlider 位置变化处理器。\r\n *         Laya.stage.addChild(this.vSlider);//把 vSlider 添加到显示列表。\r\n *     }\r\n *     private onChange(value: number): void {\r\n *         console.log(\"滑块的位置： value=\" + value);\r\n *     }\r\n * }\r\n * @see laya.ui.Slider\r\n */\r\nexport class VSlider extends Slider {\r\n\r\n}","import { UIComponent } from \"./UIComponent\";\r\nimport { Stage } from \"../display/Stage\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Browser } from \"../utils/Browser\";\r\n\r\n/**\r\n * 微信开放数据展示组件，直接实例本组件，即可根据组件宽高，位置，以最优的方式显示开放域数据\r\n */\r\nexport class OpenDataContextView extends UIComponent {\r\n    private _fps: number = 30;\r\n\r\n    constructor() {\r\n        super();\r\n        this._width = this._height = 200;\r\n        let tex: Texture = new Texture(new Texture2D(this._width, this._height, TextureFormat.R8G8B8A8, false, false, true));\r\n        tex.bitmap.lock = true;\r\n        this.texture = tex;\r\n    }\r\n\r\n    get fps() {\r\n        return this._fps;\r\n    }\r\n\r\n    set fps(value: number) {\r\n        if (this._fps != value) {\r\n            this._fps = value;\r\n            if (LayaEnv.isPlaying && this.activeInHierarchy\r\n                && (window as any).wx && (window as any).sharedCanvas) {\r\n                ILaya.timer.clear(this, this._onLoop);\r\n                ILaya.timer.loop(1000 / value, this, this._onLoop);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _onActive(): void {\r\n        if (!LayaEnv.isPlaying)\r\n            return;\r\n\r\n        if ((window as any).wx && (window as any).sharedCanvas)\r\n            ILaya.timer.loop(1000 / this._fps, this, this._onLoop);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _onInActive(): void {\r\n        if (!LayaEnv.isPlaying)\r\n            return;\r\n\r\n        this.postMsg({ type: \"close\" });\r\n        ILaya.timer.clear(this, this._onLoop);\r\n    }\r\n\r\n    private _onLoop(): void {\r\n        let tex = this.texture;\r\n        let canvas: HTMLCanvasElement = (window as any).sharedCanvas;\r\n        if (tex.width != canvas.width || tex.height != canvas.height) {\r\n            tex.bitmap.destroy();\r\n            tex.bitmap = new Texture2D(canvas.width, canvas.height, TextureFormat.R8G8B8A8, false, false, true, true);\r\n            tex.bitmap.lock = true;\r\n        }\r\n\r\n        if (Browser.onMiniGame) {//小游戏保护\r\n            if ((canvas as any).toTempFilePath) {\r\n                (<Texture2D>tex.bitmap).setImageData(canvas, true, false);\r\n            }\r\n        }else\r\n            (<Texture2D>tex.bitmap).setImageData(canvas, true, false);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        if ((window as any).sharedCanvas) (window as any).sharedCanvas.width = value;\r\n        this.callLater(this.updateViewPort);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        if ((window as any).sharedCanvas) (window as any).sharedCanvas.height = value;\r\n        this.callLater(this.updateViewPort);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set x(value: number) {\r\n        super.x = value;\r\n        this.callLater(this.updateViewPort);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get x() {\r\n        return super.x;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set y(value: number) {\r\n        super.y = value;\r\n        this.callLater(this.updateViewPort);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    get y() {\r\n        return super.y;\r\n    }\r\n\r\n    private updateViewPort(): void {\r\n        let stage: Stage = ILaya.stage;\r\n        let sx = stage._canvasTransform.getScaleX() * this.globalScaleX * stage.transform.getScaleX();\r\n        let sy = stage._canvasTransform.getScaleY() * this.globalScaleY * stage.transform.getScaleY();\r\n\r\n        this.postMsg({\r\n            type: \"updateViewPort\",\r\n            box: {\r\n                x: this.x * sx,\r\n                y: this.y * sy,\r\n                width: this.width * sx,\r\n                height: this.height * sy,\r\n            }\r\n        });\r\n    }\r\n\r\n    /**向开放数据域发送消息*/\r\n    postMsg(msg: any): void {\r\n        if ((window as any).wx && (window as any).wx.getOpenDataContext) {\r\n            var openDataContext: any = (window as any).wx.getOpenDataContext();\r\n            openDataContext.postMessage(msg);\r\n        }\r\n    }\r\n}","\r\nimport { Laya } from \"../../Laya\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { CheckBox } from \"../ui/CheckBox\";\r\nimport { IStatUI, StatToggleUIParams, StatUIParams } from \"../utils/IStatUI\";\r\nimport { Stat } from \"../utils/Stat\";\r\n\r\nexport class StatUI implements IStatUI {\r\n    private _txt: Text;\r\n    private _sp: Sprite;\r\n    private _view: Array<StatUIParams>;\r\n    private _toggleView: Array<StatToggleUIParams>;\r\n    private _toggleSprite: Sprite;\r\n    private _checkBoxArray: Array<CheckBox>;\r\n    private _show = false;\r\n    private _showToggle = false;\r\n\r\n    /**\r\n     * @override\r\n     * 显示性能统计信息。\r\n     * @param\tx X轴显示位置。\r\n     * @param\ty Y轴显示位置。\r\n     */\r\n    show(x?: number, y?: number, views?: Array<StatUIParams>): void {\r\n        x = x || 0;\r\n        y = y || 0;\r\n        views = views || Stat.AllShow;\r\n\r\n        this._view = views;\r\n        this._show = true;\r\n\r\n        if (!this._sp)\r\n            this.createUI();\r\n        this._sp.pos(x, y);\r\n    }\r\n\r\n    showToggle(x?: number, y?: number, views?: Array<StatToggleUIParams>) {\r\n        x = x || 0;\r\n        y = y || 0;\r\n        views = views || Stat.AllToggle;\r\n\r\n        this._toggleView = views;\r\n        this._showToggle = true;\r\n\r\n        if (!this._toggleSprite)\r\n            this.createToggleUI();\r\n\r\n        Laya.stage.addChild(this._toggleSprite);\r\n        this._toggleSprite.pos(x, y);\r\n    }\r\n\r\n    /**\r\n    * @override\r\n    * 隐藏性能统计信息。\r\n    */\r\n    hide(): void {\r\n        this._show = false;\r\n        this._showToggle = false;\r\n        if (this._toggleSprite)\r\n            this._toggleSprite.removeSelf();\r\n    }\r\n\r\n    update(): void {\r\n        if (this._show) {\r\n            strArray.length = 0;\r\n            for (let i = 0; i < this._view.length; i++) {\r\n                let item: StatUIParams = this._view[i];\r\n                let isAverage: boolean = item.mode == \"average\";\r\n\r\n                let value: any = (Stat as any)[item.value];\r\n                (item.units == \"M\") && (value = Math.floor(value / (1024 * 1024) * 100) / 100);\r\n                (item.units == \"K\") && (value = Math.floor(value / (1024) * 100) / 100);\r\n\r\n                if (isAverage) {\r\n                    value /= Stat._count;\r\n                    value = Math.floor(value);\r\n                }\r\n\r\n                (item.units == \"M\") && (value += \"M\");\r\n                (item.units == \"K\") && (value += \"K\");\r\n\r\n                strArray.push(value);\r\n            }\r\n            this._txt.text = strArray.join(\"\\n\");\r\n        }\r\n\r\n        if (this._showToggle) {\r\n            for (let i = 0; i < this._toggleView.length; i++) {\r\n                let one = this._toggleView[i];\r\n                (Stat as any)[one.value] = this._checkBoxArray[i].selected;\r\n            }\r\n        }\r\n    }\r\n\r\n    private createUI(): void {\r\n        let sp: Sprite = this._sp = new Sprite();\r\n        sp.scale(Math.max(Laya.stage.clientScaleX, 1), Math.max(Laya.stage.clientScaleY, 1));\r\n        Laya.stage.on(Event.RESIZE, this, () => {\r\n            this._sp.scale(Math.max(Laya.stage.clientScaleX, 1), Math.max(Laya.stage.clientScaleY, 1));\r\n        });\r\n\r\n        let leftText = new Text();\r\n        leftText.singleCharRender=true;\r\n        leftText.pos(5, 5);\r\n        leftText.color = \"#ffffff\";\r\n        leftText.fontSize = fontSize;\r\n        sp.addChild(leftText);\r\n\r\n        strArray.length = 0;\r\n        for (let one of this._view)\r\n            strArray.push(one.title);\r\n        leftText.text = strArray.join(\"\\n\");\r\n\r\n        this._txt = new Text();\r\n        this._txt.singleCharRender=true;\r\n        this._txt.pos(leftText.textWidth + 10, 5);\r\n        this._txt.color = \"#ffffff\";\r\n        this._txt.fontSize = fontSize;\r\n        sp.addChild(this._txt);\r\n\r\n        sp.size(leftText.textWidth + 100, leftText.textHeight + 10);\r\n        sp.graphics.clear();\r\n        sp.graphics.alpha(0.5);\r\n        sp.graphics.drawRect(0, 0, sp.width, sp.height, \"#999999\");\r\n        sp.graphics.alpha(2);\r\n    }\r\n\r\n    private createToggleUI(): void {\r\n        if (!checkBoxTex) {\r\n            let pixels = new Uint8Array(9);\r\n            pixels[0] = 255;\r\n            pixels[1] = 255;\r\n            pixels[2] = 255;\r\n            pixels[3] = 255;\r\n            pixels[4] = 255;\r\n            pixels[5] = 128;\r\n            pixels[6] = 128;\r\n            pixels[7] = 128;\r\n            pixels[8] = 0;\r\n            checkBoxTex = new Texture2D(1, 3, TextureFormat.R8G8B8, false, false);\r\n            checkBoxTex.setPixelsData(pixels, false, false);\r\n            checkBoxTex.lock = true;//锁住资源防止被资源管理释放\r\n            checkBoxTex.name = \"StatUICheckBox\";\r\n            Loader.cacheRes(checkBoxTex.name, checkBoxTex, Loader.TEXTURE2D);\r\n        }\r\n\r\n        let sp = this._toggleSprite = new Sprite();\r\n        sp.zOrder = 1000000;\r\n        let leftText = new Text();\r\n        leftText.pos(5, 5);\r\n        leftText.color = \"#ffffff\";\r\n        leftText.fontSize = fontSize;\r\n        sp.addChild(leftText);\r\n\r\n        leftText.text = Text._testWord;\r\n        let h = leftText.textHeight + leftText.leading;\r\n\r\n        strArray.length = 0;\r\n        for (let one of this._toggleView)\r\n            strArray.push(one.title);\r\n        leftText.text = strArray.join(\"\\n\");\r\n\r\n        let toggles = new Sprite();\r\n        toggles.pos(leftText.textWidth + 15, 5);\r\n        sp.addChild(toggles);\r\n\r\n        this._checkBoxArray = [];\r\n        for (let i = 0; i < this._toggleView.length; i++) {\r\n            let one = this._toggleView[i];\r\n\r\n            let cb = new CheckBox(checkBoxTex.name);\r\n            cb.selected = (Stat as any)[one.value];\r\n            cb.scale(12, 12);\r\n            cb.pos(0, i * h + 2);\r\n            cb.size(12, 12);\r\n            toggles.addChild(cb);\r\n            this._checkBoxArray.push(cb);\r\n        }\r\n\r\n        sp.size(leftText.textWidth + 40, leftText.textHeight + 10);\r\n        sp.graphics.clear();\r\n        sp.graphics.alpha(0.5);\r\n        sp.graphics.drawRect(0, 0, sp.width, sp.height, \"#999999\");\r\n        sp.graphics.alpha(2);\r\n    }\r\n\r\n    render(ctx: any, x: number, y: number) {\r\n        this._show && this._sp && this._sp.render(ctx, 0, 0);\r\n    }\r\n}\r\n\r\nconst fontSize: number = 16;\r\nconst strArray: Array<string> = [];\r\nvar checkBoxTex: Texture2D;","import { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { AutoBitmap } from \"./AutoBitmap\";\r\nimport { Box } from \"./Box\";\r\nimport { Button } from \"./Button\";\r\nimport { CheckBox } from \"./CheckBox\";\r\nimport { Clip } from \"./Clip\";\r\nimport { ColorPicker } from \"./ColorPicker\";\r\nimport { ComboBox } from \"./ComboBox\";\r\nimport { Dialog } from \"./Dialog\";\r\nimport { DialogManager } from \"./DialogManager\";\r\nimport { FontClip } from \"./FontClip\";\r\nimport { HBox } from \"./HBox\";\r\nimport { HScrollBar } from \"./HScrollBar\";\r\nimport { HSlider } from \"./HSlider\";\r\nimport { Image } from \"./Image\";\r\nimport { Label } from \"./Label\";\r\nimport { LayoutBox } from \"./LayoutBox\";\r\nimport { List } from \"./List\";\r\nimport { Panel } from \"./Panel\";\r\nimport { ProgressBar } from \"./ProgressBar\";\r\nimport { Radio } from \"./Radio\";\r\nimport { RadioGroup } from \"./RadioGroup\";\r\nimport { ScaleBox } from \"./ScaleBox\";\r\nimport { ScrollBar } from \"./ScrollBar\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Tab } from \"./Tab\";\r\nimport { TextArea } from \"./TextArea\";\r\nimport { TextInput } from \"./TextInput\";\r\nimport { TipManager } from \"./TipManager\";\r\nimport { Tree } from \"./Tree\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nimport { UIGroup } from \"./UIGroup\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { VBox } from \"./VBox\";\r\nimport { View } from \"./View\";\r\nimport { ViewStack } from \"./ViewStack\";\r\nimport { VScrollBar } from \"./VScrollBar\";\r\nimport { VSlider } from \"./VSlider\";\r\nimport { OpenDataContextView } from \"./OpenDataContextView\";\r\nimport { StatUI } from \"./StatUI\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nlet c = ClassUtils.regClass;\r\nc(\"AutoBitmap\", AutoBitmap);\r\nc(\"Box\", Box);\r\nc(\"Button\", Button);\r\nc(\"CheckBox\", CheckBox);\r\nc(\"Clip\", Clip);\r\nc(\"ColorPicker\", ColorPicker);\r\nc(\"ComboBox\", ComboBox);\r\nc(\"Dialog\", Dialog);\r\nc(\"DialogManager\", DialogManager);\r\nc(\"FontClip\", FontClip);\r\nc(\"HBox\", HBox);\r\nc(\"HScrollBar\", HScrollBar);\r\nc(\"HSlider\", HSlider);\r\nc(\"Image\", Image);\r\nc(\"Label\", Label);\r\nc(\"LayoutBox\", LayoutBox);\r\nc(\"List\", List);\r\nc(\"Panel\", Panel);\r\nc(\"ProgressBar\", ProgressBar);\r\nc(\"Radio\", Radio);\r\nc(\"RadioGroup\", RadioGroup);\r\nc(\"ScaleBox\", ScaleBox);\r\nc(\"ScrollBar\", ScrollBar);\r\nc(\"Slider\", Slider);\r\nc(\"Tab\", Tab);\r\nc(\"TextArea\", TextArea);\r\nc(\"TextInput\", TextInput);\r\nc(\"TipManager\", TipManager);\r\nc(\"Tree\", Tree);\r\nc(\"UIGroup\", UIGroup);\r\nc(\"UIUtils\", UIUtils);\r\nc(\"VBox\", VBox);\r\nc(\"View\", View);\r\nc(\"ViewStack\", ViewStack);\r\nc(\"VScrollBar\", VScrollBar);\r\nc(\"VSlider\", VSlider);\r\nc(\"UIComponent\", UIComponent);\r\n\r\nc(\"OpenDataContextView\", OpenDataContextView);\r\nc(\"StatUI\", StatUI);"],"mappings":"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","ignoreList":[]}