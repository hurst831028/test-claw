{"version":3,"names":["ClassUtils","regClass","className","classDef","_classMap","getClass","getInstance","compClass","console","warn","dummy","Config","isAntialias","useWebGL2","FPS","useRetinalCanvas","animationInterval","webGL2D_MeshAllocMaxMem","defaultFontSize","defaultFont","isAlpha","isDepth","isfailIfMajorPerformanceCaveat","powerPreference","premultipliedAlpha","isStencil","preserveDrawingBuffer","printWebglOrder","fontFamilyMap","fixedFrames","destroyResourceImmediatelyDefault","_enableWindowRAFFunction","Const","ENUM_TEXTALIGN_DEFAULT","ENUM_TEXTALIGN_CENTER","ENUM_TEXTALIGN_RIGHT","BYTES_PE","BYTES_PIDX","MAX_CLIP_SIZE","NodeFlags","NOT_ACTIVE","ACTIVE_INHIERARCHY","AWAKED","NOT_READY","DISPLAY","HAS_ZORDER","HAS_MOUSE","DISPLAYED_INSTAGE","DRAWCALL_OPTIMIZE","PROCESS_COLLISIONS","PROCESS_TRIGGERS","HAS_SCRIPT","ESCAPE_DRAWING_TO_TEXTURE","DISABLE_INNER_CLIPPING","DISABLE_OUTER_CLIPPING","DISABLE_VISIBILITY","EDITING_NODE","HIDE_BY_EDITOR","LOCK_BY_EDITOR","HideFlags","HideInHierarchy","HideInInspector","DontSave","HideAndDontSave","ILaya","Loader","Context","Browser","Laya","loader","timer","systemTimer","physicsTimer","stage","LayaEnv","version","isPlaying","isPreview","isConch","window","conch","Pool","getPoolBySign","sign","_poolDic","clearBySign","length","recover","item","POOLSIGN","push","recoverByClass","instance","constructor","_$gid","_getClassSign","cla","_CLSID","createByClass","cls","getItemByClass","rst","pool","pop","getItemByCreateFun","createFun","caller","call","getItem","_gid","_pi","Math","PI","_pi2","Utils","toRadian","angle","toAngle","radian","toHexColor","color","isNaN","str","toString","fromStringColor","value","indexOf","p1","p2","arr","substring","split","len","i","parseFloat","round","charAt","temp","parseInt","getGID","copyArray","source","array","transPointList","points","x","y","radix","result","getBaseName","path","lastIndexOf","getFileExtension","ext","toLowerCase","j","k","ext2","replaceFileExtension","newExt","excludeDot","Component","hideFlags","this","_hideFlags","_status","_enabled","_singleton","_id","_initialize","_extra","hasHideFlag","flag","id","enabled","owner","_setActive","activeInHierarchy","awaked","destroyed","_isScript","_resetComp","_enableState","_setOwner","node","_setBit","_onAdded","onAdded","_onAwake","_onEnable","onEnable","_onDisable","onDisable","_onDestroy","_parse","data","interactMap","_parseInteractive","spriteMap","_cloneTo","dest","runInEditor","onAwake","_a","_is3D","_scene","_componentDriver","add","setupScript","_b","remove","offAllCaller","destroy","_destroyComponent","_destroy","second","onDestroy","onReset","_toDestroys","Matrix","a","b","c","d","tx","ty","nums","_bTransform","_createFun","_checkTransform","identity","setTranslate","translate","scale","rotate","cos","sin","a1","c1","tx1","skew","tanX","tan","tanY","b1","invertTransformPoint","out","d1","n","a2","b2","c2","d2","tx2","ty2","setTo","transformPoint","transformPointN","getScaleX","sqrt","getScaleY","invert","concat","matrix","mul","m1","m2","aa","ab","ac","ad","atx","aty","ba","bb","bc","bd","btx","bty","mul16","scaleEx","rotateEx","clone","dec","create","copyTo","EMPTY","TEMP","Point","reset","distance","normalize","copy","point","Rectangle","width","height","right","bottom","copyFrom","contains","intersects","rect","intersection","max","min","union","addPoint","equals","_getBoundPoints","_temB","_getBoundPointS","sp","_temA","_getWrapRec","pointList","minX","maxX","minY","maxY","tPoint","isEmpty","HDREncodeFormat","TextureFormat","LayaGL","Delegate","_flag","_items","callback","target","args","index","findIndex","once","splice","clear","forEach","clearForTarget","count","invoke","cnt","fixedArgs","err","error","Event","isMouseEvent","type","MOUSE_EVENTS","has","touchId","delta","button","touchPos","currentTarget","stopPropagation","_stopped","touches","_touches","altKey","nativeEvent","ctrlKey","shiftKey","metaKey","key","keyCode","charCode","code","keyLocation","location","stageX","stageY","MOUSE_DOWN","MOUSE_UP","RIGHT_MOUSE_DOWN","RIGHT_MOUSE_UP","CLICK","RIGHT_CLICK","MOUSE_MOVE","MOUSE_OVER","MOUSE_OUT","MOUSE_WHEEL","ROLL_OVER","ROLL_OUT","DOUBLE_CLICK","MOUSE_DRAG","MOUSE_DRAG_END","DRAG_START","DRAG_MOVE","DRAG_END","KEY_DOWN","KEY_PRESS","KEY_UP","CHANGE","CHANGED","WILL_RESIZE","RESIZE","ADDED","REMOVED","UNDISPLAY","ERROR","COMPLETE","LOADED","READY","PROGRESS","INPUT","RENDER","OPEN","MESSAGE","CLOSE","FRAME","ENTER","SELECT","BLUR","FOCUS","VISIBILITY_CHANGE","FOCUS_CHANGE","PLAYED","PAUSED","STOPPED","START","END","LINK","LABEL","FULL_SCREEN_CHANGE","DEVICE_LOST","TRANSFORM_CHANGED","LAYERCHANGE","staticMask","TRIGGER_ENTER","TRIGGER_STAY","TRIGGER_EXIT","COLLISION_ENTER","COLLISION_STAY","COLLISION_EXIT","JOINT_BREAK","_Add_Script","Set","eventPool","EventDispatcher","onStartListeningToType","hasListener","listeners","_events","event","ret","Array","isArray","undefined","ev","on","listener","arguments","off","offAll","FilterMode","RenderCapable","_idCounter","_disposingCounter","_clearRetry","Resource","cpuMemory","_cpuMemory","gpuMemory","_gpuMemory","_addCPUMemory","size","_addGPUMemory","_addMemory","cpuSize","gpuSize","destroyUnusedResources","loading","frameLoop","_destroyUnusedResources","force","destroyCnt","_idResourcesMap","res","lock","_referenceCount","DEBUG","debug","_destroyed","obsolute","_obsolute","referenceCount","managed","super","destroyedImmediately","_setCPUMemory","offsetValue","_setGPUMemory","_setCreateURL","url","uuid","isCreateFromURL","endsWith","_addReference","_removeReference","_clearReference","_recoverResource","_disposeResource","_activeResource","Object","getPrototypeOf","name","clearRes","BaseTexture","_width","_height","dimension","_dimension","format","_format","mipmap","_texture","mipmapCount","anisoLevel","filterMode","wrapModeU","wrapU","wrapModeV","wrapV","wrapModeW","wrapW","compareMode","textureContext","setTextureCompareMode","gammaCorrection","baseMipmapLevel","maxMipmapLevel","gammaSpace","useSRGBLoad","_gammaSpace","hdrEncodeFormat","NONE","gpuCompressFormat","R8G8B8","R8G8B8A8","R16G16B16","R16G16B16A16","R32G32B32","R32G32B32A32","R5G6B5","Alpha8","DXT1","DXT3","DXT5","ETC1RGB","ETC2RGB","ETC2RGBA","ETC2SRGB_Alpha8","ETC2SRGB","ETC2RGB_Alpha1","ETC2SRGB_Alpha1","PVRTCRGB_2BPPV","PVRTCRGBA_2BPPV","PVRTCRGB_4BPPV","PVRTCRGBA_4BPPV","ASTC4x4","ASTC4x4SRGB","ASTC6x6","ASTC6x6SRGB","ASTC8x8","ASTC8x8SRGB","ASTC10x10","ASTC10x10SRGB","ASTC12x12","ASTC12x12SRGB","_getFormatByteCount","_getSource","resource","defaultTexture","dispose","Byte","getSystemEndian","_sysEndian","buffer","ArrayBuffer","DataView","setInt16","Int16Array","LITTLE_ENDIAN","BIG_ENDIAN","_xd_","_allocated_","_pos_","_length","_u8d_","Uint8Array","_d_","byteLength","_resizeBuffer","rstBuffer","slice","endian","floor","newByteView","set","subarray","getString","readString","_rUTF","getUint16","getFloat32Array","start","readFloat32Array","end","v","Float32Array","getUint8Array","readUint8Array","getInt16Array","readInt16Array","getFloat32","readFloat32","getFloat64","readFloat64","writeFloat32","_ensureWrite","setFloat32","writeFloat64","setFloat64","getInt32","readInt32","float","getUint32","readUint32","writeInt32","setInt32","writeUint32","setUint32","getInt16","readInt16","us","readUint16","writeUint16","setUint16","writeInt16","getUint8","readUint8","writeUint8","setUint8","_getUInt8","pos","_readUInt8","_getUint16","_readUint16","_getMatrix","_readMatrix","f","String","fromCharCode","u","strs","_code","_offset","_lead","_trail","join","getCustomString","readCustomString","ulen","bytesAvailable","__getBuffer","writeUTFBytes","sz","charCodeAt","writeByte","Number","_p1","_p2","_b1","_b2","_b3","_b4","writeUTFString","tPos","dPos","writeUTFString32","readUTFString","readUTFBytes","readUTFString32","getUTFString","lastBytes","getUTFBytes","setInt8","readByte","getInt8","getByte","lengthToEnsure","writeArrayBuffer","arraybuffer","offset","uint8array","readArrayBuffer","HalfFloatUtils","__init__","e","_baseTable","_shiftTable","_mantissaTable","m","_exponentTable","_offsetTable","roundToFloat16Bits","num","_floatView","_uint32View","convertToNumber","float16bits","_buffer","Uint32Array","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT4","FOURCC_DXT5","DDPF_LUMINANCE","DDSTextureInfo","isCube","bpp","blockBytes","dataOffset","compressed","sourceData","getDDSTextureInfo","header","Int32Array","fourCC","isFourCC","isRGB","isLuminance","isCompressed","layaTexFormat","renderEngine","getCapable","COMPRESS_TEXTURE_S3TC","COMPRESS_TEXTURE_S3TC_SRGB","TextureDimension","GL_FORMAT_RGBA","GL_FORMAT_RGB","GL_DATATYPE_UNSIGNED_BYTE","KTXTextureInfo","getLayaFormat","glFormat","glInternalFormat","glType","glTypeSize","sRGB","getKTXTextureInfo","FileIdentifier","createKTX1Info","dataSize","BYTES_PER_ELEMENT","headerDataView","littleEndian","pixelWidth","pixelHeight","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","formatInfo","layaFormat","sRGBData","layaDemision","Tex2D","CubeArray","Cube","Texture2DArray","IdentifierByteSize","compress","headerOffset","Texture2D","pixels","grayTexture","setPixelsData","whiteTexture","blackTexture","TextureFormat_R16G16B16A16","floatPixle","Uint16Array","normalTexture","errorTexture","_SimpleAnimatorTextureParse","propertyParams","constructParams","pixelDataArrays","usePixelData","byte","texture","textureWidth","pixelDataLength","log","TextureFormat_R32G32B32A32","_parseImage","imageSource","canread","srgb","pma","premultiplyAlpha","setImageData","setProperties","_nativeObj","_pixels","getImageData","canvas","context","drawImage","_parseDDS","ddsInfo","setDDSData","_parseKTX","ktxInfo","setKTXData","_parsePVR","load","complete","TEXTURE2D","canRead","_canRead","createTextureInternal","invertY","setTextureImageData","setTexturePixelsData","setSubPixelsData","xOffset","yOffset","mipmapLevel","generateMipmap","setTextureSubPixelsData","setTextureDDSData","setTextureKTXData","setHDRData","hdrInfo","setTextureHDRData","getPixels","Error","BaseShader","RenderState2D","mat2MatArray","mat","matArray","m4","EMPTYMAT4_ARRAY","restoreTempArray","TEMPMAT4_ARRAY","worldScissorTest","worldAlpha","RenderTargetFormat","RenderClearFlag","BlendFactor","_MAXSIZE","worldMatrix4","worldMatrix","matWVP","InvertY","Color","gammaToLinearSpace","pow","linearToGammaSpace","r","g","equal","toFIxed","toLinear","toGamma","cloneTo","destObject","destColor","setValue","fromArray","toArray","RED","GREEN","BLUE","CYAN","YELLOW","MAGENTA","GRAY","WHITE","BLACK","CLEAR","NativeRenderTexture2D","currentActive","_currentActive","depthStencilFormat","_depthStencilFormat","getIsReady","sourceWidth","sourceHeight","offsetX","offsetY","DEPTH_16","_mgrKey","_colorFormat","_create","samples","_start","_end","conchRenderTexture2D","_renderTarget","_textures","pushRT","popRT","restore","getData","recycle","_clearColor","rtStack","defuv","flipyuv","RenderTexture2D","None","_invertY","_isCube","_samples","_generateMipmap","createRenderTargetInternal","rt","w","h","top","bindRenderTarget","bindoutScreenTarget","viewport","scissor","_lastRT","_lastWidth","_lastHeight","activeShader","unbindRenderTarget","clearRenderTexture","Depth","getRenderTextureData","_clearLinearColor","conchConfig","conchWebGL","WebGLRTMgr","getRT","releaseRT","dict","RenderStateContext","DepthTestCMD","createRenderStateComand","DepthMaskCMD","DepthFuncCMD","StencilTestCMD","StencilMaskCMD","StencilFuncCMD","stencilOpCMD","BlendCMD","BlendEquationCMD","BlendEquationSeparateCMD","BlendFuncCMD","BlendFuncSeperateCMD","CullFaceCMD","FrontFaceCMD","setDepthTest","_GLRenderState","setDepthMask","setDepthFunc","setStencilTest","setStencilMask","setStencilFunc","fun","ref","setstencilOp","fail","zfail","zpass","setBlend","setBlendEquation","blendEquation","setBlendEquationSeparate","blendEquationRGB","blendEquationAlpha","setBlendFunc","sFactor","dFactor","setBlendFuncSeperate","srcRGB","dstRGB","srcAlpha","dstAlpha","setCullFace","setFrontFace","stencilFuncArray","blendEquationSeparateArray","blenfunArray","blendFuncSeperateArray","stencilOpArray","BlendMode","_init_","fns","BlendNormal","BlendAdd","BlendMultiply","BlendScreen","BlendOverlay","BlendLight","BlendMask","BlendDestinationOut","BlendAddOld","BlendSourceAlpha","targetFns","BlendNormalTarget","BlendAddTarget","BlendMultiplyTarget","BlendScreenTarget","BlendOverlayTarget","BlendLightTarget","BlendAddTargetOld","One","OneMinusSourceAlpha","DestinationAlpha","DestinationColor","OneMinusSourceColor","Zero","SourceAlpha","activeBlendFunction","NAMES","TOINT","normal","multiply","screen","overlay","light","mask","lighter","lighter_old","add_old","NORMAL","MASK","LIGHTER","_rect1","_rect2","Texture","outTexture","tex","btex","uv","DEF_UV","bitmap","dwidth","dheight","u1","v1","u2","v2","inAltasUVWidth","inAltasUVHeight","oriUV","moveUV","bitmapScale","scaleRate","createFromTexture","texScaleRate","_uv","uvrect","_w","_h","_bitmap","cb","recoverBitmap","Promise","resolve","then","bit","run","getTexturePixels","st","dst","tex2d","texw","texh","tex2dw","tex2dh","draww","drawh","marginL","marginT","rePosX","rePosY","wstride","pix","atlasPosX","atlasPosY","ctx","asBitmap","stu","stv","uk","vk","_drawTextureM","_targets","flush","dt","disposeBitmap","valid","getCachedClip","_clipCache","Map","get","_sizeGrid","BlendEquationSeparate","BlendType","CompareFunction","CullMode","StencilOperation","NO_UV","INV_UV","AssetDb","uuidMap","shaderNameMap","metaMap","UUID_to_URL","UUID_to_URL_async","URL_to_UUID_async","resolveURL","onResolve","startsWith","inst","shaderName_to_URL","shaderName","shaderName_to_URL_async","getMeta","getSubAssetURL","subAssetName","subAssetExt","URL","rootPath","basePath","protocol","getPath","host","pathname","initMiniGameExtensionOverrides","overrideExtension","_url","formatURL","_path","base","url2","char1","customFormat","ver","basePaths","postFormatURL","hasExtOverrides","extold","overrideFileExts","parts","getResURLByUUID","ofs","getFileName","getURLVerion","originalExts","targetExt","IncludeFile","splitToWords","block","word","substr","ofs2","useFuns","txt","codes","funs","curUseID","funnames","script","begin","words","getWith","getFunsScript","funsdef","ShaderNode","includefiles","childs","text","z","setParent","parent","setCondition","condition","conditionType","replace","__condition","toscript","def","_toscript","__id","ifdef","__noCompileEnable","noCompile","o","funsCode","file","_clearCR","RegExp","_splitToWordExps3","CullStateMap","Back","Front","Off","BlendStateMap","Disable","BLEND_DISABLE","All","BLEND_ENABLE_ALL","Seperate","BLEND_ENABLE_SEPERATE","BlendFactorMap","SourceColor","OneMinusDestinationColor","OneMinusDestinationAlpha","SourceAlphaSaturate","BlendColor","OneMinusBlendColor","BlendEquationMap","Add","ADD","Subtract","SUBTRACT","Reverse_substract","REVERSE_SUBTRACT","Min","MIN","Max","MAX","CompareFunctionMap","Never","Less","Equal","LessEqual","Greater","NotEqual","GreaterEqual","Always","StencilOperationMap","Keep","Replace","IncrementSaturate","DecrementSaturate","Invert","IncrementWrap","DecrementWrap","ShaderCompile","addInclude","fileName","allowReplace","includes","compile","vs","ps","vsNode","psNode","includeNames","defs","_compileToTree","inc","compileAsync","_loadIncludesDeep","toLoad","includesCnt","map","tc","files","codeName","preNode","fname","lines","src","match","IFDEF_YES","IFDEF_ELSE","includeFile","includeName","loadIncludeFileSync","getRenderState","obj","renderState","cull","blend","srcBlend","dstBlend","srcBlendRGB","dstBlendRGB","srcBlendAlpha","dstBlendAlpha","depthTest","depthWrite","stencilRef","stencilTest","stencilWrite","stencilOp","stencilFail","stencilZFail","stencilZPass","IFDEF_NO","IFDEF_PARENT","DefineDatas","_mask","_intersectionDefineDatas","define","unionMask","_index","maskStart","_value","endIndex","newValue","addDefineDatas","addMask","removeDefineDatas","removeMask","destDefineData","destMask","ShaderDefine","_texGammaDefine","ShaderVariant","shader","_shader","subShaderIndex","_subShaderIndex","passIndex","_passIndex","defineNames","_defineNames","defines","subShader","getSubShaderAt","pass","_passes","validDefine","_validDefine","defname","Shader3D","getDefineByName","_name","other","otherDefines","ShaderVariantCollection","_allCompiled","_variants","allCompiled","variantCount","variant","contatins","getByIndex","variants","compileShaderByDefineNames","MathUtils3D","isZero","abs","zeroTolerance","nearEqual","n1","n2","fastInvSqrt","MaxValue","MinValue","Deg2Rad","Vector2","writeTo","destVector2","dot","s","scalarLength","forNativeElement","nativeElements","elements","rewriteNumProperty","proto","ZERO","ONE","TempVector2","Vector4","destVector4","lerp","t","ax","ay","az","aw","transformByM4x4","vector4","m4x4","vx","vy","vz","vw","me","lengthSquared","inverse","subtract","Clamp","mineX","mineY","mineZ","mineW","maxeX","maxeY","maxeZ","maxeW","distanceSquared","value1","value2","UnitX","UnitY","UnitZ","UnitW","tempVec4","Vector3","transformQuat","rotation","qx","qy","qz","qw","ix","iy","iz","iw","scalarLengthSquared","transformV3ToV3","vector","transform","intermediate","_tempVector4","transformV3ToV4","vectorX","vectorY","vectorZ","transformElem","TransformNormal","normalX","normalY","normalZ","transformCoordinate","coordinate","coordinateX","coordinateY","coordinateZ","cross","bx","by","bz","vsub","vadd","destVector3","toDefault","_tempVector3","NegativeUnitX","ForwardRH","ForwardLH","Up","_DEFAULTELEMENTS","_tempV30","_tempV31","_tempV32","Matrix3x3","createRotationQuaternion","rotX","rotY","rotZ","rotW","xx","yy","zz","xy","zw","zx","yw","yz","xw","resultE","createFromTranslation","trans","createFromRotation","rad","createFromScaling","createFromMatrix4x4","sou","souE","outE","left","l","l11","l12","l13","l21","l22","l23","l31","l32","l33","r11","r12","r13","r21","r22","r23","r31","r32","r33","createElement","cloneByArray","determinant","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","transpose","lookAt","eye","up","v0","forwardLookAt","DEFAULT","Temp","TEMPVector30","TEMPVector31","TEMPVector32","TEMPVector33","_tempMatrix3x3","Quaternion","createFromYawPitchRoll","yaw","pitch","roll","halfRoll","halfPitch","halfYaw","sinRoll","cosRoll","sinPitch","cosPitch","sinYaw","cosYaw","lx","ly","lz","lw","rx","ry","rz","rw","rotationAxisAngle","axis","normalAxis","arcTanAngle","atan","angleTo","from","asin","createFromAxisAngle","half","slerp","omega","cosom","sinom","scale0","scale1","bw","acos","amount","scaling","rotateX","rotateY","rotateZ","getYawPitchRoll","upe","Matrix4x4","createRotationY","TEMPMatrix0","createRotationX","TEMPMatrix1","oe","a0","a3","invDot","rotationLookAt","forward","rotationMatrix","lengthSq","matrix3x3","m11","m12","m13","m21","m22","m23","m31","m32","m33","NAN","NaN","_tempVector0","_tempVector1","_tempVector2","DEFAULTARRAY","createRotationZ","createRotationYawPitchRoll","createRotationAxis","xz","rotationX","rotationY","rotationZ","rotationW","createTranslate","createScaling","l14","l24","l34","l41","l42","l43","l44","r14","r24","r34","r41","r42","r43","r44","createFromQuaternion","x2","y2","z2","yx","zy","wx","wy","wz","createAffineTransformation","rot","sx","sy","createLookAt","oE","xaxis","yaxis","zaxis","createPerspective","fov","aspect","znear","zfar","yScale","halfWidth","halfHeight","createPerspectiveOffCenter","zRange","createOrthoOffCenter","m14","m24","m34","m41","m42","m43","m44","getElementByRowColumn","row","column","setElementByRowColumn","setRotation","setPosition","position","equalsOtherMatrix","decomposeTransRotScale","translation","_tempMatrix4x4","decomposeTransRotMatScale","te","re","se","sX","sY","sZ","at","tempRight","decomposeYawPitchRoll","yawPitchRoll","atan2","ae","a03","a13","a23","a30","a31","a32","a33","b00","b02","b03","b04","b05","b06","b07","b08","b09","b10","billboard","objectPosition","cameraPosition","cameraUp","cameraForward","crosse","finale","diffee","obpose","mate","isIdentity","defined","num0","num1","v3","getTranslationVector","setTranslationVector","ve","getForward","setForward","getInvertFront","isInvert","DEFAULTINVERT","_defaultTexture","Texture3D","depth","createTexture3DInternal","sources","setTexture3DImageData","setTexture3DPixelsData","zOffset","setTexture3DSubPixelsData","ShaderDataType","UniformBufferParamsType","RenderParams","ShaderFeatureType","WrapMode","ShaderDataDefaultValue","Int","Bool","Float","ShaderData","uniformBufferDatas","_uniformBufferDatas","uniformBuffersMap","_uniformBuffersMap","ownerResource","_ownerResource","applyUBO","_data","_defineDatas","_initData","_addCheckUBO","ubo","uboData","uboBuffer","_uniformParamsState","setDataByUniformBufferData","_gammaColorMap","applyUBOData","addDefine","removeDefine","hasDefine","clearDefine","getBool","setBool","getInt","setInt","_setData","getNumber","setNumber","getVector2","setVector2","getVector3","setVector3","getVector","setVector","getColor","setColor","gammaColor","linearColor","getLinearColor","getMatrix4x4","setMatrix4x4","getMatrix3x3","setMatrix3x3","getBuffer","setBuffer","setTexture","lastValue","shaderDefine","getTexture","getSourceIndex","setValueData","getValueData","setUniformBuffer","getUniformBuffer","setShaderData","uniformIndex","TextureCube","Buffer","getShaderData","destData","clonecolor","v4","_cloneUBO","uboDatas","UnifromBufferData","uniformParamsStat","_createBuffer","_updateFlag","_resetUpdateFlag","dataPos","_layoutMap","_addUniformParams","_bytelength","ceil","_getArraySize","uniformID","offsetadd","posAdd","posG","Vector4Array","propertyIDToName","MatrixArray","paramsInfo","_getParamsInfo","_setUpdateFlag","_has","setNumberbyIndex","setVector2byIndex","setVector3byIndex","setVector4byIndex","setMatrixbyIndex","setVector4ArraybyIndex","setMatrixArraybyIndex","getbyteLength","setVector4Array","propertyNameToID","info","vec","setMatrixArray","setVector4","setColorbyIndex","setMatrix","ubd","ShaderProcessInfo","ShaderCompileDefineBase","compiledObj","_cacheShaderHierarchy","_cacheSharders","_owner","_VS","_PS","_defs","_resizeCacheShaderMap","cacheMap","hierarchy","resizeLength","withCompile","compileDefine","debugMaskLength","debugDefineString","_debugDefineString","debugDefineMask","_debugDefineMask","debugMode","cacheShaders","maskLength","maxEndIndex","subMask","subCacheShaders","cacheKey","defineString","_defineString","_getNamesByDefineData","shaderProcessInfo","is2D","attributeMap","_attributeMap","uniformMap","_uniformMap","renderOBJCreate","createShaderInstance","defStr","defMask","ShaderPass","_renderState","_tags","statefirst","createRenderState","setNull","_addDebugShaderVariantCollection","outDebugDefines","outDebugDefineMask","dbugShaderVariantInfo","_debugShaderVariantInfo","debugSubShader","debugShader","_subShaders","debugShaderVariantCollection","IS2d","_debugDefineStrings","_debugDefineMasks","_defineStrings","defCommonStr","spriteCommonNode","_configDefineValues","nodeCommonMap","VertexElement","elementFormat","_elementFormat","elementUsage","_elementUsage","VertexElementFormat","_elementInfos","single","getParams","FLOAT","vector2","vector3","byte4","UNSIGNED_BYTE","byte3","byte2","short2","UNSIGNED_SHORT","short4","normalizedshort2","normalizedshort4","halfvector2","halfvector4","nbyte4","BYTE","ubyte4","getElementInfos","element","Single","Byte4","Byte3","Byte2","ByteOne","Short2","Short4","NormalizedShort2","NormalizedShort4","HalfVector2","HalfVector4","NorByte4","NorUByte4","VertexDeclaration","vertexStride","_vertexStride","vertexElementCount","_vertexElements","vertexElements","_uniqueIDCounter","_vertexElementsDic","_VAElements","_shaderValues","vertexElement","elmentInfo","stride","shaderLocation","getVertexElementByIndex","getVertexElementByUsage","usage","VertexMesh","instanceWorldMatrixDeclaration","MESH_WORLDMATRIX_ROW0","MESH_WORLDMATRIX_ROW1","MESH_WORLDMATRIX_ROW2","MESH_WORLDMATRIX_ROW3","instanceSimpleAnimatorDeclaration","MESH_SIMPLEANIMATOR","instanceLightMapScaleOffsetDeclaration","MESH_LIGHTMAPSCALEOFFSET","getVertexDeclaration","vertexFlag","compatible","verDec","_vertexDeclarationMap","subFlags","MESH_POSITION0","MESH_NORMAL0","MESH_COLOR0","MESH_TEXTURECOORDINATE0","MESH_TEXTURECOORDINATE1","MESH_BLENDWEIGHT0","MESH_BLENDINDICES0","MESH_TANGENT0","MESH_CUSTOME0","MESH_CUSTOME1","MESH_CUSTOME2","MESH_CUSTOME3","SubShader","regIncludeBindUnifrom","defaultValue","assign","IncludeUniformMap","DefaultAttributeMap","uniformDefaultValue","_uniformBufferDataMap","_flags","_uniformDefaultValue","_uniformTypeMap","blockUniformMap","uniformName","uniformType","ShaderDataTypeToUniformBufferType","blockUniformIndexMap","blockData","unifromType","textureGammaDefine","setFlag","getFlag","addShaderPass","pipelineMode","_addShaderPass","shaderPass","_pipelineMode","_addIncludeUniform","includemap","ele","includeBindInfo","bindtypeMap","bindDefaultValue","shaderDataType","a_Position","a_Normal","a_Tangent0","a_Texcoord0","a_Texcoord1","a_Color","a_BoneWeights","a_BoneIndices","a_WorldMat","a_SimpleTextureParams","a_LightmapScaleOffset","init","defineData","maskMap","_maskMap","subMaskMap","_defineMap","counter","_defineCounter","find","compileDefineDatas","_compileDefineDatas","enableInstancing","supportReflectionProbe","_preCompileShader","parse","_surportVolumetricGI","surportVolumetricGI","subshader","addSubShader","passDataArray","passData","VS","FS","pipeline","_enableInstancing","_supportReflectionProbe","PERIOD_CUSTOM","PERIOD_MATERIAL","PERIOD_SPRITE","PERIOD_CAMERA","PERIOD_SCENE","_propertyNameMap","_propertyNameCounter","ShaderDefines2D","PRIMITIVE","FILTERGLOW","FILTERBLUR","FILTERCOLOR","COLORADD","WORLDMAT","FILLTEXTURE","MVP3D","GAMMASPACE","INVERTY","GAMMATEXTURE","TEXTURESHADER","PRIMITIVESHADER","initSprite2DCommandEncoder","UNIFORM_MMAT","UNIFORM_CLIPMATDIR","UNIFORM_CLIPMATPOS","UNIFORM_MMAT2","UNIFORM_SIZE","UNIFORM_CLIPOFF","UNIFORM_MVPMatrix","UNIFORM_SPRITETEXTURE","UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1","UNIFORM_BLURINFO","UNIFORM_COLORALPHA","UNIFORM_COLORMAT","UNIFORM_COLOR","UNIFORM_BLURINFO1","UNIFORM_BLURINFO2","UNIFORM_COLORADD","UNIFORM_TEXRANGE","commandUniform","createGlobalUniformMap","addShaderUniform","RenderInfo","loopStTm","loopCount","AtlasGrid","atlasID","_texCount","_rowInfo","_cells","_used","_init","addRect","pt","_get","_fill","_release","_clear","nWidth","nHeight","pCellBox","tm","nHeghit","_check","FontInfo","font","_lastFont","_lastFontInfo","_cache","_family","_size","_italic","_bold","setFont","_font","szpos","fpos","familys","RenderSpriteData","WordText","pagecharsCtx","_conchWordText","pageChars","scalex","scaley","setText","_text","cleanCache","chars","p","ri","splitRender","_splitRender","CharRenderInfo","char","deleted","orix","oriy","touchTick","isSpace","touch","curLoop","touchRect","ICharRender","fontsz","getWidth","canvasWidth","getCharBmp","lineWidth","colStr","strokeColStr","margin_left","margin_top","margin_right","margin_bottom","_window","miniGame","win","doc","_document","document","userAgent","navigator","maxTouchPoints","platform","isWXMiMi","enable","miniGameContext","trace","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","bodyStyle","body","style","margin","overflow","metas","getElementsByTagName","viewportContent","meta","content","arr2","trim","appendChild","keys","onMobile","onIOS","onIPhone","onMac","onIPad","onAndroid","onWP","onQQBrowser","onMQQBrowser","onIE","ActiveXObject","onWeiXin","onSafari","onChrome","onPC","onFirefox","onEdge","onMiniGame","onBDMiniGame","onLayaRuntime","onQGMiniGame","onQQMiniGame","onBLMiniGame","onTTMiniGame","onHWMiniGame","onVVMiniGame","onKGMiniGame","onAlipayMiniGame","onTBMiniGame","PLATFORM_ANDROID","PLATFORM_IOS","PLATFORM_PC","_isMiniGame","getElementById","removeElement","parentNode","removeChild","now","Date","clientWidth","_clientWidth","innerWidth","clientHeight","_clientHeight","innerHeight","documentElement","canvasRotation","pixelRatio","_pixelRatio","devicePixelRatio","container","_container","getQueryString","search","reg","unescape","getSafariToolbarOffset","__innerHeight","loadLib","reject","onload","onerror","mainCanvas","hanzi","fontMap","measureText","isChinese","test","CharRender_Canvas","maxw","maxh","scalefont","useImageData","showdbg","lastScaleX","lastScaleY","maxTexW","maxTexH","scaleFontSize","showDbgInfo","supportImageData","getContext","willReadFrequently","setTransform","cri","getCharCanvas","clearW","clearH","clearRect","save","textBaseline","lineJoin","strokeStyle","strokeText","fillStyle","fillText","strokeRect","imgdt","bmpWidth","bmpHeight","isIOSHighPerformanceModePlus","textAlign","fillAndStrokeText","TextRender","fontSizeInfo","mapFont","fontID","fontScaleX","fontScaleY","_curStrPos","textAtlases","isoTextures","lastFont","fontSizeW","fontSizeH","fontSizeOffX","fontSizeOffY","renderPerChar","tmpAtlasPos","textureMem","bugIOS","miniadp","systemInfo","system","isWan1Wan","charRender","scaleFontWithCtx","textRenderInst","atlasWidth2","atlasWidth","getFontSizeInfo","offx","offy","fw","fh","standardFontSize","fontStr","getNextChar","state","filltext","strokeColor","nTextAlign","_fast_filltext","getMatScaleX","getMatScaleY","maxFontScale","_italicDeg","wt","isWT","sameTexData","strWidth","hasFreedText","splitTex","forceSplitRender","curstr","stx","getCharRenderInfo","o1","texgen","genID","isotex","noAtlas","_drawResortedWords","startx","starty","samePagesData","isLastRender","_charSubmitCache","_enable","_curMat","pri","pisz","riSaved","drawTexAlign","_inner_drawTexture","txts","isoTexture","fid","atlas","charMaps","w1","TextTexture","getTextTexture","addChar","lineExt","imgdtRect","addBmpData","getAEmpty","TextAtlas","cleanAtlases","GC","destroyDt","destroyAtlasDt","totalUsedRateAtlas","curloop","maxWasteRateID","maxWasteRate","curatlas","curUsedCovRate","curUsedCovRateAtlas","waste","usedRate","lastTouchTm","showLog","destroyUnusedTextureDt","needGC","cleanMem","simClean","clean","checkBmpLine","ex","bmpData32","stpos","updateBbx","curbbx","onlyH","ey","minx","maxx","finfo","fontstr","szinfo","pixelBBX","tmpRI","bmpdt","sizeinfo","printDbgInfo","totalUsedRate","dtstr","_texW","_texH","showAtlas","bgcolor","Sprite","texttex","graphics","drawRect","drawTexture","addChild","filltext_native","useOldCharBook","forceWholeRender","checkCleanTextureDt","debugUV","texWidth","texHeight","atlasGridW","atlasgrid","setProtecteDist","discard","printDebugInfo","_glTexture","textureW","textureH","_discardTm","_render2DContext","render2DContext","recreateResource","_source","glTex","Bilinear","fillWhite","addCharCanvas","u0","Uint8ClampedArray","canv","setTextureSubImageData","fill","setGlobalRepaint","curtm","cleanTm","poolLen","texw2","gridw2","drawOnScreen","Value2D","_initone","classT","_typeClass","globalShaderData","mainType","types","mmat","u_MvpMatrix","textureHost","_textureHost","colorAdd","clipMatDir","clipMatPos","clipOff","mainID","alpha","ALPHA","_cacheID","_mmat","_clipMatDir","_clipMatpos","_clipOff","_inClassCache","updateShaderData","renderstate2d","returnGamma","textrueReadGamma","Primitive","upload","material","_compileDefine","shaderIns","bind","uploadUniforms","_sprite2DUniformParamsMap","_sceneUniformParamsMap","_materialUniformParamsMap","shaderData","_defaultShader","setFilters","filters","typeDefine","action","release","SubmitKey","submitType","blendShader","copyFrom2","equal3_2","next","equal4_2","equal_3","SubmitCMD","_ref","_key","renderSubmit","apply","_this","getRenderType","releaseRender","POOL","thisobj","Filter","onChange","EVENT_CHANGE","COLOR","GLOW","_filter","sprite","webglctx","_next","setColorFilter","_fun","svCP","tMatrix","tPadding","tHalfPadding","_cacheStyle","filterCache","getRepaint","_isHaveGlowFilter","getBounds","pivotX","pivotY","getSelfBounds","tSX","tSY","outRT","_getCacheStyle","useRT","tX","tY","drawTarget","fil","_glRender","render","_drawRenderTexture","submit","addRenderObject","_COLOR_MAP","purple","orange","white","red","green","blue","black","yellow","gray","ColorUtils","arrColor","strColor","numColor","_initDefault","_DEFAULT","_SAVE","_initSaveMap","_SAVE_SIZE","DELTA_INDEX","GRAY_MATRIX","IDENTITY_MATRIX","ColorFilter","_copyMatrix","_mat","_alpha","setByMatrix","mt","_matrix","adjustColor","brightness","contrast","saturation","hue","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_clampValue","_multiplyMatrix","x1","dx","col","_fixMatrix","val","limit","onAfterDeserialize","_color","_brightness","_contrast","_saturation","_hue","GrahamScan","p0","dis","_getPoints","tempUse","_mPointList","getFrom","getFromR","pListToPointList","pList","_tempPointList","pointListToPlist","_temPList","scanPList","scan","PointSet","tmp","ch","_tmpDic","_temArr","SpriteConst","RenderStatisticsInfo","BufferTargetType","BufferUsage","IndexFormat","TRANSFORM","BLEND","CANVAS","FILTERS","CLIP","STYLE","TEXTURE","GRAPHICS","LAYAGL3D","CUSTOM","ONECHILD","HITAREA","CHILDS","REPAINT_NONE","REPAINT_NODE","REPAINT_CACHE","REPAINT_ALL","Stat","show","views","checkUI","hide","_show","_currentShowArray","AllShow","_statUI","loop","showToggle","_currentToggleArray","_count","_timer","updateEngineData","delay","_fpsStr","renderSlow","update","trianglesFaces","getStatisticsInfo","Triangle","drawCall","DrawCall","instanceDrawCall","InstanceDrawCall","GPUMemory","textureMemory","TextureMemeory","renderTextureMemory","RenderTextureMemory","bufferMemory","BufferMemory","mode","clearStatisticsInfo","FPSStatUIParams","title","units","NodeStatUIParams","Sprite3DStatUIParams","TriangleFace","RenderNode","SkinRenderNode","ParticleRenderNode","FrustumCulling","UniformUpload","OpaqueDrawCall","TransDrawCall","DepthCastDrawCall","CMDDrawCall","BlitDrawCall","uploadUniformNum","memoryShow","renderShow","toogle_Shadow","toogle_MulLight","toogle_Light","toogle_Postprocess","toogle_AnimatorUpdate","toogle_PhysicsUpdate","toogle_Skin","toogle_Transparent","toogle_Particle","toogle_msaa","toogle_CameraCMD","toogle_Opaque","AllToggle","RenderModeToggle","RenderFuncToggle","spriteRenderUseCacheCount","canvasNormal","canvasBitmap","canvasReCache","spriteCount","sprite3DCount","renderNode","skinRenderNode","particleRenderNode","frustumCulling","uniformUpload","opaqueDrawCall","transDrawCall","depthCastDrawCall","cmdDrawCall","blitDrawCall","uploadUniform","enableShadow","enableMulLight","enableLight","enableCameraCMD","enablePostprocess","enableSkin","enableTransparent","enableParticle","enableAnimatorUpdate","enablePhysicsUpdate","enablemsaa","enableOpaque","SubmitBase","RENDERBASE","shaderValue","renderType","TYPE_2D","clipInfoID","_mesh","_blendFn","_renderType","_parent","_startIdx","_numEle","ID","getID","TYPE_CANVAS","TYPE_CMDSETRT","TYPE_CUSTOM","TYPE_BLURRT","TYPE_CMDDESTORYPRERT","TYPE_DISABLESTENCIL","TYPE_OTHERIBVB","TYPE_PRIMITIVE","TYPE_RT","TYPE_BLUR_RT","TYPE_TARGET","TYPE_CHANGE_VALUE","TYPE_SHAPE","TYPE_TEXTURE","TYPE_FILLTEXTURE","KEY_ONCE","KEY_FILLRECT","KEY_DRAWTEXTURE","KEY_VG","KEY_TRIANGLES","preRender","VertexAttributeLayout","getVertexLayoutByPool","vertexs","_pool","layout","deepthEqaul","VAElements","attributeByteSize","instanceMode","vaelements","oneAttributeSize","vertexDeclaration","vdec","instanceBuffer","IPoint","vaelemets","_vertexDeclaration","thisVaeEs","ii","nn","BufferState","_nativeVertexArrayObject","createVertexState","applyVertexBuffers","applyVertexBuffer","_vertexBuffers","applyIndexBuffers","applyIndexBuffer","_bindedIndexBuffer","applyState","vertexBuffers","indexBuffer","vertexlayout","unbind","unBind","bindVertexArray","_curBindedBufferState","unbindVertexArray","isbind","clearbindBufferState","unbindVertexState","bufferUsage","_bufferUsage","targetType","bufferUsageType","_byteLength","_glBuffer","createBuffer","_bufferType","bindBuffer","unbindBuffer","IndexBuffer","_indexType","UInt16","_setIndexData","bufferOffset","curBufSta","setDataLength","setData","Buffer2D","bufferLength","constBuffer","setByteLength","_bufferSize","needSize","old","needsz","_maxsize","_upload","_uploadSize","_u8Array","_floatArray32","_bufferData","_checkArrayUse","buff","_uint32Array","_uint16Array","_bufferSubData","dataStart","dataLength","subBuffer","_bind_upload","_bind_subUpload","nsz","oldU8Arr","newbuffer","append","byteLen","appendU16Array","setNeedUpload","subUpload","scuess","FLOAT32","SHORT","IndexBuffer2D","Static","ELEMENT_ARRAY_BUFFER","buffer2D","_bindForVAO","destory","disposeResource","VertexBuffer","_instanceBuffer","VertexBuffer2D","ARRAY_BUFFER","appendArray","oldoff","deleteBuffer","Dynamic","Mesh2D","vballoc","iballoc","_stride","vertNum","indexNum","_applied","_quadNum","canReuse","_vb","_ib","createQuadIB","QuadNum","idx","curvert","setAttributes","attribs","_attribInfo","configVAO","_vao","useMesh","releaseMesh","clearVB","_gvaoid","MeshQuadTexture","__int__","_fixattriInfo","const_stride","_fixib","_maxIB","VertexDeclarition","getAMesh","mainctx","_POOL","addQuad","useTex","vb","vpos","vbdata","vbu32Arr","cpos","useTexVal","MeshTexture","addData","vertices","uvs","rgba","ib","vertsz","f32pos","ci","m00","m01","m10","vertN","stib","cidx","stibid","si","MeshVG","addVertAndIBToMesh","NativeWebGLCacheAsNormalCanvas","_context","_conchWebGLCacheAsNormalCanvas","startRec","endRec","isCacheValid","isTextNeedRestore","WebGLCacheAsNormalCanvas","submitStartPos","submitEndPos","submits","meshlist","cachedClipInfo","oldTx","oldTy","invMat","_globalClipMatrix","_incache","_submits","curm","_pathMesh","_triangleMesh","_curSubmit","_oldMesh","_oldPathMesh","_oldTriMesh","_oldMeshList","parsubmits","curclip","textNeedRestore","charRIs","flushsubmit","curSubmit","subm","releaseMem","matI","LayaGLQuickRunner","alpha_transform_drawLayaGL","alpha_drawLayaGL","transform_drawLayaGL","transform_drawNodes","alpha_transform_drawTexture","alpha_drawTexture","transform_drawTexture","drawLayaGL_drawNodes","_style","saveTransform","curMat","transformByMatrix","_isWidthSet","_isHeightSet","wRate","hRate","px","py","_getBit","restoreTransform","_needRepaint","globalAlpha","_graphics","_render","textLastRender","drawCallOptimize","drawingToTexture","_drawingToTexture","_children","_x","_y","visFlag","_visible","NativeFilter","drawTargetBlurFilter","strength","drawFilter","RenderSprite","initRender","renders","_initRenderFun","_getTypeRender","tType","NORENDER","_no","_transform","_blend","_canvas","_maskNative","_clip","_custom","_hitarea","onCreate","customRender","scrollRect","clipRect","hitArea","_hit","_unHit","enableCanvasRender","cacheAs","cacheNeedRebuild","isGlobalRepaint","_canvas_webgl_normal_repaint","_canvas_repaint","tRec","cacheRect","drawCanvas","scaleX","scaleY","scaleInfo","tCacheType","_calculateCacheRect","releaseContext","createContext","_applyFilters","staticCache","reCache","blendMode","globalCompositeOperation","preBlendMode","tRect","tmpRT","breakNextMerge","tmpTarget","shrink","getStyle","setBlendMode","recycleTarget","drawMask","drawMasked","drawMaskComposite","Bezier","_controlPoints","_calFun","getPoint2","_switchPoint","shift","p3","lineX","lineY","getPoint3","p4","insertPoints","dLen","getBezierPoints","inSertCount","RenderStateType","I","DrawStyle","_drawStyle","toInt","toColorStr","Path","_lastOriX","_lastOriY","paths","_curPath","beginPath","convex","renderPath","closePath","newPath","pointX","pointY","rp","SaveBase","_createArray","namemap","_namemap","TYPE_ALPHA","TYPE_FILESTYLE","TYPE_FONT","TYPE_LINEWIDTH","TYPE_STROKESTYLE","TYPE_ENABLEMERGE","TYPE_MARK","TYPE_TRANSFORM","TYPE_TRANSLATE","TYPE_TEXTBASELINE","TYPE_TEXTALIGN","TYPE_GLOBALCOMPOSITEOPERATION","TYPE_SHADER","TYPE_FILTERS","TYPE_COLORFILTER","isSaveMark","_dataObj","_valueName","_newSubmit","dataObj","newSubmit","_saveMark","_saveuse","cache","_save","TYPE_CLIPRECT","TYPE_CLIPRECT_STENCIL","TYPE_IBVB","TYPE_FILTERS_TYPE","SaveClipRect","_clipInfoID","_clipRect","incache","_clipInCache","SaveMark","_preSaveMark","Create","no","SaveTransform","_savematrix","SaveTranslate","Shader2D","shaderType","textureShader","D2","textureAttribute","primitiveShader","primitiveAttribute","a_position","a_attribColor","a_posuv","a_attribFlags","SkinMeshBuffer","addSkinMesh","skinMesh","getData2","minAngle","BasePoly","_checkMinAngle","p1x","p1y","p2x","p2y","p3x","p3y","v1x","v1y","v2x","v2y","cosAngle","createLine2","indices","indexBase","outVertex","tempData","newlen","vec2","getNormal","_setMiddleVertexs","last","tempIndexs","y1","x3","y3","edgeIndexArray","perpx","perpy","perp2x","perp2y","denom","dist","createLineTriangle","outvb","vbstride","outib","ptlen","dy","pointnum","tmpData","realPtNum","EarcutNode","prev","prevZ","nextZ","steiner","Earcut","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","area","ear","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","locallyInside","isValidDiagonal","splitPolygon","list","queue","getLeftmost","sort","compareX","eliminateHole","hole","findHoleBridge","hx","hy","Infinity","mx","my","tanMin","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","cx","cy","intersectsPolygon","middleInside","q1","q2","inside","an","bp","sum","MeshTopology","CONTEXT2D_FUNCTION_ID","Submit","_tex","renderDrawContext","drawElements2DTemp","Triangles","_poolSize","mesh","sv","blendType","_nBlendType","_shader2D","createShape","numEle","SubmitCanvas","_matrix4","preAlpha","preMatrix4","preMatrix","preFilters","worldFilters","preWorldShaderDefines","worldShaderDefines","mout","SubmitTarget","srcRT","_colorFiler","ft","colorMat","colorAlpha","SubmitTexture","CharSubmitCache","_ndata","_clipid","_clipMatrix","_imgId","imgid","getPos","__nPosPool","__posPool","colorFiler","_copyClipInfo","_drawCount","Config3D","setResolution","customResolution","_resoluWidth","_resoluHeight","enableDynamicBatch","enableStaticBatch","enableUniformBufferObject","defaultCacheRTMemory","defaultPhysicsMemory","enableMultiLight","maxLightCount","lightClusterCount","maxMorphTargetCount","useBVHCull","BVH_max_SpatialCount","BVH_limit_size","BVH_Min_Build_nums","debugFrustumCulling","RenderTexture","configRenderContextInstance","_configInstance","createFromPool","colorFormat","depthFormat","multiSamples","depthTexture","generateDepthTexture","_inPool","_poolMemory","recoverToPool","clearPool","bindCanvasRender","_bindCanvasRender","_generateDepthTexture","_depthStencilTexture","createRenderTextureInternal","setupRendertargetTextureAttachment","depthStencilTexture","_isCameraTarget","_multiSamples","_createRenderTarget","recreate","readRenderTargetPixelData","NativeContext","_byteLen","_renderObject3DList","_tmpMatrix","_conchContext","_tempRenderTexture2D","isSyncToRenderThread","_idata","_fdata","_byteArray","bufferConchRef","webglPlus","createArrayBufferRef","ARRAY_BUFFER_TYPE_CMD","ARRAY_BUFFER_REF_REFERENCE","setSharedCommandBuffer","_need","flushCommand","lineCap","miterLimit","isMain","_target","add_i","keepRT","_deleteRT","set2DRenderConfig","const2DRenderCMD","cmd","addCMD","BlendEquation","BlendFunc","DepthTest","DepthMask","CullFace","FrontFace","applyCMD","add_i_String","SET_GLOBAL_COMPOSITE_OPERTAION","add_ii","FILL_STYLE","add_if","SAVE","RESTORE","add_iffffff","add_iffff","CLIP_RECT","add_iff","SCALE","checkTexture","add_iiffffffffffffi","DRAW_TEXTURE","drawTextureWithTransform","drawTextureWithSizeGrid","sizeGrid","gx","gy","repeat","add_iiffffffffiffffffffffi","DRAW_TEXTURE_SIZE_GRID","TRANSLATE","_rotate","ROTATE","_scale","_drawLine","fromX","fromY","toX","toY","lineColor","vid","add_iffffffif","DRAW_LINE","_drawLines","add_iffif_ab","DRAW_LINES","_drawCircle","radius","fillColor","add_ifffiiiif","DRAW_CIRCLE","_drawPie","startAngle","endAngle","add_ifffffiiiif","DRAW_PIE","_drawPoly","isConvexPolygon","add_iffiiiifi_ab","DRAW_POLY","fillRect","FILL_RECT","fillTexture","typeValue","add_iiffffiffi","FILL_TEXTURE","STROKE_STYLE","LINE_WIDTH","STROKE_RECT","_drawPath","brush","pen","BEGIN_PATH","MOVE_TO","LINE_TO","add_ifffff","ARC_TO","CLOSE_PATH","FILL","STROKE","drawCurves","DRAW_CURVES","drawCanvasNormal","drawCanvasBitmap","align","borderColor","add_iiiifff_String_String","FILL_WORDS","add_iiffiifi_String","FILL_WORD_TEXT","drawText","strokeWord","fillBorderText","filltext11","fontObj","underLine","drawTriangles","colorNum","add_iiifffffffff_ab_ab_ab","DRAW_TRANGLES","DRAW_MASKED","SET_AS_BITMAP","add_iii","SIZE","filter","addRenderObject3D","scene3D","cs","repaint","add_iffif","fdata","idata","add_iiffff","add_String","add_iffiiiifi","add_iiffiifi","strTobufer","add_iiiifff","str0","str1","ab0","ab1","add_iiifffffffff","arraybuffer0","arraybuffer1","arraybuffer2","nAlignLength0","getAlignLength","nAlignLength1","nAlignLength2","wab","nAlignLength","byteOffset","add_iif_ab","ARRAY_BUFFER_TYPE_DATA","ARRAY_BUFFER_REF_COPY","defaultClipMatrix","MAXCLIPRECT","ContextParams","$transform","_drawRect","drawTexture2","args2","moveTo","lineTo","stroke","addPath","quadraticCurveTo","_fillAndStroke","arc","PI2","_drawEllipse","_drawRoundRect","lt","lb","rb","tPath","_getPath","HPI","startX","startY","arcTo","scissorTest","_drawTexToDrawTri_Vert","_drawTexToDrawTri_Index","_tempUV","_drawTriUseAbsMatrix","_COUNT","_other","_renderNextSubmitIndex","_renderCount","_submitKey","_transedPoints","_temp4Points","_clipID_Gen","_lastMatScaleX","_lastMatScaleY","_lastMat_a","_lastMat_b","_lastMat_c","_lastMat_d","_lastTex","_fillColor","_flushCnt","defTexture","clearColor","_contextcount","_textRender","defTex2d","clearBG","_getSubmits","_releaseMem","getFillColor","make","lastBlend","_fillRect","sameKey","isSameClipInfo","_MAXVERTNUM","transformQuad","clipedOff","drawstyle","mixRGBandAlpha","_fillTexture","callLater","_repaintSprite","texuvRect","offsetx","offsety","repeatx","repeaty","sty","edx","edy","edu","edv","_mixRGBandAlpha","arry","u_TexRange","drawTextures","colors","ipos","bmpid","submitDebugger","clipInfo","cm","cmp","_useNewTex2DSubmit","minVertNum","_drawTexRect","ops","lastRender","preKey","tv","tuv","transform4Points","ma","mb","mc","md","a4","a5","a6","a7","italicDeg","xoff","maxy","RTRestore","oldcomp","tmpMat","_flushToTarget","triMesh","webGLImg","_transformByMatrix","setTransformByMatrix","escape","miny","cmaxx","cmaxy","submitElement","renderList","close","addVGSubmit","curEleNum","xp","yp","cpath","pi","faceNum","idxpos","fi","vertex","maxVertexNum","ptnum","len1","ndx","ndy","dx2","dy2","len22","len2","ndx2","ndy2","odx","ody","olen","nOdx","nOdy","halfAng","ptx1","pty1","orilen","sinx","cosx","fda","SEGNUM","lastx","lasty","_x1","_y1","cvx","cvy","counterclockwise","minNum","ndivs","da","sr","cl","cpx","cpy","tArray","parameterLineWidth","hw","clip","drawParticle","_fillTexture_h","oriw","orih","du","uvr","tmpuv1","_fillTexture_v","dv","uvb","ox","oy","sw","sh","ow","oh","d_top","d_left","d_right","d_bottom","scale_x","scale_y","uvl","uvt","uvl_","uvt_","uvr_","uvb_","tuvr","tmpUVRect","_SUBMITVBSIZE","tmpUV","HTMLCanvas","createCanvas","_ctx","_setContext","contextID","getMemSize","toBase64","encoderOptions","conchToBase64FlipY","conchToBase64","toDataURL","toBase64Async","callBack","getDataAsync","base64","BoundsStyle","bounds","userBounds","temBM","CacheStyle","needBitmapCache","cacheForFilters","needEnableCanvasRender","userSetCache","releaseFilterCache","fc","maskParent","hasGlowFilter","CANVAS_EXTEND_EDGE","_scaleInfo","SpriteStyle","skewX","skewY","dragging","AlphaCmd","cmdID","DrawCircleCmd","percent","getBoundPoints","DrawCurvesCmd","DrawImageCmd","DrawLineCmd","_tempPoints","DrawLinesCmd","DrawPathCmd","tCMD","DrawPieCmd","_startAngle","_endAngle","lineOffset","end1","ed","s1","s2","csr","DrawPolyCmd","DrawRectCmd","DrawTextureCmd","FillTextureCmd","RestoreCmd","RotateCmd","ScaleCmd","TransformCmd","TranslateCmd","DrawTrianglesCmd","vert","vnum","Draw9GridTextureCmd","EMPTY_SIZE_GRID","SaveCmd","DrawEllipseCmd","DrawRoundRectCmd","_tempMatrix","_initMatrix","_tempMatrixArrays","GraphicsBounds","_cacheBoundsType","_temp","_rstBoundPoints","_bounds","realSize","_getCmdPoints","cmds","_sp","_affectBySize","matrixs","tempMatrix","_switchMatrix","addPointArrToRst","tMatix","addPointToRst","_tempPoint","ClipRectCmd","DrawTexturesCmd","FillTextCmd","_strokeColor","_stroke","_align","_wordText","_fontObj","CacheManger","regCacheByFunction","disposeFunction","getCacheListFunction","unRegCacheByFunction","tryDispose","getCacheList","_cacheList","forceDispose","beginCheck","waitTime","_checkLoop","stopCheck","cacheList","tTime","loopTimeLimit","VectorGraphManager","useDic","shapeDic","shapeLineDic","_checkKey","_freeIdArray","startDispose","getId","addShape","shape","addLine","Line","getShape","deleteShape","endDispose","Graphics","add2DGlobalUniformData","propertyID","propertyKey","uniformtype","_renderEmpty","_cmds","_vectorgraphArray","_graphicBounds","_createData","_clearData","_destroyData","recoverCmds","_repaint","_clearBoundsCache","onSizeChanged","_initGraphicBounds","_isOnlyOne","_renderOne","_renderAll","addCmd","removeCmd","_material","replaceTextColor","loadImage","getRes","drawLine","drawLines","drawRoundRect","drawCircle","drawEllipse","drawPie","drawPoly","drawPath","draw9Grid","ARRAY_EMPTY","Node","is3D","_bits","_updateDisplayedInstage","_setUpNoticeChain","_setBitUp","bubbleEvent","_bubbleChainPool","destroyChild","destroyAllComponent","destroyChildren","removeChildren","_zOrder","getChildIndex","_childChanged","_setParent","addChildren","addChildAt","oldIndex","getChildByName","child","getChildAt","setChildIndex","removeChildAt","removeSelf","removeChildByName","beginIndex","replaceChild","newNode","oldNode","numChildren","isAncestorOf","displayedInStage","_displayChild","_onRemoved","_setDisplay","display","timerLoop","method","coverBefore","jumpFrame","timerOnce","frameOnce","clearTimer","runCallLater","scene","active","_activeChangeScripts","_processActive","_onActive","_onInActive","_onActiveInScene","EVENT_SET_ACTIVESCENE","_onInActiveInScene","EVENT_SET_IN_ACTIVESCENE","_setBelongScene","_setUnBelongScene","fromSetter","_activeHierarchy","_inActiveHierarchy","comp","activeChangeScripts","_components","parentScene","_addComponentInstance","_componentsChanged","srcRoot","dstRoot","destNode","destComponent","addComponent","addComponentInstance","component","getComponent","componentType","components","getComponents","HALF_PI","Ease","linearNone","linearIn","linearInOut","linearOut","bounceIn","bounceOut","bounceInOut","backIn","backInOut","backOut","elasticIn","elasticInOut","elasticOut","strongIn","strongInOut","strongOut","sineInOut","sineIn","sineOut","quintIn","quintInOut","quintOut","quartIn","quartInOut","quartOut","cubicIn","cubicInOut","cubicOut","quadIn","quadInOut","quadOut","expoIn","expoInOut","expoOut","circIn","circInOut","circOut","Handler","runWith","unshift","Tween","gid","to","props","duration","ease","autoRecover","isTo","usePool","runNow","_duration","_ease","easeNone","_complete","_delay","_props","_usedTimer","_startTimer","_usedPool","_delayParam","$_GID","tweenMap","clearTween","firstStart","_initProps","_beginLoop","_doEase","_updateEase","time","usedTimer","ratio","prop","progress","uTime","runTimer","handler","restart","pause","dTime","setStartTime","startTime","clearAll","tweens","tween","_remove","resume","Dragging","maxOffset","_dragging","_clickOnly","hasInertia","elasticDistance","elasticBackTime","_elasticRateX","_elasticRateY","_lastX","mouseX","_lastY","mouseY","onStageMouseUp","tweenMove","_tween","backToArea","getMousePoint","_canvasTransform","_offsets","checkArea","_offsetX","_offsetY","checkElastic","SpriteUtils","getGlobalRecByPoints","x0","y0","newLTPoint","newRBPoint","localToGlobal","getGlobalPosAndScale","getTransformRelativeToWindow","coordinateSpace","globalTransform","canvasMatrix","canvasLeft","canvasTop","canvasDegree","clientScaleX","clientScaleY","domScaleX","domScaleY","perpendicular","fitDOMElementInArea","dom","_fitLayaAirInitialized","transformOrigin","webKittransformOrigin","webkitTransform","updateOrder","_boundStyle","_ownGraphics","_anchorX","_anchorY","_mouseState","_tfChanged","_sizeFlag","mouseThrough","autoSize","hitTestPrior","_globalDeltaFlages","_cacheGlobal","_globalPosx","_globalPosy","_globalRotate","_globalScalex","_globalScaley","updateZOrder","_getBoundsStyle","_setCustomRender","customRenderEnable","_setCacheAs","_checkCanvasEnable","tEnable","_setX","_setY","cacheGlobal","_setGlobalCacheFlag","Sprite_GlobalDeltaFlage_Position_X","Sprite_GlobalDeltaFlage_Matrix","_syncGlobalFlag","parentRepaint","Sprite_GlobalDeltaFlage_Position_Y","get_width","set_width","_setWidth","_setPivotX","_setTranformChange","_shouldRefreshLayout","get_height","set_height","_setHeight","_setPivotY","displayWidth","displayHeight","setSelfBounds","bound","_boundPointsToParent","_getBoundPointsM","ifRotate","pX","pY","toParentPoint","getGraphicBounds","rec","chidren","cList","setStyle","set_scaleX","set_scaleY","Sprite_GlobalDeltaFlage_Scale_X","_setScaleX","get_scaleX","Sprite_GlobalDeltaFlage_Scale_Y","_setScaleY","get_scaleY","Sprite_GlobalDeltaFlage_Rotation","_setRotation","_setSkewX","_setSkewY","_createTransform","_adjustTransform","sskx","ssky","skx","sky","ssx","ssy","_setTransform","set_transform","get_transform","_getPivotX","_getPivotY","anchorX","get_anchorX","set_anchorX","anchorY","get_anchorY","set_anchorY","_setAlpha","_getAlpha","visible","get_visible","set_visible","setGraphics","transferOwnership","speedMode","pivot","drawToCanvas","canvasHeight","drawToTexture","drawToTexture3D","imgdata","ImageData","lineLen","srcoff","putImageData","drawtocanvCtx","texRT","rtex","oldFilters","createNewPoint","globalNode","globalToLocal","fromParentPoint","scroll","mouseEnabled","_onDisplay","_skinBaseUrl","fromImage","_setMask","startDrag","stopDrag","hitTestPoint","_setTexture","recArr","_gcmds","_filters","getGlobalMatrix","_globalMatrix","_getGlobalCacheFlag","globalScaleX","globalScaleY","globalRotation","globalPosX","globalPosY","CustomMaterial","setGlobalPos","globalx","globaly","_getGlobalCacheLocalToGlobal","_getGlobalCacheGlobalToLocal","globalDeltaFlages","AnimationBase","wrapMode","_interval","_isReverse","_frameRateChanged","play","_isPlaying","_actionName","_getFrameByLabel","WRAP_REVERSE","interval","_frameLoop","label","_labels","_controlNode","WRAP_PINGPONG","_setControlNode","_resumePlay","addLabel","removeLabel","_removeLabelFromList","gotoAndStop","_displayToIndex","tArr","WRAP_POSITIVE","AtlasInfoManager","infoFile","fetch","addAtlases","dic","_fileLoadDic","prefix","frames","entry","addAtlas","atlasUrl","getFileLoadPath","WorkerLoader","workerSupported","Worker","_worker","workerPath","onmessage","workerMessage","_dispatcher","options","postMessage","evt","imageBitmap","AtlasResource","dir","textures","BatchProgress","_callback","_weights","_progress","itemCount","createCallback","weight","np","ws","perc","ImgUtils","compareVersion","curVersion","needVersion","curVersionArr","needVersionArr","num2","isSupport","getSystemInfoSync","SDKVersion","Blob","arrayBufferToURL","arrayBuffer","newurl","createBufferURL","blob","createObjectURL","isSavaData","_arrayBufferToURL","revokeBufferURL","revokeObjectURL","XMLUtils","decodeString","aSource","sb","pos1","pos2","entity","encodeString","attrs","attrName","defValue","getFloat","XMLTagType","XMLIterator","lowerCaseName","sourceLen","parsePos","lastTagEnd","tagPos","tagLength","tagName","nextTag","tagType","Start","attrParsed","lastTagName","CDATA","Comment","Instruction","End","singleQuoted","doubleQuoted","possibleEnd","Void","getTagSource","getRawText","getText","trimEnd","attributes","_attrs","parseAttributes","getAttribute","valueStart","valueEnd","waitValue","quoted","attrEnd","prototype","XML","XmlString","getAttrString","getAttrInt","getAttrFloat","getAttrBool","setAttribute","attrValue","getNode","selector","lastOpenNode","nodeStack","childNode","HttpRequest","_http","XMLHttpRequest","send","responseType","headers","_responseType","_urlEncode","http","open","setRequestHeader","JSON","stringify","restype","dataType","_onError","onabort","_onAbort","onprogress","_onProgress","_onLoad","lengthComputable","loaded","total","status","statusText","responseURL","message","responseText","response","encodeURI","Downloader","httpRequestPool","common","originalUrl","contentType","onProgress","onComplete","getRequestInst","returnRequestInst","$ref","image","Image","crossOrigin","imageWithBlob","imageWithWorker","workerLoaderOptions","audio","oncanplaythrough","typeIdCounter","NullURLInfo","typeId","main","loaderType","registerLoader","exts","typeEntry","typeMap","extMap","retryNum","retryDelay","maxLoader","_loadings","_queue","_downloadings","arg1","arg2","arg3","priority","group","ignoreCache","useWorkerLoader","promise","dummyOptions","pd","promises","_load1","all","_load2","silent","warnFailed","initiator","getURLInfo","obsoluteRes","formattedUrl","groupMap","cacheRes","_getRes","loadingKey","task","atlasInfo","ATLAS","baseUrl","loadTaskPool","LoadTask","obsoluteInst","assetLoader","_cacheRes","catch","delete","retryCnt","noRetry","queueToDownload","download","preloadedContent","preLoadedMap","completeItem","downloader","extEntry","initiatorUrl","msg","resArr","loadedMap","getTexture2D","getBaseTexture","getAtlas","createNodes","urlInfo","checkObj","_clearRes","clearTextureRes","setGroup","clearResByGroup","clearUnLoaded","cancelLoadByUrls","urls","cancelLoadByUrl","loadPackage","remoteUrl","tmpPath","_loadSubFileConfig","mini","_loadMiniPackage","packName","subPkgNameSeperator","loadTask","loadSubpackage","success","onProgressUpdate","subPkgPathSeperator","fileConfig","hash","indice","configs","config","TEXT","BUFFER","IMAGE","SOUND","VIDEO","FONT","TTF","HIERARCHY","MESH","MATERIAL","TEXTURECUBE","TEXTURE2DARRAY","ANIMATIONCLIP","TERRAINHEIGHTDATA","TERRAINRES","SPINE","MathUtil","subtractVector3","scaleVector3","lerpVector3","lerpVector4","slerpQuaternionArray","Offset1","Offset2","Offset3","getRotation","sortBigFirst","sortSmallFirst","sortNumBigFirst","sortNumSmallFirst","sortByKey","bigFirst","forceNum","_sortFun","FrameAnimation","_sortIndexFun","objpre","objnext","_setUp","targetDic","animationData","_targetDic","_animationData","frameRate","parsed","labels","_usedFrames","animationNewFrames","_calculateDatas","nodes","_displayNodeToFrame","frame","propFrames","funFrames","funkeys","tNode","_calculateKeyFrames","tKeyFrames","keyFrames","keyframes","initValues","isFun","_calculateNodePropFrames","resetNodes","_dealKeyFrame","_calculateFrameValues","keyFrame","startFrame","endFrame","easeFun","startValue","dValue","tweenMethod","GraphicAnimation","_nodeIDAniDic","_parseNodeList","uiView","_nodeList","_nodeDefaultProps","compId","_calGraphicData","aniData","_createGraphicData","preGraphic","gList","animationDataNew","_createFrameGraphic","_gList","_rootMatrix","_updateNodeGraphic","_rootNode","parentTransfrom","tNodeG","tResultTransform","tTex","_nodeGDic","_getNodeGraphicData","resultTransform","tGraphicAlpha","skin","_getTextureByUrl","_updateNoChilds","tTransform","_updateNodeGraphic2","onlyTranslate","hasTrans","ifSave","getNodeDataByID","nodeID","_getParams","params","obj2","_temParam","_getObjVar","noValue","vArr","GraphicNode","frameData","_drawTextureCmd","aX","aY","_tempMt","setAniData","aniName","animations","tAniO","aniDic","anilist","frameO","animationList","animationDic","parseByData","rootNode","aniO","nodeRoot","setUpAniData","parseAnimationByData","animationObject","_I","parseAnimationData","Animation","_autoPlay","_frames","_setFramesFromCache","showWarn","framesMap","_copyLabels","loadAnimation","loadAtlas","loadImages","autoPlay","cacheName","createFrames","onLoaded","loadUrl","_loadAnimationData","defaultO","aniList","clearCache","key2","images","BitmapFont","loadFont","fontSize","autoScaleSize","tint","maxWidth","lineHeight","letterSpacing","parseFont","xml","paddingArray","padding","ct","advance","getTextWidth","getMaxWidth","getMaxHeight","EffectAnimation","EFFECT_BEGIN","_onOtherBegin","_addEvent","effect","playEvent","_playEvent","_onPlayAction","_recordInitData","_aniKeys","effectClass","classStr","_effectClass","uiData","effectData","tSecondFrame","secondFrames","TextStyle","strikethrough","strikethroughColor","bold","italic","underline","underlineColor","valign","alignItems","leading","HtmlElementType","HtmlElement","getAttr","setAttr","fetchAttributes","getFromPool","Text","returnToPool","HtmlImage","_element","objContainer","loadTexture","refreshLayout","HtmlLink","_shape","_rects","_rectCnt","resetArea","HtmlParseOptions","linkUnderline","defaultLinkUnderline","linkColor","defaultLinkColor","s_list1","s_list2","HtmlParser","_styleStack","_options","_elements","_styleStackTop","colorChanged","skipText","ignoreWhiteSpace","skipNextCR","appendText","pushStyle","popStyle","Link","LinkEnd","Input","Select","isNewLine","tf","equalStyle","defaultParser","classMap","UBBParser","_readPos","defaultImgWidth","defaultImgHeight","_handlers","onTag_URL","onTag_IMG","onTag_B","onTag_I","onTag_U","onTag_Simple","onTag_COLOR","onTag_FONT","onTag_SIZE","attr","getTagText","lastColor","lastSize","pos3","tag","repl","func","_overflow","VISIBLE","_singleCharRender","_prompt","_textWidth","_textHeight","_textStyle","_lines","_padding","_fontSizeScale","registerBitmapFont","bitmapFont","_bitmapFonts","unregisterBitmapFont","recoverLines","textWidth","_updatingLayout","drawBg","markChanged","textHeight","typeset","ignoreLang","langPacks","changeText","_realFont","_bitmapFont","family","set_color","_isChanged","wordWrap","_wordWrap","bgColor","_bgColor","_borderColor","singleCharRender","html","_html","ubb","_ubb","_maxWidth","htmlParseOptions","_htmlParseOptions","parseTemplate","template","_templateVars","templateVars","setVar","scrollX","_scrollPos","maxScrollX","renderText","scrollY","maxScrollY","_typeset","doLayout","_objContainer","_hideText","isPrompt","_onPostLayout","saveColor","normalizeCR","_parseEscapeChars","escapeCharsPattern","getReplaceStr","_asPassword","_passwordChar","_promptColor","rectWidth","ELLIPSIS","MAX_VALUE","curLine","lastCmd","charWidth","charHeight","rectHeight","bfont","buildLines","ctxFont","_ctxFont","mr","_testWord","line","wrapText","endLine","startLine","cmdPool","linkEnd","linePool","remainWidth","tw","maybeIndex","wordWidth","startIndex","isEmoji","testEmoji","isEmojiChar","newLine","ccode","unicode","execResult","wordBoundaryTest","exec","calcTextSize","nw","nh","lastLine","htmlObj","SHRINK","low","high","cur","linesDeleted","done","ellipsisStr","SCROLL","HIDDEN","paddingLeft","paddingTop","scrollPos","clipped","curLink","linkStartX","lineCnt","lineClipped","thickness","_bgDrawCmd","RightToLeft","emojiTest","escapeSequence","_isFirstTouch","_tempRect","_rollOverChain","_rollOutChain","_inst","InputManager","_touchPool","_mouseTouch","TouchInfo","_pressKeys","_keyEvent","getTouchPos","getTouch","touchTarget","_touchTarget","touchCount","cancelClick","clickCancelled","hasKeyDown","_stage","oncontextmenu","addEventListener","preventDefault","_touchInput","handleMouse","passive","isTextInputting","handleTouch","setPointerCapture","pointerId","releasePointerCapture","handleKeys","_eventType","_nativeEvent","pageX","clientX","pageY","clientY","mouseEventsEnabled","getNodeUnderPoint","_mouseMoveTime","move","downTargets","lastRollOver","handleRollOver","began","downButton","handleFocus","_c","_d","moved","clickTarget","clickTest","isDblClick","clickCount","deltaY","_e","changedTouches","uTouch","multiTouchEnabled","identifier","shouldCreate","focus","pre_input","new_input","nativeInput","multiline","keyEventsEnabled","getSpriteUnderPoint","getSprite3DUnderPoint","editing","hitTest","childEditing","isHit","clickTestThreshold","isiOSWKwebView","clickTrack","downPos","performance","lastClick","Render","customRequestAnimationFrame","loopFun","_customRequestAnimationFrame","_loopFunction","customRenderEngine","engine","_customEngine","mainCanv","_first","_startTm","_timeId","_Render","_mainCanvas","fps","ifps","stamp","frm","lastFrm","_loop","_onVisibilitychange","isVisibility","clearInterval","setInterval","_enterFrame","vsyncTime","_rendercontex","TypedArrayClasses","Int8Array","Float64Array","_errors","_getNodeByRef","_getNodeData","SerializeUtil","decodeObj","outErrors","getNodeByRef","getNodeData","isDeserializing","_decodeObj","_$uuid","getLoadTypeByEngineType","_$type","_$ref","typedArray","_$tmpl","childObj","bakeOverrideData","overrideData","dataMap","od","_$override","_$parent","applyOverrideData","nodeData","overrideDataMap","_$id","children","_$child","cloneTree","comps","_$comp","visit","idPath","toWrite","arrayEquals","mergeData","compType","_$prefab","_$index","overrided","_multiline","_editable","_maxChars","_type","IOS_IFRAME","self","_onMouseDown","_onUnDisplay","_createInputElement","isTrue","_popupInputMethod","inputElement","_initInput","input","inputContainer","zIndex","setPos","cssText","resize","backgroundColor","border","outline","_processInputting","_stopEvent","setFontFace","fontFace","fontFamily","isAppUseNewInput","setFontSize","_restrictPattern","setSelection","selectionStart","selectionEnd","_syncInputTransform","inputWid","inputHei","setScale","setSize","select","_focus","_focusOut","_setInputMethod","_focusIn","scrollTop","blur","parentElement","direction","cssStyle","whiteSpace","_setPromptColor","readOnly","setType","setForbidEdit","maxLength","placeholder","_onKeyDown","setMultiAble","fontStyle","fontWeight","promptStyleDOM","head","innerText","miniGameTxt","setBgColor","restrict","_restrict","editable","maxChars","prompt","promptColor","TYPE_TEXT","TYPE_PASSWORD","TYPE_EMAIL","TYPE_URL","TYPE_NUMBER","TYPE_RANGE","TYPE_DATE","TYPE_MONTH","TYPE_WEEK","TYPE_TIME","TYPE_DATE_TIME","TYPE_DATE_TIME_LOCAL","TYPE_SEARCH","Widget","_top","_bottom","_left","_right","_centerX","_centerY","_onParentResize","resetLayoutX","resetLayoutY","flagX","flagY","resetLayout","centerX","centerY","_rect","_ptPoint","HitArea","_isHitGraphic","graphic","_isHitCmd","_ptInPolygon","areaPoints","nCross","hit","unHit","_hitCmds","_unHitCmds","WeakObject","supportWeakMap","delInterval","_maps","_obj","del","Prefab","_deps","errors","json","LegacyUIParser","createByData","deps","addDep","onDepObsolute","addDeps","_listClass","_viewClass","HierarchyResource","PrefabImpl","api","root","runtime","clas","_viewCreated","getBindFun","_funMap","_runScript","tInitTool","InitTool","createComp","_idMap","tAni","_aniList","Scene","finish","createInitTool","view","initTool","getCompInstance","isList","_addGraphicsToSprite","_isDrawType","_addGraphicToSprite","tChild","addNodeRef","setCompValue","_afterInited","_sheet","one","watcher","DataWatcher","exe","_parseWatchData","key1","_parseKeyWord","_watchMap","notifer","changeData","pageData","_doAwake","collectResourceLinks","innerUrls","addInnerUrl","loadList","loadList3D","check","createByJson","customHandler","instanceHandler","itemRender","Function","customProps","created","graphicO","_getGraphicsFromSprite","_addGraphicToGraphics","isChild","dataO","propsName","_getTransformData","propsO","drawConfig","DrawTypeDic","_tM","_adptLineData","_adptTextureData","_adptLinesData","_getPointListByStr","xPos","adptFun","pointArr","Rect","Circle","Pie","FillTexture","FillText","Lines","Curves","Poly","_nodeRefList","_initList","tool","referStr","setNodeRef","tRefInfo","getReferData","tStr","list2","addInitItem","doInits","createChildren","autoDestroyAtClosed","_widget","setUIMap","uimap","loadScene","unDestroyedScenes","_loadPage","hideLoadingPage","createView","getNodeByID","closeOther","param","closeAll","_scene3D","onOpened","onClosed","_getWidget","_sizeChanged","freshLayout","_root","_scene2D","showLoadingPage","_onSceneLoaded","gc","setLoadingPage","loadPage","_showLoading","_hideLoading","Timer","autoActive","currFrame","_delta","_map","gSysTimer","_update","currTimer","_getNowData","_lastTimer","awake","handlers","userFrame","exeTime","_clearHandlers","_recoverHandler","useFrame","_getHandler","TimerHandler","_indexHandler","cid","mid","$_TID","_mid","CallLater","clearCallLater","withClear","_laters","laters","LaterHandler","WebGL","_nativeRender_enable","onStageResize","isNativeRender_enable","RunDriver","changeWebGLSize","ComponentDriver","_onUpdates","_onLateUpdates","_onPreRenders","_onPostRenders","_toStarts","callStart","onStart","onError","callUpdate","onUpdate","callLateUpdate","onLateUpdate","callPreRender","onPreRender","callPostRender","onPostRender","callDestroy","Stage","_frameRate","designWidth","designHeight","renderingEnabled","screenAdaptationEnabled","_screenMode","_scaleMode","_alignV","_alignH","_safariOffsetY","_frameStartTime","_previousOrientation","orientation","_wgColor","_scene3Ds","_globalRepaintSet","_globalRepaintGet","_needUpdateCanvasSize","_isFocused","_isVisibility","_isInputting","visibilityChange","hidden","mozHidden","msHidden","webkitHidden","updateCanvasSize","needUpdateCanvasSize","isFocused","setScreenSize","screenWidth","screenHeight","SCREEN_NONE","SCREEN_VERTICAL","SCREEN_HORIZONTAL","scaleMode","realWidth","realHeight","SCALE_NOSCALE","SCALE_SHOWALL","SCALE_NOBORDER","SCALE_FULL","SCALE_FIXED_WIDTH","SCALE_FIXED_HEIGHT","SCALE_FIXED_AUTO","SCALE_FIXED_AUTO_LAYAME","SCALE_FIXED_AUTO_LAYAVERSE","_formatData","ALIGN_LEFT","ALIGN_RIGHT","ALIGN_TOP","ALIGN_BOTTOM","_setStageStyle","canvasStyle","webkitTransformOrigin","msTransformOrigin","mozTransformOrigin","oTransformOrigin","msTransform","mozTransform","oTransform","setScreenSizeForScene","stageWidth","stageHeight","alignH","alignV","_setStyleBgColor","background","screenMode","getFrameTm","getTimeFromFrameStart","_setVisibleStyle","visibility","renderToNative","FRAME_SLEEP","_runComponents","_updateTimers","isFastMode","FRAME_MOUSE","FRAME_FAST","FRAME_SLOW","isDoubleLoop","fullScreenEnabled","requestFullscreen","fullScreenChanged","removeEventListener","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","_frameRateNative","setLimitFPS","setMouseFrame","setSlowFrame","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","SCALE_EXACTFIT","ALIGN_CENTER","ALIGN_MIDDLE","_definiteIntegralMap","BlurFilterGLRender","setShaderInfo","blurinfo","blurInfo","sigma","sigma2","exp","strength_sig2_2sig2_gauss1","BlurFilter","_strength","getStrenth_sig2_2sig2_native","strength_sig2_native","GlowFilterGLRender","_sv_blurInfo1","u_blurInfo1","info2","_sv_blurInfo2","u_blurInfo2","svBlur","GlowFilter","offX","offY","getColorNative","_color_native","getBlurInfo1Native","_blurInof1_native","getBlurInfo2Native","_blurInof2_native","SoundChannel","isStopped","volume","completeHandler","__runComplete","AudioSoundChannel","_audio","_onEnd","__onEnd","__resumePlay","_src","loops","LayaEvent","currentTime","playbackRate","SoundManager","addChannel","removeChannel","AudioSound","_musicAudio","autoReleaseSound","disposeSoundLater","readyState","_audioCache","_initMusicAudio","_makeMusicOK","_bgMusic","onErr","offs","tAd","cloneNode","channel","WebAudioSoundChannel","bufferSource","_currentTime","_volume","_startTime","_pauseTime","WebAudioSound","_onPlayEnd","__onPlayEnd","gain","_clearBufferSource","audioBuffer","createBufferSource","connect","disconnect","destination","onended","setTargetAtTime","SetTargetDelay","sourceNode","noteOff","_tryCleanFailed","_tryClearBuffer","_disposed","_playEmptySound","_miniBuffer","_unlock","_unlocked","initWebAudio","_loaded","__playAfterLoaded","__toPlays","toPlays","tParams","supportWebAudio","_soundClass","_musicClass","_channels","_lastSoundUsedTimeDic","_isCheckingDispose","_checkDisposeSound","hasCheck","disposeSoundIfNotUsed","destroySound","autoStopMusic","_stageOnBlur","_stageOnFocus","_visibilityChange","_autoStopMusic","_isActive","_musicChannel","_blurPaused","stopAllSound","_recoverWebAudio","muted","_muted","musicMuted","soundMuted","_soundMuted","_musicMuted","useAudioMusic","_useAudioMusic","playSound","soundClass","tSound","_soundCache","musicVolume","soundVolume","playMusic","stopSound","stopAll","stopMusic","setSoundVolume","_setVolume","setMusicVolume","SoundNode","_onParentChange","_channel","isMusic","_isMusic","_setPlayAction","tar","_setPlayActions","events","eventArr","_playEvents","_tar","_stopEvents","stopEvent","VideoTexture","updateFrame","_frameDelty","_updateFrame","_useFrame","videoWidth","videoHeight","_requestVideoFrame","_frameRender","_isLoaded","_needUpdate","immediatelyPlay","_listeningEvents","x5PlaysInline","playsInline","webkitPlaysInline","playsinline","autoplay","loadedmetadata","HTMLVideoElement","scope","updateVideo","requestVideoFrameCallback","isNeedUpdate","initVideoTextureData","childElementCount","firstChild","appendSource","sourceElement","extension","updateVideoTexture","videoEvent_update","frameRender","canPlayType","buffered","currentSrc","ended","paused","preload","seekable","seeking","videoEvents","VideoNode","_internalTex","_videoTexture","videoTexture","_repaintCachAs","onVideoMetaLoaded","_checkCachAs","reload","detroyChildren","AnimatorPlayState2D","animatorState","_currentState","_frontPlay","_resetPlayState","clipDuration","_finish","_startPlayTime","_elapsedTime","_lastIsFront","_parentPlayTime","_playNum","_playAllTime","playTime","_normalizedPlayTime","AnimatorControllerLayer2D","_playStateInfo","_crossPlayStateInfo","_crossMark","_crossNodesOwnersCount","_crossNodesOwnersIndicesMap","_srcCrossClipNodeIndices","_destCrossClipNodeIndices","playOnWake","defaultWeight","blendingMode","BLENDINGMODE_OVERRIDE","_states","_playType","states","removeState","addState","defaultStateName","_defaultState","getStateByName","_defaultStateNameCatch","defaultState","_removeClip","clipStateInfos","_getReferenceCount","getCurrentPlayState","stateName","AniParmType","AniStateConditionType","AniStateConditionNumberCompressType","AnimatorUpdateMode","AniConditionType","TextResourceFormat","BLENDINGMODE_ADDTIVE","AnimatorControllerParse","layers","controllerLayers","clipsID","retobj","checkStates","enterName","clipState","enterState","checkNext","defName","checkDefault","nexts","soloTransitions","nState","getStateByID","conditions","checkConditions","animatorParams","parms","parm","checkValue","defState","Animator2D","_speed","_updateMode","Normal","_lowUpdateDelty","_controllerLayers","_parameters","controller","_controller","updateTo","parameters","speed","_updateStateFinish","playState","_eventExit","_setClipDatasToNode","stateInfo","additive","controllerLayer","realtimeDatas","_realtimeDatas","_nodes","getNodeByIndex","getOwner","_applyFloat","pro","ower","defVal","_ownerMap","property","ownerPathCount","ownPat","getOwnerPathByIndex","pobj","propertyCount","pname","getPropertyByIndex","classObj","_updateClipDatas","addtive","playStateInfo","curPlayTime","clipStart","currentFrameIndices","_currentFrameIndices","_evaluateClipDatasRealTime","_updatePlayer","elapsedTime","layerIndex","isReplay","clipEnd","lastElapsedTime","pAllTime","_lastElapsedTime","normalizedTime","yoyo","pTime","normalizedPlayTime","_eventStateUpdate","_applyTransition","_eventtransition","absTime","_eventLoop","_updateEventScript","_animationEvents","frontPlay","parentPlayTime","_eventScript","currPlayTime","scripts","eventName","layerindex","transition","crossFade","destState","transduration","transstartoffset","_applyUpdateMode","LowFrame","UnScaleTime","gotoAndStopByFrame","curPlayState","calclipduration","_eventStart","NEGATIVE_INFINITY","_checkEnterIndex","_enterTransition","defaultClip","getDefaultState","cycleOffset","islooping","addControllerLayer","controllderLayer","transitionDuration","layer","enterTransition","setParamsTrigger","Trigger","setParamsNumber","setParamsBool","getParamsvalue","AnimatorState2D","transitions","_scripts","_resetFrameIndices","EVENT_OnStateUpdate","onStateUpdate","animator","EVENT_OnStateEnter","setPlayScriptInfo","onStateEnter","EVENT_OnStateExit","onStateExit","EVENT_OnStateLoop","onStateLoop","normalizeTime","paramsMap","soloNums","transNums","addScript","getScript","getScripts","coms","KeyframeNode2D","_ownerPath","_propertys","_keyFrames","keyFramesCount","_setOwnerPathCount","_setOwnerPathByIndex","_setPropertyCount","_setPropertyByIndex","_setKeyframeCount","_joinOwnerPath","sep","_joinProperty","getKeyframeByIndex","Keyframe2D","Animation2DEvent","AnimationClip2DParse01","READ_DATA","_DATA","_reader","READ_BLOCK","_BLOCK","blockStarts","blockLengths","READ_STRINGS","prePos","_strings","reader","_version","blockName","fn","timeToFrame","READ_ANIMATIONS2D","numList","numCount","nodeCount","nodesMap","_nodesMap","nodesDic","_nodesDic","setNodeByIndex","_indexInList","pathLength","nodePath","mapArray","propertyLength","fullPath","keyframeCount","tweenType","tweenInfo","inTangent","outTangent","inWeight","outWeight","extend","eventCount","paramCount","addEvent","KeyframeNodeList2D","AnimationClip2D","playCurTime","realTimeCurrentFrameIndexes","outDatas","nextFrameIndex","frameIndex","isEnd","nextFarme","_getTweenVal","nextFrame","dur","tweenFun","poval","oval","hermiteInterpolate","hermiteCurveSplineWeight","_binarySearchEventIndex","midValue","frameValue","frametime","frameOutWeight","frameOutTangent","nextframeValue","nextframetime","nextframeInweight","nextframeIntangent","Eps","wt1","wt2","yp1","yp2","isFinite","wt2s","t2","fg","fpg","fppg","Linear","Quad_EaseIn","Quad_EaseOut","Quad_EaseInOut","Cubic_EaseIn","Cubic_EaseOut","Cubic_EaseInOut","Quart_EaseIn","Quart_EaseOut","Quart_EaseInOut","Quint_EaseIn","Quint_EaseOut","Quint_EaseInOut","Sine_EaseIn","Sine_EaseOut","Sine_EaseInOut","Expo_EaseIn","Expo_EaseOut","Expo_EaseInOut","Circ_EaseIn","Circ_EaseOut","Circ_EaseInOut","Elastic_EaseIn","Elastic_EaseOut","Elastic_EaseInOut","Back_EaseIn","Back_EaseOut","Back_EaseInOut","Bounce_EaseIn","Bounce_EaseOut","Bounce_EaseInOut","endValue","t3","Animation2DParm","Animation2DCondition","AnimatorStateCondition","conditionNameToID","_conditionNameMap","conditionIDToName","checkState","AnimatorStateNumberCondition","_numberValue","_numberCompareFlag","numberValue","compareFlag","AnimatorStateBoolCondition","_compareFlag","AnimatorStateTriggerCondition","AnimatorTransition2D","exitByTime","exitTime","mute","addCondition","removeCondition","con","AnimatorController2D","getLayers","lArr","acl","getState","createState","idCatch","defID","childStates","groupRet","setTransitions","setExitTransition","exitRet","pExitRet","ats","sts","linArr","ato","addConditions","solo","_getAnimatorTransition2D","pState","exitTransition","idk","Boolean","currLayer","setParm","Script","onTriggerEnter","onTriggerStay","onTriggerExit","onCollisionEnter","onCollisionStay","onCollisionExit","onJointBreak","onMouseDown","onMouseUp","onRightMouseDown","onRightMouseUp","onMouseMove","onMouseDrag","onMouseDragEnd","onMouseOver","onMouseOut","onMouseClick","onMouseDoubleClick","onMouseRightClick","onKeyDown","onKeyPress","onKeyUp","TextResource","Plain","toloadPics","folderPath","query","pics","pic","directory","subTextures","tPic","filename","tt","spriteSourceSize","sourceSize","_stateNum","stateNum","errorList","HierarchyParser","inPrefab","prefabNodeDict","skinBaseUrl","bakedOverrideData","nodeMap","dataList","allNodes","outNodes","prefab","createNode","pstr","overrideData2","testId","findNodeInPrefab","_$runtime","outNodeData","nodeData2","topNode","compInitList","compData","decodeOptions","_$var","_$preloads","HierarchyLoader","_$ver","_load","legacySceneOrPrefab","links","resArray","HDRTextureInfo","_parseHDRTexture","getHDRInfo","readByteOffset","readLine","lineStr","getLineString","commandsMap","commands","resolutions","decreaseY","decreaseX","get_32_bit_rle_rgbe","dataIndex","rgbeBuffer","rgbeArray","pixelBuffer","pixelArray","scanlineLength","Ldexp","mantissa","exponent","readScanLine","scanlineArray","getc","wrong","readcolors","byter","byteg","byteb","bytee","pixelIndex","ldexp","setScanLineData","unnormalizedr","unnormalizedg","unnormalizedb","unnormalizede","olddreadcolors","rshift","scanIndex","lastIndex","color_color","clr","internalResources","HDRTEXTURE","Texture2DLoader","load2","fileIndex","platforms","fileInfo","readWrite","compressedFormats","img","needBitmap","ImageBitmap","createImageBitmap","bitmapimage","RenderTextureLoader","VideoTextureLoader","propertyParams2d","constructParams2d","TextureLoader","wrapTex2D","tex2D","videoFormats","loadStates","NullLoader","picUrl","testString","fontName","registerFont","FontFace","fonts","fontTxt","txtWidth","textContent","checkComplete","RenderState","CULL_BACK","BLENDPARAM_ONE","BLENDPARAM_ZERO","BLENDEQUATION_ADD","DEPTHTEST_LEQUAL","STENCILTEST_OFF","STENCILOP_KEEP","STENCILOP_REPLACE","CULL_NONE","CULL_FRONT","BLENDPARAM_SRC_COLOR","BLENDPARAM_ONE_MINUS_SRC_COLOR","BLENDPARAM_DST_COLOR","BLENDPARAM_ONE_MINUS_DST_COLOR","BLENDPARAM_SRC_ALPHA","BLENDPARAM_ONE_MINUS_SRC_ALPHA","BLENDPARAM_DST_ALPHA","BLENDPARAM_ONE_MINUS_DST_ALPHA","BLENDPARAM_SRC_ALPHA_SATURATE","BLENDPARAM_BLENDCOLOR","BLENDPARAM_BLEND_ONEMINUS_COLOR","BLENDEQUATION_SUBTRACT","BLENDEQUATION_REVERSE_SUBTRACT","BLENDEQUATION_MIN","BLENDEQUATION_MAX","DEPTHTEST_OFF","DEPTHTEST_NEVER","DEPTHTEST_LESS","DEPTHTEST_EQUAL","DEPTHTEST_GREATER","DEPTHTEST_NOTEQUAL","DEPTHTEST_GEQUAL","DEPTHTEST_ALWAYS","STENCILTEST_NEVER","STENCILTEST_LESS","STENCILTEST_EQUAL","STENCILTEST_LEQUAL","STENCILTEST_GREATER","STENCILTEST_NOTEQUAL","STENCILTEST_GEQUAL","STENCILTEST_ALWAYS","STENCILOP_ZERO","STENCILOP_INCR","STENCILOP_INCR_WRAP","STENCILOP_DECR","STENCILOP_DECR_WRAP","STENCILOP_INVERT","Default","UniformBufferBase","pointer","_mapArray","_blockName","_singgle","_glPointerID","splitBuffer","UniformBufferObject","bytelength","isSingle","_Map","getUBOPointer","bufferBase","createUniformBufferObject","glPointer","UNIFORM_BUFFER","_isSingle","_glPointer","_bindUniformBufferBase","bindBufferBase","_bindBufferRange","byteCount","bindBufferRange","_reset","MAX_SAFE_INTEGER","subData","setDataEx","bufferData","_updateDataInfo","setDataByByUniformBufferDataOffset","datalength","reallength","_realByte","MaterialRenderMode","TextureCubeFace","UBONAME_SCENE","UBONAME_CAMERA","UBONAME_SPRITE3D","UBONAME_SHADOW","commonMap","Material","__initDefine__","SHADERDEFINE_ALPHATEST","SHADERDEFINE_MAINTEXTURE","SHADERDEFINE_ADDTIVEFOG","ALPHATESTVALUE","CULL","BLEND_SRC","BLEND_DST","BLEND_SRC_RGB","BLEND_DST_RGB","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","BLEND_EQUATION","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","DEPTH_TEST","DEPTH_WRITE","STENCIL_Ref","STENCIL_TEST","STENCIL_WRITE","STENCIL_Op","alphaTestValue","alphaTest","setDefine","blendSrc","blendDst","blendSrcAlpha","blendSrcRGB","blendDstRGB","blendDstAlpha","MaterialProperty","propertyMap","shaderValues","MaterialDefine","shaderDefineArray","materialRenderMode","_matRenderNode","RENDERMODE_OPAQUE","renderQueue","RENDERQUEUE_OPAQUE","RENDERMODE_CUTOUT","RENDERQUEUE_ALPHATEST","RENDERMODE_TRANSPARENT","RENDERQUEUE_TRANSPARENT","RENDERMODE_ADDTIVE","RENDERMODE_ALPHABLENDED","RENDERMODE_CUSTOME","createShaderData","_bindShaderInfo","shaderUBODatas","_releaseUBOData","values","effectiveProperty","setShaderName","_uniformBlock","applyUniformDefaultValue","getBoolByIndex","setBoolByIndex","getFloatByIndex","setFloatByIndex","setFloat","getIntByIndex","setIntByIndex","getVector2ByIndex","setVector2ByIndex","getVector3ByIndex","setVector3ByIndex","setVector4ByIndex","getVector4ByIndex","getVector4","getColorByIndex","setColorByIndex","getMatrix4x4ByIndex","setMatrix4x4ByIndex","getMatrix3x3ByIndex","setMatrix3x3ByIndex","setTextureByIndex","reSetTexture","getTextureByIndex","getBufferByIndex","setBufferByIndex","setShaderDataByIndex","getShaderDataByIndex","destBaseMaterial","setShaderPropertyValue","getShaderPropertyValue","oldparseEndEvent","MaterialParser","parseLegacy","uniName","vectorValue","matrix3","matrix4","collectLinks","tex2DPath","jsonData","classType","vectors","renderStateData","_getRenderStateParams","MaterialLoader","shaderPath","ParseJSON","parseStart","fstr","finCurrObj","cobj","currArr","formatVal","numVal","finCurrStr","currStr","cNext","cstr","pcobj","DEFAULT_PIXELS","_blackTexture","_grayTexture","_whiteTexture","_errorTexture","writeTexture","every","setCubePixelsData","setCubeImageData","updateSubPixelsData","setCubeSubPixelData","setCubeDDSData","setCubeKTXData","CGBlock","shaderBlock","shaderDataOBJ","ShaderParser","getShaderBlock","cgmap","getCGBlock","bindCG","compileToTree","sliceFlag","sliceIndex","slicedata","splitmap","getMapKey","shaderObj","i1","i2","cgdata","datavalue","passArray","attributemap","indexofAttribute","dataArray","getShaderDataType","defaultmap","newUniformMap","serializable","default","getDefaultData","mat3","texcube","compiledObjs","decodeAudioData","LocalStorage","_baseClass","Storage","items","support","setItem","setJSON","getJSON","removeItem","localStorage","PrimitiveSV","TextureSV","_blurInfo","_u_blurInfo1","_u_blurInfo2","_u_TexRange","_colorMat","_colorAlpha","_strength_sig2_2sig2_gauss1","Mouse","cursor","cursorStr","_preCursor","MeshParticle2D","glfloat","maxNum","setMaxParticleNum","_inited","stageConfig","laya3D","_changeWebGLSize","is3DMode","_setStyleInfo","supportLocalStorage","enableNative","steps","beforeInit","_beforeInitCallbacks","createEngine","initRender2D","_initCallbacks","_afterInitCallbacks","afterInit","step","createRender","alertGlobalError","erralert","detail","alert","stack","_evcode","enableDebugPanel","debugJsPath","addInitCallback","addBeforeInitCallback","addAfterInitCallback","DrawType","RenderDrawMode","RenderIndexMode","TextureCompareMode","TextureDecodeFormat","BlendState","colorBlendhash","alphaBlendComponent","_blend_All_pool","_blend_seperate_pool","BlendComponent","getHash","blendOperationGLData","sourceBlendFactor","destinationFactor","getBlendComponent","hashindex","_hashIndex","_blendOperationGLData","_sourceBlendFactor","_destinationFactor","CommandUniformMap","_stateName","hasPtrID","getMap","propertyName","addShaderBlockUniform","blockname","blockProperty","RenderStateCommand","cmdArray","renderstate","applyRenderStateCMD","EffectBase","autoDestroyAtComplete","_comlete","_exeTween","_doTween","Keyboard","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","A","B","C","D","E","F","G","H","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","NUMPAD","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","SEMICOLON","EQUAL","COMMA","MINUS","PERIOD","SLASH","BACKQUOTE","LEFTBRACKET","BACKSLASH","RIGHTBRACKET","QUOTE","ALTERNATE","BACKSPACE","CAPS_LOCK","COMMAND","CONTROL","DELETE","ESCAPE","PAGE_UP","PAGE_DOWN","HOME","LEFT","UP","RIGHT","DOWN","SHIFT","SPACE","TAB","INSERT","KeyLocation","STANDARD","NUM_PAD","CommandEncoder","getArrayData","getCount","variable","QuickTestTool","getMCDName","_typeToNameDic","showRenderTypeInfo","showedDic","_rendertypeToStrDic","_addType","_stageRender","_countStart","_PreStageRender","_countEnd","_countDic","_i","showCountInfo","enableQuickTest","Socket","_input","output","_output","connected","_connected","_endian","port","byteClass","protocols","isSecure","disableInput","_byteClass","connectByUrl","_socket","cleanSocket","WebSocket","binaryType","_addInputPosition","onopen","_onOpen","_onMessage","onclose","_onClose","pre","GLSLCodeGenerator","glslAttributeString","getAttributeType","glslUniformString","uniformsMap","useUniformBlock","blocksStr","uniformsStr","blockUniforms","typeStr","ShaderInstance","_customUniformParamsMap","_uploadMark","_uploadRenderType","_webGLShaderLanguageProcess3D","_renderShaderInstance","_shaderPass","_create2D","vertexHead","fragmentHead","clusterSlices","defMap","defineStr","attributeglsl","uniformglsl","isWebGL2","_maxAreaLightCountPerClusterAverage","SHADER_CAPAILITY_LEVEL","vsVersion","psVersion","dstVS","detFS","_webGLShaderLanguageProcess2D","_cameraUniformParamsMap","_spriteUniformParamsMap","sceneParams","cameraParams","customParams","getUniformMap","hasSpritePtrID","sprite2DParms","sceneParms","commap","_uploadMaterial","_uploadRender","_uploadCameraShaderValue","_uploadScene","shaderUniform","shaderDatas","uploadUnTexture","uploadRenderStateBlendDepth","uploadRenderStateBlendDepthByShader","uploadRenderStateBlendDepthByMaterial","datas","_f","_g","_k","_j","_m","_l","_p","_o","_r","_q","_t","_s","_v","_u","_z","_1","_0","_3","_2","_5","_4","_7","_6","uploadRenderStateFrontFace","isTarget","invertFront","forntFace","uploadCustomUniform","uploadCustomUniforms","ShaderVariable","onID","pointID","textureID","Tex3D","Base64Tool","lookup","isBase64String","encode","bytes","decode","encoded1","encoded2","encoded3","encoded4","reghead","arrU8List","newU8List","arg","Log","_logdiv","_btn","onclick","toggle","print","maxCount","autoScrollToBottom","scrollHeight","PerfData","datapos","PerfHUD","xdata","DATANUM","ydata","hud_width","hud_height","gMinV","gMaxV","textSpace","sttm","addDataDef","_now","updateValue","drawHLine","_lastTm","di","cd","dtlen","_cx","dtsz","drawTexTm","PoolCache","addPoolCacheManager","SingletonList","_add","indexof","TimeLine","_tweenDic","_tweenDataList","_currTime","_lastTime","_gidIndex","_firstTweenDic","_startTimeSort","_endTimeSort","_loopKey","_frameIndex","_total","tTweenData","tweenData","endTime","_labelDic","tIndex","gotoTime","tTween","tObject","tTweenDataCopyList","tDataP","diyTarget","_endTweenDataList","Compare","paraA","paraB","tP","_animComplete","gotoLabel","Label","tLabelData","timeOrLabel","tTarget","tSrcData","tNow","tFrameTime","tCurrTime","DrawParticleCmd","_templ","NativeCommandUniformMap","NativeGLObject","_engine","_gl","gl","_IDCounter","setResourceManager","NativeGLTextureContext","native","_native","conchImgId","setTexture3DPixlesData","renderTarget","faceIndex","createRenderTargetCubeInternal","createRenderTextureCubeInternal","video","internalTex","NativeGL2TextureContext","NativeGLRenderDrawContext","conchGLRenderDrawContext","drawElementsInstanced","instanceCount","drawArraysInstanced","first","drawArrays","drawElements","drawGeometryElement","geometryElement","NativeRenderStateCommand","conchRenderStateCommand","DepthFunc","StencilTest","StencilMask","addCMDInt1","StencilFunc","addCMDInt2","StencilOp","addCMDInt3","BlendFuncSeperate","addCMDInt4","NativeRenderState","setStencilOp","conchRenderState","MemoryDataType","NativeShaderDataType","WebGLMode","WebGLExtension","CommonMemoryAllocater","creatBlock","freeMemoryBlock","NativeMemory","shared","_sharedBuffer","_f64data","float32Array","float64Array","uint8Array","int32Array","NativeSourceID","UploadMemory","_currentOffsetInByte","addBlockCell","dataSizeInByte","uploadDataTOShareMemory","UploadMemoryManager","_dataNodeList","_commandNums","_currentBlock","UploadMemorySize","_conchUploadMemoryManager","conchUploadMemoryManager","_instance","_addNodeCommand","sizeInByte","syncRenderMemory","_serialiseData","getUploadMemoryLength","uploadData","NativeShaderData","inUploadList","payload32bitNum","conchShaderData","setApplyUBOData","nativeObjID","nativeID","_dataType","updateMap","updataSizeMap","memoryBlock","strideInByte","strideFloat","clearUpload","compressNumber","Number32","compressVector2","compressVector3","compressVector4","compressMatrix4x4","compressNumberArray","Number32Array","compressTexture","compressUBO","UBO","_conchUniformBufferObject","configMotionProperty","NativeUniformBufferObject","conchUniformBufferObject","setGLBuffer","NativeGLVertexState","conchGLVertexState","_nativeVertexBuffers","vertexBuffer","_conchVertexBuffer3D","_conchIndexBuffer3D","GLObject","WebGLInternalTex","_mipmap","_mipmapCount","_addStatisticsInfo","useSRGBLoader","_baseMipmapLevel","_maxMipmapLevel","createTexture","isPot","isPotSize","log2","Repeat","_filterMode","getFilteMinrParam","_setTexParameteri","TEXTURE_MIN_FILTER","mag","getFilterMagParam","TEXTURE_MAG_FILTER","_warpU","warpParam","getWrapParam","_setWrapMode","TEXTURE_WRAP_S","_warpV","TEXTURE_WRAP_T","_warpW","TEXTURE_WRAP_R","_anisoLevel","anisoExt","_supportCapatable","getExtension","EXT_texture_filter_anisotropic","maxAnisoLevel","Max_AnisoLevel_Count","level","_setTexParametexf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","_compareMode","_bindTexture","texParameteri","texParameterf","NEAREST_MIPMAP_NEAREST","NEAREST","LINEAR_MIPMAP_NEAREST","LINEAR","Trilinear","LINEAR_MIPMAP_LINEAR","REPEAT","CLAMP_TO_EDGE","Mirrored","MIRRORED_REPEAT","deleteTexture","WebGLInternalRT","_depthTexture","_framebuffer","createFramebuffer","_msaaFramebuffer","deleteFramebuffer","_depthbuffer","deleteRenderbuffer","_msaaRenderbuffer","GLTextureContext","_glParam","internalFormat","_sRGB","EXT_sRGB","_oesTextureHalfFloat","OES_texture_half_float","_compressdTextureS3tc_srgb","WEBGL_compressed_texture_s3tc_srgb","_compressedTextureEtc1","WEBGL_compressed_texture_etc1","_compressedTextureS3tc","WEBGL_compressed_texture_s3tc","_compressedTextureETC","WEBGL_compressed_texture_etc","_compressedTextureASTC","WEBGL_compressed_texture_astc","_webgl_depth_texture","WEBGL_depth_texture","glTextureParam","useSRGB","SRGB_EXT","RGB","SRGB_ALPHA_EXT","RGBA","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","glRenderTextureParam","DEPTH_COMPONENT","DEPTHSTENCIL_24_8","DEPTH_STENCIL","UNSIGNED_INT_24_8_WEBGL","DEPTH_32","UNSIGNED_INT","STENCIL_8","glRenderBufferParam","DEPTH_COMPONENT16","attachment","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","STENCIL_INDEX8","STENCIL_ATTACHMENT","glRenderTargetAttachment","COLOR_ATTACHMENT0","getTarget","TEXTURE_2D","TEXTURE_CUBE_MAP","getFormatPixelsParams","formatParams","channels","bytesPerPixel","dataTypedCons","typedSize","getGLtexMemory","singlebyte","srgb_alpha","getGLRTTexMemory","cube","getpixelbyte","rtFormat","pixelByte","colorPixelbyte","supportSRGB","Texture_SRGB","supportGenerateMipmap","isSRGBFormat","useSRGBExt","glParam","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","texImage2D","texSubImage2D","fourSize","UNPACK_ALIGNMENT","mipmapWidth","mipmapHeight","memory","compressedTexImage2D","imageSize","pixelParams","hdrPixelData","cubeFace","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","channelsByte","dataTypeConstur","face","framebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","colorAttachment","depthBufferParam","depthbuffer","createRenderbuffer","framebufferRenderbuffer","RENDERBUFFER","renderbuffer","bindRenderbuffer","renderbufferStorage","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","UNSIGNED_SHORT_4_4_4_4","GL2TextureContext","TEXTURE_2D_ARRAY","TEXTURE_3D","SRGB8","RGB8","SRGB8_ALPHA8","RGBA8","RGB565","RGBA32F","RGB32F","RGB16F","HALF_FLOAT","RGBA16F","DEPTH24_STENCIL8","DEPTH_COMPONENT32F","UNSIGNED_INT_24_8","texStorage2D","texStorage3D","texSubImage3D","getCubeKTXRGBMData","LEQUAL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","GEQUAL","LESS","GREATER","NOTEQUAL","ALWAYS","NEVER","renderbufferStorageMultisample","msaaFramebuffer","renderbufferParam","msaaRenderbuffer","isSRGB","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","biltMask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","blitFramebuffer","GLBuffer","_glTargetType","_glBufferUsageType","_getGLTarget","_getGLUsage","_glUsage","STATIC_DRAW","DYNAMIC_DRAW","Stream","STREAM_DRAW","_glTarget","_memorychange","_getbindBuffer","_setbindBuffer","orphanStorage","srcData","bufferSubData","_getBindUBOBuffer","_setBindUBOBuffer","resizeBuffer","glErrorShadow","synthesizeGLError","opt_msg","WebGLVertexArrayObjectOES","isAlive","hasBeenBound","elementArrayBuffer","maxVertexAttribs","attrib","VertexAttrib","maxAttrib","normalized","cached","recache","OESVertexArrayObject","getError","NO_ERROR","err1","wrapGLError","original","getParameter","enableVertexAttribArray","disableVertexAttribArray","getVertexAttrib","vertexAttribPointer","VERTEX_ARRAY_BINDING_OES","currentVertexArrayObject","defaultVertexArrayObject","vao","currentArrayBuffer","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_NORMALIZED","indx","instrumentExtension","reset_","vertexArrayObjects","MAX_VERTEX_ATTRIBS","bindVertexArrayOES","createVertexArrayOES","arrayObject","deleteVertexArrayOES","isVertexArrayOES","oldVAO","newVAO","currentBinding","oldAttrib","bufferChanged","INVALID_OPERATION","_setupVertexArrayObject","original_getSupportedExtensions","getSupportedExtensions","original_getExtension","__OESVertexArrayObject","GlCapable","glEngine","_extentionVendorPrefixes","initExtension","initCapable","isWebgl2","_capabilityMap","OES_element_index_uint","Element_Index_Uint32","OES_texture_float","Texture_anisotropic","EXT_color_buffer_float","EXT_color_buffer_half_float","OES_texture_half_float_linear","RenderTextureFormat_R16G16B16A16","OES_texture_float_linear","RenderTextureFormat_R32G32B32A32","RenderTextureFormat_Depth","RenderTextureFormat_ShadowMap","OES_vertex_array_object","Vertex_VAO","ANGLE_instanced_arrays","DrawElement_Instance","EXT_shader_texture_lod","Shader_TextureLod","WEBGL_compressed_texture_pvrtc","COMPRESS_TEXTURE_PVRTC","COMPRESS_TEXTURE_ETC1","COMPRESS_TEXTURE_ETC","COMPRESS_TEXTURE_ASTC","Texture_FloatLinearFiltering","Texture_HalfFloatLinearFiltering","MSAA","UnifromBufferObject","_extensionMap","setExtensionMap","_extTextureFilterAnisotropic","_getExtension","_compressedTexturePvrtc","_oesTextureFloatLinear","_extColorBufferHalfFloat","_extColorBufferFloat","_vaoExt","_angleInstancedArrays","_oesTextureHalfFloatLinear","_oesTextureFloat","_oes_element_index_uint","_extShaderTextureLod","OES_standard_derivatives","prefixes","GLParams","_initParams","_glParamsData","Max_Active_Texture_Count","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxVertexUniform","MAX_VERTEX_UNIFORM_VECTORS","maxFragUniform","MAX_FRAGMENT_UNIFORM_VECTORS","Max_Uniform_Count","MAX_Texture_Size","MAX_TEXTURE_SIZE","MAX_Texture_Image_Uint","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_MAX_ANISOTROPY_EXT","GLRender2DContext","activeTexture","_activedTextureID","bindTexture","bindUseProgram","webglProgram","cacheShaderProgram","useProgram","_glUseProgram","GLRenderDrawContext","getMeshTopology","Points","POINTS","LINES","LineLoop","LINE_LOOP","LineStrip","LINE_STRIP","TRIANGLES","TriangleStrip","TRIANGLE_STRIP","TriangleFan","TRIANGLE_FAN","getIndexType","UInt8","UInt32","drawElementsInstancedANGLE","drawArraysInstancedANGLE","bufferState","drawParams","drawType","DrawArray","_glmode","DrawElement","_glindexFormat","DrawArrayInstance","DrawElementInstance","GLRenderState","_depthTest","_depthMask","_stencilTest","_cullFace","_initState","_blendEquation","_sFactor","_dFactor","_sFactorAlpha","_dFactorAlpha","_getBlendFactor","factor","SRC_COLOR","ONE_MINUS_SRC_COLOR","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","SRC_ALPHA_SATURATE","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","_getBlendOperation","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","_getGLCompareFunction","compareFunction","_getGLStencilOperation","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","_getGLFrontfaceFactor","cullmode","CCW","CW","disable","depthMask","_depthFunc","depthFunc","_stencilMask","stencilMask","_stencilFunc","_stencilRef","stencilFunc","_stencilOp_fail","_stencilOp_zfail","_stencilOp_zpass","_blendEquationRGB","_blendEquationAlpha","blendEquationSeparate","_sFactorRGB","_dFactorRGB","blendFunc","blendFuncSeparate","CULL_FACE","_frontFace","frontFace","applyRenderStateCommand","GLShaderInstance","_vs","_ps","_program","createProgram","_vshader","_createShader","VERTEX_SHADER","_pshader","FRAGMENT_SHADER","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","nUniformNum","ACTIVE_UNIFORMS","_curActTexIndex","uniformData","getActiveUniform","getUniformLocation","_addShaderUnifiormFun","_uniformObjectMap","nUniformBlock","ACTIVE_UNIFORM_BLOCKS","gl2","uniformBlockName","getActiveUniformBlockName","getUniformBlockIndex","uniformBlockBinding","_legalUBObyteLength","createShader","shaderSource","compileShader","_isShaderDebugMode","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","BOOL","_uniform1i","uploadedValue","INT","_uniform1iv","_uniform1fv","_uniform1f","FLOAT_VEC2","_uniform_vec2v","_uniform_vec2","FLOAT_VEC3","_uniform_vec3v","_uniform_vec3","FLOAT_VEC4","_uniform_vec4v","_uniform_vec4","FLOAT_MAT2","_uniformMatrix2fv","FLOAT_MAT3","_uniformMatrix3fv","FLOAT_MAT4","_uniformMatrix4fv","_uniformMatrix4f","SAMPLER_2D","SAMPLER_2D_SHADOW","uniform1i","_glTextureIDParams","_uniform_sampler2D","SAMPLER_2D_ARRAY","_uniform_sampler2DArray","_uniform_sampler3D","SAMPLER_CUBE","_uniform_samplerCube","_uniform_UniformBuffer","uniform1f","uniform1fv","uniform2f","uniform2fv","uniform3f","uniform3fv","uniform4f","uniform4fv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniform1iv","_uniform_ivec2","uniform2i","_uniform_ivec2v","uniform2iv","_uniform_vec3i","uniform3i","_uniform_vec3vi","uniform3iv","_uniform_vec4i","uniform4i","_uniform_vec4vi","uniform4iv","texID","TEXTURE0","_activeTextures","deleteShader","deleteProgram","GLVertexState","createVertexArray","deleteVertexArray","_GLBindVertexArray","isVertexArray","clearVAO","valueData","loc","attribute","vertexAttribDivisor","divisor","vertexAttribDivisorANGLE","WebGLEngine","webglMode","Auto","_curUBOPointer","_GLUBOPointerMap","_GLBindPointerUBOMap","_lastClearColor","_lastClearDepth","_GLStatisticsInfo","_config","_isWebGL2","_lastViewport","_lastScissor","_webglMode","_initStatisticsInfo","webglConfig","initRenderEngine","names","WebGL1","WebGL2","_initBindBufferMap","_GLParams","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","_GLTextureContext","_GLRenderDrawContext","_GL2DRenderContext","_GLBufferBindMap","capatableType","lv","SCISSOR_TEST","clearFlag","clearcolor","clearDepth","Stencil","clearStencil","STENCIL_BUFFER_BIT","copySubFrameBuffertoTex","xoffset","yoffset","copyTexSubImage2D","colorMask","getTextureContext","getDrawContext","get2DRenderContext","getCreateRenderOBJContext","_renderOBJCreateContext","commandEncoder","shaderCall","custom","MatirxArray","ArrayMul","ai0","ai1","ai2","ai3","ArabicReshaper","characterMapContains","charsMap","getCharRep","getCombCharRep","combCharsMap","isTransparent","transChars","getOriginalCharsFromCode","convertArabic","crep","combcrep","shaped","current","prevID","nextID","convertArabicBack","apfb","selectedChar","toReturn","playstate","_curState","effectScale","tweenTime","toChangedState","toInitState","_curTween","effectEase","tweenComplete","backEase","conchCommandUniformMap","conchWebGLEngine","addStatisticsInfo","conchGL2TextureContext","conchGLTextureContext","conchGLBuffer","_strsToID","_idToStrs","getName","_isInPool","changeDefinition","globalBlockMap","comMap","glConfig","stencil","antialias","failIfMajorPerformanceCaveat","_replaceWebglcall","tempgl","assetId"],"sources":["../../src/layaAir/laya/utils/ClassUtils.ts","../../src/layaAir/Decorators.ts","../../src/layaAir/Config.ts","../../src/layaAir/laya/Const.ts","../../src/layaAir/ILaya.ts","../../src/layaAir/LayaEnv.ts","../../src/layaAir/laya/utils/Pool.ts","../../src/layaAir/laya/utils/Utils.ts","../../src/layaAir/laya/components/Component.ts","../../src/layaAir/laya/maths/Matrix.ts","../../src/layaAir/laya/maths/Point.ts","../../src/layaAir/laya/maths/Rectangle.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/HDREncodeFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureFormat.ts","../../src/layaAir/laya/layagl/LayaGL.ts","../../src/layaAir/laya/utils/Delegate.ts","../../src/layaAir/laya/events/Event.ts","../../src/layaAir/laya/events/EventDispatcher.ts","../../src/layaAir/laya/resource/Resource.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/FilterMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderCapable.ts","../../src/layaAir/laya/resource/BaseTexture.ts","../../src/layaAir/laya/utils/Byte.ts","../../src/layaAir/laya/utils/HalfFloatUtils.ts","../../src/layaAir/laya/RenderEngine/DDSTextureInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDimension.ts","../../src/layaAir/laya/RenderEngine/KTXTextureInfo.ts","../../src/layaAir/laya/resource/Texture2D.ts","../../src/layaAir/laya/webgl/shader/BaseShader.ts","../../src/layaAir/laya/webgl/utils/RenderState2D.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderTargetFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderClearFlag.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendFactor.ts","../../src/layaAir/laya/maths/Color.ts","../../src/layaAir/laya/resource/NativeRenderTexture2D.ts","../../src/layaAir/laya/resource/RenderTexture2D.ts","../../src/layaAir/laya/resource/WebGLRTMgr.ts","../../src/layaAir/laya/RenderEngine/RenderStateContext.ts","../../src/layaAir/laya/webgl/canvas/BlendMode.ts","../../src/layaAir/laya/resource/Texture.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendEquationSeparate.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CompareFunction.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CullMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/StencilOperation.ts","../../src/layaAir/laya/resource/AssetDb.ts","../../src/layaAir/laya/net/URL.ts","../../src/layaAir/laya/webgl/utils/IncludeFile.ts","../../src/layaAir/laya/webgl/utils/ShaderNode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompile.ts","../../src/layaAir/laya/RenderEngine/RenderShader/DefineDatas.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderDefine.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariantCollection.ts","../../src/layaAir/laya/maths/MathUtils3D.ts","../../src/layaAir/laya/maths/Vector2.ts","../../src/layaAir/laya/maths/Vector4.ts","../../src/layaAir/laya/maths/Vector3.ts","../../src/layaAir/laya/maths/Matrix3x3.ts","../../src/layaAir/laya/maths/Quaternion.ts","../../src/layaAir/laya/maths/Matrix4x4.ts","../../src/layaAir/laya/resource/Texture2DArray.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderData.ts","../../src/layaAir/laya/RenderEngine/UniformBufferData.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderParams.ts","../../src/layaAir/laya/RenderEngine/RenderShader/Shader3D.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/WrapMode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompileDefineBase.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderPass.ts","../../src/layaAir/laya/renders/VertexElement.ts","../../src/layaAir/laya/renders/VertexElementFormat.ts","../../src/layaAir/laya/RenderEngine/VertexDeclaration.ts","../../src/layaAir/laya/RenderEngine/RenderShader/VertexMesh.ts","../../src/layaAir/laya/RenderEngine/RenderShader/SubShader.ts","../../src/layaAir/laya/webgl/shader/d2/ShaderDefines2D.ts","../../src/layaAir/laya/renders/RenderInfo.ts","../../src/layaAir/laya/webgl/text/AtlasGrid.ts","../../src/layaAir/laya/utils/FontInfo.ts","../../src/layaAir/laya/webgl/shader/d2/value/Value2D.ts","../../src/layaAir/laya/utils/WordText.ts","../../src/layaAir/laya/webgl/text/CharRenderInfo.ts","../../src/layaAir/laya/webgl/text/ICharRender.ts","../../src/layaAir/laya/utils/Browser.ts","../../src/layaAir/laya/webgl/text/CharRender_Canvas.ts","../../src/layaAir/laya/webgl/text/TextRender.ts","../../src/layaAir/laya/webgl/text/TextAtlas.ts","../../src/layaAir/laya/webgl/text/TextTexture.ts","../../src/layaAir/laya/webgl/submit/SubmitKey.ts","../../src/layaAir/laya/webgl/submit/SubmitCMD.ts","../../src/layaAir/laya/filters/Filter.ts","../../src/layaAir/laya/utils/ColorUtils.ts","../../src/layaAir/laya/filters/ColorFilter.ts","../../src/layaAir/laya/maths/GrahamScan.ts","../../src/layaAir/laya/display/SpriteConst.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStatInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BufferTargetType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/IndexFormat.ts","../../src/layaAir/laya/utils/Stat.ts","../../src/layaAir/laya/webgl/submit/SubmitBase.ts","../../src/layaAir/laya/RenderEngine/VertexAttributeLayout.ts","../../src/layaAir/laya/webgl/utils/BufferState.ts","../../src/layaAir/laya/RenderEngine/Buffer.ts","../../src/layaAir/laya/RenderEngine/IndexBuffer.ts","../../src/layaAir/laya/webgl/utils/Buffer2D.ts","../../src/layaAir/laya/webgl/utils/IndexBuffer2D.ts","../../src/layaAir/laya/RenderEngine/VertexBuffer.ts","../../src/layaAir/laya/webgl/utils/VertexBuffer2D.ts","../../src/layaAir/laya/webgl/utils/Mesh2D.ts","../../src/layaAir/laya/webgl/utils/MeshQuadTexture.ts","../../src/layaAir/laya/webgl/utils/MeshTexture.ts","../../src/layaAir/laya/webgl/utils/MeshVG.ts","../../src/layaAir/laya/webgl/canvas/NativeWebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/webgl/canvas/WebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/renders/LayaGLQuickRunner.ts","../../src/layaAir/laya/filters/NativeFilter.ts","../../src/layaAir/laya/renders/RenderSprite.ts","../../src/layaAir/laya/maths/Bezier.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStateType.ts","../../src/layaAir/laya/webgl/canvas/DrawStyle.ts","../../src/layaAir/laya/webgl/canvas/Path.ts","../../src/layaAir/laya/webgl/canvas/save/SaveBase.ts","../../src/layaAir/laya/webgl/canvas/save/SaveClipRect.ts","../../src/layaAir/laya/webgl/canvas/save/SaveMark.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTransform.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTranslate.ts","../../src/layaAir/laya/webgl/shader/d2/Shader2D.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DFrag.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DVertex.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/NewShader/Sprite2DShaderInfo.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.ps.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.ps.glsl","../../src/layaAir/laya/webgl/shader/d2/skinAnishader/SkinMeshBuffer.ts","../../src/layaAir/laya/webgl/shapes/BasePoly.ts","../../src/layaAir/laya/webgl/shapes/EarcutNode.ts","../../src/layaAir/laya/webgl/shapes/Earcut.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderPologyMode.ts","../../src/layaAir/laya/resource/NativeContext.ts","../../src/layaAir/laya/webgl/submit/Submit.ts","../../src/layaAir/laya/webgl/submit/SubmitCanvas.ts","../../src/layaAir/laya/webgl/submit/SubmitTarget.ts","../../src/layaAir/laya/webgl/submit/SubmitTexture.ts","../../src/layaAir/laya/webgl/text/CharSubmitCache.ts","../../src/layaAir/Config3D.ts","../../src/layaAir/laya/resource/RenderTexture.ts","../../src/layaAir/laya/resource/Context.ts","../../src/layaAir/laya/resource/HTMLCanvas.ts","../../src/layaAir/laya/display/css/BoundsStyle.ts","../../src/layaAir/laya/display/css/CacheStyle.ts","../../src/layaAir/laya/display/css/SpriteStyle.ts","../../src/layaAir/laya/display/cmd/AlphaCmd.ts","../../src/layaAir/laya/display/cmd/DrawCircleCmd.ts","../../src/layaAir/laya/display/cmd/DrawCurvesCmd.ts","../../src/layaAir/laya/display/cmd/DrawImageCmd.ts","../../src/layaAir/laya/display/cmd/DrawLineCmd.ts","../../src/layaAir/laya/display/cmd/DrawLinesCmd.ts","../../src/layaAir/laya/display/cmd/DrawPathCmd.ts","../../src/layaAir/laya/display/cmd/DrawPieCmd.ts","../../src/layaAir/laya/display/cmd/DrawPolyCmd.ts","../../src/layaAir/laya/display/cmd/DrawRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTextureCmd.ts","../../src/layaAir/laya/display/cmd/FillTextureCmd.ts","../../src/layaAir/laya/display/cmd/RestoreCmd.ts","../../src/layaAir/laya/display/cmd/RotateCmd.ts","../../src/layaAir/laya/display/cmd/ScaleCmd.ts","../../src/layaAir/laya/display/cmd/TransformCmd.ts","../../src/layaAir/laya/display/cmd/TranslateCmd.ts","../../src/layaAir/laya/display/cmd/DrawTrianglesCmd.ts","../../src/layaAir/laya/display/cmd/Draw9GridTextureCmd.ts","../../src/layaAir/laya/display/cmd/SaveCmd.ts","../../src/layaAir/laya/display/cmd/DrawEllipseCmd.ts","../../src/layaAir/laya/display/cmd/DrawRoundRectCmd.ts","../../src/layaAir/laya/display/GraphicsBounds.ts","../../src/layaAir/laya/display/cmd/ClipRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTexturesCmd.ts","../../src/layaAir/laya/display/cmd/FillTextCmd.ts","../../src/layaAir/laya/utils/CacheManger.ts","../../src/layaAir/laya/utils/VectorGraphManager.ts","../../src/layaAir/laya/display/Graphics.ts","../../src/layaAir/laya/display/Node.ts","../../src/layaAir/laya/utils/Ease.ts","../../src/layaAir/laya/utils/Handler.ts","../../src/layaAir/laya/utils/Tween.ts","../../src/layaAir/laya/utils/Dragging.ts","../../src/layaAir/laya/utils/SpriteUtils.ts","../../src/layaAir/laya/display/Sprite.ts","../../src/layaAir/laya/display/AnimationBase.ts","../../src/layaAir/laya/net/AtlasInfoManager.ts","../../src/layaAir/laya/net/WorkerLoader.ts","../../src/layaAir/laya/resource/AtlasResource.ts","../../src/layaAir/laya/net/BatchProgress.ts","../../src/layaAir/laya/utils/ImgUtils.ts","../../src/layaAir/laya/html/XMLUtils.ts","../../src/layaAir/laya/html/XMLIterator.ts","../../src/layaAir/laya/html/XML.ts","../../src/layaAir/laya/net/HttpRequest.ts","../../src/layaAir/laya/net/Downloader.ts","../../src/layaAir/laya/net/Loader.ts","../../src/layaAir/laya/maths/MathUtil.ts","../../src/layaAir/laya/display/FrameAnimation.ts","../../src/layaAir/laya/display/GraphicAnimation.ts","../../src/layaAir/laya/display/Animation.ts","../../src/layaAir/laya/display/BitmapFont.ts","../../src/layaAir/laya/display/EffectAnimation.ts","../../src/layaAir/laya/display/css/TextStyle.ts","../../src/layaAir/laya/html/HtmlElement.ts","../../src/layaAir/laya/html/HtmlImage.ts","../../src/layaAir/laya/html/HtmlLink.ts","../../src/layaAir/laya/html/HtmlParseOptions.ts","../../src/layaAir/laya/html/HtmlParser.ts","../../src/layaAir/laya/html/UBBParser.ts","../../src/layaAir/laya/display/Text.ts","../../src/layaAir/laya/events/InputManager.ts","../../src/layaAir/laya/renders/Render.ts","../../src/layaAir/laya/loaders/SerializeUtil.ts","../../src/layaAir/laya/display/Input.ts","../../src/layaAir/laya/components/Widget.ts","../../src/layaAir/laya/utils/HitArea.ts","../../src/layaAir/laya/utils/WeakObject.ts","../../src/layaAir/laya/resource/HierarchyResource.ts","../../src/layaAir/laya/loaders/LegacyUIParser.ts","../../src/layaAir/laya/resource/PrefabImpl.ts","../../src/layaAir/laya/display/Scene.ts","../../src/layaAir/laya/utils/Timer.ts","../../src/layaAir/laya/utils/CallLater.ts","../../src/layaAir/laya/webgl/WebGL.ts","../../src/layaAir/laya/utils/RunDriver.ts","../../src/layaAir/laya/components/ComponentDriver.ts","../../src/layaAir/laya/display/Stage.ts","../../src/layaAir/laya/filters/BlurFilterGLRender.ts","../../src/layaAir/laya/filters/BlurFilter.ts","../../src/layaAir/laya/filters/GlowFilterGLRender.ts","../../src/layaAir/laya/filters/GlowFilter.ts","../../src/layaAir/laya/media/SoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSound.ts","../../src/layaAir/laya/media/webaudio/WebAudioSoundChannel.ts","../../src/layaAir/laya/media/webaudio/WebAudioSound.ts","../../src/layaAir/laya/media/SoundManager.ts","../../src/layaAir/laya/media/SoundNode.ts","../../src/layaAir/laya/media/VideoTexture.ts","../../src/layaAir/laya/media/VideoNode.ts","../../src/layaAir/laya/components/AnimatorPlayState2D.ts","../../src/layaAir/laya/components/AnimatorControllerLayer2D.ts","../../src/layaAir/laya/components/AnimatorControllerParse.ts","../../src/layaAir/laya/components/AnimatorUpdateMode.ts","../../src/layaAir/laya/components/Animation2DCondition.ts","../../src/layaAir/laya/resource/TextResource.ts","../../src/layaAir/laya/components/Animator2D.ts","../../src/layaAir/laya/components/AnimatorState2D.ts","../../src/layaAir/laya/components/KeyframeNode2D.ts","../../src/layaAir/laya/components/KeyFrame2D.ts","../../src/layaAir/laya/components/Animation2DEvent.ts","../../src/layaAir/laya/components/AnimationClip2DParser01.ts","../../src/layaAir/laya/components/KeyframeNodeList2D.ts","../../src/layaAir/laya/components/AnimationClip2D.ts","../../src/layaAir/laya/components/Animation2DParm.ts","../../src/layaAir/laya/components/AnimatorStateCondition.ts","../../src/layaAir/laya/components/AnimatorTransition2D.ts","../../src/layaAir/laya/components/AnimatorController2D.ts","../../src/layaAir/laya/components/Script.ts","../../src/layaAir/laya/loaders/TextResourceLoader.ts","../../src/layaAir/laya/loaders/AtlasLoader.ts","../../src/layaAir/laya/loaders/HierarchyParser.ts","../../src/layaAir/laya/loaders/HierarchyLoader.ts","../../src/layaAir/laya/RenderEngine/HDRTextureInfo.ts","../../src/layaAir/laya/loaders/TextureLoader.ts","../../src/layaAir/laya/loaders/AnimationClip2DLoader.ts","../../src/layaAir/laya/loaders/AnimationController2DLoader.ts","../../src/layaAir/laya/loaders/NullLoader.ts","../../src/layaAir/laya/loaders/BitmapFontLoader.ts","../../src/layaAir/laya/loaders/TTFFontLoader.ts","../../src/layaAir/laya/RenderEngine/RenderShader/RenderState.ts","../../src/layaAir/laya/RenderEngine/UniformBufferBase.ts","../../src/layaAir/laya/RenderEngine/UniformBufferObject.ts","../../src/layaAir/laya/resource/Material.ts","../../src/layaAir/laya/resource/TextureCube.ts","../../src/layaAir/laya/loaders/MaterialParser.ts","../../src/layaAir/laya/loaders/MaterialLoader.ts","../../src/layaAir/laya/utils/ParseJSON.ts","../../src/layaAir/laya/loaders/ShaderParser.ts","../../src/layaAir/laya/loaders/ShaderLoader.ts","../../src/layaAir/laya/media/webaudio/WebAudioLoader.ts","../../src/layaAir/laya/ModuleDef.ts","../../src/layaAir/laya/net/LocalStorage.ts","../../src/layaAir/laya/webgl/shader/d2/value/PrimitiveSV.ts","../../src/layaAir/laya/webgl/shader/d2/value/TextureSV.ts","../../src/layaAir/laya/utils/Mouse.ts","../../src/layaAir/laya/webgl/utils/MeshParticle2D.ts","../../src/layaAir/Laya.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/DrawType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderDrawMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderIndexMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureCompareMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDecodeFormat.ts","../../src/layaAir/laya/RenderEngine/BlendState.ts","../../src/layaAir/laya/RenderEngine/CommandUniformMap.ts","../../src/layaAir/laya/RenderEngine/RenderStateCommand.ts","../../src/layaAir/laya/effect/EffectBase.ts","../../src/layaAir/laya/events/Keyboard.ts","../../src/layaAir/laya/events/KeyLocation.ts","../../src/layaAir/laya/layagl/CommandEncoder.ts","../../src/layaAir/laya/layagl/QuickTestTool.ts","../../src/layaAir/laya/net/Socket.ts","../../src/layaAir/laya/RenderEngine/RenderShader/GLSLCodeGenerator.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariable.ts","../../src/layaAir/laya/resource/Texture3D.ts","../../src/layaAir/laya/utils/Base64Tool.ts","../../src/layaAir/laya/utils/BufferSliceUtils.ts","../../src/layaAir/laya/utils/Log.ts","../../src/layaAir/laya/utils/PerfData.ts","../../src/layaAir/laya/utils/PerfHUD.ts","../../src/layaAir/laya/utils/PoolCache.ts","../../src/layaAir/laya/utils/SingletonList.ts","../../src/layaAir/laya/utils/TimeLine.ts","../../src/layaAir/laya/display/cmd/DrawParticleCmd.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeCommandUniformMap.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeShaderData.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLExtension.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/CommonMemoryAllocater.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/NativeMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeUniformBufferObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalTex.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalRT.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLBuffer.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/VertexArrayObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GlCapable.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLParams.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLEngine.ts","../../src/layaAir/laya/webgl/utils/MatirxArray.ts","../../src/layaAir/laya/webgl/text/ArabicReshaper.ts","../../src/layaAir/laya/components/AnimatorState2DScript.ts","../../src/layaAir/laya/effect/ButtonEffect.ts","../../src/layaAir/laya/effect/FadeIn.ts","../../src/layaAir/laya/effect/FadeOut.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderEngineFactory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeWebGLEngine.ts","../../src/layaAir/laya/resource/RenderTextureCube.ts","../../src/layaAir/laya/media/Sound.ts","../../src/layaAir/laya/utils/StringKey.ts","../../src/layaAir/laya/RenderEngine/SubUniformBufferData.ts","../../src/layaAir/laya/system/System.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLRenderEngineFactory.ts"],"sourcesContent":["/**\r\n * <code>ClassUtils</code> 是一个类工具类。\r\n */\r\nexport class ClassUtils {\r\n    static _classMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * 注册 Class 映射，方便在class反射时获取。\r\n     * @param\tclassName 映射的名字或者别名。\r\n     * @param\tclassDef 类的全名或者类的引用，全名比如:\"laya.Sprite\"。\r\n     */\r\n    static regClass(className: string, classDef: any): void {\r\n        ClassUtils._classMap[className] = classDef;\r\n    }\r\n\r\n    /**\r\n     * 根据名字返回类对象。\r\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\r\n     * @return 类对象\r\n     */\r\n    static getClass(className: string): any {\r\n        return ClassUtils._classMap[className];\r\n    }\r\n\r\n    /**\r\n     * 根据名称创建 Class 实例。\r\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\r\n     * @return\t返回类的实例。\r\n     */\r\n    static getInstance(className: string): any {\r\n        var compClass: any = ClassUtils.getClass(className);\r\n        if (compClass) return new compClass();\r\n        else console.warn(\"[error] Undefined class:\", className);\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { ClassUtils } from \"./laya/utils/ClassUtils\";\r\n\r\nexport type FEnumDescriptor = {\r\n    name: string,\r\n    value: any,\r\n    extend?: FEnumDescriptor,\r\n    [index: string]: any,\r\n}[] | any[] | Object | string;\r\n\r\nexport type FPropertyType = string | Function | Object | [FPropertyType] | [\"Record\", FPropertyType];\r\n\r\nexport interface FPropertyDescriptor {\r\n    /** 属性名称。一般不需要设定。 */\r\n    name: string;\r\n    /** \r\n     * 属性类型。\r\n     * 基础类型有：number,string,boolean,any，注意是使用字符串，不是类型。\r\n     * 复合类型有：数组，使用类似[\"number\"]这样的方式表达；字典，使用类似[\"Record\", \"number\"]这样的方式表达，第一个元素固定为Record，第二个元素为实际类型。\r\n     * 其他对象类型可以直接使用类名，但要注意该类必须有使用regClass装饰器。也支持枚举类型。枚举类型不需要regClass。\r\n     * 如果不提供type，表示只用于ui样式，没有实际对应数据，和不会序列化\r\n     */\r\n    type: FPropertyType;\r\n\r\n    /** 该属性在原型中的初始值。这个值也用于序列化时比较，如果相同则不序列化这个属性，所以必须保证这里设置的值就是类中变量的初始值。*/\r\n    default?: any;\r\n\r\n    /** 标题。如果不提供，则使用name。 */\r\n    caption: string;\r\n    /** 提示文字 */\r\n    tips: string;\r\n\r\n    /** 属性栏目。为多个属性设置相同的值，可以将它们显示在同一个Inspector栏目内。 */\r\n    catalog: string;\r\n    /* 栏目标题。不提供则直接使用栏目名称。 */\r\n    catalogCaption: string;\r\n    /* 栏目的显示顺序，数值越小显示在前面。不提供则按属性出现的顺序。*/\r\n    catalogOrder: number;\r\n\r\n    /**\r\n     * 编辑这个属性的控件。内置有：number,string,boolean,color,vec2,vec3,vec4,asset\r\n     * \r\n     *      number : 数字输入。\r\n     *      string : 字符串输入。默认为单行输入，如果是多行，需要激活multiline选项。\r\n     *      boolean : 布尔值输入，用于单选框或多选框。\r\n     *      color : 一个颜色框+调色盘+拾色器\r\n     *      vec2 : XY输入的组合\r\n     *      vec3 : XYZ输入的组合\r\n     *      vec4 : XYZW输入的组合\r\n     *      asset : 选择资源\r\n     * \r\n     * 一般来说，不需要设置这个选项，编辑器会自动根据属性类型选择适合的控件，但在某些情况下可以需要强制指定。\r\n     * 例如，如果数据类型是Vector4，但其实它表达的是颜色，用默认编辑Vector4的控件不适合，需要在这里设置为“color”。\r\n     * \r\n     * 显式设置inspector为null，则不会为属性构造inspector。这与hidden设置为true不同。hidden为true是创建但不可见，\r\n     * inspector为null的话则是完全不创建。\r\n     */\r\n    inspector: string;\r\n\r\n    /** 隐藏控制:true隐藏，false显示。常用于关联属性的情况。\r\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），隐藏这个属性。\r\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    hidden: boolean | string;\r\n\r\n    /** 只读控制。\r\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），该属性只读。\r\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    readonly: boolean | string;\r\n\r\n    /** 数据检查机制。\r\n     * 1. 将包括表达式的字符串传入，用于判断检查是否符合表达式的条件。符合条件，需要返回报错信息。\r\n     * 2. 使用示例为：\"if(value == data.a) return '不能与a的值相同'\"\r\n     * 其中的value为当前用户在该属性输入的值，data为当前组件的对象数据，data.a是当前组件中的a属性值\r\n     */\r\n    validator: string;\r\n    /** 是否允许数据为空值。\r\n     * 可以用表达式，返回true或者false的结果。\r\n     */\r\n    required: boolean | string;\r\n\r\n    /** 是否序列化 */\r\n    serializable: boolean;\r\n    /** 属性在不参与序列化时，如果它的数据可能受其他可序列化的属性影响，在这里填写其他属性名称。这通常用于判断预制体属性是否覆盖。*/\r\n    affectBy: string;\r\n\r\n    /** 是否多行文本输入 */\r\n    multiline: boolean;\r\n    /** 是否密码输入 */\r\n    password: boolean;\r\n    /** 如果true或者缺省，文本输入每次输入都提交；否则只有在失焦时才提交 */\r\n    submitOnTyping: boolean;\r\n    /** 如果是文本类型，是输入文本的提示信息；如果是布尔类型，是多选框的标题。 */\r\n    prompt: string;\r\n\r\n    /** 定义枚举 */\r\n    enumSource: FEnumDescriptor;\r\n    /** 当数据源为空时，隐藏这个属性 */\r\n    hideIfEnumSourceEmpty: boolean;\r\n\r\n    /** 是否反转布尔值。例如当属性值为true时，多选框显示为不勾选。 */\r\n    reverseBool: boolean;\r\n\r\n    /** 是否允许null值。默认为true。*/\r\n    nullable: boolean;\r\n\r\n    /** 数字的最小值 */\r\n    min: number,\r\n    /** 数字的最大值 */\r\n    max: number,\r\n    /** 数值范围，等同于一次性设置min和max。 */\r\n    range: [number, number];\r\n    /** 拖动方式改变数值时，每次数值改变的幅度。 */\r\n    step: number;\r\n    /** 小数点后的位数 */\r\n    fractionDigits: number;\r\n    /** 显示为百分比 */\r\n    percentage: boolean;\r\n\r\n    /** 对数组类型属性适用。表示数组是固定长度，不允许修改。*/\r\n    fixedLength: boolean;\r\n    /** 对数组类型属性适用。如果不提供，则表示数组允许所有操作，如果提供，则只允许列出的操作。*/\r\n    arrayActions: Array<\"append\" | \"insert\" | \"delete\" | \"move\">;\r\n    /** 对数组类型属性适用。这里可以定义数组元素的属性 */\r\n    elementProps: Partial<FPropertyDescriptor>;\r\n\r\n    /** 对颜色类型属性适用。表示是否提供透明度a值的修改。 */\r\n    showAlpha: boolean;\r\n    /** 对颜色类型属性适用。它与default值不同的是，当default是null时，可以用defaultColor定义一个非null时的默认值。*/\r\n    defaultColor: any;\r\n    /** 对颜色类型属性适用。允许显示一个checkbox决定颜色是否为null。 */\r\n    colorNullable: boolean;\r\n\r\n    /** 对对象类型属性适用。如果为true，隐藏对象的标题，同时对象下的属性的显示缩进会减少一级。*/\r\n    hideHeader: boolean;\r\n    /** 对对象类型属性适用。对象创建时可以下拉选择一个类型。如果显示设置为null，则禁止菜单。默认是显示一个创建基类的菜单。*/\r\n    createObjectMenu: Array<string>;\r\n    /** 对对象类型属性适用。表示这个属性类型有类似结构体的行为特性，即总是作为一个整体使用。\r\n     * 例如，obj对象的某个属性b的值是a1，a1是T类型的实例，且T类型的structLike为true，那么当a1的属性改变时，编辑器将同时调用obj.b = a1。\r\n     * 默认为false。\r\n     */\r\n    structLike: boolean;\r\n\r\n    /** 说明此属性是引用一个资源 */\r\n    isAsset: boolean;\r\n    /** 对资源类型的属性适用。多个资源类型用逗号分隔，例如“Image,Audio\"。*/\r\n    assetTypeFilter: string;\r\n    /** 如果属性类型是string，并且进行资源选择时，这个选项决定属性值是资源原始路径还是res://uuid这样的格式。如果是true，则是资源原始路径。默认false。*/\r\n    useAssetPath: boolean;\r\n    /** 对资源类型的属性适用。选择资源时是否允许选择内部资源 */\r\n    allowInternalAssets: boolean;\r\n    /** 对资源类型的属性适用。可以设置一个自定义的过滤器。过滤器需要先通过EditorEnv.assetMgr.customAssetFilters注册。 */\r\n    customAssetFilter: string;\r\n\r\n    /** 对类型是Node或者Component的属性适用。如果不为null，当在实际运行环境里执行反序列化时，引用对象不再实例化，而是将它的序列化数据原样保存到指定的属性中。*/\r\n    toTemplate: string;\r\n\r\n    /** 显示位置。语法：before xxx/after xxx/first/last。 */\r\n    position: string;\r\n\r\n    /** 表示属性是私有属性。私有属性不会显示在Inspector里，但会序列化保存。 */\r\n    \"private\": boolean;\r\n\r\n    /** 增加缩进，单位是层级，不是像素。 */\r\n    addIndent: number;\r\n\r\n    /** 表示属性是否允许多选情况下编辑。默认true。 */\r\n    allowMultipleObjects: boolean;\r\n\r\n    /** 表示属性不显示在派生类的属性表中 */\r\n    hideInDeriveType: boolean;\r\n\r\n    /** 属性改变时额外调用对象的一个函数，这里是函数名称。\r\n     * 函数原型是func(key?:string)。其中key在改变成员内部属性时会传递。\r\n     * 例如改变数据某个元素的内部属性，则key是这个元素的索引。 \r\n     */\r\n    onChange: string;\r\n\r\n    /** 额外的选项 */\r\n    options: Record<string, any>;\r\n}\r\n\r\nexport interface FTypeDescriptor {\r\n    /** 标题。如果不提供，则使用name。 */\r\n    caption: string;\r\n    /**帮助文档url地址 */\r\n    help: string;\r\n    /** 添加到组件菜单。 */\r\n    menu: string;\r\n    /** 图标。*/\r\n    icon: string;\r\n    /** 是否资源类型 */\r\n    isAsset: boolean;\r\n    /** 对资源类型的属性适用。多个资源类型用逗号分隔，例如“Image,Audio\"。可用值参考editor/public/IAssetInfo.ts。 */\r\n    assetTypeFilter: string;\r\n    /** 表示这个类型有类似结构体的行为特性，即总是作为一个整体使用。\r\n     * 例如，obj对象的某个属性b的值是a1，a1是T类型的实例，且T类型的structLike为true，那么当a1的属性改变时，编辑器将同时调用obj.b = a1。\r\n     * 默认为false。\r\n     */\r\n    structLike: boolean;\r\n    /** 初始值。这个值只在面板中使用，它指从界面上创建对象时赋予属性的初始值。*/\r\n    init: any;\r\n    /** 属性列表 */\r\n    properties: Array<Partial<FPropertyDescriptor>>;\r\n    /** 编辑这个类实例的控件 */\r\n    inspector: string;\r\n    /** 对Component使用，表示这个组件允许挂载的节点类型。默认null */\r\n    worldType: \"2d\" | \"3d\" | null;\r\n    /** 对Component使用，如果为true，并且定义了menu属性，则这个组件还会显示在层级面板的新建对象菜单上。 */\r\n    inHierarchyMenu: boolean;\r\n    /** 额外的选项 */\r\n    options: Record<string, any>;\r\n}\r\n\r\nfunction dummy() { }\r\n\r\n/**\r\n * 注册一个类型，注册后才能被序列化系统自动保存和载入。\r\n */\r\nexport function regClass(assetId?: string): any {\r\n    return function (constructor: Function) {\r\n        ClassUtils.regClass(assetId, constructor);\r\n    };\r\n}\r\n\r\n/**\r\n * 设置类型的额外信息。\r\n * @param info 类型的额外信息\r\n */\r\nexport function classInfo(info?: Partial<FTypeDescriptor>): any { return dummy; }\r\n\r\n/**\r\n * 设置组件可以在编辑器环境中执行完整声明周期。\r\n */\r\nexport function runInEditor(constructor: Function): void { }\r\n\r\n/**\r\n * 使用这个装饰器，可以使属性显示在编辑器属性设置面板上，并且能序列化保存。\r\n * @param info 属性的类型，如: Number,\"number\",[Number],[\"Record\", Number]等。或传递对象描述详细信息，例如{ type: \"string\", multiline: true }。\r\n */\r\nexport function property(info: FPropertyType | Partial<FPropertyDescriptor>): any { return dummy; }\r\n","/**\r\n *  Config 用于配置一些全局参数。如需更改，请在初始化引擎之前设置。\r\n */\r\nexport class Config {\r\n    /**\r\n    * 画布设置是否抗锯齿，只对2D(WebGL)有效,3D抗锯齿在camera或RT上面控制。\r\n    */\r\n    static isAntialias: boolean = true;\r\n    /**\r\n     * 是否使用webgl2\r\n     */\r\n    static useWebGL2: boolean = true;\r\n    /*\r\n     * 限制fps \r\n     */\r\n    static FPS = 60;\r\n    /**\r\n     * 是否使用视网膜模式，在iOS上面可能会创建更大的RT，来达到更佳的效果\r\n     */\r\n    static useRetinalCanvas: boolean = false;\r\n\r\n    //-------------2D设置---------------------\r\n    /**\r\n     * 2D动画 Animation 的默认播放时间间隔，单位为毫秒。\r\n     */\r\n    static animationInterval: number = 50;\r\n\r\n    /**\r\n       * 当使用webGL渲染2d的时候，每次创建vb是否直接分配足够64k个顶点的缓存。这样可以提高效率。\r\n       */\r\n    static webGL2D_MeshAllocMaxMem: boolean = true;\r\n\r\n    /*\r\n     *默认文本大小，默认为12\r\n     */\r\n    static defaultFontSize: number = 12;\r\n    /*\r\n     *默认文本字体，默认为Arial\r\n     */\r\n    static defaultFont: string = \"Arial\";\r\n\r\n    //-------------引擎内部使用-------------\r\n    /**\r\n     * 设置画布是否透明，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isAlpha: boolean = false;\r\n    /**\r\n     * 设置画布是否包含深度\r\n     */\r\n    static isDepth: boolean = false;\r\n    /**\r\n     * 表明在一个系统性能低的环境是否创建该上下文的boolean值\r\n     */\r\n    static isfailIfMajorPerformanceCaveat: boolean = false;\r\n\r\n    static powerPreference: WebGLPowerPreference = \"default\";\r\n    /**\r\n     * 设置画布是否预乘，只对2D(WebGL)、3D有效。\r\n     */\r\n    static premultipliedAlpha: boolean = true;\r\n    /**\r\n     * 设置画布的是否开启模板缓冲，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isStencil: boolean = false;\r\n    /**\r\n     * 是否保留渲染缓冲区。\r\n     */\r\n    static preserveDrawingBuffer: boolean = false;\r\n    /**\r\n     * 是否打印Webgl指令，同时定位webgl报错\r\n     */\r\n    static printWebglOrder: boolean = false;\r\n\r\n    /**在IOS下，一些字体会找不到，引擎提供了字体映射功能，比如默认会把 \"黑体\" 映射为 \"黑体-简\"，更多映射，可以自己添加*/\r\n    static fontFamilyMap: any = { \"报隶\": \"报隶-简\", \"黑体\": \"黑体-简\", \"楷体\": \"楷体-简\", \"兰亭黑\": \"兰亭黑-简\", \"隶变\": \"隶变-简\", \"凌慧体\": \"凌慧体-简\", \"翩翩体\": \"翩翩体-简\", \"苹方\": \"苹方-简\", \"手札体\": \"手札体-简\", \"宋体\": \"宋体-简\", \"娃娃体\": \"娃娃体-简\", \"魏碑\": \"魏碑-简\", \"行楷\": \"行楷-简\", \"雅痞\": \"雅痞-简\", \"圆体\": \"圆体-简\" };\r\n\r\n    /**tempConfig Fixed number of frames */\r\n    static fixedFrames: boolean = true;\r\n    /*资源引用参数为0是否立即删除资源，如果不立即删除请调用DestrotyUnUse*/\r\n    static destroyResourceImmediatelyDefault = true;\r\n    /**@internal */\r\n    static _enableWindowRAFFunction: boolean = true;\r\n}\r\n\r\n","/**\r\n * @private\r\n * 静态常量集合\r\n */\r\nexport class Const {\r\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\r\n    static ENUM_TEXTALIGN_CENTER: number = 1;\r\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\r\n\r\n    static BYTES_PE: number = 4;\r\n    static BYTES_PIDX: number = 2;\r\n\r\n    static MAX_CLIP_SIZE: number = 99999999;\r\n}\r\n\r\n/**\r\n * 节点标志\r\n */\r\nexport class NodeFlags {\r\n    static NOT_ACTIVE = 0x01;\r\n    static ACTIVE_INHIERARCHY = 0x02;\r\n    static AWAKED = 0x04;\r\n    static NOT_READY = 0x08;\r\n    static DISPLAY = 0x10;\r\n    static HAS_ZORDER = 0x20;\r\n    static HAS_MOUSE = 0x40;\r\n    static DISPLAYED_INSTAGE = 0x80;\r\n    static DRAWCALL_OPTIMIZE = 0x100;\r\n    static PROCESS_COLLISIONS = 0x200;\r\n    static PROCESS_TRIGGERS = 0x400;\r\n    static HAS_SCRIPT = 0x800;\r\n    static ESCAPE_DRAWING_TO_TEXTURE = 0x1000;\r\n    static DISABLE_INNER_CLIPPING = 0x2000;\r\n    static DISABLE_OUTER_CLIPPING = 0x4000;\r\n    static DISABLE_VISIBILITY = 0x8000;\r\n    static EDITING_NODE = 0x10000;\r\n    static HIDE_BY_EDITOR = 0x20000;\r\n    static LOCK_BY_EDITOR = 0x40000;\r\n}\r\n\r\nexport class HideFlags {\r\n    static HideInHierarchy = 0x1;\r\n    static HideInInspector = 0x2;\r\n    static DontSave = 0x4;\r\n    static HideAndDontSave = 0x7;\r\n}","import { Timer } from \"./laya/utils/Timer\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { Context } from \"./laya/resource/Context\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\n\r\n/**\r\n * @internal\r\n * 使用全局类的时候，避免引用其他模块\r\n */\r\nexport class ILaya {\r\n    static Loader: typeof Loader = null;\r\n    static Context: typeof Context = null;\r\n    static Browser: typeof Browser = null;\r\n\r\n    static Laya: any = null;\r\n    static loader: Loader = null;\r\n    static timer: Timer = null;\r\n    static systemTimer: Timer = null;\r\n    static physicsTimer: Timer = null;\r\n    static stage: Stage = null;\r\n}\r\n","export class LayaEnv {\r\n    static version: string = \"3.1.6\";\r\n    static isPlaying: boolean = true;\r\n    static isPreview: boolean = false;\r\n    static isConch: boolean = (<any>window).conch != null;\r\n\r\n    /** @deprecated Uses Laya.addBeforeInitCallback */\r\n    static beforeInit: (stageConfig: IStageConfig) => void;\r\n    /** @deprecated Use Laya.addAfterInitCallback */\r\n    static afterInit: () => void;\r\n}\r\n\r\nexport interface IStageConfig {\r\n    designWidth?: number;\r\n    designHeight?: number;\r\n    scaleMode?: string;\r\n    screenMode?: string;\r\n    alignV?: string;\r\n    alignH?: string;\r\n    backgroundColor?: string;\r\n}","/**\r\n * <p> <code>Pool</code> 是对象池类，用于对象的存储、重复使用。</p>\r\n * <p>合理使用对象池，可以有效减少对象创建的开销，避免频繁的垃圾回收，从而优化游戏流畅度。</p>\r\n */\r\nexport class Pool {\r\n    /**@private */\r\n    private static _CLSID: number = 0;\r\n    /**@private */\r\n    private static POOLSIGN: string = \"__InPool\";\r\n    /**@private  对象存放池。*/\r\n    private static _poolDic: any = {};\r\n\r\n    /**\r\n     * 根据对象类型标识字符，获取对象池。\r\n     * @param sign 对象类型标识字符。\r\n     * @return 对象池。\r\n     */\r\n    static getPoolBySign(sign: string): any[] {\r\n        return Pool._poolDic[sign] || (Pool._poolDic[sign] = []);\r\n    }\r\n\r\n    /**\r\n     * 清除对象池的对象。\r\n     * @param sign 对象类型标识字符。\r\n     */\r\n    static clearBySign(sign: string): void {\r\n        if (Pool._poolDic[sign]) Pool._poolDic[sign].length = 0;\r\n    }\r\n\r\n    /**\r\n     * 将对象放到对应类型标识的对象池中。\r\n     * @param sign 对象类型标识字符。\r\n     * @param item 对象。\r\n     */\r\n    static recover(sign: string, item: any): void {\r\n        if (item[Pool.POOLSIGN] !== false) //有这个标志，才表明对象是从Pool里获取的，允许recover\r\n            return;\r\n        item[Pool.POOLSIGN] = true;\r\n        Pool.getPoolBySign(sign).push(item);\r\n    }\r\n\r\n    /**\r\n     * 根据类名进行回收，如果类有类名才进行回收，没有则不回收\r\n     * @param\tinstance 类的具体实例\r\n     */\r\n    static recoverByClass(instance: any): void {\r\n        if (instance) {\r\n            var className: string = instance[\"__className\"] || instance.constructor._$gid;\r\n            if (className) Pool.recover(className, instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 返回类的唯一标识\r\n     */\r\n    private static _getClassSign(cla: any): string {\r\n        var className = cla[\"__className\"] || cla[\"_$gid\"];\r\n        if (!className) {\r\n            cla[\"_$gid\"] = className = Pool._CLSID + \"\";\r\n            Pool._CLSID++;\r\n        }\r\n        return className;\r\n    }\r\n\r\n    /**\r\n     * 根据类型创建对象\r\n     * @param\tcls 类型\r\n     */\r\n    static createByClass<T>(cls: new () => T): T {\r\n        return Pool.getItemByClass(Pool._getClassSign(cls), cls);\r\n    }\r\n\r\n    /**\r\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\r\n     * <p>当对象池中无此类型标识的对象时，则根据传入的类型，创建一个新的对象返回。</p>\r\n     * @param sign 对象类型标识字符。\r\n     * @param cls 用于创建该类型对象的类。\r\n     * @return 此类型标识的一个对象。\r\n     */\r\n    static getItemByClass<T>(sign: string, cls: new () => T): T {\r\n        let rst: any;\r\n        let pool = Pool.getPoolBySign(sign);\r\n        if (pool.length)\r\n            rst = pool.pop();\r\n        else\r\n            rst = new cls();\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\r\n     * <p>当对象池中无此类型标识的对象时，则使用传入的创建此类型对象的函数，新建一个对象返回。</p>\r\n     * @param sign 对象类型标识字符。\r\n     * @param createFun 用于创建该类型对象的方法。\r\n     * @param caller this对象\r\n     * @return 此类型标识的一个对象。\r\n     */\r\n    static getItemByCreateFun(sign: string, createFun: Function, caller: any = null): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : createFun.call(caller);\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 根据传入的对象类型标识字符，获取对象池中已存储的此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\r\n     * @param sign 对象类型标识字符。\r\n     * @return 对象池中此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\r\n     */\r\n    static getItem(sign: string): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : null;\r\n        if (rst) {\r\n            rst[Pool.POOLSIGN] = false;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n}\r\n\r\n\r\n","var _gid: number = 1;\r\nconst _pi: number = 180 / Math.PI;\r\nconst _pi2: number = Math.PI / 180;\r\n\r\n/**\r\n * <code>Utils</code> 是工具类。\r\n */\r\nexport class Utils {\r\n\r\n    /**\r\n     * 角度转弧度。\r\n     * @param\tangle 角度值。\r\n     * @return\t返回弧度值。\r\n     */\r\n    static toRadian(angle: number): number {\r\n        return angle * _pi2;\r\n    }\r\n\r\n    /**\r\n     * 弧度转换为角度。\r\n     * @param\tradian 弧度值。\r\n     * @return\t返回角度值。\r\n     */\r\n    static toAngle(radian: number): number {\r\n        return radian * _pi;\r\n    }\r\n\r\n    /**\r\n     * 将传入的 uint 类型颜色值转换为字符串型颜色值。\r\n     * @param color 颜色值。\r\n     * @return 字符串型颜色值。\r\n     */\r\n    static toHexColor(color: number): string {\r\n        if (color < 0 || isNaN(color)) return null;\r\n        var str: string = color.toString(16);\r\n        while (str.length < 6) str = \"0\" + str;\r\n        return \"#\" + str;\r\n    }\r\n\r\n    static fromStringColor(value: string): number {\r\n        if (!value)\r\n            return 0;\r\n\r\n        if (value.indexOf(\"rgba(\") >= 0 || value.indexOf(\"rgb(\") >= 0) {\r\n            let p1 = value.indexOf(\"(\");\r\n            let p2 = value.indexOf(\")\");\r\n            if (p1 == -1 || p2 == -1)\r\n                return 0;\r\n\r\n            value = value.substring(p1 + 1, p2);\r\n            let arr: any[] = value.split(\",\");\r\n            let len = arr.length;\r\n            for (let i = 0; i < len; i++) {\r\n                arr[i] = parseFloat(arr[i]);\r\n                if (isNaN(arr[i]))\r\n                    arr[i] = 0;\r\n            }\r\n            if (arr.length == 4)\r\n                return (arr[0] << 24) + (arr[1] << 16) + (arr[2] << 8) + Math.round(arr[3] * 255);\r\n            else\r\n                return (arr[0] << 16) + (arr[1] << 8) + arr[2];\r\n        } else {\r\n            value.charAt(0) === '#' && (value = value.substring(1));\r\n            let len = value.length;\r\n            if (len === 3 || len === 4) {\r\n                let temp: string = \"\";\r\n                for (let i = 0; i < len; i++) {\r\n                    temp += (value[i] + value[i]);\r\n                }\r\n                value = temp;\r\n            }\r\n            return parseInt(value, 16);\r\n        }\r\n    }\r\n\r\n    /**获取一个全局唯一ID。*/\r\n    static getGID(): number {\r\n        return _gid++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清空source数组，复制array数组的值。\r\n     * @param\tsource 需要赋值的数组。\r\n     * @param\tarray 新的数组值。\r\n     * @return \t复制后的数据 source 。\r\n     */\r\n    static copyArray(source: any[], array: any[]): any[] {\r\n        source || (source = []);\r\n        if (!array) return source;\r\n        source.length = array.length;\r\n        var len: number = array.length;\r\n        for (let i = 0; i < len; i++) {\r\n            source[i] = array[i];\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 批量移动点坐标。\r\n     * @param points 坐标列表。\r\n     * @param x x轴偏移量。\r\n     * @param y y轴偏移量。\r\n     */\r\n    static transPointList(points: any[], x: number, y: number): void {\r\n        var i: number, len: number = points.length;\r\n        for (i = 0; i < len; i += 2) {\r\n            points[i] += x;\r\n            points[i + 1] += y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 解析一个字符串，并返回一个整数。和JS原生的parseInt不同：如果str为空或者非数字，原生返回NaN，这里返回0。\r\n     * @param\tstr\t\t要被解析的字符串。\r\n     * @param\tradix\t表示要解析的数字的基数。默认值为0，表示10进制，其他值介于 2 ~ 36 之间。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。如果该参数不在上述范围内，则此方法返回 0。\r\n     * @return\t返回解析后的数字。\r\n     */\r\n    static parseInt(str: string, radix: number = 0): number {\r\n        var result: any = parseInt(str, radix);\r\n        if (isNaN(result)) return 0;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获得路径中的文件名（包含扩展名）\r\n     */\r\n    static getBaseName(path: string): string {\r\n        let i = path.lastIndexOf(\"/\");\r\n        if (i != -1)\r\n            path = path.substring(i + 1);\r\n        i = path.indexOf(\"?\");\r\n        if (i != -1)\r\n            path = path.substring(0, i);\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * 获取文件名的扩展名，并转换为小写字母。例如\"1.abc\"将返回abc。\r\n     */\r\n    static getFileExtension(path: string): string {\r\n        let i = path.lastIndexOf(\".\");\r\n\r\n        if (i != -1) {\r\n            let ext = path.substring(i + 1).toLowerCase();\r\n            let j = ext.indexOf(\"?\");\r\n            if (j != -1)\r\n                ext = ext.substring(0, j);\r\n            if (ext === \"ls\") { //lanit.ls ltcb.ls 这类特殊扩展名的支持\r\n                let k = path.lastIndexOf(\".\", i - 1);\r\n                if (k != -1) {\r\n                    let ext2 = path.substring(k + 1, i + 1) + ext;\r\n                    if (ext2 === \"lanit.ls\" || ext2 === \"ltcb.ls\")\r\n                        return ext2;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        else\r\n            return \"\";\r\n    }\r\n\r\n    /**\r\n     * 更改文件名的扩展名。\r\n     */\r\n    static replaceFileExtension(path: string, newExt: string, excludeDot?: boolean): string {\r\n        if (!path)\r\n            return path;\r\n        let i = path.lastIndexOf(\".\");\r\n        if (newExt.length > 0 && !excludeDot)\r\n            newExt = \".\" + newExt;\r\n        if (i != -1) {\r\n            let j = path.indexOf(\"?\", i);\r\n            if (j != -1)\r\n                return path.substring(0, i) + newExt + path.substring(j);\r\n            else\r\n                return path.substring(0, i) + newExt;\r\n        }\r\n        else\r\n            return path + newExt;\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * <code>Component</code> 类用于创建组件的基类。\r\n */\r\nexport class Component {\r\n    /** @private */\r\n    _id: number;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n    /**@private */\r\n    private _enableState: boolean;\r\n    /** @internal */\r\n    _status: number = 0; //1-awaked,2-starting,3-started,4-destroyed\r\n\r\n    /**\r\n     * 获取所属Node节点。\r\n     */\r\n    owner: Node;\r\n    /** @internal */\r\n    _enabled: boolean = true;\r\n    /**\r\n     * 是否单例，即同一个节点只能添加此类型的脚本一次\r\n     */\r\n    _singleton?: boolean = true;\r\n    /**\r\n     * 是否可以在IDE环境中运行\r\n     */\r\n    runInEditor: boolean;\r\n    scriptPath: string;\r\n    _extra: IComponentExtra;\r\n\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /**\r\n     * 创建一个新的 <code>Component</code> 实例。\r\n     */\r\n    constructor() {\r\n        this._id = Utils.getGID();\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    //@internal\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * 唯一标识ID。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 是否启用组件。\r\n     */\r\n    get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled(value: boolean) {\r\n        if (this._enabled != value) {\r\n            this._enabled = value;\r\n            if (this.owner)\r\n                this._setActive(value && this.owner.activeInHierarchy);\r\n        }\r\n    }\r\n\r\n    get awaked(): boolean {\r\n        return this._status > 0;\r\n    }\r\n\r\n    /**\r\n     * 是否已经销毁 。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._status == 4;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _isScript(): boolean {\r\n        return false;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _resetComp(): void {\r\n        this._enabled = true;\r\n        this._status = 0;\r\n        this._enableState = false;\r\n        this.owner = null;\r\n    }\r\n\r\n    _setOwner(node: Node) {\r\n        if (this._status != 0) {\r\n            throw 'reuse a destroyed component';\r\n        }\r\n        this.owner = node;\r\n\r\n        if (this._isScript())\r\n            node._setBit(NodeFlags.HAS_SCRIPT, true);\r\n\r\n        this._onAdded();\r\n        this.onAdded();\r\n    }\r\n\r\n    /**\r\n     * 被添加到节点后调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onAdded(): void {\r\n    }\r\n\r\n    /**\r\n   * 被激活后调用，可根据需要重写此方法\r\n   * @internal\r\n   */\r\n    protected _onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * 被激活后调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onEnable(): void {\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n    * 被禁用时调用，可根据需要重写此方法\r\n    * @internal\r\n    * 销毁组件\r\n    */\r\n    protected _onDisable(): void {\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * 被销毁时调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onDestroy(): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, interactMap: any = null): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parseInteractive(data: any = null, spriteMap: any = null) {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _cloneTo(dest: Component): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setActive(value: boolean): void {\r\n        if (value) {\r\n            if (this._status == 0) {\r\n                this._status = 1;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    this._onAwake();\r\n                    this.onAwake();\r\n                }\r\n            }\r\n            if (this._enabled && !this._enableState) {\r\n                this._enableState = true;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                    driver.add(this);\r\n\r\n                    if (LayaEnv.isPlaying && this._isScript())\r\n                        this.setupScript();\r\n\r\n                    this._onEnable();\r\n                }\r\n            }\r\n        } else if (this._enableState) {\r\n            this._enableState = false;\r\n            if (LayaEnv.isPlaying || this.runInEditor) {\r\n                let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                driver.remove(this);\r\n\r\n                ILaya.stage.offAllCaller(this);\r\n\r\n                this._onDisable();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setupScript() {\r\n    }\r\n\r\n    /**\r\n     * 销毁组件\r\n     */\r\n    destroy(): void {\r\n        if (this._status == 4)\r\n            return;\r\n\r\n        if (this.owner)\r\n            this.owner._destroyComponent(this);\r\n        else if (!this.destroyed)\r\n            this._destroy(true);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _destroy(second?: boolean): void {\r\n        if (second) {\r\n            if (LayaEnv.isPlaying || this.runInEditor) {\r\n                this._onDestroy();\r\n                this.onDestroy();\r\n\r\n                if (this.onReset) {\r\n                    this.onReset();\r\n                    this._resetComp();\r\n                    Pool.recoverByClass(this);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._setActive(false);\r\n        this._status = 4;\r\n\r\n        if (LayaEnv.isPlaying || this.runInEditor) {\r\n            let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n            driver._toDestroys.add(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 被添加到节点后调用，和Awake不同的是即使节点未激活onAdded也会调用。\r\n     */\r\n    onAdded(): void {\r\n    }\r\n\r\n    /**\r\n     * 重置组件参数到默认值，如果实现了这个函数，则组件会被重置并且自动回收到对象池，方便下次复用\r\n     * 如果没有重置，则不进行回收复用\r\n\r\n     */\r\n    onReset?(): void;\r\n\r\n    /**\r\n     * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\r\n     */\r\n    onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * 组件被启用后执行，比如节点被添加到舞台后\r\n     */\r\n    onEnable(): void {\r\n    }\r\n\r\n    /**\r\n     * 第一次执行update之前执行，只会执行一次\r\n     */\r\n    onStart?(): void;\r\n\r\n    /**\r\n     * 每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n     */\r\n    onUpdate?(): void;\r\n\r\n    /**\r\n     * 每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n     */\r\n    onLateUpdate?(): void;\r\n\r\n    /**\r\n     * 渲染之前执行\r\n     */\r\n    onPreRender?(): void;\r\n\r\n    /**\r\n     * 渲染之后执行\r\n     */\r\n    onPostRender?(): void;\r\n\r\n    /**\r\n     * 组件被禁用时执行，比如从节点从舞台移除后\r\n     */\r\n    onDisable(): void {\r\n    }\r\n\r\n    /**\r\n     * 手动调用节点销毁时执行\r\n     */\r\n    onDestroy(): void {\r\n    }\r\n}\r\n\r\nexport interface IComponentExtra { }","import { Point } from \"./Point\";\r\nimport { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * <p> <code>Matrix</code> 类表示一个转换矩阵，它确定如何将点从一个坐标空间映射到另一个坐标空间。</p>\r\n * <p>您可以对一个显示对象执行不同的图形转换，方法是设置 Matrix 对象的属性，将该 Matrix 对象应用于 Transform 对象的 matrix 属性，然后应用该 Transform 对象作为显示对象的 transform 属性。这些转换函数包括平移（x 和 y 重新定位）、旋转、缩放和倾斜。</p>\r\n */\r\nexport class Matrix {\r\n\r\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\r\n    static EMPTY: Matrix = new Matrix();\r\n    /**用于中转使用的 <code>Matrix</code> 对象。*/\r\n    static TEMP: Matrix = new Matrix();\r\n    /**@internal */\r\n    static _createFun: Function|null = null;\r\n\r\n    /**缩放或旋转图像时影响像素沿 x 轴定位的值。*/\r\n    a: number;\r\n    /**旋转或倾斜图像时影响像素沿 y 轴定位的值。*/\r\n    b: number;\r\n    /**旋转或倾斜图像时影响像素沿 x 轴定位的值。*/\r\n    c: number;\r\n    /**缩放或旋转图像时影响像素沿 y 轴定位的值。*/\r\n    d: number;\r\n    /**沿 x 轴平移每个点的距离。*/\r\n    tx: number;\r\n    /**沿 y 轴平移每个点的距离。*/\r\n    ty: number;\r\n    /**@internal 是否有旋转缩放操作*/\r\n    _bTransform: boolean = false;\r\n\r\n    /**\r\n     * 使用指定参数创建新的 <code>Matrix</code> 对象。\r\n     * @param a\t\t（可选）缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param b\t\t（可选）旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param c\t\t（可选）旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param d\t\t（可选）缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param tx\t（可选）沿 x 轴平移每个点的距离。\r\n     * @param ty\t（可选）沿 y 轴平移每个点的距离。\r\n     */\r\n    constructor(a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0, nums: number = 0) {\r\n        if (Matrix._createFun != null) {\r\n            return Matrix._createFun(a, b, c, d, tx, ty, nums);\r\n        }\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        this._checkTransform();\r\n    }\r\n\r\n    /**\r\n     * 将本矩阵设置为单位矩阵。\r\n     * @return 返回当前矩形。\r\n     */\r\n    identity(): Matrix {\r\n        this.a = this.d = 1;\r\n        this.b = this.tx = this.ty = this.c = 0;\r\n        this._bTransform = false;\r\n        return this;\r\n    }\r\n\r\n    /**@internal */\r\n    _checkTransform(): boolean {\r\n        return this._bTransform = (this.a !== 1 || this.b !== 0 || this.c !== 0 || this.d !== 1);\r\n    }\r\n\r\n    /**\r\n     * 设置沿 x 、y 轴平移每个点的距离。\r\n     * @param\tx 沿 x 轴平移每个点的距离。\r\n     * @param\ty 沿 y 轴平移每个点的距离。\r\n     * @return\t返回对象本身\r\n     */\r\n    setTranslate(x: number, y: number): Matrix {\r\n        this.tx = x;\r\n        this.ty = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 沿 x 和 y 轴平移矩阵，平移的变化量由 x 和 y 参数指定。\r\n     * @param\tx 沿 x 轴向右移动的量（以像素为单位）。\r\n     * @param\ty 沿 y 轴向下移动的量（以像素为单位）。\r\n     * @return 返回此矩形对象。\r\n     */\r\n    translate(x: number, y: number): Matrix {\r\n        this.tx += x;\r\n        this.ty += y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对矩阵应用缩放转换。\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    scale(x: number, y: number): Matrix {\r\n        this.a *= x;\r\n        this.d *= y;\r\n        this.c *= x;\r\n        this.b *= y;\r\n        this.tx *= x;\r\n        this.ty *= y;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对 Matrix 对象应用旋转转换。\r\n     * @param\tangle 以弧度为单位的旋转角度。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    rotate(angle: number): Matrix {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var a1: number = this.a;\r\n        var c1: number = this.c;\r\n        var tx1: number = this.tx;\r\n\r\n        this.a = a1 * cos - this.b * sin;\r\n        this.b = a1 * sin + this.b * cos;\r\n        this.c = c1 * cos - this.d * sin;\r\n        this.d = c1 * sin + this.d * cos;\r\n        this.tx = tx1 * cos - this.ty * sin;\r\n        this.ty = tx1 * sin + this.ty * cos;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对 Matrix 对象应用倾斜转换。\r\n     * @param\tx 沿着 X 轴的 2D 倾斜弧度。\r\n     * @param\ty 沿着 Y 轴的 2D 倾斜弧度。\r\n     * @return 当前 Matrix 对象。\r\n     */\r\n    skew(x: number, y: number): Matrix {\r\n        var tanX: number = Math.tan(x);\r\n        var tanY: number = Math.tan(y);\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        this.a += tanY * this.c;\r\n        this.b += tanY * this.d;\r\n        this.c += tanX * a1;\r\n        this.d += tanX * b1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对指定的点应用当前矩阵的逆转化并返回此点。\r\n     * @param\tout 待转化的点 Point 对象。\r\n     * @return\t返回out\r\n     */\r\n    invertTransformPoint(out: Point): Point {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n\r\n        var a2: number = d1 / n;\r\n        var b2: number = -b1 / n;\r\n        var c2: number = -c1 / n;\r\n        var d2: number = a1 / n;\r\n        var tx2: number = (c1 * this.ty - d1 * tx1) / n;\r\n        var ty2: number = -(a1 * this.ty - b1 * tx1) / n;\r\n        return out.setTo(a2 * out.x + c2 * out.y + tx2, b2 * out.x + d2 * out.y + ty2);\r\n    }\r\n\r\n    /**\r\n     * 将 Matrix 对象表示的几何转换应用于指定点。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @return\t返回out\r\n     */\r\n    transformPoint(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y + this.tx, this.b * out.x + this.d * out.y + this.ty);\r\n    }\r\n\r\n    /**\r\n     * 将 Matrix 对象表示的几何转换应用于指定点，忽略tx、ty。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @return\t返回out\r\n     */\r\n    transformPointN(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y /*+ tx*/, this.b * out.x + this.d * out.y /*+ ty*/);\r\n    }\r\n\r\n    /**\r\n     * 获取 X 轴缩放值。\r\n     * @return  X 轴缩放值。\r\n     */\r\n    getScaleX(): number {\r\n        return this.b === 0 ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);\r\n    }\r\n\r\n    /**\r\n     * 获取 Y 轴缩放值。\r\n     * @return Y 轴缩放值。\r\n     */\r\n    getScaleY(): number {\r\n        return this.c === 0 ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);\r\n    }\r\n\r\n    /**\r\n     * 执行原始矩阵的逆转换。\r\n     * @return 当前矩阵对象。\r\n     */\r\n    invert(): Matrix {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n        this.a = d1 / n;\r\n        this.b = -b1 / n;\r\n        this.c = -c1 / n;\r\n        this.d = a1 / n;\r\n        this.tx = (c1 * this.ty - d1 * tx1) / n;\r\n        this.ty = -(a1 * this.ty - b1 * tx1) / n;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *  将 Matrix 的成员设置为指定值。\r\n     * @param\ta 缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param\tb 旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param\tc 旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param\td 缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param\ttx 沿 x 轴平移每个点的距离。\r\n     * @param\tty 沿 y 轴平移每个点的距离。\r\n     * @return 当前矩阵对象。\r\n     */\r\n    setTo(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix {\r\n        this.a = a, this.b = b, this.c = c, this.d = d, this.tx = tx, this.ty = ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将指定矩阵与当前矩阵连接，从而将这两个矩阵的几何效果有效地结合在一起。\r\n     * @param\tmatrix 要连接到源矩阵的矩阵。\r\n     * @return\t当前矩阵。\r\n     */\r\n    concat(matrix: Matrix): Matrix {\r\n        var a: number = this.a;\r\n        var c: number = this.c;\r\n        var tx: number = this.tx;\r\n        this.a = a * matrix.a + this.b * matrix.c;\r\n        this.b = a * matrix.b + this.b * matrix.d;\r\n        this.c = c * matrix.a + this.d * matrix.c;\r\n        this.d = c * matrix.b + this.d * matrix.d;\r\n        this.tx = tx * matrix.a + this.ty * matrix.c + matrix.tx;\r\n        this.ty = tx * matrix.b + this.ty * matrix.d + matrix.ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将指定的两个矩阵相乘后的结果赋值给指定的输出对象。\r\n     * @param\tm1 矩阵一。\r\n     * @param\tm2 矩阵二。\r\n     * @param\tout 输出对象。\r\n     * @return\t结果输出对象 out。\r\n     */\r\n    static mul(m1: Matrix, m2: Matrix, out: Matrix): Matrix {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out.a = aa * ba + ab * bc;\r\n            out.b = aa * bb + ab * bd;\r\n            out.c = ac * ba + ad * bc;\r\n            out.d = ac * bb + ad * bd;\r\n            out.tx = ba * atx + bc * aty + btx;\r\n            out.ty = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out.a = aa * ba;\r\n            out.b = ab * bd;\r\n            out.c = ac * ba;\r\n            out.d = ad * bd;\r\n            out.tx = ba * atx + btx;\r\n            out.ty = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 将指定的两个矩阵相乘，结果赋值给指定的输出数组，长度为16。\r\n     * @param m1\t矩阵一。\r\n     * @param m2\t矩阵二。\r\n     * @param out\t输出对象Array。\r\n     * @return 结果输出对象 out。\r\n     */\r\n    static mul16(m1: Matrix, m2: Matrix, out: any[]): any[] {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out[0] = aa * ba + ab * bc;\r\n            out[1] = aa * bb + ab * bd;\r\n            out[4] = ac * ba + ad * bc;\r\n            out[5] = ac * bb + ad * bd;\r\n            out[12] = ba * atx + bc * aty + btx;\r\n            out[13] = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out[0] = aa * ba;\r\n            out[1] = ab * bd;\r\n            out[4] = ac * ba;\r\n            out[5] = ad * bd;\r\n            out[12] = ba * atx + btx;\r\n            out[13] = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对矩阵应用缩放转换。反向相乘\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     */\r\n    scaleEx(x: number, y: number): void {\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = x * ba;\r\n            this.b = x * bb;\r\n            this.c = y * bc;\r\n            this.d = y * bd;\r\n        } else {\r\n            this.a = x * ba;\r\n            this.b = 0 * bd;\r\n            this.c = 0 * ba;\r\n            this.d = y * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对 Matrix 对象应用旋转转换。反向相乘\r\n     * @param\tangle 以弧度为单位的旋转角度。\r\n     */\r\n    rotateEx(angle: number): void {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = cos * ba + sin * bc;\r\n            this.b = cos * bb + sin * bd;\r\n            this.c = -sin * ba + cos * bc;\r\n            this.d = -sin * bb + cos * bd;\r\n        } else {\r\n            this.a = cos * ba;\r\n            this.b = sin * bd;\r\n            this.c = -sin * ba;\r\n            this.d = cos * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * 返回此 Matrix 对象的副本。\r\n     * @return 与原始实例具有完全相同的属性的新 Matrix 实例。\r\n     */\r\n    clone(): Matrix {\r\n        var dec: Matrix = Matrix.create();\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * 将当前 Matrix 对象中的所有矩阵数据复制到指定的 Matrix 对象中。\r\n     * @param\tdec 要复制当前矩阵数据的 Matrix 对象。\r\n     * @return\t已复制当前矩阵数据的 Matrix 对象。\r\n     */\r\n    copyTo(dec: Matrix): Matrix {\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * 返回列出该 Matrix 对象属性的文本值。\r\n     * @return 一个字符串，它包含 Matrix 对象的属性值：a、b、c、d、tx 和 ty。\r\n     */\r\n    toString(): string {\r\n        return this.a + \",\" + this.b + \",\" + this.c + \",\" + this.d + \",\" + this.tx + \",\" + this.ty;\r\n    }\r\n\r\n    /**\r\n     * 销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.recover();\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池，方便复用\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Matrix\", this.identity());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建一个 <code>Matrix</code> 对象。\r\n     * @return <code>Matrix</code> 对象。\r\n     */\r\n    static create(): Matrix {\r\n        return Pool.getItemByClass(\"Matrix\", Matrix);\r\n    }\r\n}\r\n\r\n","import { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * <code>Point</code> 对象表示二维坐标系统中的某个位置，其中 x 表示水平轴，y 表示垂直轴。\r\n */\r\nexport class Point {\r\n\r\n    /**临时使用的公用对象。*/\r\n    static TEMP: Point = new Point();\r\n    /**@private 全局空的point对象(x=0，y=0)，不允许修改此对象内容*/\r\n    static EMPTY: Point = new Point();\r\n\r\n    /**该点的水平坐标。*/\r\n    x: number;\r\n    /**该点的垂直坐标。*/\r\n    y: number;\r\n\r\n    /**\r\n     * 根据指定坐标，创建一个新的 <code>Point</code> 对象。\r\n     * @param x\t（可选）水平坐标。\r\n     * @param y\t（可选）垂直坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * 从对象池创建\r\n     */\r\n    static create(): Point {\r\n        return Pool.getItemByClass(\"Point\", Point);\r\n    }\r\n\r\n    /**\r\n     * 将 <code>Point</code> 的成员设置为指定值。\r\n     * @param\tx 水平坐标。\r\n     * @param\ty 垂直坐标。\r\n     * @return 当前 Point 对象。\r\n     */\r\n    setTo(x: number, y: number): Point {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): Point {\r\n        this.x = this.y = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池，方便复用\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Point\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 计算当前点和目标点(x，y)的距离。\r\n     * @param\tx 水平坐标。\r\n     * @param\ty 垂直坐标。\r\n     * @return\t返回当前点和目标点之间的距离。\r\n     */\r\n    distance(x: number, y: number): number {\r\n        return Math.sqrt((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));\r\n    }\r\n\r\n    /**返回包含 x 和 y 坐标的值的字符串。*/\r\n    toString(): string {\r\n        return this.x + \",\" + this.y;\r\n    }\r\n\r\n    /**\r\n     * 标准化向量。\r\n     */\r\n    normalize(): void {\r\n        var d: number = Math.sqrt(this.x * this.x + this.y * this.y);\r\n        if (d > 0) {\r\n            var id: number = 1.0 / d;\r\n            this.x *= id;\r\n            this.y *= id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * copy point坐标\r\n     * @param\tpoint 需要被copy的point\r\n     */\r\n    copy(point: Point): Point {\r\n        return this.setTo(point.x, point.y);\r\n    }\r\n}\r\n\r\n","import { Pool } from \"../utils/Pool\";\r\nimport { Point } from \"./Point\";\r\n\r\n/**\r\n * <p><code>Rectangle</code> 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。</p>\r\n * <p>Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。</p>\r\n */\r\nexport class Rectangle {\r\n\r\n    /**@private 全局空的矩形区域x=0,y=0,width=0,height=0，不允许修改此对象内容*/\r\n    static EMPTY: Rectangle = new Rectangle();\r\n    /**全局临时的矩形区域，此对象用于全局复用，以减少对象创建*/\r\n    static TEMP: Rectangle = new Rectangle();\r\n\r\n    /** @private */\r\n    private static _temB: number[] = [];\r\n    /** @private */\r\n    private static _temA: number[] = [];\r\n\r\n    /** 矩形左上角的 X 轴坐标。*/\r\n    x: number;\r\n    /** 矩形左上角的 Y 轴坐标。*/\r\n    y: number;\r\n    /** 矩形的宽度。*/\r\n    width: number;\r\n    /** 矩形的高度。*/\r\n    height: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Rectangle</code> 对象。\r\n     * @param\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth 矩形的宽度。\r\n     * @param\theight 矩形的高度。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    /** 此矩形右侧的 X 轴坐标。 x 和 width 属性的和。*/\r\n    get right(): number {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    /** 此矩形底端的 Y 轴坐标。y 和 height 属性的和。*/\r\n    get bottom(): number {\r\n        return this.y + this.height;\r\n    }\r\n\r\n    /**\r\n     * 将 Rectangle 的属性设置为指定值。\r\n     * @param\tx\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty\tx 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth\t矩形的宽度。\r\n     * @param\theight\t矩形的高。\r\n     * @return\t返回属性值修改后的矩形对象本身。\r\n     */\r\n    setTo(x: number, y: number, width: number, height: number): Rectangle {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): Rectangle {\r\n        this.x = this.y = this.width = this.height = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this == Rectangle.TEMP || this == Rectangle.EMPTY) {\r\n            //console.log(\"recover Temp or Empty:\", this);\r\n            return;\r\n        }\r\n        Pool.recover(\"Rectangle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): Rectangle {\r\n        return Pool.getItemByClass(\"Rectangle\", Rectangle);\r\n    }\r\n\r\n    /**\r\n     * 复制 source 对象的属性值到此矩形对象中。\r\n     * @param\tsourceRect\t源 Rectangle 对象。\r\n     * @return\t返回属性值修改后的矩形对象本身。\r\n     */\r\n    copyFrom(source: Rectangle): Rectangle {\r\n        this.x = source.x;\r\n        this.y = source.y;\r\n        this.width = source.width;\r\n        this.height = source.height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。\r\n     * @param x\t点的 X 轴坐标值（水平位置）。\r\n     * @param y\t点的 Y 轴坐标值（垂直位置）。\r\n     * @return\t如果 Rectangle 对象包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return false;\r\n\r\n        if (x >= this.x && x < this.right) {\r\n            if (y >= this.y && y < this.bottom) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 确定在 rect 参数中指定的对象是否与此 Rectangle 对象相交。此方法检查指定的 Rectangle 对象的 x、y、width 和 height 属性，以查看它是否与此 Rectangle 对象相交。\r\n     * @param\trect Rectangle 对象。\r\n     * @return\t如果传入的矩形对象与此对象相交，则返回 true 值，否则返回 false。\r\n     */\r\n    intersects(rect: Rectangle): boolean {\r\n        return !(rect.x > (this.x + this.width) || (rect.x + rect.width) < this.x || rect.y > (this.y + this.height) || (rect.y + rect.height) < this.y);\r\n    }\r\n\r\n    /**\r\n     * 如果在 rect 参数中指定的 Rectangle 对象与此 Rectangle 对象相交，则返回交集区域作为 Rectangle 对象。如果矩形不相交，则此方法返回null。\r\n     * @param rect\t待比较的矩形区域。\r\n     * @param out\t（可选）待输出的矩形区域。如果为空则创建一个新的。建议：尽量复用对象，减少对象创建消耗。\r\n     * @return\t返回相交的矩形区域对象。\r\n     */\r\n    intersection(rect: Rectangle, out: Rectangle | null = null): Rectangle | null {\r\n        if (!this.intersects(rect)) return null;\r\n        out || (out = new Rectangle());\r\n        out.x = Math.max(this.x, rect.x);\r\n        out.y = Math.max(this.y, rect.y);\r\n        out.width = Math.min(this.right, rect.right) - out.x;\r\n        out.height = Math.min(this.bottom, rect.bottom) - out.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * <p>矩形联合，通过填充两个矩形之间的水平和垂直空间，将这两个矩形组合在一起以创建一个新的 Rectangle 对象。</p>\r\n     * <p>注意：union() 方法忽略高度或宽度值为 0 的矩形，如：var rect2:Rectangle = new Rectangle(300,300,50,0);</p>\r\n     * @param\t要添加到此 Rectangle 对象的 Rectangle 对象。\r\n     * @param\tout\t用于存储输出结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。Rectangle.TEMP对象用于对象复用。\r\n     * @return\t充当两个矩形的联合的新 Rectangle 对象。\r\n     */\r\n    union(source: Rectangle, out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        this.clone(out);\r\n        if (source.width <= 0 || source.height <= 0) return out;\r\n        out.addPoint(source.x, source.y);\r\n        out.addPoint(source.right, source.bottom);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 返回一个 Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     * @param out\t（可选）用于存储结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。。Rectangle.TEMP对象用于对象复用。\r\n     * @return Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     */\r\n    clone(out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        out.x = this.x;\r\n        out.y = this.y;\r\n        out.width = this.width;\r\n        out.height = this.height;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 当前 Rectangle 对象的水平位置 x 和垂直位置 y 以及高度 width 和宽度 height 以逗号连接成的字符串。\r\n     */\r\n    toString(): string {\r\n        return this.x + \",\" + this.y + \",\" + this.width + \",\" + this.height;\r\n    }\r\n\r\n    /**\r\n     * 检测传入的 Rectangle 对象的属性是否与当前 Rectangle 对象的属性 x、y、width、height 属性值都相等。\r\n     * @param\trect 待比较的 Rectangle 对象。\r\n     * @return\t如果判断的属性都相等，则返回 true ,否则返回 false。\r\n     */\r\n    equals(rect: Rectangle): boolean {\r\n        if (!rect || rect.x !== this.x || rect.y !== this.y || rect.width !== this.width || rect.height !== this.height) return false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>为当前矩形对象加一个点，以使当前矩形扩展为包含当前矩形和此点的最小矩形。</p>\r\n     * <p>此方法会修改本对象。</p>\r\n     * @param x\t点的 X 坐标。\r\n     * @param y\t点的 Y 坐标。\r\n     * @return 返回此 Rectangle 对象。\r\n     */\r\n    addPoint(x: number, y: number): Rectangle {\r\n        this.x > x && (this.width += this.x - x, this.x = x);//左边界比较\r\n        this.y > y && (this.height += this.y - y, this.y = y);//上边界比较\r\n        if (this.width < x - this.x) this.width = x - this.x;//右边界比较\r\n        if (this.height < y - this.y) this.height = y - this.y;//下边界比较\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回代表当前矩形的顶点数据。\r\n     * @return 顶点数据。\r\n     */\r\n    _getBoundPoints() {\r\n        var rst = Rectangle._temB;\r\n        rst.length = 0;\r\n        if (this.width == 0 || this.height == 0) return rst;\r\n        rst.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回矩形的顶点数据。\r\n     */\r\n    static _getBoundPointS(x: number, y: number, width: number, height: number, sp?: { width: number, height?: number }): number[] {\r\n        var rst: any[] = Rectangle._temA;\r\n        rst.length = 0;\r\n        if (width == 0 || height == 0) return rst;\r\n        if (sp) {\r\n            x *= sp.width;\r\n            y *= sp.height;\r\n            width *= sp.width;\r\n            height *= sp.height;\r\n        }\r\n        rst.push(x, y, x + width, y, x, y + height, x + width, y + height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回包含所有点的最小矩形。\r\n     * @param pointList 点列表。\r\n     * @return 包含所有点的最小矩形矩形对象。\r\n     */\r\n    static _getWrapRec(pointList: ArrayLike<number>, rst: Rectangle | null = null): Rectangle {\r\n\r\n        if (!pointList || pointList.length < 1) return rst ? rst.setTo(0, 0, 0, 0) : Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        rst = rst ? rst : Rectangle.create();\r\n        var i: number, len: number = pointList.length, minX: number, maxX: number, minY: number, maxY: number, tPoint: Point = Point.TEMP;\r\n        minX = minY = 99999;\r\n        maxX = maxY = -minX;\r\n        for (i = 0; i < len; i += 2) {\r\n            tPoint.x = pointList[i];\r\n            tPoint.y = pointList[i + 1];\r\n            minX = minX < tPoint.x ? minX : tPoint.x;\r\n            minY = minY < tPoint.y ? minY : tPoint.y;\r\n            maxX = maxX > tPoint.x ? maxX : tPoint.x;\r\n            maxY = maxY > tPoint.y ? maxY : tPoint.y;\r\n        }\r\n        return rst.setTo(minX, minY, maxX - minX, maxY - minY);\r\n    }\r\n\r\n    /**\r\n     * 确定此 Rectangle 对象是否为空。\r\n     * @return 如果 Rectangle 对象的宽度或高度小于等于 0，则返回 true 值，否则返回 false。\r\n     */\r\n    isEmpty(): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return true;\r\n        return false;\r\n    }\r\n}","export enum HDREncodeFormat{\r\n    NONE,\r\n    RGBM,\r\n    RGBD\r\n   \r\n}","/**\r\n * 纹理格式\r\n */\r\nexport enum TextureFormat {\r\n    /**纹理格式_R8G8B8。*/\r\n    R8G8B8 = 0,\r\n    /**纹理格式_R8G8B8A8。*/\r\n    R8G8B8A8 = 1,\r\n    /**RGB格式纹理,R通道5位，G通道6位，B通道5位。*/\r\n    R5G6B5 = 16,\r\n    /**纹理格式_ALPHA8。*/\r\n    Alpha8 = 2,\r\n    /**纹理格式_DXT1。*/\r\n    DXT1 = 3,\r\n    /**纹理格式_DXT3 */\r\n    DXT3 = 29,\r\n    /**纹理格式_DXT5。*/\r\n    DXT5 = 4,\r\n    /**纹理格式_ETC2RGB。*/\r\n    ETC1RGB = 5,\r\n    ///**纹理格式_ETC2RGB。*/\r\n    ETC2RGB = 6,\r\n    ///**纹理格式_ETC2RGBA。*/\r\n    ETC2RGBA = 7,\r\n    /**纹理格式_ETC2RGB_PUNCHTHROUGHALPHA。*/\r\n    //ETC2RGB_PUNCHTHROUGHALPHA:int = 8;\r\n    /**纹理格式_PVRTCRGB_2BPPV。*/\r\n    ETC2SRGB_Alpha8 = 8,\r\n    /** 纹理格式_ETC2SRGB*/\r\n    ETC2SRGB = 28,\r\n    /** 纹理格式 RGB8_PUNCHTHROUGH_ALPHA1_ETC2 */\r\n    ETC2RGB_Alpha1 = 32,\r\n    /** 纹理格式 SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 */\r\n    ETC2SRGB_Alpha1 = 33,\r\n    /** 纹理格式_PVRTCRGB_2BPPV*/\r\n    PVRTCRGB_2BPPV = 9,\r\n    /**纹理格式_PVRTCRGBA_2BPPV。*/\r\n    PVRTCRGBA_2BPPV = 10,\r\n    /**纹理格式_PVRTCRGB_4BPPV。*/\r\n    PVRTCRGB_4BPPV = 11,\r\n    /**纹理格式_PVRTCRGBA_4BPPV。*/\r\n    PVRTCRGBA_4BPPV = 12,\r\n    /**RGBA格式纹理,每个通道32位浮点数。*/\r\n    R32G32B32A32 = 15,\r\n    /**R32G32B32 */\r\n    R32G32B32 = 30,\r\n    /**RGBA格式纹理，每个通道16位浮点数。 */\r\n    R16G16B16A16 = 17,\r\n    /**R16 G16 B6 */\r\n    R16G16B16 = 31,\r\n    /**ASTC 4x4*/\r\n    ASTC4x4 = 18,\r\n    /**ASTC sRGB 4x4 */\r\n    ASTC4x4SRGB = 23,\r\n    /**ASTC 6x6*/\r\n    ASTC6x6 = 19,\r\n    /**ASTC  6x6*/\r\n    ASTC6x6SRGB = 24,\r\n    /**ASTC 8x8 */\r\n    ASTC8x8 = 20,\r\n    /**ASTC srgb 8x8 */\r\n    ASTC8x8SRGB = 25,\r\n    /**ASTC 10x10 */\r\n    ASTC10x10 = 21,\r\n    /**ASTC srgb 10x10 */\r\n    ASTC10x10SRGB = 26,\r\n    /**ASTC 12x12 */\r\n    ASTC12x12 = 22,\r\n    /**ASTC srgb 12x12 */\r\n    ASTC12x12SRGB = 27,\r\n    /**ktx图片 */\r\n    KTXTEXTURE = -1,\r\n    /**pvr图片 */\r\n    PVRTEXTURE = -2\r\n}","import { IRender2DContext } from \"../RenderEngine/RenderInterface/IRender2DContext\";\r\nimport { IRenderDrawContext } from \"../RenderEngine/RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\r\nimport { IRenderEngineFactory } from \"../RenderEngine/RenderInterface/IRenderEngineFactory\";\r\nimport { ITextureContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\n\r\n/**\r\n * 封装GL命令\r\n */\r\nexport class LayaGL {\r\n    static textureContext: ITextureContext;\r\n    static renderEngine: IRenderEngine;\r\n    static render2DContext: IRender2DContext;\r\n    static renderDrawContext: IRenderDrawContext;\r\n    static renderOBJCreate: IRenderEngineFactory;\r\n}","const ITEM_LAYOUT = 4; //callback,target,args,flag(0-deleted,1-normal,2-once) \r\n\r\nexport class Delegate {\r\n    private _flag: number;\r\n    private _items: Array<any>;\r\n\r\n    public constructor() {\r\n        this._flag = 0;\r\n        this._items = [];\r\n    }\r\n\r\n    public add(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 1;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 1);\r\n    }\r\n\r\n    public once(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 2;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 2);\r\n    }\r\n\r\n    public remove(callback: Function, target?: any): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            if (this._flag != 0) {\r\n                arr[index + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n            else\r\n                arr.splice(index, ITEM_LAYOUT);\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if (index % ITEM_LAYOUT == 3) arr[index] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            arr.length = 0;\r\n        }\r\n    }\r\n\r\n    public clearForTarget(target: any): void {\r\n        if (!target)\r\n            return;\r\n\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if ((index % ITEM_LAYOUT == 1) && arr[index] == target) arr[index + 2] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            let i: number = arr.length - ITEM_LAYOUT;\r\n            while (i >= 0) {\r\n                if (arr[i + 1] == target)\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                i -= ITEM_LAYOUT;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get count(): number {\r\n        return this._items.length / ITEM_LAYOUT;\r\n    }\r\n\r\n    public invoke(...args: any[]): void {\r\n        if (this._flag != 0)\r\n            return;\r\n\r\n        this._flag = 1;\r\n        let arr = this._items;\r\n        let cnt = arr.length;\r\n        for (let i = 0; i < cnt; i += ITEM_LAYOUT) {\r\n            if (0 == arr[i + 3]) continue;\r\n            let fixedArgs = arr[i + 2];\r\n            try {\r\n                if (fixedArgs != null)\r\n                    arr[i].call(arr[i + 1], ...fixedArgs, ...args);\r\n                else\r\n                    arr[i].call(arr[i + 1], ...args);\r\n            }\r\n            catch (err: any) {\r\n                console.error(err);\r\n            }\r\n            if (arr[i + 3] == 2) {\r\n                arr[i + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n        }\r\n\r\n        if (this._flag == 2) {\r\n            let cnt = arr.length;\r\n            let i = 0;\r\n            while (i < cnt) {\r\n                if (arr[i + 3] == 0) {\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                    cnt -= ITEM_LAYOUT;\r\n                    continue;\r\n                }\r\n                else\r\n                    i += ITEM_LAYOUT;\r\n            }\r\n        }\r\n        this._flag = 0;\r\n    }\r\n}","import { Point } from \"../maths/Point\"\r\n\r\nexport interface ITouchInfo {\r\n    touchId: number;\r\n    readonly pos: Point;\r\n}\r\n\r\n/**\r\n * <code>Event</code> 是事件类型的集合。一般当发生事件时，<code>Event</code> 对象将作为参数传递给事件侦听器。\r\n */\r\nexport class Event {\r\n\r\n    /** 一个空的 Event 对象。用于事件派发中转使用。*/\r\n    static readonly EMPTY: Readonly<Event> = new Event();\r\n\r\n    /** 定义 mousedown 事件对象的 type 属性值。*/\r\n    static MOUSE_DOWN = \"mousedown\";\r\n    /** 定义 mouseup 事件对象的 type 属性值。*/\r\n    static MOUSE_UP = \"mouseup\";\r\n    /** 定义 rightmousedown 事件对象的 type 属性值。*/\r\n    static RIGHT_MOUSE_DOWN: string = \"rightmousedown\";\r\n    /** 定义 rightmouseup 事件对象的 type 属性值。*/\r\n    static RIGHT_MOUSE_UP: string = \"rightmouseup\";\r\n    /** 定义 click 事件对象的 type 属性值。*/\r\n    static CLICK = \"click\";\r\n    /** 定义 rightclick 事件对象的 type 属性值。*/\r\n    static RIGHT_CLICK = \"rightclick\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_MOVE = \"mousemove\";\r\n    /** 定义 mouseover 事件对象的 type 属性值。*/\r\n    static MOUSE_OVER = \"mouseover\";\r\n    /** 定义 mouseout 事件对象的 type 属性值。*/\r\n    static MOUSE_OUT = \"mouseout\";\r\n    /** 定义 mousewheel 事件对象的 type 属性值。*/\r\n    static MOUSE_WHEEL = \"mousewheel\";\r\n    /** 定义 mouseover 事件对象的 type 属性值。*/\r\n    static ROLL_OVER = \"mouseover\";\r\n    /** 定义 mouseout 事件对象的 type 属性值。*/\r\n    static ROLL_OUT = \"mouseout\";\r\n    /** 定义 doubleclick 事件对象的 type 属性值。*/\r\n    static DOUBLE_CLICK = \"doubleclick\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_DRAG = \"mousedrag\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_DRAG_END = \"mousedragend\";\r\n\r\n    /** 定义 dragstart 事件对象的 type 属性值。*/\r\n    static DRAG_START = \"dragstart\";\r\n    /** 定义 dragmove 事件对象的 type 属性值。*/\r\n    static DRAG_MOVE = \"dragmove\";\r\n    /** 定义 dragend 事件对象的 type 属性值。*/\r\n    static DRAG_END = \"dragend\";\r\n\r\n    /** 定义 keydown 事件对象的 type 属性值。*/\r\n    static KEY_DOWN = \"keydown\";\r\n    /** 定义 keypress 事件对象的 type 属性值。*/\r\n    static KEY_PRESS = \"keypress\";\r\n    /** 定义 keyup 事件对象的 type 属性值。*/\r\n    static KEY_UP = \"keyup\";\r\n\r\n    /** 定义 change 事件对象的 type 属性值。*/\r\n    static CHANGE = \"change\";\r\n    /** 定义 changed 事件对象的 type 属性值。*/\r\n    static CHANGED = \"changed\";\r\n    /** 定义 willResize 事件对象的 type 属性值。*/\r\n    static WILL_RESIZE = \"willResize\";\r\n    /** 定义 resize 事件对象的 type 属性值。*/\r\n    static RESIZE = \"resize\";\r\n\r\n    /** 定义 added 事件对象的 type 属性值。*/\r\n    static ADDED = \"added\";\r\n    /** 定义 removed 事件对象的 type 属性值。*/\r\n    static REMOVED = \"removed\";\r\n    /** 定义 display 事件对象的 type 属性值。*/\r\n    static DISPLAY = \"display\";\r\n    /** 定义 undisplay 事件对象的 type 属性值。*/\r\n    static UNDISPLAY = \"undisplay\";\r\n\r\n    /** 定义 error 事件对象的 type 属性值。*/\r\n    static ERROR = \"error\";\r\n    /** 定义 complete 事件对象的 type 属性值。*/\r\n    static COMPLETE = \"complete\";\r\n    /** 定义 loaded 事件对象的 type 属性值。*/\r\n    static LOADED = \"loaded\";\r\n    /** 定义 loaded 事件对象的 type 属性值。*/\r\n    static READY = \"ready\";\r\n    /** 定义 progress 事件对象的 type 属性值。*/\r\n    static PROGRESS = \"progress\";\r\n    /** 定义 input 事件对象的 type 属性值。*/\r\n    static INPUT = \"input\";\r\n    /** 定义 render 事件对象的 type 属性值。*/\r\n    static RENDER = \"render\";\r\n    /** 定义 open 事件对象的 type 属性值。*/\r\n    static OPEN = \"open\";\r\n    /** 定义 message 事件对象的 type 属性值。*/\r\n    static MESSAGE = \"message\";\r\n    /** 定义 close 事件对象的 type 属性值。*/\r\n    static CLOSE = \"close\";\r\n\r\n    /** 定义 frame 事件对象的 type 属性值。*/\r\n    static FRAME = \"enterframe\";\r\n    /** 定义 enter 事件对象的 type 属性值。*/\r\n    static ENTER = \"enter\";\r\n    /** 定义 select 事件对象的 type 属性值。*/\r\n    static SELECT = \"select\";\r\n    /** 定义 blur 事件对象的 type 属性值。*/\r\n    static BLUR = \"blur\";\r\n    /** 定义 focus 事件对象的 type 属性值。*/\r\n    static FOCUS = \"focus\";\r\n    /** 定义 visibilitychange 事件对象的 type 属性值。*/\r\n    static VISIBILITY_CHANGE = \"visibilitychange\";\r\n    /** 定义 focuschange 事件对象的 type 属性值。*/\r\n    static FOCUS_CHANGE = \"focuschange\";\r\n    /** 定义 played 事件对象的 type 属性值。*/\r\n    static PLAYED = \"played\";\r\n    /** 定义 paused 事件对象的 type 属性值。*/\r\n    static PAUSED = \"paused\";\r\n    /** 定义 stopped 事件对象的 type 属性值。*/\r\n    static STOPPED = \"stopped\";\r\n    /** 定义 start 事件对象的 type 属性值。*/\r\n    static START = \"start\";\r\n    /** 定义 end 事件对象的 type 属性值。*/\r\n    static END = \"end\";\r\n    /** 定义 link 事件对象的 type 属性值。*/\r\n    static LINK = \"link\";\r\n    /** 定义 label 事件对象的 type 属性值。*/\r\n    static LABEL = \"label\";\r\n    /**浏览器全屏更改时触发*/\r\n    static FULL_SCREEN_CHANGE = \"fullscreenchange\";\r\n    /**显卡设备丢失时触发*/\r\n    static DEVICE_LOST = \"devicelost\";\r\n    /**世界矩阵更新时触发。*/\r\n    static TRANSFORM_CHANGED = \"transformchanged\";\r\n    /**3D layer改变时触发。*/\r\n    static LAYERCHANGE = \"layerChange\";\r\n    /**3D Static改变时触发 */\r\n    static staticMask = \"staticMask\";\r\n\r\n    /**物理碰撞开始*/\r\n    static TRIGGER_ENTER = \"triggerenter\";\r\n    /**物理碰撞持续*/\r\n    static TRIGGER_STAY = \"triggerstay\";\r\n    /**物理碰撞结束*/\r\n    static TRIGGER_EXIT = \"triggerexit\";\r\n\r\n    /**物理碰撞开始*/\r\n    static COLLISION_ENTER = \"collisionenter\";\r\n    /**物理碰撞持续*/\r\n    static COLLISION_STAY = \"collisionstay\";\r\n    /**物理碰撞结束*/\r\n    static COLLISION_EXIT = \"collisionexit\";\r\n    /**关节破坏 */\r\n    static JOINT_BREAK = \"jointbreak\";\r\n\r\n    /**@internal */\r\n    static _Add_Script= \"addscript\";\r\n    /**\r\n     * 检测指定事件类型是否是鼠标事件。\r\n     * @param\ttype 事件的类型。\r\n     * @return\t如果是鼠标事件，则值为 true;否则，值为 false。\r\n     */\r\n    static isMouseEvent(type: string): boolean {\r\n        return MOUSE_EVENTS.has(type);\r\n    }\r\n\r\n    /** 事件类型。*/\r\n    type: string;\r\n    /** 事件目标触发对象。*/\r\n    target: any;\r\n    /** 事件当前冒泡对象。*/\r\n    currentTarget: any;\r\n\r\n    /** 分配给触摸点的唯一标识号（作为 int）。*/\r\n    touchId: number = 0;\r\n    /** 点击坐标 */\r\n    readonly touchPos: Point;\r\n    /** 是否双击 */\r\n    isDblClick: boolean;\r\n    /**滚轮滑动增量*/\r\n    delta: number = 0;\r\n    /** \r\n     * 鼠标按键，\r\n     * 0：主按键，通常指鼠标左键\r\n     * 1：辅助按键，通常指鼠标滚轮中键\r\n     * 2：次按键，通常指鼠标右键\r\n     * 3：第四个按钮，通常指浏览器后退按钮\r\n     * 4：第五个按钮，通常指浏览器的前进按钮\r\n     */\r\n    button: number = 0;\r\n\r\n    /** 原生浏览器事件。*/\r\n    nativeEvent: MouseEvent | TouchEvent | WheelEvent | KeyboardEvent;\r\n\r\n    /** @internal */\r\n    _stopped: boolean;\r\n    /** @internal */\r\n    _touches: ReadonlyArray<Readonly<ITouchInfo>>;\r\n\r\n    constructor() {\r\n        this.touchPos = new Point();\r\n    }\r\n\r\n    /**\r\n     * 设置事件数据。\r\n     * @param\ttype 事件类型。\r\n     * @param\tcurrentTarget 事件目标触发对象。\r\n     * @param\ttarget 事件当前冒泡对象。\r\n     * @return 返回当前 Event 对象。\r\n     */\r\n    setTo(type: string, currentTarget: any, target: any): Event {\r\n        this.type = type;\r\n        this.currentTarget = currentTarget;\r\n        this.target = target;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 阻止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 (currentTarget) 中的任何事件侦听器。\r\n     */\r\n    stopPropagation(): void {\r\n        this._stopped = true;\r\n    }\r\n\r\n    /**\r\n     * 触摸点列表。\r\n     */\r\n    get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return this._touches;\r\n    }\r\n\r\n    /**\r\n     * 表示 Alt 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get altKey(): boolean {\r\n        return this.nativeEvent?.altKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Ctrl 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get ctrlKey(): boolean {\r\n        return this.nativeEvent?.ctrlKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get shiftKey(): boolean {\r\n        return this.nativeEvent?.shiftKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get metaKey(): boolean {\r\n        return this.nativeEvent?.metaKey;\r\n    }\r\n\r\n    get key(): string {\r\n        return (<KeyboardEvent>this.nativeEvent).key;\r\n    }\r\n\r\n    get keyCode(): number {\r\n        return (<KeyboardEvent>this.nativeEvent).keyCode;\r\n    }\r\n\r\n    /**\r\n     * 包含按下或释放的键的字符代码值。字符代码值为英文键盘值。\r\n     */\r\n    get charCode(): string {\r\n        return (<KeyboardEvent>this.nativeEvent)?.code;\r\n    }\r\n\r\n    /**\r\n     * 表示键在键盘上的位置。这对于区分在键盘上多次出现的键非常有用。<br>\r\n     * 例如，您可以根据此属性的值来区分左 Shift 键和右 Shift 键：左 Shift 键的值为 KeyLocation.LEFT，右 Shift 键的值为 KeyLocation.RIGHT。另一个示例是区分标准键盘 (KeyLocation.STANDARD) 与数字键盘 (KeyLocation.NUM_PAD) 上按下的数字键。\r\n     */\r\n    get keyLocation(): number {\r\n        if (this.nativeEvent)\r\n            return (<KeyboardEvent>this.nativeEvent).location || (<any>this.nativeEvent).keyLocation;\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 X 轴坐标*/\r\n    get stageX(): number {\r\n        return this.touchPos.x;\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 Y 轴坐标*/\r\n    get stageY(): number {\r\n        return this.touchPos.y;\r\n    }\r\n}\r\n\r\nconst MOUSE_EVENTS = new Set<string>([\r\n    Event.MOUSE_DOWN, Event.MOUSE_UP, Event.MOUSE_MOVE, Event.CLICK, Event.DOUBLE_CLICK,\r\n    Event.RIGHT_CLICK, Event.RIGHT_MOUSE_DOWN, Event.RIGHT_MOUSE_UP,\r\n    Event.MOUSE_OVER, Event.MOUSE_OUT, Event.MOUSE_WHEEL, Event.MOUSE_DRAG, Event.MOUSE_DRAG_END\r\n]);","import { Delegate } from \"../utils/Delegate\";\r\nimport { Event } from \"./Event\";\r\n\r\nconst eventPool: Array<Event> = [];\r\n\r\n/**\r\n * <code>EventDispatcher</code> 类是可调度事件的所有类的基类。\r\n */\r\nexport class EventDispatcher {\r\n    /**@private */\r\n    private _events: Record<string, Delegate>;\r\n\r\n    protected onStartListeningToType(type: string) {\r\n    }\r\n\r\n    /**\r\n     * 检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。\r\n     * @param\ttype 事件的类型。\r\n     * @return 如果指定类型的侦听器已注册，则值为 true；否则，值为 false。\r\n     */\r\n    hasListener(type: string): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        return !!listeners && listeners.count > 0;\r\n    }\r\n\r\n    /**\r\n     * 派发事件。\r\n     * @param type\t事件类型。\r\n     * @param data\t（可选）回调数据。<b>注意：</b>如果是需要传递多个参数 p1,p2,p3,...可以使用数组结构如：[p1,p2,p3,...] ；如果需要回调单个参数 p ，且 p 是一个数组，则需要使用结构如：[p]，其他的单个参数 p ，可以直接传入参数 p。\r\n     * @return 此事件类型是否有侦听者，如果有侦听者则值为 true，否则值为 false。\r\n     */\r\n    event(type: string, data?: any): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        if (!listeners) return false;\r\n        let ret = listeners.count > 0;\r\n\r\n        if (Array.isArray(data))\r\n            listeners.invoke(...data);\r\n        else if (data !== undefined)\r\n            listeners.invoke(data);\r\n        else if (data === Event.EMPTY) {\r\n            let ev = eventPool.length > 0 ? eventPool.pop() : new Event();\r\n            listeners.invoke(ev.setTo(type, this, this));\r\n            ev.target = ev.currentTarget = null;\r\n            eventPool.push(ev);\r\n        }\r\n        else\r\n            listeners.invoke();\r\n\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @param args\t\t（可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    on(type: string, listener: Function): EventDispatcher;\r\n    on(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    on(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.add(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知，此侦听事件响应一次后自动移除。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @param args\t\t（可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    once(type: string, listener: Function): EventDispatcher;\r\n    once(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    once(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.once(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除侦听器。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    off(type: string, listener: Function): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        let listeners = this._events && this._events[type];\r\n        if (listeners)\r\n            listeners.remove(listener, caller);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除指定事件类型的所有侦听器。\r\n     * @param type\t（可选）事件类型，如果值为 null，则移除本对象所有类型的侦听器。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    offAll(type?: string): EventDispatcher {\r\n        if (type == null)\r\n            this._events = null;\r\n        else {\r\n            let listeners = this._events && this._events[type];\r\n            if (listeners)\r\n                listeners.clear();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除caller为target的所有事件监听\r\n     * @param\tcaller caller对象\r\n     */\r\n    offAllCaller(caller: any): EventDispatcher {\r\n        if (caller && this._events) {\r\n            for (let type in this._events)\r\n                this._events[type].clearForTarget(caller);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\nvar _idCounter: number = 0;\r\nvar _disposingCounter: number = 0;\r\nvar _clearRetry: number = 0;\r\n\r\n/**\r\n * <code>Resource</code> 资源存取类。\r\n */\r\nexport class Resource extends EventDispatcher {\r\n    /** @private */\r\n    static _idResourcesMap: any = {};\r\n    /** @private 以字节为单位。*/\r\n    private static _cpuMemory: number = 0;\r\n    /** @private 以字节为单位。*/\r\n    private static _gpuMemory: number = 0;\r\n    /**是否开启debug模式 */\r\n    static DEBUG: boolean = false;\r\n\r\n    /**\r\n     * 当前内存，以字节为单位。\r\n     */\r\n    static get cpuMemory(): number {\r\n        return Resource._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 当前显存，以字节为单位。\r\n     */\r\n    static get gpuMemory(): number {\r\n        return Resource._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addCPUMemory(size: number): void {\r\n        Resource._cpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addGPUMemory(size: number): void {\r\n        Resource._gpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addMemory(cpuSize: number, gpuSize: number): void {\r\n        Resource._cpuMemory += cpuSize;\r\n        Resource._gpuMemory += gpuSize;\r\n    }\r\n\r\n    /**\r\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\r\n     */\r\n    static destroyUnusedResources(): void {\r\n        _disposingCounter = 0; //复位一下，避免异常造成的标志错误\r\n        _clearRetry = 0;\r\n\r\n        if (!ILaya.loader.loading)\r\n            Resource._destroyUnusedResources(true);\r\n        else\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n    }\r\n\r\n    /** @private */\r\n    private static _destroyUnusedResources(force: boolean): void {\r\n        if (!force && ILaya.loader.loading)\r\n            return;\r\n\r\n        ILaya.timer.clear(Resource, Resource._destroyUnusedResources);\r\n        let destroyCnt = 0;\r\n\r\n        for (let k in Resource._idResourcesMap) {\r\n            let res: Resource = Resource._idResourcesMap[k];\r\n            if (!res.lock && res._referenceCount === 0) {\r\n                res.destroy();\r\n                destroyCnt++;\r\n            }\r\n        }\r\n\r\n        if (Resource.DEBUG && destroyCnt > 0)\r\n            console.debug(`destroyUnusedResources(${destroyCnt})`);\r\n\r\n        if (destroyCnt > 0 && _clearRetry < 5) {\r\n            _clearRetry++;\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n        }\r\n    }\r\n\r\n    private _cpuMemory: number = 0;\r\n    private _gpuMemory: number = 0;\r\n    _id: number = 0;\r\n    protected _destroyed?: boolean;\r\n    protected _referenceCount: number = 0;\r\n    protected _obsolute: boolean;\r\n\r\n    /**是否加锁，如果true为不能使用自动释放机制。*/\r\n    lock?: boolean;\r\n    /**名称。 */\r\n    name?: string;\r\n    /**获取资源的URL地址。 */\r\n    url: string;\r\n    /**获取资源的UUID。 */\r\n    uuid: string;\r\n\r\n    /**是否在引用计数为0的时候立马删除他 */\r\n    destroyedImmediately: boolean;\r\n\r\n    /**\r\n     * 获取唯一标识ID,通常用于识别。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 内存大小。\r\n     */\r\n    get cpuMemory(): number {\r\n        return this._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 显存大小。\r\n     */\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 是否已销毁。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n\r\n    /** 如果设置一个已缓存的资源obsolute为true，则\r\n     * 1）getRes仍然可以返回这个资源；\r\n     * 2）下次加载时会忽略这个缓存而去重新加载。。\r\n     */\r\n    get obsolute(): boolean {\r\n        return this._obsolute;\r\n    }\r\n\r\n    set obsolute(value: boolean) {\r\n        this._obsolute = value;\r\n    }\r\n\r\n    /**\r\n     * 获取资源的引用计数。\r\n     */\r\n    get referenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Resource</code> 实例。\r\n     * @param managed 如果设置为true，则在destroyUnusedResources时会检测引用计数并自动释放如果计数为0。默认为true。\r\n     */\r\n    protected constructor(managed?: boolean) {\r\n        super();\r\n\r\n        this._id = ++_idCounter;\r\n        this._destroyed = false;\r\n        this._referenceCount = 0;\r\n        if (managed == null || managed)\r\n            Resource._idResourcesMap[this._id] = this;\r\n        this.lock = false;\r\n        this.destroyedImmediately = true;\r\n    }\r\n\r\n    _setCPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._cpuMemory;\r\n        this._cpuMemory = value;\r\n        Resource._addCPUMemory(offsetValue);\r\n    }\r\n\r\n    _setGPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._gpuMemory;\r\n        this._gpuMemory = value;\r\n        Resource._addGPUMemory(offsetValue);\r\n    }\r\n\r\n    _setCreateURL(url: string, uuid?: string): void {\r\n        this.url = url;\r\n        this.uuid = uuid;\r\n    }\r\n\r\n    /**\r\n     * 返回资源是否从指定url创建\r\n     */\r\n    isCreateFromURL(url: string): boolean {\r\n        return this.uuid && url.length === this.uuid.length + 6 && url.endsWith(this.uuid)\r\n            || this.url === url;\r\n    }\r\n\r\n    _addReference(count: number = 1): void {\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    _removeReference(count: number = 1): void {\r\n        this._referenceCount -= count;\r\n        //如果_removeReference发生在destroy中，可能是在collect或者处理内嵌资源的释放\r\n        if (_disposingCounter > 0 && this._referenceCount <= 0 && !this.lock && this.destroyedImmediately) {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清除引用\r\n     */\r\n    _clearReference(): void {\r\n        this._referenceCount = 0;\r\n    }\r\n\r\n    protected _recoverResource(): void {\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n    }\r\n\r\n    protected _activeResource(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁资源,销毁后资源不能恢复。\r\n     */\r\n    destroy(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._destroyed = true;\r\n        this.lock = false; //解锁资源，强制清理\r\n        _disposingCounter++;\r\n        this._disposeResource();\r\n        _disposingCounter--;\r\n        this.offAll();\r\n        delete Resource._idResourcesMap[this.id];\r\n        if (this.url) {\r\n            if (Resource.DEBUG)\r\n                console.debug(`destroy ${Object.getPrototypeOf(this).constructor.name} ${this.url}`);\r\n            ILaya.loader.clearRes(this.url, this);\r\n        }\r\n    }\r\n}","/**\r\n * 纹理的过滤模式。\r\n */\r\nexport enum FilterMode {\r\n    /**点过滤。*/\r\n    Point = 0,\r\n    /**双线性过滤。*/\r\n    Bilinear = 1,\r\n    /**三线性过滤。*/\r\n    Trilinear = 2,\r\n}","export enum RenderCapable {\r\n    Element_Index_Uint32,//Index Usage 32\r\n    TextureFormat_R32G32B32A32,//Texturefloat32\r\n    TextureFormat_R16G16B16A16,//TextureFloat16\r\n    Texture_anisotropic,//anisotropic function\r\n    RenderTextureFormat_R16G16B16A16,//Rendertexture Float16\r\n    RenderTextureFormat_R32G32B32A32, // rendertexture float32\r\n    RenderTextureFormat_Depth,//depthTexture\r\n    RenderTextureFormat_ShadowMap,//shadowMap Texture\r\n    Vertex_VAO,//VAO\r\n    DrawElement_Instance,//Instance\r\n    Shader_TextureLod,//Texture lod sampler\r\n    COMPRESS_TEXTURE_S3TC,//compress Texture dds\r\n    COMPRESS_TEXTURE_S3TC_SRGB,//Compress Texture dds srgb\r\n    COMPRESS_TEXTURE_PVRTC,//Compress Texture PVR\r\n    COMPRESS_TEXTURE_ETC1,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ETC,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ASTC,//Compress Texture astc\r\n    Texture_SRGB,//Textrue srgb   \r\n    MSAA,//MSAA\r\n    UnifromBufferObject,\r\n    Texture3D,\r\n    Texture_FloatLinearFiltering,\r\n    Texture_HalfFloatLinearFiltering,\r\n}","import { Config } from \"../../Config\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\nimport { TextureCompareMode } from \"../RenderEngine/RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { InternalTexture } from \"../RenderEngine/RenderInterface/InternalTexture\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Resource } from \"./Resource\";\r\n\r\n/**\r\n * <code>BaseTexture</code> 纹理的父类，抽象类，不允许实例。\r\n */\r\nexport class BaseTexture extends Resource {\r\n    /**\r\n     * @internal\r\n     */\r\n    _texture: InternalTexture;\r\n    /**@internal */\r\n    hdrEncodeFormat: HDREncodeFormat;\r\n    /**@private */\r\n    protected _width: number;\r\n    /**@private */\r\n    protected _height: number;\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    protected _dimension: TextureDimension;\r\n\r\n    /**\r\n     * 纹理几何属性\r\n     */\r\n    public get dimension(): TextureDimension {\r\n        return this._dimension;\r\n    }\r\n\r\n    protected _format: TextureFormat;\r\n    /**\r\n     * 纹理格式\r\n     */\r\n    public get format(): TextureFormat {\r\n        return this._format;\r\n    }\r\n\r\n    /**\r\n     * 是否生成mipmap\r\n     */\r\n    public get mipmap(): boolean {\r\n        return this._texture.mipmap;\r\n    }\r\n\r\n    public get mipmapCount(): number {\r\n        return this._texture.mipmapCount;\r\n    }\r\n\r\n    /**\r\n     * 各向异性值\r\n     */\r\n    public get anisoLevel(): number {\r\n        return this._texture.anisoLevel;\r\n    }\r\n    public set anisoLevel(value: number) {\r\n        this._texture.anisoLevel = value;\r\n    }\r\n\r\n    /**\r\n     * 采样过滤模式\r\n     */\r\n    public get filterMode(): FilterMode {\r\n        return this._texture.filterMode;\r\n    }\r\n    public set filterMode(value: FilterMode) {\r\n        this._texture.filterMode = value;\r\n    }\r\n\r\n    /**\r\n     * U方向采样模式\r\n     */\r\n    public get wrapModeU(): WrapMode {\r\n        return this._texture.wrapU;\r\n    }\r\n    public set wrapModeU(value: WrapMode) {\r\n        this._texture.wrapU = value;\r\n    }\r\n\r\n    /**\r\n     * V方向采样模式\r\n     */\r\n    public get wrapModeV(): WrapMode {\r\n        return this._texture.wrapV;\r\n    }\r\n    public set wrapModeV(value: WrapMode) {\r\n        this._texture.wrapV = value;\r\n    }\r\n\r\n    /**\r\n     * W方向采样模式\r\n     */\r\n    public get wrapModeW(): WrapMode {\r\n        return this._texture.wrapW;\r\n    }\r\n    public set wrapModeW(value: WrapMode) {\r\n        this._texture.wrapW = value;\r\n    }\r\n\r\n    /**\r\n     * 贴图压缩格式\r\n     */\r\n    public get compareMode(): TextureCompareMode {\r\n        return this._texture.compareMode;\r\n    }\r\n\r\n    public set compareMode(value: TextureCompareMode) {\r\n        this._texture.compareMode = LayaGL.textureContext.setTextureCompareMode(this._texture, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * gamma矫正值\r\n     * 如果是1.0  texture2D直接采样就是linear \r\n     */\r\n    public get gammaCorrection(): number {\r\n        return this._texture.gammaCorrection;\r\n    }\r\n\r\n    /**\r\n     * mipmap起始等级\r\n     */\r\n    public set baseMipmapLevel(value: number) {\r\n        this._texture.baseMipmapLevel = value;\r\n    }\r\n\r\n    public get baseMipmapLevel(): number {\r\n        return this._texture.baseMipmapLevel;\r\n    }\r\n\r\n    /**\r\n     * 最大Mipmap等级\r\n     */\r\n    public set maxMipmapLevel(value: number) {\r\n        this._texture.maxMipmapLevel = value;\r\n    }\r\n\r\n    public get maxMipmapLevel(): number {\r\n        return this._texture.maxMipmapLevel;\r\n    }\r\n\r\n    /**@internal */\r\n    _gammaSpace: boolean = false;\r\n    // todo\r\n    public get gammaSpace(): boolean {\r\n        // return this._gammaSpace;\r\n        return this._texture.useSRGBLoad || this._texture.gammaCorrection > 1;\r\n    }\r\n\r\n    /**\r\n     * 实例化一个纹理\r\n     * @param width 长\r\n     * @param height 宽\r\n     * @param format 格式\r\n     */\r\n    constructor(width: number, height: number, format: number) {\r\n        super();\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = format;\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n        this.hdrEncodeFormat = HDREncodeFormat.NONE;\r\n    }\r\n\r\n    /**\r\n     * 是否是gpu压缩纹理格式\r\n     * @returns \r\n     */\r\n    gpuCompressFormat(): boolean {\r\n        let format = this._format;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n            case TextureFormat.R8G8B8A8:\r\n            case TextureFormat.R16G16B16:\r\n            case TextureFormat.R16G16B16A16:\r\n            case TextureFormat.R32G32B32:\r\n            case TextureFormat.R32G32B32A32:\r\n            case TextureFormat.R5G6B5:\r\n            case TextureFormat.Alpha8:\r\n                return false;\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n            case TextureFormat.ETC1RGB:\r\n            case TextureFormat.ETC2RGB:\r\n            case TextureFormat.ETC2RGBA:\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n            case TextureFormat.ETC2SRGB:\r\n            case TextureFormat.ETC2RGB_Alpha1:\r\n            case TextureFormat.ETC2SRGB_Alpha1:\r\n            case TextureFormat.PVRTCRGB_2BPPV:\r\n            case TextureFormat.PVRTCRGBA_2BPPV:\r\n            case TextureFormat.PVRTCRGB_4BPPV:\r\n            case TextureFormat.PVRTCRGBA_4BPPV:\r\n            case TextureFormat.ASTC4x4:\r\n            case TextureFormat.ASTC4x4SRGB:\r\n            case TextureFormat.ASTC6x6:\r\n            case TextureFormat.ASTC6x6SRGB:\r\n            case TextureFormat.ASTC8x8:\r\n            case TextureFormat.ASTC8x8SRGB:\r\n            case TextureFormat.ASTC10x10:\r\n            case TextureFormat.ASTC10x10SRGB:\r\n            case TextureFormat.ASTC12x12:\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取纹理格式的字节数\r\n     * @internal\r\n     */\r\n    _getFormatByteCount(): number {\r\n        switch (this._format) {\r\n            case TextureFormat.R8G8B8:\r\n                return 3;\r\n            case TextureFormat.R8G8B8A8:\r\n                return 4;\r\n            case TextureFormat.R5G6B5:\r\n                return 1;\r\n            case TextureFormat.Alpha8:\r\n                return 1;\r\n            case TextureFormat.R16G16B16A16:\r\n                return 2;\r\n            case TextureFormat.R32G32B32A32:\r\n                return 4;\r\n            default:\r\n                throw \"Texture2D: unknown format.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getSource() {\r\n        return this._texture.resource;\r\n    }\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        throw \"defaulte\"\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        this._texture.dispose();\r\n    }\r\n}","import { Matrix } from \"../maths/Matrix\"\r\n\r\n/**\r\n * <p> <code>Byte</code> 类提供用于优化读取、写入以及处理二进制数据的方法和属性。</p>\r\n * <p> <code>Byte</code> 类适用于需要在字节层访问数据的高级开发人员。</p>\r\n */\r\nexport class Byte {\r\n\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。<br/>\r\n     * <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**@private */\r\n    private static _sysEndian: string = null;\r\n    /**@private 是否为小端数据。*/\r\n    protected _xd_: boolean = true;\r\n    /**@private */\r\n    private _allocated_: number = 8;\r\n    /**@private 原始数据。*/\r\n    protected _d_: any\r\n    /**@private DataView*/\r\n    protected _u8d_: any;\r\n    /**@private */\r\n    protected _pos_: number = 0;\r\n    /**@private */\r\n    protected _length: number = 0;\r\n\r\n    /**\r\n     * <p>获取当前主机的字节序。</p>\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * @return 当前系统的字节序。\r\n     */\r\n    static getSystemEndian(): string {\r\n        if (!Byte._sysEndian) {\r\n            var buffer: any = new ArrayBuffer(2);\r\n            new DataView(buffer).setInt16(0, 256, true);\r\n            Byte._sysEndian = (new Int16Array(buffer))[0] === 256 ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n        }\r\n        return Byte._sysEndian;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Byte</code> 类的实例。\r\n     * @param\tdata\t用于指定初始化的元素数目，或者用于初始化的TypedArray对象、ArrayBuffer对象。如果为 null ，则预分配一定的内存空间，当可用空间不足时，优先使用这部分内存，如果还不够，则重新分配所需内存。\r\n     */\r\n    constructor(data: any = null) {\r\n        if (data) {\r\n            this._u8d_ = new Uint8Array(data);\r\n            this._d_ = new DataView(this._u8d_.buffer);\r\n            this._length = this._d_.byteLength;\r\n        } else {\r\n            this._resizeBuffer(this._allocated_);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取此对象的 ArrayBuffer 数据，数据只包含有效数据部分。\r\n     */\r\n    get buffer(): ArrayBuffer {\r\n        var rstBuffer: ArrayBuffer = this._d_.buffer;\r\n        if (rstBuffer.byteLength === this._length) return rstBuffer;\r\n        return rstBuffer.slice(0, this._length);\r\n    }\r\n\r\n    /**\r\n     * <p> <code>Byte</code> 实例的字节序。取值为：<code>BIG_ENDIAN</code> 或 <code>BIG_ENDIAN</code> 。</p>\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     *  <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    get endian(): string {\r\n        return this._xd_ ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._xd_ = (value === Byte.LITTLE_ENDIAN);\r\n    }\r\n\r\n    /**\r\n     * <p> <code>Byte</code> 对象的长度（以字节为单位）。</p>\r\n     * <p>如果将长度设置为大于当前长度的值，则用零填充字节数组的右侧；如果将长度设置为小于当前长度的值，将会截断该字节数组。</p>\r\n     * <p>如果要设置的长度大于当前已分配的内存空间的字节长度，则重新分配内存空间，大小为以下两者较大者：要设置的长度、当前已分配的长度的2倍，并将原有数据拷贝到新的内存空间中；如果要设置的长度小于当前已分配的内存空间的字节长度，也会重新分配内存空间，大小为要设置的长度，并将原有数据从头截断为要设置的长度存入新的内存空间中。</p>\r\n     */\r\n    set length(value: number) {\r\n        if (this._allocated_ < value) this._resizeBuffer(this._allocated_ = Math.floor(Math.max(value, this._allocated_ * 2)));\r\n        else if (this._allocated_ > value) this._resizeBuffer(this._allocated_ = value);\r\n        this._length = value;\r\n    }\r\n\r\n    get length(): number {\r\n        return this._length;\r\n    }\r\n\r\n    /**@private */\r\n    private _resizeBuffer(len: number): void {\r\n        try {\r\n            var newByteView: any = new Uint8Array(len);\r\n            if (this._u8d_ != null) {\r\n                if (this._u8d_.length <= len) newByteView.set(this._u8d_);\r\n                else newByteView.set(this._u8d_.subarray(0, len));\r\n            }\r\n            this._u8d_ = newByteView;\r\n            this._d_ = new DataView(newByteView.buffer);\r\n        } catch (err) {\r\n            throw \"Invalid typed array length:\" + len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>常用于解析固定格式的字节流。</p>\r\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    getString(): string {\r\n        return this.readString();\r\n    }\r\n\r\n    /**\r\n     * <p>常用于解析固定格式的字节流。</p>\r\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    readString(): string {\r\n        return this._rUTF(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。</p>\r\n     * <p><b>注意：</b>返回的 Float32Array 对象，在 JavaScript 环境下，是原生的 HTML5 Float32Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Float32Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    getFloat32Array(start: number, len: number): any {\r\n        return this.readFloat32Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    readFloat32Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Float32Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    getUint8Array(start: number, len: number): Uint8Array {\r\n        return this.readUint8Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readUint8Array(start: number, len: number): Uint8Array {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Uint8Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。</p>\r\n     * <p><b>注意：</b>返回的 Int16Array 对象，在 JavaScript 环境下，是原生的 HTML5 Int16Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Int16Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Int16Array 对象。\r\n     */\r\n    getInt16Array(start: number, len: number): any {\r\n        return this.readInt16Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readInt16Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Int16Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    getFloat32(): number {\r\n        return this.readFloat32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    readFloat32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getFloat32 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    getFloat64(): number {\r\n        return this.readFloat64();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    readFloat64(): number {\r\n        if (this._pos_ + 8 > this._length) throw \"getFloat64 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat64(this._pos_, this._xd_);\r\n        this._pos_ += 8;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @param\tvalue\t单精度（32 位）浮点数。\r\n     */\r\n    writeFloat32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setFloat32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @param\tvalue\t双精度（64 位）浮点数。\r\n     */\r\n    writeFloat64(value: number): void {\r\n        this._ensureWrite(this._pos_ + 8);\r\n        this._d_.setFloat64(this._pos_, value, this._xd_);\r\n        this._pos_ += 8;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @return Int32 值。\r\n     */\r\n    getInt32(): number {\r\n        return this.readInt32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @return Int32 值。\r\n     */\r\n    readInt32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getInt32 error - Out of bounds\";\r\n        var float: number = this._d_.getInt32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return float;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @return Uint32 值。\r\n     */\r\n    getUint32(): number {\r\n        return this.readUint32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @return Uint32 值。\r\n     */\r\n    readUint32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getUint32 error - Out of bounds\";\r\n        var v: number = this._d_.getUint32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Int32 值。\r\n     * @param\tvalue\t需要写入的 Int32 值。\r\n     */\r\n    writeInt32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setInt32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入 Uint32 值。\r\n     * @param\tvalue\t需要写入的 Uint32 值。\r\n     */\r\n    writeUint32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setUint32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @return Int16 值。\r\n     */\r\n    getInt16(): number {\r\n        return this.readInt16();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @return Int16 值。\r\n     */\r\n    readInt16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getInt16 error - Out of bounds\";\r\n        var us: number = this._d_.getInt16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @return Uint16 值。\r\n     */\r\n    getUint16(): number {\r\n        return this.readUint16();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @return Uint16 值。\r\n     */\r\n    readUint16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getUint16 error - Out of bounds\";\r\n        var us: number = this._d_.getUint16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint16 值。\r\n     * @param\tvalue\t需要写入的Uint16 值。\r\n     */\r\n    writeUint16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setUint16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Int16 值。\r\n     * @param\tvalue\t需要写入的 Int16 值。\r\n     */\r\n    writeInt16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setInt16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @return Uint8 值。\r\n     */\r\n    getUint8(): number {\r\n        return this.readUint8();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @return Uint8 值。\r\n     */\r\n    readUint8(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"getUint8 error - Out of bounds\";\r\n        return this._u8d_[this._pos_++];\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint8 值。\r\n     * @param\tvalue\t需要写入的 Uint8 值。\r\n     */\r\n    writeUint8(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setUint8(this._pos_, value);\r\n        this._pos_++;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUInt8(pos: number): number {\r\n        return this._readUInt8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUInt8(pos: number): number {\r\n        return this._d_.getUint8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUint16(pos: number): number {\r\n        return this._readUint16(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUint16(pos: number): number {\r\n        return this._d_.getUint16(pos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\r\n     * @return  Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _getMatrix(): Matrix {\r\n        return this._readMatrix();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\r\n     * @return  Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _readMatrix(): Matrix {\r\n        var rst: Matrix = new Matrix(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取指定长度的 UTF 型字符串。\r\n     * @param\tlen 需要读取的长度。\r\n     * @return 读取的字符串。\r\n     */\r\n    private _rUTF(len: number): string {\r\n        var v: string = \"\", max: number = this._pos_ + len, c: number, c2: number, c3: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        var strs: any[] = [];\r\n        var n: number = 0;\r\n        strs.length = 1000;\r\n        while (this._pos_ < max) {\r\n            c = u[this._pos_++];\r\n            if (c < 0x80) {\r\n                if (c != 0)\r\n                    //v += f(c);\\\r\n                    strs[n++] = f(c);\r\n            } else if (c < 0xE0) {\r\n                //v += f(((c & 0x3F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x3F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else if (c < 0xF0) {\r\n                c2 = u[this._pos_++];\r\n                //v += f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else {\r\n                c2 = u[this._pos_++];\r\n                c3 = u[this._pos_++];\r\n                //v += f(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (u[_pos_++] & 0x7F));\r\n                const _code = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (u[this._pos_++] & 0x7F);\r\n                if (_code >= 0x10000) {\r\n                    const _offset = _code - 0x10000;\r\n                    const _lead = 0xd800 | (_offset >> 10);\r\n                    const _trail = 0xdc00 | (_offset & 0x3ff);\r\n                    strs[n++] = f(_lead);\r\n                    strs[n++] = f(_trail);\r\n                }\r\n                else {\r\n                    strs[n++] = f(_code);\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        strs.length = n;\r\n        return strs.join('');\r\n        //return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取 <code>len</code> 参数指定的长度的字符串。\r\n     * @param\tlen\t要读取的字符串的长度。\r\n     * @return 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    getCustomString(len: number): string {\r\n        return this.readCustomString(len);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取 <code>len</code> 参数指定的长度的字符串。\r\n     * @param\tlen\t要读取的字符串的长度。\r\n     * @return 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    readCustomString(len: number): string {\r\n        var v: string = \"\", ulen: number = 0, c: number, c2: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        while (len > 0) {\r\n            c = u[this._pos_];\r\n            if (c < 0x80) {\r\n                v += f(c);\r\n                this._pos_++;\r\n                len--;\r\n            } else {\r\n                ulen = c - 0x80;\r\n                this._pos_++;\r\n                len -= ulen;\r\n                while (ulen > 0) {\r\n                    c = u[this._pos_++];\r\n                    c2 = u[this._pos_++];\r\n                    v += f((c2 << 8) | c);\r\n                    ulen--;\r\n                }\r\n            }\r\n        }\r\n\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 移动或返回 Byte 对象的读写指针的当前位置（以字节为单位）。下一次调用读取方法时将在此位置开始读取，或者下一次调用写入方法时将在此位置开始写入。\r\n     */\r\n    get pos(): number {\r\n        return this._pos_;\r\n    }\r\n\r\n    set pos(value: number) {\r\n        this._pos_ = value;\r\n        //$MOD byteOffset是只读的，这里进行赋值没有意义。\r\n        //_d_.byteOffset = value;\r\n    }\r\n\r\n    /**\r\n     * 可从字节流的当前位置到末尾读取的数据的字节数。\r\n     */\r\n    get bytesAvailable(): number {\r\n        return this._length - this._pos_;\r\n    }\r\n\r\n    /**\r\n     * 清除字节数组的内容，并将 length 和 pos 属性重置为 0。调用此方法将释放 Byte 实例占用的内存。\r\n     */\r\n    clear(): void {\r\n        this._pos_ = 0;\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取此对象的 ArrayBuffer 引用。\r\n     * @return\r\n     */\r\n    __getBuffer(): ArrayBuffer {\r\n        //this._d_.buffer.byteLength = this.length;\r\n        return this._d_.buffer;\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。类似于 writeUTF() 方法，但 writeUTFBytes() 不使用 16 位长度的字为字符串添加前缀。</p>\r\n     * <p>对应的读取方法为： getUTFBytes 。</p>\r\n     * @param value 要写入的字符串。\r\n     */\r\n    writeUTFBytes(value: string): void {\r\n        // utf8-decode\r\n        value = value + \"\";\r\n        for (var i: number = 0, sz: number = value.length; i < sz; i++) {\r\n            var c: number = value.charCodeAt(i);\r\n\r\n            if (c <= 0x7F) {\r\n                this.writeByte(c);\r\n            } else if (c <= 0x7FF) {\r\n                //优化为直接写入多个字节，而不必重复调用writeByte，免去额外的调用和逻辑开销。\r\n                this._ensureWrite(this._pos_ + 2);\r\n                this._u8d_.set([0xC0 | (c >> 6), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 2;\r\n            } else if (c >= 0xD800 && c <= 0xDBFF) {\r\n                i++;\r\n                const c2 = value.charCodeAt(i);\r\n                if (!Number.isNaN(c2) && c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                    const _p1 = (c & 0x3FF) + 0x40;\r\n                    const _p2 = c2 & 0x3FF;\r\n\r\n                    const _b1 = 0xF0 | ((_p1 >> 8) & 0x3F);\r\n                    const _b2 = 0x80 | ((_p1 >> 2) & 0x3F);\r\n                    const _b3 = 0x80 | ((_p1 & 0x3) << 4) | ((_p2 >> 6) & 0xF);\r\n                    const _b4 = 0x80 | (_p2 & 0x3F);\r\n\r\n                    this._ensureWrite(this._pos_ + 4);\r\n                    this._u8d_.set([_b1, _b2, _b3, _b4], this._pos_);\r\n                    this._pos_ += 4;\r\n                }\r\n            } else if (c <= 0xFFFF) {\r\n                this._ensureWrite(this._pos_ + 3);\r\n                this._u8d_.set([0xE0 | (c >> 12), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 3;\r\n            } else {\r\n                this._ensureWrite(this._pos_ + 4);\r\n                this._u8d_.set([0xF0 | (c >> 18), 0x80 | ((c >> 12) & 0x3F), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 4;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 16 位整数），然后写入表示字符串字符的字节。</p>\r\n     * <p>对应的读取方法为： getUTFString 。</p>\r\n     * @param\tvalue 要写入的字符串值。\r\n     */\r\n    writeUTFString(value: string): void {\r\n        var tPos: number = this.pos;\r\n        this.writeUint16(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos: number = this.pos - tPos - 2;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint16(tPos, dPos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 32 位整数），然后写入表示字符串字符的字节。</p>\r\n     * @param\tvalue 要写入的字符串值。\r\n     */\r\n    writeUTFString32(value: string): void {\r\n        var tPos = this.pos;\r\n        this.writeUint32(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos = this.pos - tPos - 4;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint32(tPos, dPos, this._xd_);\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 读取 UTF-8 字符串。\r\n     * @return 读取的字符串。\r\n     */\r\n    readUTFString(): string {\r\n        //var tPos:int = pos;\r\n        //var len:int = getUint16();\r\n        ////trace(\"readLen:\"+len,\"pos,\",tPos);\r\n        return this.readUTFBytes(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    readUTFString32(): string {\r\n        return this.readUTFBytes(this.getUint32());\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取一个 UTF-8 字符串。假定字符串的前缀是一个无符号的短整型（以此字节表示要读取的长度）。</p>\r\n     * <p>对应的写入方法为： writeUTFString 。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    getUTFString(): string {\r\n        return this.readUTFString();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读字符串，必须是 writeUTFBytes 方法写入的字符串。\r\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @return 读取的字符串。\r\n     */\r\n    readUTFBytes(len: number = -1): string {\r\n        if (len === 0) return \"\";\r\n        var lastBytes: number = this.bytesAvailable;\r\n        if (len > lastBytes) throw \"readUTFBytes error - Out of bounds\";\r\n        len = len > 0 ? len : lastBytes;\r\n        return this._rUTF(len);\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取一个由 length 参数指定的长度的 UTF-8 字节序列，并返回一个字符串。</p>\r\n     * <p>一般读取的是由 writeUTFBytes 方法写入的字符串。</p>\r\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @return 读取的字符串。\r\n     */\r\n    getUTFBytes(len: number = -1): string {\r\n        return this.readUTFBytes(len);\r\n    }\r\n\r\n    /**\r\n     * <p>在字节流中写入一个字节。</p>\r\n     * <p>使用参数的低 8 位。忽略高 24 位。</p>\r\n     * @param\tvalue\r\n     */\r\n    writeByte(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setInt8(this._pos_, value);\r\n        this._pos_ += 1;\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取带符号的字节。</p>\r\n     * <p>返回值的范围是从 -128 到 127。</p>\r\n     * @return 介于 -128 和 127 之间的整数。\r\n     */\r\n    readByte(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"readByte error - Out of bounds\";\r\n        return this._d_.getInt8(this._pos_++);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流中读取带符号的字节。\r\n     */\r\n    getByte(): number {\r\n        return this.readByte();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * <p>保证该字节流的可用长度不小于 <code>lengthToEnsure</code> 参数指定的值。</p>\r\n     * @param\tlengthToEnsure\t指定的长度。\r\n     */\r\n    _ensureWrite(lengthToEnsure: number): void {\r\n        if (this._length < lengthToEnsure) this._length = lengthToEnsure;\r\n        if (this._allocated_ < lengthToEnsure) this.length = lengthToEnsure;\r\n    }\r\n\r\n    /**\r\n     * <p>将指定 arraybuffer 对象中的以 offset 为起始偏移量， length 为长度的字节序列写入字节流。</p>\r\n     * <p>如果省略 length 参数，则使用默认长度 0，该方法将从 offset 开始写入整个缓冲区；如果还省略了 offset 参数，则写入整个缓冲区。</p>\r\n     * <p>如果 offset 或 length 小于0，本函数将抛出异常。</p>\r\n     * @param\tarraybuffer\t需要写入的 Arraybuffer 对象。\r\n     * @param\toffset\t\tArraybuffer 对象的索引的偏移量（以字节为单位）\r\n     * @param\tlength\t\t从 Arraybuffer 对象写入到 Byte 对象的长度（以字节为单位）\r\n     */\r\n    writeArrayBuffer(arraybuffer: any, offset: number = 0, length: number = 0): void {\r\n        if (offset < 0 || length < 0) throw \"writeArrayBuffer error - Out of bounds\";\r\n        if (length == 0) length = arraybuffer.byteLength - offset;\r\n        this._ensureWrite(this._pos_ + length);\r\n        var uint8array: any = new Uint8Array(arraybuffer);\r\n        this._u8d_.set(uint8array.subarray(offset, offset + length), this._pos_);\r\n        this._pos_ += length;\r\n    }\r\n\r\n    /**\r\n     * 读取ArrayBuffer数据\r\n     * @param\tlength\r\n     * @return\r\n     */\r\n    readArrayBuffer(length: number): ArrayBuffer {\r\n        var rst: ArrayBuffer;\r\n        rst = this._u8d_.buffer.slice(this._pos_, this._pos_ + length);\r\n        this._pos_ = this._pos_ + length\r\n        return rst;\r\n    }\r\n}\r\n\r\n","/**\r\n * <code>HalfFloatUtils</code> 类用于创建HalfFloat工具。\r\n */\r\nexport class HalfFloatUtils {\r\n    /**@internal */\r\n    private static _buffer: ArrayBuffer = new ArrayBuffer(4);\r\n    /**@internal */\r\n    private static _floatView: Float32Array = new Float32Array(HalfFloatUtils._buffer);\r\n    /**@internal */\r\n    private static _uint32View: Uint32Array = new Uint32Array(HalfFloatUtils._buffer);\r\n\r\n    /**@internal */\r\n    private static _baseTable: Uint32Array = new Uint32Array(512);\r\n    /**@internal */\r\n    private static _shiftTable: Uint32Array = new Uint32Array(512);\r\n\r\n    /**@internal */\r\n    private static _mantissaTable: Uint32Array = new Uint32Array(2048);\r\n    /**@internal */\r\n    private static _exponentTable: Uint32Array = new Uint32Array(64);\r\n    /**@internal */\r\n    private static _offsetTable: Uint32Array = new Uint32Array(64);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        for (var i: number = 0; i < 256; ++i) {\r\n            var e: number = i - 127;\r\n            // very small number (0, -0)\r\n            if (e < -27) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0000;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // small number (denorm)\r\n            } else if (e < -14) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0400 >> (-e - 14);\r\n                HalfFloatUtils._baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = -e - 1;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = -e - 1;\r\n\r\n                // normal number\r\n            } else if (e <= 15) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = (e + 15) << 10;\r\n                HalfFloatUtils._baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n\r\n                // large number (Infinity, -Infinity)\r\n            } else if (e < 128) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // stay (NaN, Infinity, -Infinity)\r\n            } else {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n            }\r\n        }\r\n\r\n        HalfFloatUtils._mantissaTable[0] = 0;\r\n        for (i = 1; i < 1024; ++i) {\r\n            var m: number = i << 13;    // zero pad mantissa bits\r\n            e = 0;          // zero exponent\r\n\r\n            // normalized\r\n            while ((m & 0x00800000) === 0) {\r\n                e -= 0x00800000;    // decrement exponent\r\n                m <<= 1;\r\n            }\r\n\r\n            m &= ~0x00800000;   // clear leading 1 bit\r\n            e += 0x38800000;    // adjust bias\r\n\r\n            HalfFloatUtils._mantissaTable[i] = m | e;\r\n        }\r\n        for (i = 1024; i < 2048; ++i) {\r\n            HalfFloatUtils._mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\r\n        }\r\n\r\n        HalfFloatUtils._exponentTable[0] = 0;\r\n        for (i = 1; i < 31; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = i << 23;\r\n        }\r\n        HalfFloatUtils._exponentTable[31] = 0x47800000;\r\n        HalfFloatUtils._exponentTable[32] = 0x80000000;\r\n        for (i = 33; i < 63; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = 0x80000000 + ((i - 32) << 23);\r\n        }\r\n        HalfFloatUtils._exponentTable[63] = 0xc7800000;\r\n\r\n        HalfFloatUtils._offsetTable[0] = 0;\r\n        for (i = 1; i < 64; ++i) {\r\n            if (i === 32) {\r\n                HalfFloatUtils._offsetTable[i] = 0;\r\n            } else {\r\n                HalfFloatUtils._offsetTable[i] = 1024;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * round a number to a half float number bits.\r\n     * @param {number} num\r\n     */\r\n    static roundToFloat16Bits(num: number): number {\r\n        HalfFloatUtils._floatView[0] = num;\r\n        var f: number = HalfFloatUtils._uint32View[0];\r\n        var e: number = (f >> 23) & 0x1ff;\r\n        return HalfFloatUtils._baseTable[e] + ((f & 0x007fffff) >> HalfFloatUtils._shiftTable[e]);\r\n    }\r\n\r\n    /**\r\n     * convert a half float number bits to a number.\r\n     * @param {number} float16bits - half float number bits\r\n     */\r\n    static convertToNumber(float16bits: number): number {\r\n        var m: number = float16bits >> 10;\r\n        HalfFloatUtils._uint32View[0] = HalfFloatUtils._mantissaTable[HalfFloatUtils._offsetTable[m] + (float16bits & 0x3ff)] + HalfFloatUtils._exponentTable[m];\r\n        return HalfFloatUtils._floatView[0];\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nconst FOURCC_DXT1: number = 827611204;\r\nconst FOURCC_DXT3 = 861165636;\r\nconst FOURCC_DXT4 = 877942852;\r\nconst FOURCC_DXT5: number = 894720068;\r\nconst FOURCC_DX10 = 808540228;\r\nconst DDPF_FOURCC: number = 0x4;\r\nconst DDPF_RGB = 0x40;\r\nconst DDSCAPS2_CUBEMAP = 0x200;\r\nconst DDPF_LUMINANCE = 0x20000;\r\nconst DDSD_MIPMAPCOUNT: number = 0x20000;\r\nconst DDS_MAGIC: number = 0x20534444;\r\nconst DDS_HEADER_LENGTH: number = 31;\r\nconst DDS_DXGI_FORMAT: number = 32;\r\nconst DDS_HEADER_MAGIC: number = 0;\r\nconst DDS_HEADER_SIZE: number = 1;\r\nconst DDS_HEADER_FLAGS: number = 2;\r\nconst DDS_HEADER_HEIGHT: number = 3;\r\nconst DDS_HEADER_WIDTH: number = 4;\r\nconst DDS_HEADER_MIPMAPCOUNT: number = 7;\r\nconst DDS_HEADER_PF_FLAGS: number = 20;\r\nconst DDS_HEADER_PF_FOURCC: number = 21;\r\nconst DDS_HEADER_PF_RGBBPP: number = 22;\r\nconst DDS_HEADER_PF_CAPS2: number = 28;\r\nconst FOURCC_D3DFMT_R16G16B16A16F = 113;\r\nconst FOURCC_D3DFMT_R32G32B32A32F = 116;\r\n\r\nconst Int32ToFourCC = (value: number) => {\r\n    return String.fromCharCode(\r\n        value & 0xff,\r\n        (value >> 8) & 0xff,\r\n        (value >> 16) & 0xff,\r\n        (value >> 24) & 0xff\r\n    );\r\n}\r\n\r\n/**\r\n * dds 未存储 color space 需要手动指定\r\n */\r\nexport class DDSTextureInfo {\r\n\r\n    width: number;\r\n    height: number;\r\n    mipmapCount: number;\r\n    isCube: boolean;\r\n    bpp: number;\r\n    blockBytes: number;\r\n    format: TextureFormat;\r\n    compressed: boolean;\r\n    dataOffset: number;\r\n    source: ArrayBuffer;\r\n\r\n    constructor(width: number, height: number, mipmapCount: number, isCube: boolean, bpp: number, blockBytes: number, dataOffset: number, format: TextureFormat, compressed: boolean, sourceData: ArrayBuffer) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.mipmapCount = mipmapCount;\r\n        this.isCube = isCube;\r\n        this.blockBytes = blockBytes;\r\n        this.dataOffset = dataOffset;\r\n        this.format = format;\r\n        this.source = sourceData;\r\n        this.bpp = bpp;\r\n        this.compressed = compressed;\r\n    }\r\n\r\n    static getDDSTextureInfo(source: ArrayBuffer): DDSTextureInfo {\r\n        let header = new Int32Array(source, 0, DDS_HEADER_LENGTH);\r\n\r\n        let width = header[DDS_HEADER_WIDTH];\r\n        let height = header[DDS_HEADER_HEIGHT];\r\n\r\n        let mipmapCount = 1;\r\n        if (header[DDS_HEADER_FLAGS] & DDSD_MIPMAPCOUNT) {\r\n            mipmapCount = Math.max(1, header[DDS_HEADER_MIPMAPCOUNT]);\r\n        }\r\n\r\n        let fourCC = header[DDS_HEADER_PF_FOURCC];\r\n\r\n        // let extendedHeader = new Int32Array(source, 0, DDS_HEADER_LENGTH + 4);\r\n        // let dxgiFormat = (fourCC == FOURCC_DX10) ? header[32] : 0;\r\n\r\n        let isFourCC = (header[DDS_HEADER_PF_FLAGS] & DDPF_FOURCC) === DDPF_FOURCC;\r\n\r\n        let isRGB = (header[DDS_HEADER_PF_FLAGS] & DDPF_RGB) === DDPF_RGB;\r\n        let isLuminance = (header[DDS_HEADER_PF_FLAGS] & DDPF_LUMINANCE) === DDPF_LUMINANCE;\r\n        let isCube = (header[DDS_HEADER_PF_CAPS2] & DDSCAPS2_CUBEMAP) === DDSCAPS2_CUBEMAP;\r\n        let isCompressed = (fourCC === FOURCC_DXT1 || fourCC === FOURCC_DXT3 || fourCC === FOURCC_DXT5 || fourCC === FOURCC_DXT4);\r\n\r\n        let layaTexFormat = TextureFormat.DXT1;\r\n        let dataOffset = header[DDS_HEADER_SIZE] + 4;\r\n        let blockBytes = 1;\r\n        // todo  DXT10  unCompressed texture ?\r\n        switch (fourCC) {\r\n            case FOURCC_DXT1:\r\n                layaTexFormat = TextureFormat.DXT1;\r\n                blockBytes = 8;\r\n                break;\r\n            case FOURCC_DXT3:\r\n                layaTexFormat = TextureFormat.DXT3;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_DXT4:\r\n            case FOURCC_DXT5:\r\n                layaTexFormat = TextureFormat.DXT5;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_D3DFMT_R16G16B16A16F:\r\n                layaTexFormat = TextureFormat.R16G16B16A16;\r\n                blockBytes = 4;\r\n                break;\r\n            case FOURCC_D3DFMT_R32G32B32A32F:\r\n                layaTexFormat = TextureFormat.R32G32B32A32;\r\n                blockBytes = 4;\r\n                break;\r\n            default:\r\n                throw \"Unsupported format \" + Int32ToFourCC(fourCC)\r\n        }\r\n\r\n        if (header[DDS_HEADER_MAGIC] !== DDS_MAGIC) {\r\n            throw \"Invalid magic number in DDS header\";\r\n        }\r\n        if (!isFourCC && !isRGB && !isLuminance) {\r\n            throw \"Unsupported format, must contain a FourCC, RGB or LUMINANCE code\";\r\n        }\r\n\r\n        let ext = LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC) || LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB);\r\n\r\n        if (isCompressed && !ext) {\r\n            throw \"Compressed textures are not supported on this platform.\";\r\n        }\r\n\r\n        return new DDSTextureInfo(width, height, mipmapCount, isCube, 0, blockBytes, dataOffset, layaTexFormat, isCompressed, source);\r\n    }\r\n\r\n}","\r\nexport enum TextureDimension {\r\n    Tex2D,\r\n    Cube,\r\n    Tex3D,\r\n    Texture2DArray,\r\n    CubeArray,\r\n    Unkonw,\r\n    None\r\n}","import { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\n\r\nconst KTX1FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst KTX2FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x32, 0x30, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst IdentifierByteSize = 12;\r\nconst HeaderSize = 13;\r\n\r\n/** etc1 */\r\nconst COMPRESSED_RGB_ETC1_WEBGL = 36196;\r\n\r\n/** etc2 */\r\nconst COMPRESSED_R11_EAC = 37488;\r\nconst COMPRESSED_RG11_EAC = 37490;\r\nconst COMPRESSED_RGB8_ETC2 = 37492;\r\nconst COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494;\r\nconst COMPRESSED_RGBA8_ETC2_EAC = 37496;\r\nconst COMPRESSED_SIGNED_R11_EAC = 37489;\r\nconst COMPRESSED_SIGNED_RG11_EAC = 37491;\r\nconst COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497;\r\nconst COMPRESSED_SRGB8_ETC2 = 37493;\r\nconst COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495;\r\n\r\n/** astc */\r\nconst COMPRESSED_RGBA_ASTC_4x4_KHR = 37808;\r\nconst COMPRESSED_RGBA_ASTC_5x4_KHR = 37809;\r\nconst COMPRESSED_RGBA_ASTC_5x5_KHR = 37810;\r\nconst COMPRESSED_RGBA_ASTC_6x5_KHR = 37811;\r\nconst COMPRESSED_RGBA_ASTC_6x6_KHR = 37812;\r\nconst COMPRESSED_RGBA_ASTC_8x5_KHR = 37813;\r\nconst COMPRESSED_RGBA_ASTC_8x6_KHR = 37814;\r\nconst COMPRESSED_RGBA_ASTC_8x8_KHR = 37815;\r\nconst COMPRESSED_RGBA_ASTC_10x5_KHR = 37816;\r\nconst COMPRESSED_RGBA_ASTC_10x6_KHR = 37817;\r\nconst COMPRESSED_RGBA_ASTC_10x8_KHR = 37818;\r\nconst COMPRESSED_RGBA_ASTC_10x10_KHR = 37819;\r\nconst COMPRESSED_RGBA_ASTC_12x10_KHR = 37820;\r\nconst COMPRESSED_RGBA_ASTC_12x12_KHR = 37821;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 37840;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 37841;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 37842;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 37843;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 37844;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 37845;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 37846;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 37847;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 37848;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 37849;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 37850;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 37851;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 37852;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 37853;\r\n\r\n/** pvr */\r\n// todo\r\n\r\n\r\n/** gl param for unCompressed image data*/\r\nconst GL_FORMAT_RGBA = 6408;\r\nconst GL_FORMAT_RGB = 6407;\r\nconst GL_FORMAT_RGBA32F = 0x8814;\r\nconst GL_FORMAT_RGB32F = 0x8815;\r\nconst GL_FORMAT_RGBA16F = 0x881A;\r\nconst GL_FORMAT_RGB16F = 0x881B;\r\nconst GL_FORMAT_SRGB8 = 0x8C41;\r\n\r\nconst GL_INTERNALFORMAT_RGBA8 = 0x8058;\r\nconst GL_INTERNALFORMAT_RGB8 = 0x8051;\r\nconst GL_INTERNALFORMAT_SRGB8_ALPHA8 = 0x8C43;\r\nconst GL_INTERNALFORMAT_R11F_G11F_B10F = 0x8C3A;\r\n\r\n// gl data type\r\nconst GL_DATATYPE_BYTE = 0x1400;\r\nconst GL_DATATYPE_UNSIGNED_BYTE = 0x1401;\r\nconst GL_DATATYPE_SHORT = 0x1402;\r\nconst GL_DATATYPE_UNSIGNED_SHORT = 0x1403;\r\nconst GL_DATATYPE_INT = 0x1404;\r\nconst GL_DATATYPE_UNSIGNED_INT = 0x1405;\r\nconst GL_DATATYPE_FLOAT = 0x1406;\r\nconst GL_DATATYPE_HALF_FLOAT = 0x140b;\r\n\r\n/**\r\n * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\r\n * https://www.khronos.org/registry/KTX/specs/2.0/ktxspec_v2.html\r\n */\r\nexport class KTXTextureInfo {\r\n\r\n    static getLayaFormat(glFormat: number, glInternalFormat: number, glType: number, glTypeSize: number): { format: TextureFormat, sRGB: boolean } {\r\n\r\n        if (glFormat == 0) {\r\n            switch (glInternalFormat) {\r\n                /** etc1 */\r\n                case COMPRESSED_RGB_ETC1_WEBGL:\r\n                    return { format: TextureFormat.ETC1RGB, sRGB: false };\r\n                /** etc2 */\r\n                // todo etc2 其他格式\r\n                case COMPRESSED_RGBA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2RGBA, sRGB: false };\r\n                case COMPRESSED_RGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2RGB, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2SRGB_Alpha8, sRGB: true };\r\n                case COMPRESSED_SRGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2SRGB, sRGB: true };\r\n                case COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:\r\n                    return { format: TextureFormat.ETC2RGB_Alpha1, sRGB: false };\r\n                case COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:\r\n                    return { format: TextureFormat.ETC2SRGB_Alpha1, sRGB: true };\r\n\r\n                /** astc */\r\n                // todo astc 其他格式\r\n                case COMPRESSED_RGBA_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12SRGB, sRGB: true };\r\n                default:\r\n                    throw \"KTX: UnSupported Compressed format.\";\r\n            }\r\n        }\r\n        else {\r\n            if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_RGBA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_SRGB8_ALPHA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32A32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16A16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_SRGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_INTERNALFORMAT_RGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: false };\r\n            }\r\n            else {\r\n                throw \"ktx: Unsupported UnCompressed image data.\";\r\n            }\r\n        }\r\n    }\r\n\r\n    static getKTXTextureInfo(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n\r\n        let FileIdentifier = new Uint8Array(source, 0, 12);\r\n\r\n        // ktx2\r\n        if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x32 && FileIdentifier[6] === 0x30 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            throw \"ktx2 !\"\r\n        }\r\n        // ktx1\r\n        else if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x31 && FileIdentifier[6] === 0x31 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            return KTXTextureInfo.createKTX1Info(source);\r\n        }\r\n        else {\r\n            throw \"ktx data wrong, not ktx1 or ktx2 buffer!\";\r\n        }\r\n    }\r\n\r\n    static createKTX1Info(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n        let dataSize = Uint32Array.BYTES_PER_ELEMENT;\r\n\r\n        let headerDataView = new DataView(source, IdentifierByteSize, dataSize * HeaderSize);\r\n\r\n        let endianness = headerDataView.getUint32(0, true);\r\n        let littleEndian = endianness == 0x04030201;\r\n\r\n        // header\r\n        let glType = headerDataView.getUint32(1 * dataSize, littleEndian);\r\n        let glTypeSize = headerDataView.getUint32(2 * dataSize, littleEndian);\r\n        let glFormat = headerDataView.getUint32(3 * dataSize, littleEndian);\r\n        let glInternalFormat = headerDataView.getUint32(4 * dataSize, littleEndian);\r\n        let glBaseInternalFormat = headerDataView.getUint32(5 * dataSize, littleEndian);\r\n        let pixelWidth = headerDataView.getUint32(6 * dataSize, littleEndian);\r\n        let pixelHeight = headerDataView.getUint32(7 * dataSize, littleEndian);\r\n        let pixelDepth = headerDataView.getUint32(8 * dataSize, littleEndian);\r\n        let numberOfArrayElements = headerDataView.getUint32(9 * dataSize, littleEndian);\r\n        let numberOfFaces = headerDataView.getUint32(10 * dataSize, littleEndian);\r\n        let numberOfMipmapLevels = headerDataView.getUint32(11 * dataSize, littleEndian);\r\n        let bytesOfKeyValueData = headerDataView.getUint32(12 * dataSize, littleEndian);\r\n        let compressed = glType == 0;\r\n\r\n        let formatInfo = KTXTextureInfo.getLayaFormat(glFormat, glInternalFormat, glType, glTypeSize);\r\n        let layaFormat = formatInfo.format;\r\n        let sRGBData = formatInfo.sRGB;\r\n\r\n        // todo  3d texture\r\n        let layaDemision = TextureDimension.Tex2D;\r\n        if (numberOfFaces > 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.CubeArray;\r\n        }\r\n        else if (numberOfFaces > 1 && numberOfArrayElements <= 1) {\r\n            layaDemision = TextureDimension.Cube;\r\n        }\r\n        else if (numberOfFaces <= 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.Texture2DArray;\r\n        }\r\n\r\n        let headerOffset = IdentifierByteSize + HeaderSize * 4;\r\n\r\n        return new KTXTextureInfo(source, glFormat == 0, sRGBData, layaDemision, pixelWidth, pixelHeight, layaFormat, numberOfMipmapLevels || 1, bytesOfKeyValueData, headerOffset);\r\n\r\n    }\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public compress: boolean, public sRGB: boolean, public dimension: TextureDimension, public width: number, public height: number, public format: TextureFormat, public mipmapCount: number, public bytesOfKeyValueData: number, public headerOffset: number) {\r\n\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Byte } from \"../utils/Byte\";\r\nimport { HalfFloatUtils } from \"../utils/HalfFloatUtils\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nexport interface TexturePropertyParams {\r\n    wrapModeU?: number,\r\n    wrapModeV?: number,\r\n    filterMode?: FilterMode,\r\n    anisoLevel?: number,\r\n    premultiplyAlpha?: boolean,\r\n    hdrEncodeFormat?: HDREncodeFormat,\r\n}\r\n\r\nexport type TextureConstructParams = ConstructorParameters<typeof Texture2D>;\r\n\r\n/**\r\n * <code>Texture2D</code> 类用于生成2D纹理。\r\n */\r\nexport class Texture2D extends BaseTexture {\r\n    /**Texture2D资源。*/\r\n    static TEXTURE2D: string = \"TEXTURE2D\";\r\n\r\n    /**纯灰色纹理。*/\r\n    static grayTexture: Texture2D = null;\r\n    /**纯白色纹理。*/\r\n    static whiteTexture: Texture2D = null;\r\n    /**纯黑色纹理。*/\r\n    static blackTexture: Texture2D = null;\r\n    /**默认法线纹理 */\r\n    static normalTexture: Texture2D = null;\r\n    /**错误纹理 */\r\n    static errorTexture: Texture2D = null;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        var pixels: Uint8Array = new Uint8Array(4);\r\n        pixels[0] = 128;\r\n        pixels[1] = 128;\r\n        pixels[2] = 128;\r\n        pixels[3] = 255;\r\n        Texture2D.grayTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.grayTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.grayTexture.name = \"Default_Gray\";\r\n        pixels[0] = 255;\r\n        pixels[1] = 255;\r\n        pixels[2] = 255;\r\n        pixels[3] = 255;\r\n        Texture2D.whiteTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.whiteTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.whiteTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.whiteTexture.name = \"Default_White\";\r\n        pixels[0] = 0;\r\n        pixels[1] = 0;\r\n        pixels[2] = 0;\r\n        pixels[3] = 255;\r\n        Texture2D.blackTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false);\r\n        Texture2D.blackTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.blackTexture.name = \"Default_Black\";\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n            let floatPixle = new Uint16Array(4);\r\n            floatPixle[0] = 14336;\r\n            floatPixle[1] = 14336;\r\n            floatPixle[2] = 15360;\r\n            floatPixle[3] = 15360;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R16G16B16A16, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(floatPixle, false, false);\r\n        }\r\n        else {\r\n            pixels[0] = 128;\r\n            pixels[1] = 128;\r\n            pixels[2] = 255;\r\n            pixels[3] = 255;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R8G8B8A8, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(pixels, false, false);\r\n        }\r\n\r\n        Texture2D.normalTexture.lock = true;\r\n        Texture2D.normalTexture.name = \"Default_Normal\";\r\n        Texture2D.errorTexture = Texture2D.whiteTexture;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _SimpleAnimatorTextureParse(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        var byte: Byte = new Byte(data);\r\n        var version: String = byte.readUTFString();\r\n        var texture: Texture2D;\r\n        var pixelDataArrays: Float32Array | Uint16Array;\r\n        var usePixelData: Float32Array | Uint16Array;\r\n        switch (version) {\r\n            case \"LAYAANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Float32Array(textureWidth * textureWidth * 4);\r\n                usePixelData = new Float32Array(byte.readArrayBuffer(pixelDataLength * 4));\r\n                pixelDataArrays.set(usePixelData, 0);\r\n                var texture: Texture2D = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                texture.setPixelsData(pixelDataArrays, false, false);\r\n                texture.filterMode = FilterMode.Point;\r\n                break;\r\n            case \"LAYACOMPRESSANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Uint16Array(byte.readArrayBuffer(pixelDataLength * 2));\r\n                if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n                    console.log(\"The platform does not support 16-bit floating-point textures\");\r\n                    if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32))\r\n                        console.error(\"The platform does not support 32-bit floating-point textures\");\r\n                    usePixelData = new Float32Array(textureWidth * textureWidth * 4);\r\n                    for (var i = 0, n = pixelDataArrays.length; i < n; i++) {\r\n                        usePixelData[i] = HalfFloatUtils.convertToNumber(pixelDataArrays[i]);\r\n                    }\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n\r\n                } else {\r\n                    usePixelData = new Uint16Array(textureWidth * textureWidth * 4);\r\n                    usePixelData.set(pixelDataArrays, 0);\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R16G16B16A16, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n                }\r\n                break;\r\n            default:\r\n                throw \"Laya3D:unknow version.\";\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param imageSource \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseImage(imageSource: any, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n\r\n        let format = constructParams ? constructParams[2] : TextureFormat.R8G8B8A8;\r\n        let mipmap = constructParams ? constructParams[3] : true;\r\n        let canread = constructParams ? constructParams[4] : false;\r\n        let srgb = constructParams ? constructParams[5] : false;\r\n        let pma = propertyParams ? propertyParams.premultiplyAlpha : false;\r\n        // todo  srgb\r\n        let texture = new Texture2D(imageSource.width, imageSource.height, format, mipmap, canread, srgb, pma);\r\n\r\n        if (propertyParams) {\r\n            texture.setImageData(imageSource, pma, false);\r\n            texture.setProperties(propertyParams);\r\n        }\r\n        else\r\n            texture.setImageData(imageSource, false, false);\r\n\r\n        if (canread) {\r\n            if (LayaEnv.isConch && imageSource._nativeObj) {\r\n                texture._pixels = new Uint8Array(imageSource._nativeObj.getImageData(0, 0, imageSource.width, imageSource.height));\r\n            } else {\r\n                ILaya.Browser.canvas.size(imageSource.width, imageSource.height);\r\n                ILaya.Browser.canvas.clear();\r\n                ILaya.Browser.context.drawImage(imageSource, 0, 0, imageSource.width, imageSource.height);\r\n                texture._pixels = new Uint8Array(ILaya.Browser.context.getImageData(0, 0, imageSource.width, imageSource.height).data.buffer);\r\n            }\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseDDS(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n\r\n        let ddsInfo = DDSTextureInfo.getDDSTextureInfo(data);\r\n\r\n        let sRGB = constructParams[5];\r\n\r\n        let texture = new Texture2D(ddsInfo.width, ddsInfo.height, ddsInfo.format, ddsInfo.mipmapCount > 1, false, sRGB);\r\n\r\n        texture.setDDSData(ddsInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseKTX(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n\r\n        let texture = new Texture2D(ktxInfo.width, ktxInfo.height, ktxInfo.format, ktxInfo.mipmapCount > 1, false, ktxInfo.sRGB);\r\n\r\n        texture.setKTXData(ktxInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     */\r\n    static _parsePVR(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n        throw \"pvr !\";\r\n    }\r\n\r\n    /**\r\n     * 加载纹理\r\n     * @param url 路径\r\n     * @param complete 处理时间\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, ILaya.Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**@internal */\r\n    _canRead: boolean = false;\r\n    /**@internal */\r\n    _pixels: Uint8Array;\r\n\r\n    /**\r\n     * 实例化2D纹理\r\n     * @param width \r\n     * @param height \r\n     * @param format \r\n     * @param mipmap \r\n     * @param canRead \r\n     * @param sRGB \r\n     * @returns \r\n     */\r\n    constructor(width: number, height: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._gammaSpace = sRGB;\r\n        this._canRead = canRead;\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, width, height, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 设置Image数据\r\n     * @param source Image原始数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setImageData(source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureImageData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素数据\r\n     * @param source 像素数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素值\r\n     * @param xOffset offset X\r\n     * @param yOffset offset Y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param pixels 像素\r\n     * @param mipmapLevel mipmap等级\r\n     * @param generateMipmap 生成mipmap\r\n     * @param premultiplyAlpha 预乘\r\n     * @param invertY 翻转Y\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, width: number, height: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置dds数据\r\n     * @param ddsInfo \r\n     */\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    /**\r\n     * 设置ktx数据\r\n     * @param ktxInfo \r\n     */\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    /**\r\n     * 设置HDR数据\r\n     * @param hdrInfo \r\n     */\r\n    setHDRData(hdrInfo: HDRTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureHDRData(texture, hdrInfo);\r\n    }\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * 获得像素\r\n     * @returns \r\n     */\r\n    getPixels() {\r\n        if (this._canRead && this._pixels) {\r\n            return this._pixels;\r\n        }\r\n        else {\r\n            throw new Error(\"Texture2D: must set texture canRead is true.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param propertyParams \r\n     */\r\n    private setProperties(propertyParams: TexturePropertyParams) {\r\n        if (propertyParams) {\r\n            if (propertyParams.wrapModeU != null) this.wrapModeU = propertyParams.wrapModeU;\r\n            if (propertyParams.wrapModeV != null) this.wrapModeV = propertyParams.wrapModeV;\r\n            if (propertyParams.filterMode != null) this.filterMode = propertyParams.filterMode;\r\n            if (propertyParams.anisoLevel != null) this.anisoLevel = propertyParams.anisoLevel;\r\n        }\r\n    }\r\n}","import { Resource } from \"../../resource/Resource\"\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nexport class BaseShader extends Resource {\r\n    static activeShader: BaseShader|null;\t\t\t//等于bindShader或者null\r\n    static bindShader: BaseShader;\t\t\t//当前绑定的shader\r\n\r\n    constructor() {\r\n        super();\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Matrix } from \"../../maths/Matrix\"\r\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\r\n\r\nexport class RenderState2D {\r\n    static _MAXSIZE: number = 99999999;\r\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\r\n    static EMPTYMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static TEMPMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static worldMatrix4: number[] = RenderState2D.TEMPMAT4_ARRAY;\r\n\r\n    static worldMatrix: Matrix = new Matrix();\r\n    static matWVP: any = null;// :Matrix4x4 = Matrix4x4.DEFAULT;\t\t// 3d矩阵\r\n    static worldAlpha: number = 1.0;\r\n\r\n    static worldScissorTest: boolean = false;\r\n\r\n    //public static var worldClipRect:Rectangle = new Rectangle(0, 0, _MAXSIZE, _MAXSIZE);\r\n    static worldShaderDefines: ShaderDefines2D;\r\n    static worldFilters: any[];\r\n\r\n    static width: number = 0;\r\n    static height: number = 0;\r\n\r\n    static InvertY:boolean = false;\r\n    /* 不知道 有什么用，删掉先\r\n    public static function getMatrArray():Array {\r\n        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    }\r\n    */\r\n    //TODO:coverage\r\n    static mat2MatArray(mat: Matrix, matArray: any[]): any[] {\r\n        var m: Matrix = mat;\r\n        var m4: any[] = matArray;\r\n        m4[0] = m.a;\r\n        m4[1] = m.b;\r\n        m4[2] = RenderState2D.EMPTYMAT4_ARRAY[2];\r\n        m4[3] = RenderState2D.EMPTYMAT4_ARRAY[3];\r\n        m4[4] = m.c;\r\n        m4[5] = m.d;\r\n        m4[6] = RenderState2D.EMPTYMAT4_ARRAY[6];\r\n        m4[7] = RenderState2D.EMPTYMAT4_ARRAY[7];\r\n        m4[8] = RenderState2D.EMPTYMAT4_ARRAY[8];\r\n        m4[9] = RenderState2D.EMPTYMAT4_ARRAY[9];\r\n        m4[10] = RenderState2D.EMPTYMAT4_ARRAY[10];\r\n        m4[11] = RenderState2D.EMPTYMAT4_ARRAY[11];\r\n        m4[12] = m.tx;\r\n        m4[13] = m.ty;\r\n        m4[14] = RenderState2D.EMPTYMAT4_ARRAY[14];\r\n        m4[15] = RenderState2D.EMPTYMAT4_ARRAY[15];\r\n        return matArray;\r\n    }\r\n\r\n    static restoreTempArray(): void {\r\n        RenderState2D.TEMPMAT4_ARRAY[0] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[1] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[4] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[5] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[12] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[13] = 0;\r\n    }\r\n\r\n    static clear(): void {\r\n        RenderState2D.worldScissorTest = false;\r\n        //worldFilters = null;\r\n        RenderState2D.worldAlpha = 1;\r\n        //worldClipRect.x = worldClipRect.y = 0;\r\n        //worldClipRect.width = width;\r\n        //worldClipRect.height = height;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { TextureFormat } from \"./TextureFormat\";\r\n\r\nexport enum RenderTargetFormat {\r\n \r\n    None = -1,\r\n    /**使用RGB的纹理，不可设置SRGB参数 */\r\n    R8G8B8 = TextureFormat.R8G8B8,\r\n    R8G8B8A8 = TextureFormat.R8G8B8A8,\r\n    R16G16B16A16 = TextureFormat.R16G16B16A16,\r\n    R32G32B32 = TextureFormat.R32G32B32,\r\n    R32G32B32A32 = TextureFormat.R32G32B32A32,\r\n    R16G16B16 = TextureFormat.R16G16B16,\r\n    \r\n    DEPTH_16 = 35,\r\n    STENCIL_8 = 36,\r\n    DEPTHSTENCIL_24_8 = 37,\r\n    DEPTH_32 = 38,\r\n    DEPTHSTENCIL_24_Plus = 39\r\n}","export enum RenderClearFlag{\r\n    Nothing = 0,\r\n    Color = 1,\r\n    Depth = 2,\r\n    Stencil = 4,\r\n}","export enum BlendFactor {\r\n    /** (0, 0, 0, 0)*/\r\n    Zero,\r\n    /** (1, 1, 1, 1)*/\r\n    One,\r\n    /** (Rs, Gs, Bs, As) */\r\n    SourceColor,\r\n    /** (1 - Rs, 1 - Gs, 1 - Bs, 1 - As)*/\r\n    OneMinusSourceColor,\r\n    /** (Rd, Gd, Bd, Ad)*/\r\n    DestinationColor,\r\n    /** (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad)*/\r\n    OneMinusDestinationColor,\r\n    /** (As, As, As, As)*/\r\n    SourceAlpha,\r\n    /** (1 - As, 1 - As, 1 - As, 1 - As)*/\r\n    OneMinusSourceAlpha,\r\n    /** (Ad, Ad, Ad, Ad)*/\r\n    DestinationAlpha,\r\n    /** (1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad)*/\r\n    OneMinusDestinationAlpha,\r\n    /** (min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad), 10)*/\r\n    SourceAlphaSaturate,\r\n    /** (Rc, Gc, Bc, Ac)*/\r\n    BlendColor,\r\n    /** (1 - Rc, 1 - Gc, 1 - Bc, 1 - Ac)*/\r\n    OneMinusBlendColor\r\n  }","import { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * <code>Color</code> 类用于创建颜色实例。\r\n */\r\nexport class Color implements IClone {\r\n    /**\r\n     * 红色\r\n     */\r\n    static RED: Color = new Color(1, 0, 0, 1);\r\n    /**\r\n     * 绿色\r\n     */\r\n    static GREEN: Color = new Color(0, 1, 0, 1);\r\n    /**\r\n     * 蓝色\r\n     */\r\n    static BLUE: Color = new Color(0, 0, 1, 1);\r\n    /**\r\n     * 蓝绿色\r\n     */\r\n    static CYAN: Color = new Color(0, 1, 1, 1);\r\n    /**\r\n     * 黄色\r\n     */\r\n    static YELLOW: Color = new Color(1, 0.92, 0.016, 1);\r\n    /**\r\n     * 品红色\r\n     */\r\n    static MAGENTA: Color = new Color(1, 0, 1, 1);\r\n    /**\r\n     * 灰色\r\n     */\r\n    static GRAY: Color = new Color(0.5, 0.5, 0.5, 1);\r\n    /**\r\n     * 白色\r\n     */\r\n    static WHITE: Color = new Color(1, 1, 1, 1);\r\n    /**\r\n     * 黑色\r\n     */\r\n    static BLACK: Color = new Color(0, 0, 0, 1);\r\n    /**\r\n     * 全透明\r\n     */\r\n    static CLEAR: Color = new Color(0, 0, 0, 0);\r\n\r\n    /**\r\n     * Gamma空间值转换到线性空间。\r\n     * @param value gamma空间值。\r\n     */\r\n    static gammaToLinearSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  cs / 12.92,                 cs <= 0.04045 }\r\n        // {  ((cs + 0.055)/1.055)^2.4,   cs >  0.04045 }\r\n        if (value <= 0.04045)\r\n            return value / 12.92;\r\n        else if (value < 1.0)\r\n            return Math.pow((value + 0.055) / 1.055, 2.4);\r\n        else\r\n            return Math.pow(value, 2.4);\r\n    }\r\n\r\n    /**\r\n     * 线性空间值转换到Gamma空间。\r\n     * @param value 线性空间值。\r\n     */\r\n    static linearToGammaSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  0.0,                          0         <= cl\r\n        // {  12.92 * c,                    0         <  cl < 0.0031308\r\n        // {  1.055 * cl^0.41666 - 0.055,   0.0031308 <= cl < 1\r\n        // {  1.0,                                       cl >= 1  <- This has been adjusted since we want to maintain HDR colors\r\n        if (value <= 0.0)\r\n            return 0.0;\r\n        else if (value <= 0.0031308)\r\n            return 12.92 * value;\r\n        else if (value <= 1.0)\r\n            return 1.055 * Math.pow(value, 0.41666) - 0.055;\r\n        else\r\n            return Math.pow(value, 0.41666);\r\n    }\r\n\r\n\r\n    /**red分量*/\r\n    r: number;\r\n\r\n    /**green分量*/\r\n    g: number;\r\n\r\n    /**blue分量*/\r\n    b: number;\r\n\r\n    /**alpha分量*/\r\n    a: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Color</code> 实例。\r\n     * @param\tr  颜色的red分量。\r\n     * @param\tg  颜色的green分量。\r\n     * @param\tb  颜色的blue分量。\r\n     * @param\ta  颜色的alpha分量。\r\n     */\r\n    constructor(r: number = 1, g: number = 1, b: number = 1, a: number = 1) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    equal(c: Color): boolean {\r\n        if (!c) return false;\r\n        const toFIxed = (a: number, b: number) => {\r\n            var delta = 1e-5;\r\n            return -delta < a - b && a - b < delta;\r\n        }\r\n        return toFIxed(c.r, this.r) && toFIxed(c.g, this.g) && toFIxed(c.b, this.b) && toFIxed(c.a, this.a);\r\n    }\r\n\r\n    /**\r\n     * Gamma空间转换到线性空间。\r\n     * @param\tlinear 线性空间颜色。\r\n     */\r\n    toLinear(out: Color): void {\r\n        out.r = Color.gammaToLinearSpace(this.r);\r\n        out.g = Color.gammaToLinearSpace(this.g);\r\n        out.b = Color.gammaToLinearSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * 线性空间转换到Gamma空间。\r\n     * @param\tgamma Gamma空间颜色。\r\n     */\r\n    toGamma(out: Color): void {\r\n        out.r = Color.linearToGammaSpace(this.r);\r\n        out.g = Color.linearToGammaSpace(this.g);\r\n        out.b = Color.linearToGammaSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destColor: Color = (<Color>destObject);\r\n        destColor.r = this.r;\r\n        destColor.g = this.g;\r\n        destColor.b = this.b;\r\n        destColor.a = this.a;\r\n    }\r\n\r\n    scale(value: number): Color {\r\n        this.r = this.r * value;\r\n        this.g = this.g * value;\r\n        this.b = this.b * value;\r\n        return this;\r\n    }\r\n\r\n    setValue(r: number, g: number, b: number, a: number) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.r = array[offset + 0];\r\n        this.g = array[offset + 1];\r\n        this.b = array[offset + 2];\r\n        this.a = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.r, this.g, this.b, this.a];\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Color = new Color();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n}\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\";\r\nimport { BaseTexture } from \"./BaseTexture\"\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>RenderTexture</code> 类用于创建渲染目标。\r\n */\r\nexport class NativeRenderTexture2D extends BaseTexture implements IRenderTarget {\r\n    /** @private */\r\n    private static _currentActive: NativeRenderTexture2D;\r\n    private static _clearColor: Color = new Color(0, 0, 0, 0);\r\n    private _lastRT: NativeRenderTexture2D;\r\n    private _lastWidth: number;\r\n    private _lastHeight: number;\r\n\r\n    //为push,pop 用的。以后和上面只保留一份。\r\n    //由于可能递归，所以不能简单的用save，restore\r\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\r\n\r\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\r\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\r\n    /**\r\n     * 获取当前激活的Rendertexture\r\n     */\r\n    static get currentActive(): NativeRenderTexture2D {\r\n        return NativeRenderTexture2D._currentActive;\r\n    }\r\n\r\n    /** @private */\r\n    private _depthStencilFormat: number;\r\n\r\n    private _colorFormat: RenderTargetFormat;\r\n\r\n    /**@internal */\r\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\r\n\r\n    /**\r\n     * 获取深度格式。\r\n     *@return 深度格式。\r\n     */\r\n    get depthStencilFormat(): number {\r\n        return this._depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    getIsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get sourceWidth(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get sourceHeight(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 获取offsetX。\r\n     */\r\n    get offsetX(): number {\r\n        return 0;\r\n    }\r\n\r\n    /***\r\n     * 获取offsetY\r\n     */\r\n    get offsetY(): number {\r\n        return 0;\r\n    }\r\n\r\n    depthStencilTexture: BaseTexture;\r\n\r\n    _renderTarget: InternalRenderTarget;\r\n    _isCameraTarget: boolean;\r\n\r\n    private _nativeObj: any;\r\n    /**\r\n     * @param width  宽度。\r\n     * @param height 高度。\r\n     * @param format 纹理格式。\r\n     * @param depthStencilFormat 深度格式。\r\n     * 创建一个 <code>RenderTexture</code> 实例。\r\n     */\r\n    constructor(width: number, height: number, format: number = RenderTargetFormat.R8G8B8, depthStencilFormat: number = RenderTargetFormat.DEPTH_16, create: boolean = true ) {//TODO:待老郭清理\r\n\r\n        super(width, height, format);\r\n        this._colorFormat = format;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        if (width != 0 && height != 0 && create) {\r\n            this._create();\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    get isCube(): boolean {\r\n        return this._nativeObj.isCube;\r\n    }\r\n\r\n    get samples(): number {\r\n        return this._nativeObj.samples;\r\n    }\r\n\r\n    get generateMipmap(): boolean {\r\n        return this._nativeObj.generateMipmap;\r\n    }\r\n\r\n    _start(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _end(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _create() {\r\n        // todo  mipmap\r\n        this._nativeObj = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, this.width, this.height, this._colorFormat, this.depthStencilFormat);\r\n        this._texture = this._nativeObj._renderTarget._textures[0];\r\n    }\r\n\r\n\r\n    /**\r\n     * 保存当前的RT信息。\r\n     */\r\n    static pushRT(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * 恢复上次保存的RT信息\r\n     */\r\n    static popRT(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * 开始绑定。\r\n     */\r\n    start(): void {\r\n        this._nativeObj.start();\r\n    }\r\n\r\n    /**\r\n     * 结束绑定。\r\n     */\r\n    end(): void {\r\n        this._nativeObj.end();\r\n    }\r\n\r\n    /**\r\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\r\n     */\r\n    restore(): void {\r\n        this._nativeObj.restore();\r\n    }\r\n\r\n\r\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\r\n        this._nativeObj.clear(r, g, b, a);\r\n    }\r\n\r\n\r\n    /**\r\n     * 获得像素数据。\r\n     * @param x X像素坐标。\r\n     * @param y Y像素坐标。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @return 像素数据。\r\n     */\r\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return this._nativeObj.getData(x, y, width, height);\r\n    }\r\n    recycle(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @internal\r\n     */\r\n    _disposeResource(): void {\r\n        this._nativeObj._disposeResource();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\"\r\nimport { BaseTexture } from \"./BaseTexture\"\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\"\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\"\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n/**\r\n * <code>RenderTexture</code> 类用于创建渲染目标。\r\n */\r\nexport class RenderTexture2D extends BaseTexture implements IRenderTarget {\r\n    /** @private */\r\n    private static _currentActive: RenderTexture2D;\r\n    static _clearColor: Color = new Color(0, 0, 0, 0);\r\n    static _clearLinearColor: Color = new Color();\r\n    private _lastRT: RenderTexture2D;\r\n    private _lastWidth: number;\r\n    private _lastHeight: number;\r\n\r\n    //为push,pop 用的。以后和上面只保留一份。\r\n    //由于可能递归，所以不能简单的用save，restore\r\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\r\n    /**\r\n     * 默认uv\r\n     */\r\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\r\n    /**\r\n     * 默认翻转uv\r\n     */\r\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\r\n    /**\r\n     * 获取当前激活的Rendertexture\r\n     */\r\n    static get currentActive(): RenderTexture2D {\r\n        return RenderTexture2D._currentActive;\r\n    }\r\n\r\n    /** @private */\r\n    private _depthStencilFormat: number;\r\n    /** @private */\r\n    private _colorFormat: RenderTargetFormat;\r\n\r\n    /**@internal */\r\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\r\n    /**@internal */\r\n    _invertY: boolean = false;\r\n    /**\r\n     * 获取深度格式。\r\n     *@return 深度格式。\r\n     */\r\n    get depthStencilFormat(): number {\r\n        return this._depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * RenderTexture2D是否准备好\r\n     * @returns \r\n     */\r\n    getIsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get sourceWidth(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get sourceHeight(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 获取offsetX。\r\n     */\r\n    get offsetX(): number {\r\n        return 0;\r\n    }\r\n\r\n    /***\r\n     * 获取offsetY\r\n     */\r\n    get offsetY(): number {\r\n        return 0;\r\n    }\r\n    /**深度模板纹理 */\r\n    depthStencilTexture: BaseTexture;\r\n    \r\n    _renderTarget: InternalRenderTarget;\r\n    /**是否是CameraTarget */\r\n    _isCameraTarget: boolean;\r\n\r\n\r\n    /**\r\n     * @param width  宽度。\r\n     * @param height 高度。\r\n     * @param format 纹理格式。\r\n     * @param depthStencilFormat 深度格式。\r\n     * 创建一个 <code>RenderTexture</code> 实例。\r\n     */\r\n    constructor(width: number, height: number, format: RenderTargetFormat = RenderTargetFormat.R8G8B8, depthStencilFormat: RenderTargetFormat = RenderTargetFormat.None) {//TODO:待老郭清理\r\n\r\n        super(width, height, format);\r\n        this._colorFormat = format;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        if (width != 0 && height != 0) {\r\n            this._create();\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**是否是RTCube */\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    /**采样 */\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    /**\r\n     * 是否生成Mipmap\r\n     */\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _start(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _end(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _create() {\r\n        // todo  mipmap\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, this._colorFormat, this.depthStencilFormat, false, false, 1);\r\n        this._texture = this._renderTarget._textures[0];\r\n        this._texture.gammaCorrection = 2.2;\r\n    }\r\n\r\n\r\n    /**\r\n     * 保存当前的RT信息。\r\n     */\r\n    static pushRT(): void {\r\n        RenderTexture2D.rtStack.push({ rt: RenderTexture2D._currentActive, w: RenderState2D.width, h: RenderState2D.height });\r\n    }\r\n    /**\r\n     * 恢复上次保存的RT信息\r\n     */\r\n    static popRT(): void {\r\n        var top: any = RenderTexture2D.rtStack.pop();\r\n        if (top) {\r\n            if (RenderTexture2D._currentActive != top.rt) {\r\n                if (top.rt) {\r\n                    LayaGL.textureContext.bindRenderTarget(top.rt._renderTarget);\r\n                    RenderState2D.InvertY = top.rt._invertY;\r\n                } else {\r\n                    LayaGL.textureContext.bindoutScreenTarget();\r\n                    RenderState2D.InvertY = false;\r\n                }\r\n                RenderTexture2D._currentActive = top.rt;\r\n            }\r\n            LayaGL.renderEngine.viewport(0, 0, top.w, top.h);\r\n            LayaGL.renderEngine.scissor(0, 0, top.w, top.h);\r\n            RenderState2D.width = top.w;\r\n            RenderState2D.height = top.h;\r\n        }\r\n    }\r\n    /**\r\n     * 开始绑定。\r\n     */\r\n    start(): void {\r\n        //(memorySize == 0) && recreateResource();\r\n        LayaGL.textureContext.bindRenderTarget(this._renderTarget);\r\n        this._lastRT = RenderTexture2D._currentActive;\r\n        RenderTexture2D._currentActive = this;\r\n        RenderState2D.InvertY = this._invertY;\r\n        //var gl:LayaGL = LayaGL.instance;//TODO:这段代码影响2D、3D混合\r\n        ////(memorySize == 0) && recreateResource();\r\n        //LayaGL.instance.bindFramebuffer(WebGLContext.FRAMEBUFFER, _frameBuffer);\r\n        //_lastRT = _currentActive;\r\n        //_currentActive = this;\r\n        ////_readyed = false;  \r\n        //_readyed = true;\t//这个没什么用。还会影响流程，比如我有时候并不调用end。所以直接改成true\r\n        //\r\n        ////if (_type == TYPE2D) {\r\n        LayaGL.renderEngine.viewport(0, 0, this._width, this._height);//外部设置\r\n        LayaGL.renderEngine.scissor(0, 0, this._width, this._height);//外部设置\r\n        this._lastWidth = RenderState2D.width;\r\n        this._lastHeight = RenderState2D.height;\r\n        RenderState2D.width = this._width;\r\n        RenderState2D.height = this._height;\r\n        BaseShader.activeShader = null;\r\n        ////}\r\n    }\r\n\r\n    /**\r\n     * 结束绑定。\r\n     */\r\n    end(): void {\r\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n        RenderTexture2D._currentActive = null;\r\n        RenderState2D.InvertY = false;\r\n    }\r\n\r\n    /**\r\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\r\n     */\r\n    restore(): void {\r\n        if (this._lastRT != RenderTexture2D._currentActive) {\r\n\r\n            if (this._lastRT) {\r\n                LayaGL.textureContext.bindRenderTarget(this._lastRT._renderTarget);\r\n                RenderState2D.InvertY = this._lastRT._invertY;\r\n            }\r\n            else {\r\n                LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n                RenderState2D.InvertY = false;\r\n            }\r\n\r\n            RenderTexture2D._currentActive = this._lastRT;\r\n        }\r\n        // this._readyed = true;\r\n        //if (_type == TYPE2D)//待调整\r\n        //{\r\n        LayaGL.renderEngine.viewport(0, 0, this._lastWidth, this._lastHeight);\r\n        LayaGL.renderEngine.scissor(0, 0, this._lastWidth, this._lastHeight);\r\n        RenderState2D.width = this._lastWidth;\r\n        RenderState2D.height = this._lastHeight;\r\n        BaseShader.activeShader = null;\r\n        //} else \r\n        //\tgl.viewport(0, 0, Laya.stage.width, Laya.stage.height);\r\n    }\r\n\r\n    /**\r\n     * 清理RT\r\n     * @param r \r\n     * @param g \r\n     * @param b \r\n     * @param a \r\n     */\r\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\r\n\r\n        RenderTexture2D._clearColor.r = r;\r\n        RenderTexture2D._clearColor.g = g;\r\n        RenderTexture2D._clearColor.b = b;\r\n        RenderTexture2D._clearColor.a = a;\r\n        //RenderTexture2D._clearColor.toLinear(RenderTexture2D._clearLinearColor);\r\n        //@ts-ignore\r\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, RenderTexture2D._clearColor, 1);\r\n    }\r\n\r\n    /**\r\n     * 获得像素数据。\r\n     * @param x X像素坐标。\r\n     * @param y Y像素坐标。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @return 像素数据。\r\n     */\r\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return LayaGL.textureContext.getRenderTextureData(this._renderTarget, x, y, width, height);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    recycle(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @internal\r\n     */\r\n    _disposeResource(): void {\r\n        //width 和height为0的时候不会创建资源\r\n        this._renderTarget && this._renderTarget.dispose();\r\n    }\r\n\r\n}\r\n\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n    //@ts-ignore\r\n    RenderTexture2D = NativeRenderTexture2D;\r\n}\r\n\r\n\r\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\n\r\n/**\r\n * WebGLRTMgr 管理WebGLRenderTarget的创建和回收\r\n * TODO 需求不大，管理成本高。先去掉。\r\n */\r\n\r\nexport class WebGLRTMgr {\r\n\r\n\tprivate static dict: any = {};\t\t//key=h*10000+w\r\n\t/**\r\n\t * 获得一个renderTarget\r\n\t * 暂时先按照严格大小判断。\r\n\t * \r\n\t * @param\tw\r\n\t * @param\th\r\n\t * @return\r\n\t */\r\n\tstatic getRT(w: number, h: number): RenderTexture2D {\r\n\t\tw = w | 0;\r\n\t\th = h | 0;\r\n\t\tif (w >= 10000) {\r\n\t\t\tconsole.error('getRT error! w too big');\r\n\t\t}\r\n\t\tvar ret: RenderTexture2D;\r\n\t\t/*\r\n\t\tvar key: number = h * 10000 + w;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[key];\r\n\t\tif (sw) {\r\n\t\t\tif (sw.length > 0) {\r\n\t\t\t\tret = sw.pop();\r\n\t\t\t\tret._mgrKey = key;\t//只有不再mgr中的才有key\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\tret = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n\t\t//ret._mgrKey = key;\r\n\t\treturn ret;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 回收一个renderTarget\r\n\t * @param\trt\r\n\t */\r\n\tstatic releaseRT(rt: RenderTexture2D): void {\r\n\t\trt.destroy();\r\n\t\t//rt._disposeResource();// 直接删除贴图。否则还要管理占用过多的时候的清理。  修改：去掉了，直接destroy，否则统计会以为没有释放掉。\r\n\t\treturn;\r\n\t\t/*\r\n\t\t//如果_mgrKey<=0表示已经加进来了。\r\n\t\tif (rt._mgrKey <= 0)\r\n\t\t\treturn;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[rt._mgrKey];\r\n\t\t!sw && (sw = [], WebGLRTMgr.dict[rt._mgrKey] = sw);\r\n\t\trt._mgrKey = 0;\r\n\t\tsw.push(rt);\r\n\t\t*/\r\n\t}\r\n}\r\n\r\n","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { StencilOperation } from \"../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { WebGLEngine } from \"./RenderEngine/WebGLEngine/WebGLEngine\";\r\n/**\r\n * @private\r\n */\r\nexport class RenderStateContext {\r\n    /**@internal */\r\n    static mainContext: any;\r\n    /**@internal */\r\n    static DepthTestCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static DepthMaskCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static DepthFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilTestCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilMaskCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static stencilOpCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendEquationCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendEquationSeparateCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendFuncSeperateCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static CullFaceCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static FrontFaceCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static stencilFuncArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blendEquationSeparateArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blenfunArray = new Array(2);\r\n    /**@internal */\r\n    static blendFuncSeperateArray = new Array(4);\r\n    /**@internal */\r\n    static stencilOpArray = new Array<number>(3);\r\n    \r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        RenderStateContext.DepthTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.DepthMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.DepthFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.stencilOpCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendEquationCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendEquationSeparateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendFuncSeperateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.CullFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.FrontFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthTest(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthMask(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthFunc(value: CompareFunction): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthFunc(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilTest(value);\r\n    }\r\n\r\n    /**\r\n     * 模板写入开关\r\n     * @param gl \r\n     * @param value \r\n     */\r\n    static setStencilMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilMask(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilFunc(fun: CompareFunction, ref: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilFunc(fun, ref);\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    static setstencilOp(fail: StencilOperation, zfail: StencilOperation, zpass: StencilOperation) {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setstencilOp(fail, zfail, zpass);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlend(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlend(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquation(blendEquation: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquation(blendEquation);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquationSeparate(blendEquationRGB: BlendEquationSeparate, blendEquationAlpha: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFunc(sFactor: BlendFactor, dFactor: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFunc(sFactor, dFactor);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFuncSeperate(srcRGB: BlendFactor, dstRGB: BlendFactor, srcAlpha: BlendFactor, dstAlpha: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setCullFace(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setCullFace(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setFrontFace(value: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setFrontFace(value);\r\n    }\r\n}\r\n\r\n\r\n","import { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\n\r\n//export type BlendFunc = (gl:WebGLRenderingContext)=>void\r\nexport class BlendMode {\r\n    static activeBlendFunction: Function = null;\r\n    /** @internal 这个不直接暴露给开发者*/\r\n    static NAMES = [\r\n        \"normal\",\r\n        \"add\",\r\n        \"multiply\",\r\n        \"screen\",\r\n        \"overlay\",\r\n        \"light\",\r\n        \"mask\",\r\n        \"destination-out\",\r\n        \"add_old\"];\r\n\r\n    /** @internal */\r\n    static TOINT: { [key: string]: number } = {\r\n        \"normal\": 0,\r\n        \"add\": 1,\r\n        \"multiply\": 2,\r\n        \"screen\": 3,\r\n        \"overlay\": 4,\r\n        \"light\": 5,\r\n        \"mask\": 6,\r\n        \"destination-out\": 7,\r\n        \"lighter\": 1,\r\n        \"lighter_old\": 8,\r\n        \"add_old\": 8\r\n    };\r\n\r\n    static NORMAL = \"normal\";\t\t\t\t\t//0\r\n    static MASK = \"mask\";\t\t\t\t\t//6\r\n    static LIGHTER = \"lighter\";\t\t\t\t\t//1  \r\n\r\n    static fns: any[];\r\n    static targetFns: any[];\r\n    /**@internal */\r\n    static _init_(): void {\r\n        BlendMode.fns = [\r\n            BlendMode.BlendNormal,      //0\r\n            BlendMode.BlendAdd,         //1\r\n            BlendMode.BlendMultiply,    //2\r\n            BlendMode.BlendScreen,      //3\r\n            BlendMode.BlendOverlay,     //4\r\n            BlendMode.BlendLight,       //5\r\n            BlendMode.BlendMask,        //6\r\n            BlendMode.BlendDestinationOut,   //7\r\n            BlendMode.BlendAddOld,         //8\r\n            BlendMode.BlendSourceAlpha,            //9\r\n        ];\r\n\r\n        BlendMode.targetFns = [\r\n            BlendMode.BlendNormalTarget,    //0\r\n            BlendMode.BlendAddTarget,       //1\r\n            BlendMode.BlendMultiplyTarget,  //2\r\n            BlendMode.BlendScreenTarget,    //3\r\n            BlendMode.BlendOverlayTarget,   //4\r\n            BlendMode.BlendLightTarget,     //5\r\n            BlendMode.BlendMask,            //6\r\n            BlendMode.BlendDestinationOut,  //7\r\n            BlendMode.BlendAddTargetOld,    //8\r\n            BlendMode.BlendSourceAlpha             //9\r\n        ];\r\n    }\r\n\r\n    static BlendNormal(): void {\r\n        //为了避免黑边，和canvas作为贴图的黑边\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n\r\n    }\r\n\r\n    /**@internal 这个add感觉不合理，所以改成old了 */\r\n    static BlendAddOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n\r\n    static BlendAdd(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiply(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreen(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlay(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendLight(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendNormalTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    /**@internal add不应该是1+dst_α 所以改成old */\r\n    static BlendAddTargetOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n    static BlendAddTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiplyTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreenTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlayTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceColor);\r\n    }\r\n\r\n    static BlendLightTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMask(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.SourceAlpha);\r\n    }\r\n\r\n    static BlendDestinationOut(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.Zero);\r\n    }\r\n    static BlendSourceAlpha(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.SourceAlpha, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n}\r\n\r\n","import { Texture2D } from \"./Texture2D\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Resource } from \"./Resource\";\r\n\r\nconst _rect1 = new Rectangle();\r\nconst _rect2 = new Rectangle();\r\n\r\n/**\r\n * <code>Texture</code> 是一个纹理处理类。\r\n */\r\nexport class Texture extends Resource {\r\n    /**@private 默认 UV 信息。*/\r\n    static readonly DEF_UV = new Float32Array([0, 0, 1.0, 0, 1.0, 1.0, 0, 1.0]);\r\n    /**@private */\r\n    static readonly NO_UV = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0]);\r\n    /**@private 反转 UV 信息。*/\r\n    static readonly INV_UV = new Float32Array([0, 1, 1.0, 1, 1.0, 0.0, 0, 0.0]);\r\n\r\n    /**@private uv的范围*/\r\n    uvrect: number[] = [0, 0, 1, 1]; //startu,startv, urange,vrange\r\n    /**@private */\r\n    private _bitmap: BaseTexture;\r\n    /**@internal */\r\n    public _uv: ArrayLike<number>;\r\n    /** @private */\r\n    private _w: number = 0;\r\n    /** @private */\r\n    private _h: number = 0;\r\n\r\n    /**沿 X 轴偏移量。*/\r\n    offsetX: number = 0;\r\n    /**沿 Y 轴偏移量。*/\r\n    offsetY: number = 0;\r\n    /**原始宽度（包括被裁剪的透明区域）。*/\r\n    sourceWidth: number = 0;\r\n    /**原始高度（包括被裁剪的透明区域）。*/\r\n    sourceHeight: number = 0;\r\n    /**图片地址*/\r\n    url: string;\r\n    /** UUID */\r\n    uuid: string;\r\n    /** @private */\r\n    scaleRate: number = 1;\r\n\r\n    /**九宫格*/\r\n    _sizeGrid?: Array<number>;\r\n    /**状态数量*/\r\n    _stateNum?: number;\r\n\r\n    /**@internal */\r\n    _clipCache: Map<string, Texture>;\r\n\r\n    /**\r\n     *  根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\r\n     * @param\tsource 绘图资源 Texture2D 或者 Texture对象。\r\n     * @param\tx 起始绝对坐标 x 。\r\n     * @param\ty 起始绝对坐标 y 。\r\n     * @param\twidth 宽绝对值。\r\n     * @param\theight 高绝对值。\r\n     * @param\toffsetX X 轴偏移量（可选）。\t就是[x,y]相对于原始小图片的位置。一般都是正的，表示裁掉了空白边的大小，如果是负的一般表示加了保护边\r\n     * @param\toffsetY Y 轴偏移量（可选）。\r\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @return  <code>Texture</code> 对象。\r\n     */\r\n    static create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): Texture {\r\n        return Texture._create(source, x, y, width, height, offsetX, offsetY, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\r\n     * @param\tsource 绘图资源 Texture2D 或者 Texture 对象。\r\n     * @param\tx 起始绝对坐标 x 。\r\n     * @param\ty 起始绝对坐标 y 。\r\n     * @param\twidth 宽绝对值。\r\n     * @param\theight 高绝对值。\r\n     * @param\toffsetX X 轴偏移量（可选）。\r\n     * @param\toffsetY Y 轴偏移量（可选）。\r\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @param\toutTexture 返回的Texture对象。\r\n     * @return  <code>Texture</code> 对象。\r\n     */\r\n    static _create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0, outTexture: Texture = null): Texture {\r\n        var btex: boolean = source instanceof Texture;\r\n        var uv = btex ? ((<Texture>source)).uv : Texture.DEF_UV;\r\n        var bitmap = btex ? ((<Texture>source)).bitmap : <Texture2D>source;\r\n\r\n        if (bitmap.width && (x + width) > bitmap.width)\r\n            width = bitmap.width - x;\r\n        if (bitmap.height && (y + height) > bitmap.height)\r\n            height = bitmap.height - y;\r\n        var tex: Texture;\r\n        if (outTexture) {\r\n            tex = outTexture;\r\n            tex.setTo(bitmap, null, sourceWidth || width, sourceHeight || height);\r\n        } else {\r\n            tex = new Texture(bitmap, null, sourceWidth || width, sourceHeight || height)\r\n        }\r\n        tex.width = width;\r\n        tex.height = height;\r\n        tex.offsetX = offsetX;\r\n        tex.offsetY = offsetY;\r\n\r\n        var dwidth: number = 1 / bitmap.width;\r\n        var dheight: number = 1 / bitmap.height;\r\n        x *= dwidth;\r\n        y *= dheight;\r\n        width *= dwidth;\r\n        height *= dheight;\r\n\r\n        var u1: number = tex.uv[0], v1: number = tex.uv[1], u2: number = tex.uv[4], v2: number = tex.uv[5];\r\n        var inAltasUVWidth: number = (u2 - u1), inAltasUVHeight: number = (v2 - v1);\r\n        var oriUV: any[] = moveUV(uv[0], uv[1], [x, y, x + width, y, x + width, y + height, x, y + height]);\r\n        tex.uv = new Float32Array([u1 + oriUV[0] * inAltasUVWidth, v1 + oriUV[1] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[2]) * inAltasUVWidth, v1 + oriUV[3] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[4]) * inAltasUVWidth, v2 - (1 - oriUV[5]) * inAltasUVHeight,\r\n        u1 + oriUV[6] * inAltasUVWidth, v2 - (1 - oriUV[7]) * inAltasUVHeight]);\r\n\r\n        var bitmapScale: number = (<Texture>source).scaleRate;\r\n        if (bitmapScale && bitmapScale != 1) {\r\n            tex.sourceWidth /= bitmapScale;\r\n            tex.sourceHeight /= bitmapScale;\r\n            tex.width /= bitmapScale;\r\n            tex.height /= bitmapScale;\r\n            tex.scaleRate = bitmapScale;\r\n            tex.offsetX /= bitmapScale;\r\n            tex.offsetY /= bitmapScale;\r\n        } else {\r\n            tex.scaleRate = 1;\r\n        }\r\n        return tex;\r\n    }\r\n\r\n    /**\r\n     * 截取Texture的一部分区域，生成新的Texture，如果两个区域没有相交，则返回null。\r\n     * @param\ttexture\t目标Texture。\r\n     * @param\tx\t\t相对于目标Texture的x位置。\r\n     * @param\ty\t\t相对于目标Texture的y位置。\r\n     * @param\twidth\t截取的宽度。\r\n     * @param\theight\t截取的高度。\r\n     * @return 返回一个新的Texture。\r\n     */\r\n    static createFromTexture(texture: Texture, x: number, y: number, width: number, height: number): Texture {\r\n        var texScaleRate: number = texture.scaleRate;\r\n        if (texScaleRate != 1) {\r\n            x *= texScaleRate;\r\n            y *= texScaleRate;\r\n            width *= texScaleRate;\r\n            height *= texScaleRate;\r\n        }\r\n        var rect: Rectangle = Rectangle.TEMP.setTo(x - texture.offsetX, y - texture.offsetY, width, height);\r\n        var result = rect.intersection(_rect1.setTo(0, 0, texture.width, texture.height), _rect2);\r\n        if (result)\r\n            return Texture.create(texture, result.x, result.y, result.width, result.height, result.x - rect.x, result.y - rect.y, width, height);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * uv\r\n     */\r\n    get uv(): ArrayLike<number> {\r\n        return this._uv;\r\n    }\r\n\r\n    set uv(value: ArrayLike<number>) {\r\n        this.uvrect[0] = Math.min(value[0], value[2], value[4], value[6]);\r\n        this.uvrect[1] = Math.min(value[1], value[3], value[5], value[7]);\r\n        this.uvrect[2] = Math.max(value[0], value[2], value[4], value[6]) - this.uvrect[0];\r\n        this.uvrect[3] = Math.max(value[1], value[3], value[5], value[7]) - this.uvrect[1];\r\n        this._uv = value;\r\n    }\r\n\r\n    /** 实际宽度。*/\r\n    get width(): number {\r\n        if (this._w)\r\n            return this._w;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._w = value;\r\n        this.sourceWidth || (this.sourceWidth = value);\r\n    }\r\n\r\n    /** 实际高度。*/\r\n    get height(): number {\r\n        if (this._h)\r\n            return this._h;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._h = value;\r\n        this.sourceHeight || (this.sourceHeight = value);\r\n    }\r\n\r\n    /**\r\n     * 获取位图。\r\n     * @return 位图。\r\n     */\r\n    get bitmap(): BaseTexture {\r\n        return this._bitmap;\r\n    }\r\n\r\n    /**\r\n     * 设置位图。\r\n     * @param 位图。\r\n     */\r\n    set bitmap(value: BaseTexture) {\r\n        if (this._bitmap == value)\r\n            return;\r\n        this._bitmap && this._bitmap._removeReference(this._referenceCount);\r\n        this._bitmap = value;\r\n        value && (value._addReference(this._referenceCount));\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Texture</code> 实例。\r\n     * @param bitmap 位图资源。\r\n     * @param uv UV 数据信息。\r\n     */\r\n    constructor(source: Texture | BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0) {\r\n        super(false);\r\n        let bitmap = (source instanceof Texture) ? source.bitmap : source;\r\n        this.setTo(bitmap, uv, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addReference(count: number = 1): void {\r\n        super._addReference(count);\r\n        this._bitmap && this._bitmap._addReference(count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _removeReference(count: number = 1): void {\r\n        this._bitmap && this._bitmap._removeReference(count);\r\n        super._removeReference(count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getSource(cb: () => void = null): any {\r\n        if (this._destroyed || !this._bitmap)\r\n            return null;\r\n        this.recoverBitmap(cb);\r\n        return this._bitmap.destroyed ? null : this.bitmap._getSource();\r\n    }\r\n\r\n    /**\r\n     * 设置此对象的位图资源、UV数据信息。\r\n     * @param\tbitmap 位图资源\r\n     * @param\tuv UV数据信息\r\n     */\r\n    setTo(bitmap: BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): void {\r\n        this.bitmap = bitmap;\r\n        this.sourceWidth = sourceWidth;\r\n        this.sourceHeight = sourceHeight;\r\n\r\n        if (bitmap) {\r\n            this._w = bitmap.width;\r\n            this._h = bitmap.height;\r\n            this.sourceWidth = this.sourceWidth || bitmap.width;\r\n            this.sourceHeight = this.sourceHeight || bitmap.height\r\n        }\r\n        this.uv = uv || Texture.DEF_UV;\r\n    }\r\n\r\n    /**\r\n     * 加载指定地址的图片。\r\n     * @param\turl 图片地址。\r\n     * @param\tcomplete 加载完成回调\r\n     */\r\n    load(url: string, complete?: Handler): Promise<void> {\r\n        if (this._destroyed)\r\n            return Promise.resolve();\r\n\r\n        return ILaya.loader.load(url).then((tex: Texture) => {\r\n            let bit = tex.bitmap;\r\n            this.bitmap = bit;\r\n            this.sourceWidth = this._w = bit.width;\r\n            this.sourceHeight = this._h = bit.height;\r\n            complete && complete.run();\r\n            this.event(Event.READY, this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获得像素数据\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @returns \r\n     */\r\n    getTexturePixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        var st: number, dst: number, i: number;\r\n        var tex2d = this.bitmap;\r\n        // 适配图集\r\n        var texw = this._w;\r\n        var texh = this._h;\r\n        var sourceWidth = this.sourceWidth;\r\n        var sourceHeight = this.sourceHeight;\r\n        var tex2dw = tex2d.width;\r\n        var tex2dh = tex2d.height;\r\n        var offsetX = this.offsetX;\r\n        var offsetY = this.offsetY;\r\n        let draww = width;\r\n        let drawh = height;\r\n        if (x + width > texw + offsetX) draww -= (x + width) - texw - offsetX;\r\n        if (x + width > sourceWidth) width -= (x + width) - sourceWidth;\r\n        if (y + height > texh + offsetY) drawh -= (y + height) - texh - offsetY;\r\n        if (y + height > sourceHeight) height -= (y + height) - sourceHeight;\r\n        if (width <= 0 || height <= 0) return null;\r\n        let marginL = offsetX > x ? offsetX - x : 0; // 考虑图集的情况，只渲染图集中的图片，左侧可能需要补充空白\r\n        let marginT = offsetY > y ? offsetY - y : 0;\r\n        let rePosX = x > offsetX ? x - offsetX : 0; // 考虑图集的情况，只渲染图集中的图片，不渲染 offset，需要重新定位 x 坐标\r\n        let rePosY = y > offsetY ? y - offsetY : 0;\r\n        draww -= marginL; // 考虑图集的情况，只渲染图集中的图片，其大小要减去空白\r\n        drawh -= marginT;\r\n\r\n        var wstride = width * 4;\r\n        var pix: Uint8Array = null;\r\n        try {\r\n            pix = <Uint8Array>(tex2d as Texture2D).getPixels();\r\n        } catch (e) {\r\n        }\r\n        if (pix) {\r\n            if (x == 0 && y == 0 && width == tex2dw && height == tex2dh)\r\n                return pix;\r\n            //否则只取一部分\r\n            let uv = (this._uv as Array<number>).slice();\r\n            let atlasPosX = Math.round(uv[0] * tex2dw); // 计算图片在图集中的位置\r\n            let atlasPosY = Math.round(uv[1] * tex2dh);\r\n            var ret: Uint8Array = new Uint8Array(width * height * 4);\r\n            wstride = tex2dw * 4;\r\n            dst = (atlasPosY + rePosY) * wstride;\r\n            st = atlasPosX * 4 + rePosX * 4 + dst;\r\n            for (i = 0; i < drawh; i++) {\r\n                ret.set(pix.slice(st, st + draww * 4), width * 4 * (i + marginT) + marginL * 4);\r\n                st += wstride;\r\n            }\r\n            return ret;\r\n        }\r\n\r\n        // 如果无法直接获取，只能先渲染出来\r\n        var ctx = new ILaya.Context();\r\n        ctx.size(width, height);\r\n        ctx.asBitmap = true;\r\n        var uv: number[] = null;\r\n        if (x != 0 || y != 0 || width != tex2dw || height != tex2dh) {\r\n            uv = (this._uv as number[]).slice();\t// 复制一份uv\r\n            var stu = uv[0];\r\n            var stv = uv[1];\r\n            var uvw = uv[2] - stu;\r\n            var uvh = uv[7] - stv;\r\n            var uk = uvw / texw;\r\n            var vk = uvh / texh;\r\n            uv = [stu + rePosX * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + (rePosY + drawh) * vk,\r\n            stu + rePosX * uk, stv + (rePosY + drawh) * vk];\r\n        }\r\n        ctx._drawTextureM(this, marginL, marginT, draww, drawh, null, 1.0, uv, 0xffffffff);\r\n        //ctx.drawTexture(value, -x, -y, x + width, y + height);\r\n        ctx._targets.start();\r\n        ctx.flush();\r\n        ctx._targets.end();\r\n        ctx._targets.restore();\r\n        var dt: Uint8Array = ctx._targets.getData(0, 0, width, height) as Uint8Array;\r\n        ctx.destroy();\r\n        // 上下颠倒一下\r\n        ret = new Uint8Array(width * height * 4);\r\n        st = 0;\r\n        dst = (height - 1) * wstride;\r\n        for (i = height - 1; i >= 0; i--) {\r\n            ret.set(dt.slice(dst, dst + wstride), st);\r\n            st += wstride;\r\n            dst -= wstride;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 获取Texture上的某个区域的像素点\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @return  返回像素点集合\r\n     */\r\n    getPixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        return this.getTexturePixels(x, y, width, height);\r\n        // canvas 不支持\r\n    }\r\n\r\n    /**\r\n     * 通过url强制恢复bitmap。\r\n     */\r\n    recoverBitmap(callback?: () => void): void {\r\n        var url = this._bitmap.url;\r\n        if (!this._destroyed && (!this._bitmap || this._bitmap.destroyed) && url) {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.bitmap = tex.bitmap;\r\n                callback && callback();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 强制释放Bitmap,无论是否被引用。\r\n     */\r\n    disposeBitmap(): void {\r\n        if (!this._destroyed && this._bitmap) {\r\n            this._bitmap.destroy();\r\n        }\r\n    }\r\n\r\n    get valid(): boolean {\r\n        return !this._destroyed && this._bitmap && !this._bitmap.destroyed;\r\n    }\r\n\r\n    /**\r\n     * obsolute\r\n     */\r\n    public get obsolute(): boolean {\r\n        return this._obsolute || !this._bitmap || this._bitmap.destroyed || this._bitmap.obsolute;\r\n    }\r\n\r\n    public set obsolute(value: boolean) {\r\n        this._obsolute = value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _disposeResource(): void {\r\n        let bit = this._bitmap;\r\n        this._bitmap = null;\r\n        if (bit)\r\n            bit._removeReference(this._referenceCount);\r\n    }\r\n\r\n    /**\r\n     * 获得clip贴图\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @returns \r\n     */\r\n    public getCachedClip(x: number, y: number, width: number, height: number): Texture {\r\n        let key = `${x}_${y}_${width}_${height}`;\r\n        if (!this._clipCache)\r\n            this._clipCache = new Map();\r\n\r\n        let tex = this._clipCache.get(key);\r\n        if (tex)\r\n            return tex;\r\n        tex = Texture.createFromTexture(this, x, y, width, height);\r\n        if (tex)\r\n            tex._sizeGrid = this._sizeGrid;\r\n\r\n        if (this._clipCache.size > 100)\r\n            this._clipCache.clear();\r\n\r\n        this._clipCache.set(key, tex);\r\n\r\n        return tex;\r\n    }\r\n}\r\n\r\n/**\r\n * 平移 UV。\r\n * @param offsetX 沿 X 轴偏移量。\r\n * @param offsetY 沿 Y 轴偏移量。\r\n * @param uv 需要平移操作的的 UV。\r\n * @return 平移后的UV。\r\n */\r\nfunction moveUV(offsetX: number, offsetY: number, uv: any[]): any[] {\r\n    for (var i: number = 0; i < 8; i += 2) {\r\n        uv[i] += offsetX;\r\n        uv[i + 1] += offsetY;\r\n    }\r\n    return uv;\r\n}\r\n","export enum BlendEquationSeparate{\r\n    ADD,//source + destination (default value)\r\n    SUBTRACT,// source - destination\r\n    REVERSE_SUBTRACT,//destination - source\r\n    //TODO:\r\n    MIN,//Minimum of source and destination\r\n    MAX,//Maximum of source and destination\r\n}","export enum BlendType{\r\n    /**混合枚举_禁用。*/\r\n\tBLEND_DISABLE = 0,\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tBLEND_ENABLE_ALL = 1,\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tBLEND_ENABLE_SEPERATE = 2\r\n}","export enum CompareFunction {\r\n    /** never pass. */\r\n    Never,\r\n    /** pass if the incoming value is less than the depth/stencil buffer value. */\r\n    Less,\r\n    /** pass if the incoming value equals the depth/stencil buffer value. */\r\n    Equal,\r\n    /** pass if the incoming value is less than or equal to the depth/stencil buffer value. */\r\n    LessEqual,\r\n    /** pass if the incoming value is greater than the depth/stencil buffer value. */\r\n    Greater,\r\n    /** pass if the incoming value is not equal to the depth/stencil buffer value. */\r\n    NotEqual,\r\n    /** pass if the incoming value is greater than or equal to the depth/stencil buffer value. */\r\n    GreaterEqual,\r\n    /** always pass. */\r\n    Always,\r\n    /** off */\r\n    Off,\r\n}\r\n","export enum CullMode {\r\n    /** Disable culling. */\r\n    Off = 0,\r\n    /** cut the front-face of the polygons. */\r\n    Front = 1,\r\n    /** cut the back-face of the polygons. */\r\n    Back = 2\r\n  }\r\n  ","export enum StencilOperation {\r\n    /** Keeps the current value. */\r\n    Keep,\r\n    /** Sets the stencil buffer value to 0. */\r\n    Zero,\r\n    /** Sets the stencil buffer value to the reference value. */\r\n    Replace,\r\n    /** Increments the current stencil buffer value. Clamps to the maximum representable unsigned value. */\r\n    IncrementSaturate,\r\n    /** Decrements the current stencil buffer value. Clamps to 0. */\r\n    DecrementSaturate,\r\n    /** Inverts the current stencil buffer value bitwise. */\r\n    Invert,\r\n    /** Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value. */\r\n    IncrementWrap,\r\n    /** Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable unsigned value when decrementing a stencil buffer value of 0. */\r\n    DecrementWrap\r\n  }\r\n  ","import { Utils } from \"../utils/Utils\";\r\n/**\r\n * 此类用来描述资源\r\n */\r\nexport class AssetDb {\r\n    /**\r\n     * 默认资源实例\r\n     */\r\n    static inst: AssetDb = new AssetDb();\r\n\r\n    /**\r\n     * uuid 数据\r\n     */\r\n    uuidMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * shaderName 数据\r\n     */\r\n    shaderNameMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * 元资源 数据\r\n     */\r\n    metaMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * uuid获得url\r\n     * @param uuid uuid\r\n     * @returns \r\n     */\r\n    UUID_to_URL(uuid: string): string {\r\n        return this.uuidMap[uuid];\r\n    }\r\n\r\n    /**\r\n     * 异步uuid获得Url\r\n     * @param uuid \r\n     * @returns \r\n     */\r\n    UUID_to_URL_async(uuid: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * Url获得uuid值\r\n     * @param url \r\n     * @returns \r\n     */\r\n    URL_to_UUID_async(url: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获取真实的Url\r\n     * @param url \r\n     * @param onResolve \r\n     * @returns \r\n     */\r\n    resolveURL(url: string, onResolve?: (url: string) => void): Promise<string> {\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            return AssetDb.inst.UUID_to_URL_async(uuid).then(url => {\r\n                if (onResolve)\r\n                    onResolve(url);\r\n                return url;\r\n            });\r\n        }\r\n        else {\r\n            if (onResolve)\r\n                onResolve(url);\r\n            return Promise.resolve(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 查找shadername的地址\r\n     * @param shaderName \r\n     * @returns \r\n     */\r\n    shaderName_to_URL(shaderName: string): string {\r\n        return this.shaderNameMap[shaderName];\r\n    }\r\n\r\n    shaderName_to_URL_async(shaderName: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获得元数据\r\n     * @param url \r\n     * @param uuid \r\n     * @returns \r\n     */\r\n    getMeta(url: string, uuid: string): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获得子资源路径\r\n     * @param url \r\n     * @param uuid \r\n     * @param subAssetName \r\n     * @param subAssetExt \r\n     * @returns \r\n     */\r\n    getSubAssetURL(url: string, uuid: string, subAssetName: string, subAssetExt: string): string {\r\n        if (subAssetName)\r\n            return `${Utils.replaceFileExtension(url, \"\")}@${subAssetName}.${subAssetExt}`;\r\n        else\r\n            return url;\r\n    }\r\n}","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * <p><code>URL</code> 提供URL格式化，URL版本管理的类。</p>\r\n * <p>引擎加载资源的时候，会自动调用formatURL函数格式化URL路径</p>\r\n * <p>通过basePath属性可以设置网络基础路径</p>\r\n * <p>通过设置customFormat函数，可以自定义URL格式化的方式</p>\r\n */\r\nexport class URL {\r\n    /**URL地址版本映射表，比如{\"aaa/bb.png\":\"edcba\",\"aaa/bb.png\":\"1342a\"}，默认情况下，通过formatURL格式化后，会自动生成为\"aaa/bb-1342a.png\"的一个地址*/\r\n    static version: Record<string, string> = {};\r\n\r\n    /**基础路径。如果不设置，默认为当前网页的路径。最终地址将被格式化为 basePath+相对URL地址，*/\r\n    static basePath: string = \"\";\r\n    /**扩展的基础路径映射表，比如{\"aa/\":\"http://abc.com/\"},则把路径以aa/开头的资源映射到http://abc.com/下*/\r\n    static basePaths: Record<string, string> = {};\r\n\r\n    /**root路径。只针对'~'类型的url路径有效*/\r\n    static rootPath: string = \"\";\r\n\r\n    /**@private */\r\n    private _url: string;\r\n    /**@private */\r\n    private _path: string;\r\n\r\n    private static overrideFileExts: Record<string, string> = {};\r\n    private static hasExtOverrides: boolean;\r\n\r\n    static __init__() {\r\n        //xiaomi 没有location\r\n        //Vivo location.protocol是\"\"\r\n        //微信真机 location.protocol是undefined\r\n        URL.rootPath = URL.basePath = (location && location.protocol != undefined && location.protocol != \"\") ? URL.getPath(location.protocol + \"//\" + location.host + location.pathname) : \"\";\r\n    }\r\n\r\n    static initMiniGameExtensionOverrides() {\r\n        if (LayaEnv.isPreview)\r\n            return;\r\n\r\n        URL.overrideExtension([\"rendertexture\", \"videotexture\"], \"rt.json\");\r\n        URL.overrideExtension([\"controller\"], \"controller.json\");\r\n        URL.overrideExtension([\"mc\"], \"mc.bin\");\r\n        URL.overrideExtension([\"mcc\"], \"mcc.json\");\r\n        URL.overrideExtension([\"shader\"], \"shader.json\");\r\n        URL.overrideExtension([\"scene3d\", \"scene\", \"taa\", \"prefab\"], \"json\");\r\n        URL.overrideExtension([\"fui\"], \"fui.json\");\r\n        URL.overrideExtension([\"glsl\"], \"glsl.txt\");\r\n        URL.overrideExtension([\"skel\"], \"skel.bin\");\r\n        URL.overrideExtension([\"lavm\"], \"lavm.json\");\r\n    }\r\n\r\n    /**创建一个新的 <code>URL</code> 实例。*/\r\n    constructor(url: string) {\r\n        this._url = URL.formatURL(url);\r\n        this._path = URL.getPath(url);\r\n    }\r\n\r\n    /**格式化后的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /**地址的文件夹路径（不包括文件名）。*/\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n\r\n    /** 自定义URL格式化的方式。例如： customFormat = function(url:String):String{} */\r\n    static customFormat: Function = function (url: string): string {\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 包含normalizedURL功能，并且合并base，如果base没有提供，则使用URL.basePath或者URL.rootPath。\r\n     * @param url 地址。\r\n     * @param base 基础路径，如果没有，则使用URL.basePath或者URL.rootPath。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static formatURL(url: string, base?: string): string {\r\n        if (!url)\r\n            return base || URL.basePath || \"\";\r\n\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            let url2 = AssetDb.inst.UUID_to_URL(uuid);\r\n            if (!url2)\r\n                return url;\r\n\r\n            url = url2;\r\n        }\r\n\r\n        let char1 = url.charCodeAt(0);\r\n        if (url.indexOf(\":\") == -1 && char1 !== 47) { //已经format过\r\n            //自定义路径格式化\r\n            if (URL.customFormat != null)\r\n                url = URL.customFormat(url);\r\n\r\n            let ver = URL.version[url];\r\n            if (ver != null) {\r\n                let i = url.lastIndexOf(\".\");\r\n                url = url.substring(0, i) + \"-\" + ver + url.substring(i);\r\n            }\r\n\r\n            if (char1 === 126) // ~\r\n                url = URL.join(URL.rootPath, url.substring(2));\r\n            else {\r\n                if (base == null) {\r\n                    base = URL.basePath;\r\n                    for (let k in URL.basePaths) {\r\n                        if (url.startsWith(k)) {\r\n                            base = URL.basePaths[k];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                url = URL.join(base, url);\r\n            }\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 处理扩展名的自动转换\r\n     * @param url 地址。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static postFormatURL(url: string): string {\r\n        if (URL.hasExtOverrides) {\r\n            let extold = Utils.getFileExtension(url);\r\n            let ext = URL.overrideFileExts[extold];\r\n            if (ext != null)\r\n                url = Utils.replaceFileExtension(url, ext);\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 格式化相对路径。主要是处理.和..这些情况。\r\n     */\r\n    static normalize(url: string): string {\r\n        if (url.indexOf(\"./\") == -1)\r\n            return url;\r\n\r\n        let parts = url.split(\"/\");\r\n        let len = parts.length;\r\n        let i = 0;\r\n        while (i < len) {\r\n            if (parts[i] == \".\") {\r\n                parts.splice(i, 1);\r\n                len--;\r\n                continue;\r\n            }\r\n            else if (parts[i] == '..') {\r\n                let index: number = i - 1;\r\n                if (index >= 0 && parts[index] !== '..') {\r\n                    parts.splice(index, 2);\r\n                    len -= 2;\r\n                    i--;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            i++;\r\n        }\r\n        parts.length = len;\r\n        return parts.join('/');\r\n    }\r\n\r\n    static getResURLByUUID(url: string): string {\r\n        if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\r\n            return \"res://\" + url;\r\n        else\r\n            return url;\r\n    }\r\n\r\n    /**\r\n    * 组合相对路径并格式化\r\n    * @param base\r\n    * @param path\r\n    */\r\n    static join(base: string, path: string): string {\r\n        if (!path) return \"\";\r\n\r\n        //如果是全路径，直接返回，提高性能\r\n        if (path.indexOf(\":\") > 0)\r\n            return path;\r\n\r\n        if (base) {\r\n            let char1 = path.charCodeAt(0);\r\n            if (char1 !== 126 && char1 !== 47) { // ~或者 /\r\n                if (base.charCodeAt(base.length - 1) !== 47)\r\n                    path = base + \"/\" + path;\r\n                else\r\n                    path = base + path;\r\n            }\r\n        }\r\n\r\n        return URL.normalize(path);\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件夹路径（不包括文件名）。\r\n     * <p><b>注意：</b>末尾有斜杠（/）。</p>\r\n     * @param url url地址。\r\n     * @return 返回文件夹路径。\r\n     */\r\n    static getPath(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(0, ofs + 1) : \"\";\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件名。\r\n     * @param url 地址。\r\n     * @return 返回文件名。\r\n     */\r\n    static getFileName(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(ofs + 1) : url;\r\n    }\r\n\r\n    /**\r\n     * 获取URL版本字符。\r\n     * @param url\r\n     * @return\r\n     */\r\n    static getURLVerion(url: string): string {\r\n        var index: number = url.indexOf(\"?\");\r\n        return index >= 0 ? url.substring(index) : null;\r\n    }\r\n\r\n    /**\r\n     * 下载时，转换URL的扩展名。\r\n     * @originalExts 原始扩展名。例如[\"scene\"]。\r\n     * @targetExt 要转换为的扩展名。例如\"json\"。\r\n     */\r\n    static overrideExtension(originalExts: Array<string>, targetExt: string) {\r\n        for (let ext of originalExts)\r\n            URL.overrideFileExts[ext] = targetExt;\r\n        URL.hasExtOverrides = true;\r\n    }\r\n}","import { ShaderCompile } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport class IncludeFile {\r\n    static splitToWords(str: string, block: ShaderNode): any[] {//这里要修改\r\n        var out: any[] = [];\r\n        /*\r\n           var words:Array = str.split(_splitToWordExps);\r\n           trace(str);\r\n           trace(words);\r\n         */\r\n        var c: string;\r\n        var ofs: number = -1;\r\n        var word: string;\r\n        for (var i: number = 0, n: number = str.length; i < n; i++) {\r\n            c = str.charAt(i);\r\n            if (\" \\t=+-*/&%!<>()'\\\",;\".indexOf(c) >= 0) {\r\n                if (ofs >= 0 && (i - ofs) > 1) {\r\n                    word = str.substr(ofs, i - ofs);\r\n                    out.push(word);\r\n                }\r\n                if (c == '\"' || c == \"'\") {\r\n                    var ofs2: number = str.indexOf(c, i + 1);\r\n                    if (ofs2 < 0) {\r\n                        throw \"Sharder err:\" + str;\r\n                    }\r\n                    out.push(str.substr(i + 1, ofs2 - i - 1));\r\n                    i = ofs2;\r\n                    ofs = -1;\r\n                    continue;\r\n                }\r\n                if (c == '(' && block && out.length > 0) {\r\n                    word = out[out.length - 1] + \";\";\r\n                    if (\"vec4;main;\".indexOf(word) < 0)\r\n                        block.useFuns += word;\r\n                }\r\n                ofs = -1;\r\n                continue;\r\n            }\r\n            if (ofs < 0) ofs = i;\r\n        }\r\n        if (ofs < n && (n - ofs) > 1) {\r\n            word = str.substr(ofs, n - ofs);\r\n            out.push(word);\r\n        }\r\n        return out;\r\n    }\r\n\r\n\r\n    script: string;\r\n    codes: any = {};\r\n    funs: any = {};\r\n    curUseID: number = -1;\r\n    funnames: string = \"\";\r\n\r\n    constructor(txt: string) {\r\n        this.script = txt;\r\n        var begin: number = 0, ofs: number, end: number;\r\n        while (true) {\r\n            begin = txt.indexOf(\"#begin\", begin);\r\n            if (begin < 0) break;\r\n\r\n            end = begin + 5;\r\n            while (true) {\r\n                end = txt.indexOf(\"#end\", end);\r\n                if (end < 0) break;\r\n                if (txt.charAt(end + 4) === 'i')\r\n                    end += 5;\r\n                else break;\r\n            }\r\n\r\n            if (end < 0) {\r\n                throw \"add include err,no #end:\" + txt;\r\n            }\r\n\r\n            ofs = txt.indexOf('\\n', begin);\r\n            var words: any[] = IncludeFile.splitToWords(txt.substr(begin, ofs - begin), null);\r\n            if (words[1] == 'code') {\r\n                this.codes[words[2]] = txt.substr(ofs + 1, end - ofs - 1);\r\n            } else if (words[1] == 'function')//#begin function void test()\r\n            {\r\n                ofs = txt.indexOf(\"function\", begin);\r\n                ofs += \"function\".length;\r\n                this.funs[words[3]] = txt.substr(ofs + 1, end - ofs - 1);\r\n                this.funnames += words[3] + \";\";\r\n            }\r\n\r\n            begin = end + 1;\r\n        }\r\n    }\r\n\r\n    getWith(name: string | null = null): string {\r\n        var r: string = name ? this.codes[name] : this.script;\r\n        if (!r) {\r\n            throw \"get with error:\" + name;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    getFunsScript(funsdef: string): string {\r\n        var r: string = \"\";\r\n        for (var i in this.funs) {\r\n            if (funsdef.indexOf(i + \";\") >= 0) {\r\n                r += this.funs[i];\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class ShaderNode {\r\n    private static __id: number = 1;\r\n    //是否删除无用代码\r\n    private static __noCompileEnable = true;\r\n\r\n    childs: any[] = [];\r\n    text: string = \"\";\r\n    parent: ShaderNode;\r\n    name: string;\r\n    noCompile: boolean;\r\n    includefiles: any[];\r\n    condition: any;\r\n    conditionType: number;\r\n    useFuns: string = \"\";\r\n    z: number = 0;\r\n    src: string;\r\n\r\n    constructor(includefiles: any[]) {\r\n        this.includefiles = includefiles;\r\n    }\r\n\r\n    setParent(parent: ShaderNode): void {\r\n        parent.childs.push(this);\r\n        this.z = parent.z + 1;\r\n        this.parent = parent;\r\n    }\r\n\r\n    setCondition(condition: string, type: number): void {\r\n        if (condition) {\r\n            this.conditionType = type;\r\n            condition = condition.replace(/(\\s*$)/g, \"\");\r\n            this.condition = function (): boolean {\r\n                return (this as any)[condition];\r\n            }\r\n            this.condition.__condition = condition;\r\n        }\r\n    }\r\n\r\n    toscript(def: any, out: any[]): any[] {\r\n        return this._toscript(def, out, ++ShaderNode.__id);\r\n    }\r\n\r\n    private _toscript(def: any, out: any[], id: number): any[] {\r\n        if (this.childs.length < 1 && !this.text) return out;\r\n        var outIndex: number = out.length;\r\n        if (this.condition) {\r\n            var ifdef: boolean = !!this.condition.call(def);\r\n            this.conditionType === 2&&(ifdef = !ifdef); //2 is ShaderCompile.IFDEF_ELSE && (ifdef = !ifdef);\r\n            if (!ifdef&&ShaderNode.__noCompileEnable) return out;\r\n        }\r\n        if(this.noCompile||!ShaderNode.__noCompileEnable)\r\n        this.text && out.push(this.text);\r\n        this.childs.length > 0 && this.childs.forEach(function (o: ShaderNode, index: number, arr: ShaderNode[]): void {\r\n            o._toscript(def, out, id);\r\n        });\r\n\r\n        if (this.includefiles.length > 0 && this.useFuns.length > 0) {\r\n            var funsCode: string;\r\n            for (var i: number = 0, n: number = this.includefiles.length; i < n; i++) {\r\n                //如果已经加入了，就不要再加\r\n                if (this.includefiles[i].curUseID == id) {\r\n                    continue;\r\n                }\r\n                funsCode = this.includefiles[i].file.getFunsScript(this.useFuns);\r\n                if (funsCode.length > 0) {\r\n                    this.includefiles[i].curUseID = id;\r\n                    out[0] = funsCode + out[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n}\r\n\r\n\r\n","import { ILaya } from \"../../../ILaya\";\r\nimport { BlendEquationSeparate } from \"../../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../../RenderEngine/RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\r\nimport { StencilOperation } from \"../../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { RenderState } from \"../../RenderEngine/RenderShader/RenderState\";\r\nimport { URL } from \"../../net/URL\";\r\nimport { IncludeFile } from \"./IncludeFile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport interface IShaderCompiledObj {\r\n    vsNode: ShaderNode;\r\n    psNode: ShaderNode;\r\n    includeNames: Set<string>;\r\n    defs: Set<string>;\r\n};\r\n\r\ntype IncludeItem = { name: string, node: ShaderNode, codeName: string, file: IncludeFile };\r\n\r\nconst _clearCR: RegExp = new RegExp(\"\\r\", \"g\");\r\nconst _removeAnnotation: RegExp = new RegExp(\"(/\\\\*([^*]|[\\\\r\\\\\\n]|(\\\\*+([^*/]|[\\\\r\\\\n])))*\\\\*+/)|(//.*)\", \"g\");\r\nconst _reg: RegExp = new RegExp(\"(\\\".*\\\")|('.*')|([#\\\\w\\\\*-\\\\.+/()=<>{}\\\\\\\\]+)|([,;:\\\\\\\\])\", \"g\");\r\nconst _splitToWordExps: RegExp = new RegExp(\"[(\\\".*\\\")]+|[('.*')]+|([ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;])\", \"g\");\r\nconst _splitToWordExps3: RegExp = new RegExp(\"[ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;\\\\|]\", \"g\");\r\n\r\nconst CullStateMap: Record<string, CullMode> = {\r\n    \"Back\": CullMode.Back,\r\n    \"Front\": CullMode.Front,\r\n    \"Off\": CullMode.Off\r\n}\r\nconst BlendStateMap: Record<string, BlendType> = {\r\n    \"Disable\": BlendType.BLEND_DISABLE,\r\n    \"All\": BlendType.BLEND_ENABLE_ALL,\r\n    \"Seperate\": BlendType.BLEND_ENABLE_SEPERATE\r\n}\r\nconst BlendFactorMap: Record<string, BlendFactor> = {\r\n    \"Zero\": BlendFactor.Zero,\r\n    \"One\": BlendFactor.One,\r\n    \"SourceColor\": BlendFactor.SourceColor,\r\n    \"OneMinusSourceColor\": BlendFactor.OneMinusSourceColor,\r\n    \"DestinationColor\": BlendFactor.DestinationColor,\r\n    \"OneMinusDestinationColor\": BlendFactor.OneMinusDestinationColor,\r\n    \"SourceAlpha\": BlendFactor.SourceAlpha,\r\n    \"OneMinusSourceAlpha\": BlendFactor.OneMinusSourceAlpha,\r\n    \"DestinationAlpha\": BlendFactor.DestinationAlpha,\r\n    \"OneMinusDestinationAlpha\": BlendFactor.OneMinusDestinationAlpha,\r\n    \"SourceAlphaSaturate\": BlendFactor.SourceAlphaSaturate,\r\n    \"BlendColor\": BlendFactor.BlendColor,\r\n    \"OneMinusBlendColor\": BlendFactor.OneMinusBlendColor,\r\n}\r\nconst BlendEquationMap: Record<string, BlendEquationSeparate> = {\r\n    \"Add\": BlendEquationSeparate.ADD,\r\n    \"Subtract\": BlendEquationSeparate.SUBTRACT,\r\n    \"Reverse_substract\": BlendEquationSeparate.REVERSE_SUBTRACT,\r\n    \"Min\": BlendEquationSeparate.MIN,\r\n    \"Max\": BlendEquationSeparate.MAX\r\n}\r\n\r\nconst CompareFunctionMap: Record<string, CompareFunction> = {\r\n    \"Never\": CompareFunction.Never,\r\n    \"Less\": CompareFunction.Less,\r\n    \"Equal\": CompareFunction.Equal,\r\n    \"LessEqual\": CompareFunction.LessEqual,\r\n    \"Greater\": CompareFunction.Greater,\r\n    \"NotEqual\": CompareFunction.NotEqual,\r\n    \"GreaterEqual\": CompareFunction.GreaterEqual,\r\n    \"Always\": CompareFunction.Always,\r\n    \"Off\": CompareFunction.Off,\r\n}\r\n\r\nconst StencilOperationMap: Record<string, StencilOperation> = {\r\n    \"Keep\": StencilOperation.Keep,\r\n    \"Zero\": StencilOperation.Zero,\r\n    \"Replace\": StencilOperation.Replace,\r\n    \"IncrementSaturate\": StencilOperation.IncrementSaturate,\r\n    \"DecrementSaturate\": StencilOperation.DecrementSaturate,\r\n    \"Invert\": StencilOperation.Invert,\r\n    \"IncrementWrap\": StencilOperation.IncrementWrap,\r\n    \"DecrementWrap\": StencilOperation.DecrementWrap,\r\n}\r\n\r\n/**\r\n * @private\r\n * <code>ShaderCompile</code> 类用于实现Shader编译。\r\n */\r\nexport class ShaderCompile {\r\n    static IFDEF_NO: number = 0;\r\n    static IFDEF_YES: number = 1;\r\n    static IFDEF_ELSE: number = 2;\r\n    static IFDEF_PARENT: number = 3;\r\n\r\n    static includes: Record<string, IncludeFile> = {};\r\n\r\n    static loadIncludeFileSync: (fileName: string) => void;\r\n\r\n    static addInclude(fileName: string, txt: string, allowReplace?: boolean): IncludeFile {\r\n        if (!txt || txt.length === 0) {\r\n            console.error(\"shader include file err:\" + fileName);\r\n            return null;\r\n        }\r\n\r\n        if (!allowReplace && ShaderCompile.includes[fileName]) {\r\n            console.warn(\"shader include file already exists:\" + fileName);\r\n            return ShaderCompile.includes[fileName];\r\n        }\r\n\r\n        txt = txt.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        let file = new IncludeFile(txt);\r\n        ShaderCompile.includes[fileName] = file;\r\n        return file;\r\n    }\r\n\r\n    static compile(vs: string, ps: string, basePath?: string): IShaderCompiledObj {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        for (let inc of includes) {\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else\r\n                console.warn(`ShaderCompile missing file ${inc.name}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static compileAsync(vs: string, ps: string, basePath: string): Promise<IShaderCompiledObj> {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        return this._loadIncludesDeep(result, includes, 0);\r\n    }\r\n\r\n    private static _loadIncludesDeep(result: IShaderCompiledObj, includes: Array<IncludeItem>, index: number): Promise<IShaderCompiledObj> {\r\n        let toLoad: Array<IncludeItem>;\r\n        let includesCnt = includes.length;\r\n        for (let i = index; i < includesCnt; i++) {\r\n            let inc = includes[i];\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else {\r\n                if (!toLoad) toLoad = [];\r\n                toLoad.push(inc);\r\n            }\r\n        }\r\n\r\n        if (!toLoad)\r\n            return Promise.resolve(result);\r\n\r\n        return ILaya.loader.load(toLoad.map(tc => tc.name)).then(files => {\r\n            let cnt = toLoad.length;\r\n            for (let i = 0; i < cnt; i++) {\r\n                let inc = toLoad[i];\r\n                let file = files[i];\r\n                if (!file) {\r\n                    let childs = inc.node.parent.childs;\r\n                    childs.splice(childs.indexOf(inc.node), 1);\r\n                }\r\n                else {\r\n                    result.includeNames.add(inc.name);\r\n\r\n                    let text = file.getWith(inc.codeName);\r\n                    if (inc.node.condition)\r\n                        inc.node.text = text;\r\n                    else {\r\n                        ShaderCompile._compileToTree(inc.node, text, result.defs, includes, URL.getPath(inc.name));\r\n                        inc.node.text = \"\";\r\n                    }\r\n                }\r\n            }\r\n            if (includes.length > includesCnt)\r\n                return ShaderCompile._loadIncludesDeep(result, includes, includesCnt);\r\n            else\r\n                return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _compileToTree(parent: ShaderNode, script: string, defs: Set<string>, includes: Array<IncludeItem>, basePath: string): void {\r\n        let node: ShaderNode, preNode: ShaderNode;\r\n        let text: string, name: string, fname: string;\r\n        let ofs: number, words: any[];\r\n        let i: number, n: number, j: number;\r\n        let lines = script.split(\"\\n\");\r\n\r\n        for (i = 0; i < lines.length; i++) {\r\n            text = lines[i];\r\n            if (text.length < 1) continue;\r\n            ofs = text.indexOf(\"//\");\r\n            if (ofs === 0) continue;\r\n            if (ofs >= 0) text = text.substr(0, ofs);\r\n\r\n            if ((ofs = text.indexOf(\"#\")) < 0) {\r\n                preNode = parent.childs[parent.childs.length - 1];\r\n                let includefiles = parent.includefiles;\r\n                if (preNode && !preNode.name) {\r\n                    includefiles.length > 0 && IncludeFile.splitToWords(text, preNode);\r\n                    preNode.text += \"\\n\" + text;\r\n                    continue;\r\n                }\r\n\r\n                node = new ShaderNode(includefiles);\r\n                node.text = text;\r\n                node.noCompile = true;\r\n                includefiles.length > 0 && IncludeFile.splitToWords(text, node);\r\n                node.setParent(parent);\r\n                continue;\r\n            }\r\n\r\n            node = new ShaderNode(parent.includefiles);\r\n            node.text = text;\r\n            node.noCompile = true;\r\n\r\n            name = \"#\";\r\n            for (j = ofs + 1, n = text.length; j < n; j++) {\r\n                let c: string = text.charAt(j);\r\n                if (c === ' ' || c === '\\t' || c === '?') break;\r\n                name += c;\r\n            }\r\n            node.name = name;\r\n            switch (name) {\r\n                case \"#ifdef\":\r\n                case \"#ifndef\":\r\n                    node.src = text;\r\n                    node.noCompile = text.match(/[!&|()=<>]/) != null;\r\n                    if (!node.noCompile) {\r\n                        words = text.replace(/^\\s*/, '').split(/\\s+/);\r\n                        node.setCondition(words[1], name === \"#ifdef\" ? ShaderCompile.IFDEF_YES : ShaderCompile.IFDEF_ELSE);\r\n                        node.text = node.text;\r\n                    } else {\r\n                        console.log(\"function():Boolean{return \" + text.substr(ofs + node.name.length) + \"}\");\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#if\":\r\n                case \"#elif\":\r\n                    node.src = text;\r\n                    node.noCompile = true;\r\n                    if (name == \"#elif\") {\r\n                        parent = parent.parent;\r\n                        preNode = parent.childs[parent.childs.length - 1];\r\n                        //匹配\"#ifdef\"\r\n                        preNode.text = preNode.src;\r\n                        preNode.noCompile = true;\r\n                        preNode.condition = null;\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && text != \"defined\" && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#else\":\r\n                    node.src = text;\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.condition = preNode.condition;\r\n                        node.conditionType = preNode.conditionType == ShaderCompile.IFDEF_YES ? ShaderCompile.IFDEF_ELSE : ShaderCompile.IFDEF_YES;\r\n                        //node.text =  node.text + \" \" + preNode.text + \" \" + node.conditionType;\r\n                    }\r\n                    //递归节点树\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n                    break;\r\n\r\n                case \"#endif\":\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.text = node.text;\r\n                    }\r\n                    node.setParent(parent);\r\n                    break;\r\n\r\n                case \"#include\"://这里有问题,主要是空格\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    let includeName: string = words[1];\r\n                    let includeFile: IncludeFile;\r\n                    if (includeName.startsWith(\".\"))\r\n                        includeName = URL.join(basePath, includeName);\r\n                    else if (includeName.startsWith(\"/\"))\r\n                        includeName = URL.formatURL(includeName.substring(1));\r\n                    else {\r\n                        //check if builtin\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                        if (!includeFile)\r\n                            includeName = \"internal/\" + includeName;\r\n                    }\r\n                    includeFile = ShaderCompile.includes[includeName];\r\n\r\n                    if (!includeFile && ShaderCompile.loadIncludeFileSync) {\r\n                        ShaderCompile.loadIncludeFileSync(includeName);\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                    }\r\n\r\n                    let codeName = words[2] == 'with' ? words[3] : null;\r\n                    includes.push({ name: includeName, codeName: codeName, node: node, file: includeFile });\r\n                    node.setParent(parent);\r\n\r\n                    if ((ofs = words[0].indexOf(\"?\")) < 0) {\r\n                        if (includeFile) {\r\n                            text = includeFile.getWith(codeName);\r\n                            this._compileToTree(node, text, defs, includes, URL.getPath(includeName));\r\n                        }\r\n                        node.text = \"\";\r\n                    }\r\n                    else {\r\n                        node.setCondition(words[0].substr(ofs + 1), ShaderCompile.IFDEF_YES);\r\n\r\n                        if (includeFile)\r\n                            node.text = includeFile.getWith(codeName);\r\n                    }\r\n                    break;\r\n\r\n                case \"#import\":\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    fname = words[1];\r\n                    node.includefiles.push({ node: node, file: ShaderCompile.includes[fname], ofs: node.text.length });\r\n                    break;\r\n\r\n                default:\r\n                    node.setParent(parent);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRenderState(obj: Record<string, string | boolean | number | string[]>, renderState: RenderState) {\r\n        if (!obj) {\r\n            return;\r\n        }\r\n\r\n        renderState.cull = CullStateMap[<string>obj.cull];\r\n        renderState.blend = BlendStateMap[<string>obj.blend];\r\n        renderState.srcBlend = BlendFactorMap[<string>obj.srcBlend];\r\n        renderState.dstBlend = BlendFactorMap[<string>obj.dstBlend];\r\n        renderState.srcBlendRGB = BlendFactorMap[<string>obj.srcBlendRGB];\r\n        renderState.dstBlendRGB = BlendFactorMap[<string>obj.dstBlendRGB];\r\n        renderState.srcBlendAlpha = BlendFactorMap[<string>obj.srcBlendAlpha];\r\n        renderState.dstBlendAlpha = BlendFactorMap[<string>obj.dstBlendAlpha];\r\n        renderState.blendEquation = BlendEquationMap[<string>obj.blendEquation];\r\n        renderState.blendEquationRGB = BlendEquationMap[<string>obj.blendEquationRGB];\r\n        renderState.blendEquationAlpha = BlendEquationMap[<string>obj.blendEquationAlpha];\r\n        renderState.depthTest = CompareFunctionMap[<string>obj.depthTest];\r\n        renderState.depthWrite = <boolean>obj.depthWrite;\r\n        renderState.stencilRef = <number>obj.stencilRef;\r\n        renderState.stencilTest = CompareFunctionMap[<string>obj.stencilTest];\r\n        renderState.stencilWrite = <boolean>obj.stencilWrite;\r\n        let stencilOp = <string[]>obj.stencilOp;\r\n        let stencilFail = stencilOp ? stencilOp[0] : null;\r\n        let stencilZFail = stencilOp ? stencilOp[1] : null;\r\n        let stencilZPass = stencilOp ? stencilOp[2] : null;\r\n        renderState.stencilOp.x = StencilOperationMap[stencilFail];\r\n        renderState.stencilOp.y = StencilOperationMap[stencilZFail];\r\n        renderState.stencilOp.z = StencilOperationMap[stencilZPass];\r\n\r\n        return;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IClone } from \"../../utils/IClone\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\n\r\n/**\r\n * <code>DefineDatas</code> 类用于创建宏定义数据集合。\r\n */\r\nexport class DefineDatas implements IClone {\r\n\t/** @internal */\r\n\t_mask: Array<number> = [];\r\n\t/** @internal */\r\n\t_length: number = 0;\r\n\r\n\t/**\r\n\t * 创建一个 <code>DefineDatas</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_intersectionDefineDatas(define: DefineDatas): void {\r\n\t\tvar unionMask: Array<number> = define._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tfor (var i: number = this._length - 1; i >= 0; i--) {\r\n\t\t\tvar value: number = mask[i] & unionMask[i];\r\n\t\t\tif (value == 0 && i == this._length - 1)\r\n\t\t\t\tthis._length--;\r\n\t\t\telse\r\n\t\t\t\tmask[i] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 添加宏定义值。\r\n\t * @param define 宏定义值。\r\n\t */\r\n\tadd(define: ShaderDefine): void {\r\n\t\tvar index: number = define._index;\r\n\t\tvar size: number = index + 1;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar maskStart: number = this._length;//must from this._length because this._length maybe less than mask.length and have dirty data should clear.\r\n\t\tif (maskStart < size) {\r\n\t\t\t(mask.length < size) && (mask.length = size);//mask.length maybe small than size,maybe not.\r\n\t\t\tfor (; maskStart < index; maskStart++)\r\n\t\t\t\tmask[maskStart] = 0;\r\n\t\t\tmask[index] = define._value;\r\n\t\t\tthis._length = size;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmask[index] |= define._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 移除宏定义。\r\n\t * @param define 宏定义。\r\n\t */\r\n\tremove(define: ShaderDefine): void {\r\n\t\tvar index: number = define._index;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar endIndex: number = this._length - 1;\r\n\t\tif (index > endIndex)//不重置Length,避免经常扩充\r\n\t\t\treturn;\r\n\t\tvar newValue = mask[index] & ~define._value;\r\n\t\tif (index == endIndex && newValue === 0)\r\n\t\t\tthis._length--;\r\n\t\telse\r\n\t\t\tmask[index] = newValue;\r\n\t}\r\n\r\n\t/**\r\n\t * 添加宏定义集合。\r\n\t * @param define 宏定义集合。\r\n\t */\r\n\taddDefineDatas(define: DefineDatas): void {\r\n\t\tvar addMask: Array<number> = define._mask;\r\n\t\tvar size: number = define._length;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar maskStart: number = this._length;\r\n\t\tif (maskStart < size) {\r\n\t\t\tmask.length = size;\r\n\t\t\tfor (var i: number = 0; i < maskStart; i++)\r\n\t\t\t\tmask[i] |= addMask[i];\r\n\t\t\tfor (; i < size; i++)\r\n\t\t\t\tmask[i] = addMask[i];\r\n\t\t\tthis._length = size;\r\n\t\t} else {\r\n\t\t\tfor (var i: number = 0; i < size; i++) {\r\n\t\t\t\tmask[i] |= addMask[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 移除宏定义集合。\r\n\t * @param define 宏定义集合。\r\n\t */\r\n\tremoveDefineDatas(define: DefineDatas): void {\r\n\t\tvar removeMask: Array<number> = define._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar endIndex: number = this._length - 1;\r\n\t\tvar i = Math.min(define._length, endIndex);\r\n\t\tfor (; i >= 0; i--) {\r\n\t\t\tvar newValue = mask[i] & ~removeMask[i];\r\n\t\t\tif (i == endIndex && newValue === 0) {\r\n\t\t\t\tendIndex--;\r\n\t\t\t\tthis._length--;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmask[i] = newValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 是否有宏定义。\r\n\t * @param define 宏定义。\r\n\t */\r\n\thas(define: ShaderDefine): boolean {\r\n\t\tvar index: number = define._index;\r\n\t\tif (index >= this._length)\r\n\t\t\treturn false;\r\n\t\treturn (this._mask[index] & define._value) !== 0;\r\n\t}\r\n\r\n\t/**\r\n\t * 清空宏定义。\r\n\t */\r\n\tclear(): void {\r\n\t\tthis._length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @param\tdestObject 克隆源。\r\n\t */\r\n\tcloneTo(destObject: any): void {\r\n\t\tvar destDefineData: DefineDatas = (<DefineDatas>destObject);\r\n\t\tvar destMask: Array<number> = destDefineData._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar count: number = this._length;\r\n\t\tdestMask.length = count;\r\n\t\tfor (var i: number = 0; i < count; i++)\r\n\t\t\tdestMask[i] = mask[i];\r\n\t\tdestDefineData._length = count;\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: DefineDatas = new DefineDatas();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tdelete this._mask;\r\n\t}\r\n}\r\n\r\n\r\n","/**\r\n * <code>ShaderDefine</code> 类用于定义宏数据。\r\n */\r\nexport class ShaderDefine {\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 存储 texture uniform gamma define\r\n\t */\r\n\tstatic _texGammaDefine: { [key: string]: ShaderDefine } = {};\r\n\r\n\t/**@internal */\r\n\t_index: number;\r\n\t/**@internal */\r\n\t_value: number;\r\n\t/**\r\n\t * 创建一个宏定义的实例\r\n\t * @param index 宏索引\r\n\t * @param value 宏值\r\n\t */\r\n\tconstructor(index: number, value: number) {\r\n\t\tthis._index = index;\r\n\t\tthis._value = value;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { DefineDatas } from \"./DefineDatas\";\r\nimport { Shader3D } from \"./Shader3D\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\n/**\r\n * 着色器变种。\r\n */\r\nexport class ShaderVariant {\r\n    /** @internal */\r\n    _shader: Shader3D;\r\n    /** @internal */\r\n    _subShaderIndex: number = 0;\r\n    /** @internal */\r\n    _passIndex: number = 0;\r\n    /** @internal */\r\n    _defineNames: string[];\r\n\r\n    /**\r\n     * 着色器。\r\n     */\r\n    public get shader(): Shader3D {\r\n        return this._shader;\r\n    }\r\n\r\n    /**\r\n     * 子着色器索引。\r\n     */\r\n    public get subShaderIndex(): number {\r\n        return this._subShaderIndex;\r\n    }\r\n\r\n    /**\r\n     * 通道索引。\r\n     */\r\n    public get passIndex(): number {\r\n        return this._passIndex;\r\n    }\r\n\r\n    /**\r\n     * 宏定义集合。\r\n     */\r\n    public get defineNames(): Readonly<string[]> {\r\n        return this._defineNames;\r\n    }\r\n\r\n    /**\r\n     * 创建着色器变种。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defines 宏定义集合\r\n     */\r\n    constructor(shader: Shader3D, subShaderIndex: number, passIndex: number, defines: string[]) {\r\n        this.setValue(shader, subShaderIndex, passIndex, defines);\r\n    }\r\n\r\n    /**\r\n     * 给着色器变种赋值。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defineNames 宏定义集合\r\n     */\r\n    setValue(shader: Shader3D, subShaderIndex: number, passIndex: number, defineNames: string[]): void {\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                if (pass) {\r\n                    var validDefine: DefineDatas = pass._validDefine;\r\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++) {\r\n                        var defname: string = defineNames[i];\r\n                        if (!validDefine.has(Shader3D.getDefineByName(defname)))\r\n                            throw `ShaderVariantInfo:Invalid defineName ${defname} in ${shader._name} subShaderIndex of ${subShaderIndex} passIndex of ${passIndex}.`;\r\n                    }\r\n                }\r\n                else {\r\n                    throw `ShaderVariantInfo:Shader don't have passIndex of ${passIndex}.`;\r\n                }\r\n            }\r\n            else {\r\n                throw `ShaderVariantInfo:Shader don't have subShaderIndex of ${subShaderIndex}.`;\r\n            }\r\n        }\r\n        else {\r\n            throw `ShaderVariantInfo:Shader can't be null.`;\r\n        }\r\n        this._shader = shader;\r\n        this._subShaderIndex = subShaderIndex;\r\n        this._passIndex = passIndex;\r\n        this._defineNames = defineNames;\r\n    }\r\n\r\n    /**\r\n     * 是否相等。\r\n     * @param other 其它着色器变种\r\n     * @return 是否相等。\r\n     */\r\n    equal(other: ShaderVariant): boolean {\r\n        if (this._shader !== other._shader || this._subShaderIndex !== other._subShaderIndex || this._passIndex !== other._passIndex)\r\n            return false;\r\n\r\n        var defines: string[] = this._defineNames;\r\n        var otherDefines: string[] = other._defineNames;\r\n        if (defines.length !== otherDefines.length)\r\n            return false;\r\n        for (var i: number = 0, n: number = this._defineNames.length; i < n; i++) {\r\n            if (defines[i] !== otherDefines[i])\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return 着色器变种。 \r\n     */\r\n    clone(): ShaderVariant {\r\n        var dest: ShaderVariant = new ShaderVariant(this._shader, this._subShaderIndex, this._passIndex, this._defineNames.slice());\r\n        return dest;\r\n    }\r\n}\r\n\r\n/**\r\n * 着色器变种集合。\r\n */\r\nexport class ShaderVariantCollection {\r\n    /** @internal */\r\n    private _allCompiled: boolean = false;\r\n    /** @internal */\r\n    private _variants: ShaderVariant[] = [];\r\n\r\n    /**\r\n     * 是否已经全部编译。\r\n     */\r\n    get allCompiled(): boolean {\r\n        return this._allCompiled;\r\n    }\r\n\r\n    /**\r\n     * 包含的变种数量。\r\n     */\r\n    get variantCount(): number {\r\n        return this._variants.length;\r\n    }\r\n\r\n    /**\r\n     * 添加着色器变种。\r\n     * @param variant 着色器变种。\r\n     * @param 是否添加成功。\r\n     */\r\n    add(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant))\r\n                return false;\r\n        }\r\n        this._variants.push(variant.clone());\r\n        this._allCompiled = false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 移除着色器变种。\r\n     * @param variant 着色器变种。\r\n     * @return 是否移除成功。\r\n     */\r\n    remove(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant)) {\r\n                this._variants.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 是否包含着色器变种。\r\n     * @param variant 着色器变种。\r\n     */\r\n    contatins(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取着色器变种。\r\n     * @param index 索引。\r\n     * @returns 着色器变种。\r\n     */\r\n    getByIndex(index: number): ShaderVariant {\r\n        return this._variants[index];\r\n    }\r\n\r\n    /**\r\n     * 清空。\r\n     */\r\n    clear(): void {\r\n        this._variants.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 执行编译。\r\n     */\r\n    compile(): void {\r\n        if (!this._allCompiled) {\r\n            var variants: ShaderVariant[] = this._variants;\r\n            for (var i: number = 0, n: number = variants.length; i < n; i++) {\r\n                var variant: ShaderVariant = variants[i];\r\n                Shader3D.compileShaderByDefineNames(variant._shader._name, variant._subShaderIndex, variant._passIndex, variant._defineNames,[]);\r\n            }\r\n            this._allCompiled = true;\r\n        }\r\n    }\r\n}","/**\r\n * <code>MathUtils3D</code> 类用于创建数学工具。\r\n */\r\nexport class MathUtils3D {\r\n\t/**单精度浮点(float)零的容差*/\r\n\tstatic zeroTolerance: number = 1e-6;\r\n\t/**浮点数默认最大值*/\r\n\tstatic MaxValue: number = 3.40282347e+38;\r\n\t/**浮点数默认最小值*/\r\n\tstatic MinValue: number = -3.40282347e+38;\r\n\t/**角度转弧度系数*/\r\n\tstatic Deg2Rad: number = Math.PI / 180;\r\n\r\n\t/**\r\n\t * 创建一个 <code>MathUtils</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 是否在容差的范围内近似于0\r\n\t * @param  判断值\r\n\t * @return  是否近似于0\r\n\t */\r\n\tstatic isZero(v: number): boolean {\r\n\t\treturn Math.abs(v) < MathUtils3D.zeroTolerance;\r\n\t}\r\n\r\n\t/**\r\n\t * 两个值是否在容差的范围内近似相等Sqr Magnitude\r\n\t * @param  判断值\r\n\t * @return  是否近似于0\r\n\t */\r\n\tstatic nearEqual(n1: number, n2: number): boolean {\r\n\t\tif (MathUtils3D.isZero(n1 - n2))\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tstatic fastInvSqrt(value: number): number {\r\n\t\tif (MathUtils3D.isZero(value))\r\n\t\t\treturn value;\r\n\t\treturn 1.0 / Math.sqrt(value);\r\n\t}\r\n}\r\n\r\n\r\n","import { IClone } from \"../utils/IClone\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\n\r\nexport interface IV2 {\r\n    x: number;\r\n    y: number;\r\n}\r\n/**\r\n * <code>Vector2</code> 类用于创建二维向量。\r\n */\r\nexport class Vector2 implements IClone {\r\n    /**零向量,禁止修改*/\r\n    static readonly ZERO: Readonly<Vector2> = new Vector2(0.0, 0.0);\r\n    /**一向量,禁止修改*/\r\n    static readonly ONE: Readonly<Vector2> = new Vector2(1.0, 1.0);\r\n    static TempVector2 = new Vector2();\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector2</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    /**\r\n     * 设置xy值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     */\r\n    setValue(x: number, y: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * 缩放二维向量。\r\n     * @param\ta 源二维向量。\r\n     * @param\tb 缩放值。\r\n     * @param\tout 输出二维向量。\r\n     */\r\n    static scale(a: Vector2, b: number, out: Vector2): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n    }\r\n\r\n    /**\r\n     * 判断两个二维向量是否相等。\r\n     * @param\ta 三维向量。\r\n     * @param\tb 三维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector2, b: Vector2): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y);\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y];\r\n    }\r\n\r\n    /**\r\n     * 写入Float32Array数组\r\n     * @param array 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(array: Float32Array, offset: number = 0): void {\r\n        array[offset + 0] = this.x;\r\n        array[offset + 1] = this.y;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector2: Vector2 = (<Vector2>destObject);\r\n        destVector2.x = this.x;\r\n        destVector2.y = this.y;\r\n    }\r\n\r\n    /**\r\n     * 求两个二维向量的点积。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @return   点积。\r\n     */\r\n    static dot(a: Vector2, b: Vector2): number {\r\n        return (a.x * b.x) + (a.y * b.y);\r\n    }\r\n\r\n    /**\r\n     * 归一化二维向量。\r\n     * @param\ts 源三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static normalize(s: Vector2, out: Vector2): void {\r\n        var x: number = s.x, y: number = s.y;\r\n        var len: number = x * x + y * y;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度。\r\n     */\r\n    static scalarLength(a: Vector2): number {\r\n        var x: number = a.x, y: number = a.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector2: Vector2 = new Vector2();\r\n        this.cloneTo(destVector2);\r\n        return destVector2;\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array | null = null): void//[NATIVE_TS]\r\n    {\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n    }\r\n\r\n    static rewriteNumProperty(proto: any, name: string, index: number): void {\r\n        Object[\"defineProperty\"](proto, name, {\r\n            \"get\": function (): any {\r\n                return this.elements[index];\r\n            },\r\n            \"set\": function (v: any): void {\r\n                this.elements[index] = v;\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n","import { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * <code>Vector4</code> 类用于创建四维向量。\r\n */\r\nexport class Vector4 implements IClone {\r\n\r\n    /**零向量*/\r\n    static readonly ZERO: Readonly<Vector4> = new Vector4();\r\n\r\n    /*一向量*/\r\n    static readonly ONE: Readonly<Vector4> = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\r\n    /*X单位向量*/\r\n    static readonly UnitX: Readonly<Vector4> = new Vector4(1.0, 0.0, 0.0, 0.0);\r\n\r\n    /*Y单位向量*/\r\n    static readonly UnitY: Readonly<Vector4> = new Vector4(0.0, 1.0, 0.0, 0.0);\r\n\r\n    /*Z单位向量*/\r\n    static readonly UnitZ: Readonly<Vector4> = new Vector4(0.0, 0.0, 1.0, 0.0);\r\n\r\n    /*W单位向量*/\r\n    static readonly UnitW: Readonly<Vector4> = new Vector4(0.0, 0.0, 0.0, 1.0);\r\n\r\n    /** @internal */\r\n    static tempVec4: Vector4 = new Vector4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n    /**W轴坐标*/\r\n    w: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector4</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     * @param\tz  Z轴坐标。\r\n     * @param\tw  W轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置xyzw值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @param\tw W值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  arr 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n        this.w = arr[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z, this.w];\r\n    }\r\n\r\n    /**\r\n     * 写入Float32Array数组\r\n     * @param arr 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n        arr[offset + 3] = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector4: Vector4 = (<Vector4>destObject);\r\n        destVector4.x = this.x;\r\n        destVector4.y = this.y;\r\n        destVector4.z = this.z;\r\n        destVector4.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector4: Vector4 = new Vector4();\r\n        this.cloneTo(destVector4);\r\n        return destVector4;\r\n    }\r\n\r\n    /**\r\n     * 插值四维向量。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\tt 插值比例。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static lerp(a: Vector4, b: Vector4, t: number, out: Vector4): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, aw: number = a.w;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n        out.w = aw + t * (b.w - aw);\r\n    }\r\n\r\n    /**\r\n     * 通过4x4矩阵把一个四维向量转换为另一个四维向量\r\n     * @param\tvector4 带转换四维向量。\r\n     * @param\tM4x4    4x4矩阵。\r\n     * @param\tout     转换后四维向量。\r\n     */\r\n    static transformByM4x4(vector4: Vector4, m4x4: Matrix4x4, out: Vector4): void {\r\n        var vx: number = vector4.x;\r\n        var vy: number = vector4.y;\r\n        var vz: number = vector4.z;\r\n        var vw: number = vector4.w;\r\n\r\n        var me: Float32Array = m4x4.elements;\r\n\r\n        out.x = vx * me[0] + vy * me[4] + vz * me[8] + vw * me[12];\r\n        out.y = vx * me[1] + vy * me[5] + vz * me[9] + vw * me[13];\r\n        out.z = vx * me[2] + vy * me[6] + vz * me[10] + vw * me[14];\r\n        out.w = vx * me[3] + vy * me[7] + vz * me[11] + vw * me[15];\r\n    }\r\n\r\n    /**\r\n     * 判断两个四维向量是否相等。\r\n     * @param\ta 四维向量。\r\n     * @param\tb 四维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector4, b: Vector4): boolean {\r\n        return MathUtils3D.nearEqual(Math.abs(a.x), Math.abs(b.x)) && MathUtils3D.nearEqual(Math.abs(a.y), Math.abs(b.y)) && MathUtils3D.nearEqual(Math.abs(a.z), Math.abs(b.z)) && MathUtils3D.nearEqual(Math.abs(a.w), Math.abs(b.w));\r\n    }\r\n\r\n    /**\r\n     * 求四维向量是否相等\r\n     * @param value \r\n     * @returns \r\n     */\r\n    equal(value: Vector4) {\r\n        return Vector4.equals(this, value);\r\n    }\r\n\r\n    /**\r\n     * 求四维向量的长度。\r\n     * @return  长度。\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 求四维向量长度的平方。\r\n     * @return  长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n\r\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n    }\r\n\r\n    /**\r\n     * 归一化四维向量。\r\n     * @param\ts   源四维向量。\r\n     * @param\tout 输出四维向量。\r\n     */\r\n    static normalize(s: Vector4, out: Vector4): void {\r\n        var len: number = s.length();\r\n        if (len > 0) {\r\n            var inverse: number = 1.0 / len;\r\n            out.x = s.x * inverse;\r\n            out.y = s.y * inverse;\r\n            out.z = s.z * inverse;\r\n            out.w = s.w * inverse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的和。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static add(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n        out.w = a.w + b.w;\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的差。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static subtract(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        out.z = a.z - b.z;\r\n        out.w = a.w - b.w;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四维向量的乘积。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static multiply(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n        out.w = a.w * b.w;\r\n    }\r\n\r\n    /**\r\n     * 缩放四维向量。\r\n     * @param\ta   源四维向量。\r\n     * @param\tb   缩放值。\r\n     * @param\tout 输出四维向量。\r\n     */\r\n    static scale(a: Vector4, b: number, out: Vector4): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n        out.w = a.w * b;\r\n    }\r\n\r\n    /**\r\n     * 求一个指定范围的四维向量\r\n     * @param\tvalue clamp向量\r\n     * @param\tmin   最小\r\n     * @param\tmax   最大\r\n     * @param   out   输出向量\r\n     */\r\n    static Clamp(value: Vector4, min: Vector4, max: Vector4, out: Vector4): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n        var w: number = value.w;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n        var mineW: number = min.w;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n        var maxeW: number = max.w;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        w = (w > maxeW) ? maxeW : w;\r\n        w = (w < mineW) ? mineW : w;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n        out.w = w;\r\n    }\r\n\r\n    /**\r\n     * 两个四维向量距离的平方。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return (x * x) + (y * y) + (z * z) + (w * w);\r\n    }\r\n\r\n    /**\r\n     * 两个四维向量距离。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离。\r\n     */\r\n    static distance(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return Math.sqrt((x * x) + (y * y) + (z * z) + (w * w));\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的点积。\r\n     * @param\ta 向量。\r\n     * @param\tb 向量。\r\n     * @return  点积。\r\n     */\r\n    static dot(a: Vector4, b: Vector4): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个四维向量x、y、z的最小值计算新的四维向量。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static min(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n        out.w = Math.min(a.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个四维向量x、y、z的最大值计算新的四维向量。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static max(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n        out.w = Math.max(a.w, b.w);\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array = null): void {\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n            (<any>this).elements[2] = this.z;\r\n            (<any>this).elements[3] = this.w;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n        Vector2.rewriteNumProperty(this, \"z\", 2);\r\n        Vector2.rewriteNumProperty(this, \"w\", 3);\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Vector4 } from \"./Vector4\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Quaternion } from \"./Quaternion\";\r\n\r\n/**\r\n * <code>Vector3</code> 类用于创建三维向量。\r\n */\r\nexport class Vector3 implements IClone {\r\n    /**@internal\t*/\r\n    static _tempVector4 = new Vector4();\r\n    static _tempVector3 = new Vector3();\r\n\r\n    static readonly ZERO: Readonly<Vector3> = new Vector3(0.0, 0.0, 0.0);\r\n    static readonly ONE: Readonly<Vector3> = new Vector3(1.0, 1.0, 1.0);\r\n    static readonly NegativeUnitX: Readonly<Vector3> = new Vector3(-1, 0, 0);\r\n    static readonly UnitX: Readonly<Vector3> = new Vector3(1, 0, 0);\r\n    static readonly UnitY: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n    static readonly UnitZ: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    static readonly ForwardRH: Readonly<Vector3> = new Vector3(0, 0, -1);\r\n    static readonly ForwardLH: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    static readonly Up: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n\r\n    /**\r\n     * 两个三维向量距离的平方。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return (x * x) + (y * y) + (z * z);\r\n    }\r\n\r\n    /**\r\n     * 两个三维向量距离。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离。\r\n     */\r\n    static distance(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return Math.sqrt((x * x) + (y * y) + (z * z));\r\n    }\r\n\r\n    /**\r\n     * 分别取两个三维向量x、y、z的最小值计算新的三维向量。\r\n     * @param\ta。\r\n     * @param\tb。\r\n     * @param\tout。\r\n     */\r\n    static min(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个三维向量x、y、z的最大值计算新的三维向量。\r\n     * @param\ta a三维向量。\r\n     * @param\tb b三维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static max(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * 根据四元数旋转三维向量。\r\n     * @param\tsource 源三维向量。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static transformQuat(source: Vector3, rotation: Quaternion, out: Vector3): void {\r\n        var x: number = source.x, y: number = source.y, z: number = source.z, qx: number = rotation.x, qy: number = rotation.y, qz: number = rotation.z, qw: number = rotation.w,\r\n\r\n            ix: number = qw * x + qy * z - qz * y, iy: number = qw * y + qz * x - qx * z, iz: number = qw * z + qx * y - qy * x, iw: number = -qx * x - qy * y - qz * z;\r\n\r\n        out.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        out.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        out.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度。\r\n     */\r\n    static scalarLength(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度的平方。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度的平方。\r\n     */\r\n    static scalarLengthSquared(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * 归一化三维向量。\r\n     * @param\ts 源三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static normalize(s: Vector3, out: Vector3): void {\r\n        var x: number = s.x, y: number = s.y, z: number = s.z;\r\n        var len: number = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n            out.z = z * len;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 计算两个三维向量的乘积。\r\n     * @param\ta left三维向量。\r\n     * @param\tb right三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static multiply(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n    }\r\n\r\n    /**\r\n     * 缩放三维向量。\r\n     * @param\ta 源三维向量。\r\n     * @param\tb 缩放值。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static scale(a: Vector3, b: number, out: Vector3): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n    }\r\n\r\n    /**\r\n     * 插值三维向量。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\tt 插值比例。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static lerp(a: Vector3, b: Vector3, t: number, out: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个三维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出三维向量。\r\n     */\r\n    static transformV3ToV3(vector: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var intermediate: Vector4 = Vector3._tempVector4;\r\n        Vector3.transformV3ToV4(vector, transform, intermediate);\r\n        result.x = intermediate.x;\r\n        result.y = intermediate.y;\r\n        result.z = intermediate.z;\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个四维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出四维向量。\r\n     */\r\n    static transformV3ToV4(vector: Vector3, transform: Matrix4x4, result: Vector4): void {\r\n        var vectorX: number = vector.x;\r\n        var vectorY: number = vector.y;\r\n        var vectorZ: number = vector.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (vectorX * transformElem[0]) + (vectorY * transformElem[4]) + (vectorZ * transformElem[8]) + transformElem[12];\r\n        result.y = (vectorX * transformElem[1]) + (vectorY * transformElem[5]) + (vectorZ * transformElem[9]) + transformElem[13];\r\n        result.z = (vectorX * transformElem[2]) + (vectorY * transformElem[6]) + (vectorZ * transformElem[10]) + transformElem[14];\r\n        result.w = (vectorX * transformElem[3]) + (vectorY * transformElem[7]) + (vectorZ * transformElem[11]) + transformElem[15];\r\n    }\r\n\r\n    /**\r\n     * 通过法线矩阵转换一个法线三维向量到另外一个三维向量。\r\n     * @param\tnormal 源法线三维向量。\r\n     * @param\ttransform  法线变换矩阵。\r\n     * @param\tresult 输出法线三维向量。\r\n     */\r\n    static TransformNormal(normal: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var normalX: number = normal.x;\r\n        var normalY: number = normal.y;\r\n        var normalZ: number = normal.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (normalX * transformElem[0]) + (normalY * transformElem[4]) + (normalZ * transformElem[8]);\r\n        result.y = (normalX * transformElem[1]) + (normalY * transformElem[5]) + (normalZ * transformElem[9]);\r\n        result.z = (normalX * transformElem[2]) + (normalY * transformElem[6]) + (normalZ * transformElem[10]);\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个归一化的三维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出三维向量。\r\n     */\r\n    static transformCoordinate(coordinate: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var coordinateX: number = coordinate.x;\r\n        var coordinateY: number = coordinate.y;\r\n        var coordinateZ: number = coordinate.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        var w: number = coordinateX * transformElem[3] + coordinateY * transformElem[7] + coordinateZ * transformElem[11] + transformElem[15];\r\n        result.x = (coordinateX * transformElem[0] + coordinateY * transformElem[4] + coordinateZ * transformElem[8] + transformElem[12]) / w;\r\n        result.y = (coordinateX * transformElem[1] + coordinateY * transformElem[5] + coordinateZ * transformElem[9] + transformElem[13]) / w;\r\n        result.z = (coordinateX * transformElem[2] + coordinateY * transformElem[6] + coordinateZ * transformElem[10] + transformElem[14]) / w;\r\n    }\r\n\r\n    /**\r\n     * 求一个指定范围的向量\r\n     * @param\tvalue clamp向量\r\n     * @param\tmin  最小\r\n     * @param\tmax  最大\r\n     * @param   out 输出向量\r\n     */\r\n    static Clamp(value: Vector3, min: Vector3, max: Vector3, out: Vector3): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的和。\r\n     * @param\ta left三维向量。\r\n     * @param\tb right三维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static add(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的差。\r\n     * @param\ta  left三维向量。\r\n     * @param\tb  right三维向量。\r\n     * @param\to out 输出向量。\r\n     */\r\n    static subtract(a: Vector3, b: Vector3, o: Vector3): void {\r\n        o.x = a.x - b.x;\r\n        o.y = a.y - b.y;\r\n        o.z = a.z - b.z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的叉乘。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\to 输出向量。\r\n     */\r\n    static cross(a: Vector3, b: Vector3, o: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, bx: number = b.x, by: number = b.y, bz: number = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的点积。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @return   点积。\r\n     */\r\n    static dot(a: Vector3, b: Vector3): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * 判断两个三维向量是否相等。\r\n     * @param\ta 三维向量。\r\n     * @param\tb 三维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector3, b: Vector3): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y) && MathUtils3D.nearEqual(a.z, b.z);\r\n    }\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector3</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     * @param\tz  Z轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    /**\r\n     * 求四维向量是否相等\r\n     * @param value \r\n     * @returns \r\n     */\r\n    equal(value: Vector3) {\r\n        return Vector3.equals(this, value);\r\n    }\r\n\r\n    /**\r\n     * 设置xyz值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     */\r\n    setValue(x: number, y: number, z: number): Vector3 {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 设置xyz值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @return 返回Vector3\r\n     */\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  arr 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(arr: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n\r\n    /**\r\n     * 写入Array数组\r\n     * @param arr 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n    }\r\n\r\n    /**\r\n     * 计算长度。\r\n     * @return 长度。\r\n     */\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n\r\n    /**\r\n     * 计算平方。\r\n     * @return 返回向量长度的平方。\r\n     */\r\n    lengthSquared() {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n\r\n    /**\r\n     * 向量相减\r\n     * @param b 被减向量\r\n     * @param out \r\n     * @returns \r\n     */\r\n    vsub(b: Vector3, out: Vector3) {\r\n        out.x = this.x - b.x;\r\n        out.y = this.y - b.y;\r\n        out.z = this.z - b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 向量相加\r\n     * @param b 加向量\r\n     * @param out \r\n     * @returns \r\n     */\r\n    vadd(b: Vector3, out: Vector3) {\r\n        out.x = this.x + b.x;\r\n        out.y = this.y + b.y;\r\n        out.z = this.z + b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 缩放向量\r\n     * @param s 缩放值\r\n     * @param out\r\n     * @returns 返回缩放向量\r\n     */\r\n    scale(s: number, out: Vector3) {\r\n        out.x = this.x * s;\r\n        out.y = this.y * s;\r\n        out.z = this.z * s;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 归一化向量\r\n     * @returns \r\n     */\r\n    normalize() {\r\n        let x = this.x, y = this.y, z = this.z;\r\n        var len = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            this.x = x * len;\r\n            this.y = y * len;\r\n            this.z = z * len;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 向量点乘\r\n     * @param b \r\n     * @returns \r\n     */\r\n    dot(b: Vector3): number {\r\n        return (this.x * b.x) + (this.y * b.y) + (this.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * 向量叉乘\r\n     * @param b \r\n     * @param o \r\n     * @returns \r\n     */\r\n    cross(b: Vector3, o: Vector3): Vector3 {\r\n        var ax = this.x, ay = this.y, az = this.z, bx = b.x, by = b.y, bz = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector3: Vector3 = (<Vector3>destObject);\r\n        destVector3.x = this.x;\r\n        destVector3.y = this.y;\r\n        destVector3.z = this.z;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector3: Vector3 = new Vector3();\r\n        this.cloneTo(destVector3);\r\n        return destVector3;\r\n    }\r\n\r\n    /**\r\n     * 设置默认值\r\n     */\r\n    toDefault(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n}\r\n\r\n","import { Vector3 } from \"./Vector3\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _DEFAULTELEMENTS = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\nconst _tempV30 = new Vector3();\r\nconst _tempV31 = new Vector3();\r\nconst _tempV32 = new Vector3();\r\n\r\n/**\r\n * <code>Matrix3x3</code> 类用于创建3x3矩阵。\r\n */\r\nexport class Matrix3x3 implements IClone {\r\n    static readonly DEFAULT: Readonly<Matrix3x3> = new Matrix3x3();\r\n    static Temp: Matrix3x3 = new Matrix3x3();\r\n    /**\r\n     * 通过四元数创建旋转矩阵。\r\n     * @param rotation 旋转四元数。\r\n     * @param out 旋转矩阵。\r\n     */\r\n\r\n    static createRotationQuaternion(rotation: Quaternion, out: Matrix3x3) {\r\n        var rotX: number = rotation.x;\r\n        var rotY: number = rotation.y;\r\n        var rotZ: number = rotation.z;\r\n        var rotW: number = rotation.w;\r\n\r\n        var xx: number = rotX * rotX;\r\n        var yy: number = rotY * rotY;\r\n        var zz: number = rotZ * rotZ;\r\n        var xy: number = rotX * rotY;\r\n        var zw: number = rotZ * rotW;\r\n        var zx: number = rotZ * rotX;\r\n        var yw: number = rotY * rotW;\r\n        var yz: number = rotY * rotZ;\r\n        var xw: number = rotX * rotW;\r\n\r\n        var resultE: Float32Array = out.elements;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[3] = 2.0 * (xy - zw);\r\n        resultE[4] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[5] = 2.0 * (yz + xw);\r\n        resultE[6] = 2.0 * (zx + yw);\r\n        resultE[7] = 2.0 * (yz - xw);\r\n        resultE[8] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 根据指定平移生成3x3矩阵\r\n     * @param\ttra 平移\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromTranslation(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = trans.x;\r\n        e[7] = trans.y;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * 根据指定旋转生成3x3矩阵\r\n     * @param\trad  旋转值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromRotation(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        e[0] = c;\r\n        e[1] = s;\r\n        e[2] = 0;\r\n\r\n        e[3] = -s;\r\n        e[4] = c;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * 根据制定缩放生成3x3矩阵\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromScaling(scale: Vector3, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        e[0] = scale.x;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n\r\n        e[3] = 0;\r\n        e[4] = scale.y;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = scale.z;\r\n    }\r\n\r\n    /**\r\n     * 从4x4矩阵转换为一个3x3的矩阵（原则为upper-left,忽略第四行四列）\r\n     * @param\tsou 4x4源矩阵\r\n     * @param\tout 3x3输出矩阵\r\n     */\r\n    static createFromMatrix4x4(sou: Matrix4x4, out: Matrix3x3): void {\r\n        var souE: Float32Array = sou.elements;\r\n        var outE: Float32Array = out.elements;\r\n        outE[0] = souE[0];\r\n        outE[1] = souE[1];\r\n        outE[2] = souE[2];\r\n        outE[3] = souE[4];\r\n        outE[4] = souE[5];\r\n        outE[5] = souE[6];\r\n        outE[6] = souE[8];\r\n        outE[7] = souE[9];\r\n        outE[8] = souE[10];\r\n    }\r\n\r\n    /**\r\n     *  两个3x3矩阵的相乘\r\n     * @param\tleft 左矩阵\r\n     * @param\tright  右矩阵\r\n     * @param\tout  输出矩阵\r\n     */\r\n    static multiply(left: Matrix3x3, right: Matrix3x3, out: Matrix3x3): void {\r\n        var l: Float32Array = left.elements;\r\n        var r: Float32Array = right.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2];\r\n        var l21: number = l[3], l22: number = l[4], l23: number = l[5];\r\n        var l31: number = l[6], l32: number = l[7], l33: number = l[8];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2];\r\n        var r21: number = r[3], r22: number = r[4], r23: number = r[5];\r\n        var r31: number = r[6], r32: number = r[7], r33: number = r[8];\r\n\r\n        e[0] = r11 * l11 + r12 * l21 + r13 * l31;\r\n        e[1] = r11 * l12 + r12 * l22 + r13 * r32;\r\n        e[2] = r11 * l13 + r12 * l23 + r13 * l33;\r\n\r\n        e[3] = r21 * l11 + r22 * l21 + r23 * l31;\r\n        e[4] = r21 * l12 + r22 * l22 + r23 * l32;\r\n        e[5] = r21 * l13 + r22 * l23 + r23 * l33;\r\n\r\n        e[6] = r31 * l11 + r32 * l21 + r33 * l31;\r\n        e[7] = r31 * l12 + r32 * l22 + r33 * l32;\r\n        e[8] = r31 * l13 + r32 * l23 + r33 * l33;\r\n    }\r\n\r\n    /**矩阵元素数组*/\r\n    elements: Float32Array;\r\n\r\n    /**\r\n     * 创建一个 <code>Matrix3x3</code> 实例。\r\n     */\r\n    constructor(createElement: boolean = true) {\r\n        createElement && (this.elements = _DEFAULTELEMENTS.slice());\r\n    }\r\n    /**\r\n     * 克隆\r\n     * @param destObject \r\n     */\r\n    cloneByArray(destObject: Float32Array) {\r\n        this.elements.set(destObject);\r\n    }\r\n    /**\r\n     * 计算3x3矩阵的行列式\r\n     * @return    矩阵的行列式\r\n     */\r\n    determinant(): number {\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n    }\r\n\r\n    /**\r\n     * 通过一个二维向量转换3x3矩阵\r\n     * @param\ttra 转换向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    translate(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n        var x: number = trans.x, y: number = trans.y;\r\n\r\n        e[0] = a00;\r\n        e[1] = a01;\r\n        e[2] = a02;\r\n\r\n        e[3] = a10;\r\n        e[4] = a11;\r\n        e[5] = a12;\r\n\r\n        e[6] = x * a00 + y * a10 + a20;\r\n        e[7] = x * a01 + y * a11 + a21;\r\n        e[8] = x * a02 + y * a12 + a22;\r\n    }\r\n\r\n    /**\r\n     * 根据指定角度旋转3x3矩阵\r\n     * @param\trad 旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    rotate(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        var s: number = Math.sin(rad);\r\n        var c: number = Math.cos(rad);\r\n\r\n        e[0] = c * a00 + s * a10;\r\n        e[1] = c * a01 + s * a11;\r\n        e[2] = c * a02 + s * a12;\r\n\r\n        e[3] = c * a10 - s * a00;\r\n        e[4] = c * a11 - s * a01;\r\n        e[5] = c * a12 - s * a02;\r\n\r\n        e[6] = a20;\r\n        e[7] = a21;\r\n        e[8] = a22;\r\n    }\r\n\r\n    /**\r\n     *根据制定缩放3x3矩阵\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    scale(scale: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var x: number = scale.x, y: number = scale.y;\r\n\r\n        e[0] = x * f[0];\r\n        e[1] = x * f[1];\r\n        e[2] = x * f[2];\r\n\r\n        e[3] = y * f[3];\r\n        e[4] = y * f[4];\r\n        e[5] = y * f[5];\r\n\r\n        e[6] = f[6];\r\n        e[7] = f[7];\r\n        e[8] = f[8];\r\n    }\r\n\r\n    /**\r\n     * 计算3x3矩阵的逆矩阵\r\n     * @param\tout 输出的逆矩阵\r\n     */\r\n    invert(out: Matrix3x3): void {\r\n        var e = out.elements;\r\n        var f = this.elements;\r\n\r\n        var a00 = f[0], a01 = f[1], a02 = f[2];\r\n        var a10 = f[3], a11 = f[4], a12 = f[5];\r\n        var a20 = f[6], a21 = f[7], a22 = f[8];\r\n\r\n        var b01: number = a22 * a11 - a12 * a21;\r\n        var b11: number = -a22 * a10 + a12 * a20;\r\n        var b21: number = a21 * a10 - a11 * a20;\r\n\r\n        // Calculate the determinant\r\n        var det: number = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n        if (!det) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        e[0] = b01 * det;\r\n        e[1] = (-a22 * a01 + a02 * a21) * det;\r\n        e[2] = (a12 * a01 - a02 * a11) * det;\r\n        e[3] = b11 * det;\r\n        e[4] = (a22 * a00 - a02 * a20) * det;\r\n        e[5] = (-a12 * a00 + a02 * a10) * det;\r\n        e[6] = b21 * det;\r\n        e[7] = (-a21 * a00 + a01 * a20) * det;\r\n        e[8] = (a11 * a00 - a01 * a10) * det;\r\n    }\r\n\r\n    /**\r\n     * 计算3x3矩阵的转置矩阵\r\n     * @param \tout 输出矩阵\r\n     */\r\n    transpose(out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        if (out === this) {\r\n            var a01: number = f[1], a02: number = f[2], a12: number = f[5];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = a01;\r\n            e[5] = f[7];\r\n            e[6] = a02;\r\n            e[7] = a12;\r\n        } else {\r\n            e[0] = f[0];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = f[1];\r\n            e[4] = f[4];\r\n            e[5] = f[7];\r\n            e[6] = f[2];\r\n            e[7] = f[5];\r\n            e[8] = f[8];\r\n        }\r\n    }\r\n\r\n    /** 设置已有的矩阵为单位矩阵*/\r\n    identity(): void {\r\n        this.elements.set(_DEFAULTELEMENTS);\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;*/\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        d.set(s);\r\n        /*\r\n        for (i = 0; i < 9; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix3x3 = new Matrix3x3(false);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * 计算观察3x3矩阵\r\n     * @param\teye    观察者位置\r\n     * @param\ttarget 目标位置\r\n     * @param\tup     上向量\r\n     * @param\tout    输出3x3矩阵\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        Vector3.subtract(eye, target, _tempV30);//WebGL为右手坐标系统\r\n        Vector3.normalize(_tempV30, _tempV30);\r\n\r\n        Vector3.cross(up, _tempV30, _tempV31);\r\n        Vector3.normalize(_tempV31, _tempV31);\r\n\r\n        Vector3.cross(_tempV30, _tempV31, _tempV32);\r\n\r\n        var v0: Vector3 = _tempV30;\r\n        var v1: Vector3 = _tempV31;\r\n        var v2: Vector3 = _tempV32;\r\n\r\n        var me: Float32Array = out.elements;\r\n        me[0] = v1.x;\r\n        me[3] = v1.y;\r\n        me[6] = v1.z;\r\n\r\n        me[1] = v2.x;\r\n        me[4] = v2.y;\r\n        me[7] = v2.z;\r\n\r\n        me[2] = v0.x;\r\n        me[5] = v0.y;\r\n        me[8] = v0.z;\r\n    }\r\n\r\n    /**\r\n     * forward看向target\r\n     * forward在这里规定为z轴\r\n     * @param eye \r\n     * @param target 目标\r\n     * @param up \r\n     * @param out \r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        var vx = _tempV31;\r\n        var vy = _tempV32;\r\n        var vz = _tempV30;\r\n\r\n        target.vsub(eye, vz).normalize();\r\n        up.cross(vz, vx).normalize();\r\n        vz.cross(vx, vy);\r\n\r\n        var m = out.elements;\r\n        m[0] = vx.x; m[1] = vx.y; m[2] = vx.z;\r\n        m[3] = vy.x; m[4] = vy.y; m[5] = vy.z;\r\n        m[6] = vz.x; m[7] = vz.y; m[8] = vz.z;\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Matrix3x3 } from \"./Matrix3x3\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst TEMPVector30 = new Vector3();\r\nconst TEMPVector31 = new Vector3();\r\nconst TEMPVector32 = new Vector3();\r\nconst TEMPVector33 = new Vector3();\r\nconst _tempMatrix3x3 = new Matrix3x3();\r\n\r\n/**\r\n * <code>Quaternion</code> 类用于创建四元数。\r\n */\r\nexport class Quaternion implements IClone {\r\n\r\n    /**@internal */\r\n    static TEMP = new Quaternion();\r\n\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly DEFAULT: Readonly<Quaternion> = new Quaternion();\r\n    /**无效矩阵,禁止修改*/\r\n    static readonly NAN: Readonly<Quaternion> = new Quaternion(NaN, NaN, NaN, NaN);\r\n\r\n    /**\r\n     *  从欧拉角生成四元数（顺序为Yaw、Pitch、Roll）\r\n     * @param\tyaw yaw值\r\n     * @param\tpitch pitch值\r\n     * @param\troll roll值\r\n     * @param\tout 输出四元数\r\n     */\r\n    static createFromYawPitchRoll(yaw: number, pitch: number, roll: number, out: Quaternion): void {\r\n        var halfRoll: number = roll * 0.5;\r\n        var halfPitch: number = pitch * 0.5;\r\n        var halfYaw: number = yaw * 0.5;\r\n\r\n        var sinRoll: number = Math.sin(halfRoll);\r\n        var cosRoll: number = Math.cos(halfRoll);\r\n        var sinPitch: number = Math.sin(halfPitch);\r\n        var cosPitch: number = Math.cos(halfPitch);\r\n        var sinYaw: number = Math.sin(halfYaw);\r\n        var cosYaw: number = Math.cos(halfYaw);\r\n\r\n\r\n        out.x = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\r\n        out.y = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\r\n        out.z = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\r\n        out.w = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数相乘\r\n     * @param\tleft left四元数\r\n     * @param\tright  right四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    static multiply(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        var lx: number = left.x;\r\n        var ly: number = left.y;\r\n        var lz: number = left.z;\r\n        var lw: number = left.w;\r\n        var rx: number = right.x;\r\n        var ry: number = right.y;\r\n        var rz: number = right.z;\r\n        var rw: number = right.w;\r\n        var a: number = (ly * rz - lz * ry);\r\n        var b: number = (lz * rx - lx * rz);\r\n        var c: number = (lx * ry - ly * rx);\r\n        var d: number = (lx * rx + ly * ry + lz * rz);\r\n        out.x = (lx * rw + rx * lw) + a;\r\n        out.y = (ly * rw + ry * lw) + b;\r\n        out.z = (lz * rw + rz * lw) + c;\r\n        out.w = lw * rw - d;\r\n    }\r\n\r\n    /**\r\n   * Calculate a quaternion rotates around an arbitrary axis.\r\n   * @param axis - The axis\r\n   * @param rad - The rotation angle in radians\r\n   * @param out - The quaternion after rotate\r\n   */\r\n    static rotationAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\r\n        const normalAxis = Vector3._tempVector3\r\n        Vector3.normalize(axis, normalAxis);\r\n        rad *= 0.5;\r\n        const s = Math.sin(rad);\r\n        out.x = normalAxis.x * s;\r\n        out.y = normalAxis.y * s;\r\n        out.z = normalAxis.z * s;\r\n        out.w = Math.cos(rad);\r\n    }\r\n\r\n    private static arcTanAngle(x: number, y: number): number {\r\n        if (x == 0) {\r\n            if (y == 1)\r\n                return Math.PI / 2;\r\n            return -Math.PI / 2;\r\n        }\r\n        if (x > 0)\r\n            return Math.atan(y / x);\r\n        if (x < 0) {\r\n            if (y > 0)\r\n                return Math.atan(y / x) + Math.PI;\r\n            return Math.atan(y / x) - Math.PI;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private static angleTo(from: Vector3, location: Vector3, angle: Vector3): void {\r\n        Vector3.subtract(location, from, TEMPVector30);\r\n        Vector3.normalize(TEMPVector30, TEMPVector30);\r\n\r\n        angle.x = Math.asin(TEMPVector30.y);\r\n        angle.y = Quaternion.arcTanAngle(-TEMPVector30.z, -TEMPVector30.x);\r\n    }\r\n\r\n    /**\r\n     * 从指定的轴和角度计算四元数\r\n     * @param\taxis  轴\r\n     * @param\trad  角度\r\n     * @param\tout  输出四元数\r\n     */\r\n    static createFromAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\r\n        rad = rad * 0.5;\r\n        var s: number = Math.sin(rad);\r\n        out.x = s * axis.x;\r\n        out.y = s * axis.y;\r\n        out.z = s * axis.z;\r\n        out.w = Math.cos(rad);\r\n    }\r\n\r\n\r\n    /**\r\n     *  从旋转矩阵计算四元数\r\n     * @param\tmat 旋转矩阵\r\n     * @param\tout  输出四元数\r\n     */\r\n    static createFromMatrix4x4(mat: Matrix4x4, out: Quaternion): void {\r\n        var me: Float32Array = mat.elements;\r\n\r\n        var sqrt: number;\r\n        var half: number;\r\n        var scale: number = me[0] + me[5] + me[10];\r\n\r\n        if (scale > 0.0) {\r\n            sqrt = Math.sqrt(scale + 1.0);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (me[6] - me[9]) * sqrt;\r\n            out.y = (me[8] - me[2]) * sqrt;\r\n            out.z = (me[1] - me[4]) * sqrt;\r\n        } else if ((me[0] >= me[5]) && (me[0] >= me[10])) {\r\n            sqrt = Math.sqrt(1.0 + me[0] - me[5] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (me[1] + me[4]) * half;\r\n            out.z = (me[2] + me[8]) * half;\r\n            out.w = (me[6] - me[9]) * half;\r\n        } else if (me[5] > me[10]) {\r\n            sqrt = Math.sqrt(1.0 + me[5] - me[0] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[4] + me[1]) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (me[9] + me[6]) * half;\r\n            out.w = (me[8] - me[2]) * half;\r\n        } else {\r\n            sqrt = Math.sqrt(1.0 + me[10] - me[0] - me[5]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[8] + me[2]) * half;\r\n            out.y = (me[9] + me[6]) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (me[1] - me[4]) * half;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 球面插值\r\n     * @param\tleft left四元数\r\n     * @param\tright  right四元数\r\n     * @param\tt 插值比例\r\n     * @param\tout 输出四元数\r\n     * @returns 输出Float32Array\r\n     */\r\n    static slerp(left: Quaternion, right: Quaternion, t: number, out: Quaternion): Quaternion {\r\n        var ax: number = left.x, ay: number = left.y, az: number = left.z, aw: number = left.w, bx: number = right.x, by: number = right.y, bz: number = right.z, bw: number = right.w;\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out.x = scale0 * ax + scale1 * bx;\r\n        out.y = scale0 * ay + scale1 * by;\r\n        out.z = scale0 * az + scale1 * bz;\r\n        out.w = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的线性插值\r\n     * @param\tleft left四元数\r\n     * @param\tright right四元数b\r\n     * @param\tt 插值比例\r\n     * @param\tout 输出四元数\r\n     */\r\n    static lerp(left: Quaternion, right: Quaternion, amount: number, out: Quaternion): void {\r\n        var inverse: number = 1.0 - amount;\r\n        if (Quaternion.dot(left, right) >= 0) {\r\n            out.x = (inverse * left.x) + (amount * right.x);\r\n            out.y = (inverse * left.y) + (amount * right.y);\r\n            out.z = (inverse * left.z) + (amount * right.z);\r\n            out.w = (inverse * left.w) + (amount * right.w);\r\n        } else {\r\n            out.x = (inverse * left.x) - (amount * right.x);\r\n            out.y = (inverse * left.y) - (amount * right.y);\r\n            out.z = (inverse * left.z) - (amount * right.z);\r\n            out.w = (inverse * left.w) - (amount * right.w);\r\n        }\r\n        out.normalize(out);\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的和\r\n     * @param\tleft  left四元数\r\n     * @param\tright right 四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    static add(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        out.x = left.x + right.x;\r\n        out.y = left.y + right.y;\r\n        out.z = left.z + right.z;\r\n        out.w = left.w + right.w;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的点积\r\n     * @param\tleft left四元数\r\n     * @param\tright right四元数\r\n     * @return  点积\r\n     */\r\n    static dot(left: Quaternion, right: Quaternion): number {\r\n        return left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\r\n    }\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n    /**W轴坐标*/\r\n    w: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Quaternion</code> 实例。\r\n     * @param\tx 四元数的x值\r\n     * @param\ty 四元数的y值\r\n     * @param\tz 四元数的z值\r\n     * @param\tw 四元数的w值\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置四元数的值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置四元数的值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @return 返回四元数\r\n     */\r\n    set(x: number, y: number, z: number, w: number) {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n        return this;\r\n    }\r\n    /**\r\n     * 根据缩放值缩放四元数\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出四元数\r\n     */\r\n    scaling(scaling: number, out: Quaternion): void {\r\n        out.x = this.x * scaling;\r\n        out.y = this.y * scaling;\r\n        out.z = this.z * scaling;\r\n        out.w = this.w * scaling;\r\n    }\r\n\r\n    /**\r\n     * 归一化四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    normalize(out: Quaternion): void {\r\n        var len: number = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = this.x * len;\r\n            out.y = this.y * len;\r\n            out.z = this.z * len;\r\n            out.w = this.w * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算四元数的长度\r\n     * @return  长度\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 根据绕X轴的角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateX(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var bx: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.w * bx;\r\n        out.y = this.y * bw + this.z * bx;\r\n        out.z = this.z * bw - this.y * bx;\r\n        out.w = this.w * bw - this.x * bx;\r\n    }\r\n\r\n    /**\r\n     * 根据绕Y轴的制定角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateY(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var by: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw - this.z * by;\r\n        out.y = this.y * bw + this.w * by;\r\n        out.z = this.z * bw + this.x * by;\r\n        out.w = this.w * bw - this.y * by;\r\n    }\r\n\r\n    /**\r\n     * 根据绕Z轴的制定角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateZ(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n        var bz: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.y * bz;\r\n        out.y = this.y * bw - this.x * bz;\r\n        out.z = this.z * bw + this.w * bz;\r\n        out.w = this.w * bw - this.z * bz;\r\n    }\r\n\r\n    /**\r\n     * 分解四元数到欧拉角（顺序为Yaw、Pitch、Roll），参考自http://xboxforums.create.msdn.com/forums/p/4574/23988.aspx#23988,问题绕X轴翻转超过±90度时有，会产生瞬间反转\r\n     * @param\tquaternion 源四元数\r\n     * @param\tout 欧拉角值\r\n     */\r\n    getYawPitchRoll(out: Vector3): void {\r\n\r\n        Vector3.transformQuat(Vector3.ForwardRH, this, TEMPVector31/*forwarldRH*/);\r\n\r\n        Vector3.transformQuat(Vector3.Up, this, TEMPVector32/*up*/);\r\n        var upe: Vector3 = TEMPVector32;\r\n\r\n        Quaternion.angleTo(Vector3.ZERO, TEMPVector31, TEMPVector33/*angle*/);\r\n        var angle: Vector3 = TEMPVector33;\r\n\r\n        if (angle.x == Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(upe.z, upe.x);\r\n            angle.z = 0;\r\n        } else if (angle.x == -Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(-upe.z, -upe.x);\r\n            angle.z = 0;\r\n        } else {\r\n            Matrix4x4.createRotationY(-angle.y, Matrix4x4.TEMPMatrix0);\r\n            Matrix4x4.createRotationX(-angle.x, Matrix4x4.TEMPMatrix1);\r\n\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix0, TEMPVector32);\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix1, TEMPVector32);\r\n            angle.z = Quaternion.arcTanAngle(upe.y, -upe.x);\r\n        }\r\n\r\n        // Special cases.\r\n        if (angle.y <= -Math.PI)\r\n            angle.y = Math.PI;\r\n        if (angle.z <= -Math.PI)\r\n            angle.z = Math.PI;\r\n\r\n        if (angle.y >= Math.PI && angle.z >= Math.PI) {\r\n            angle.y = 0;\r\n            angle.z = 0;\r\n            angle.x = Math.PI - angle.x;\r\n        }\r\n\r\n        var oe: Vector3 = out;\r\n        oe.x = angle.y;\r\n        oe.y = angle.x;\r\n        oe.z = angle.z;\r\n    }\r\n\r\n    /**\r\n     * 求四元数的逆\r\n     * @param\tout  输出四元数\r\n     */\r\n    invert(out: Quaternion): void {\r\n        var a0: number = this.x, a1: number = this.y, a2: number = this.z, a3: number = this.w;\r\n        var dot: number = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n        var invDot: number = dot ? 1.0 / dot : 0;\r\n\r\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n        out.x = -a0 * invDot;\r\n        out.y = -a1 * invDot;\r\n        out.z = -a2 * invDot;\r\n        out.w = a3 * invDot;\r\n    }\r\n\r\n    /**\r\n     *设置四元数为单位算数\r\n     * @param out  输出四元数\r\n     */\r\n    identity(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 1;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n        this.z = array[offset + 2];\r\n        this.w = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        if (this === destObject) {\r\n            return;\r\n        }\r\n        destObject.x = this.x;\r\n        destObject.y = this.y;\r\n        destObject.z = this.z;\r\n        destObject.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Quaternion = new Quaternion();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    equals(b: Quaternion): boolean {\r\n        return MathUtils3D.nearEqual(this.x, b.x) && MathUtils3D.nearEqual(this.y, b.y) && MathUtils3D.nearEqual(this.z, b.z) && MathUtils3D.nearEqual(this.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * 计算旋转观察四元数\r\n     * @param\tforward 方向\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static rotationLookAt(forward: Vector3, up: Vector3, out: Quaternion): void {\r\n        Quaternion.lookAt(Vector3.ZERO, forward, up, out);\r\n    }\r\n\r\n    /**\r\n     * 计算观察四元数（适用Camera 灯光）\r\n     * @param\teye    观察者位置\r\n     * @param\ttarget 目标位置\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.lookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * 计算观察四元数（适用gameObject）\r\n     * @param eye 观察者位置\r\n     * @param target 目标位置\r\n     * @param up 上向量\r\n     * @param out 输出四元数\r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.forwardLookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * 计算长度的平方。\r\n     * @return 长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z) + (this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 计算四元数的逆四元数。\r\n     * @param\tvalue 四元数。\r\n     * @param\tout 逆四元数。\r\n     */\r\n    static invert(value: Quaternion, out: Quaternion): void {\r\n        var lengthSq: number = value.lengthSquared();\r\n        if (!MathUtils3D.isZero(lengthSq)) {\r\n            lengthSq = 1.0 / lengthSq;\r\n\r\n            out.x = -value.x * lengthSq;\r\n            out.y = -value.y * lengthSq;\r\n            out.z = -value.z * lengthSq;\r\n            out.w = value.w * lengthSq;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过一个3x3矩阵创建一个四元数\r\n     * @param\tmatrix3x3  3x3矩阵\r\n     * @param\tout        四元数\r\n     */\r\n    static rotationMatrix(matrix3x3: Matrix3x3, out: Quaternion): void {\r\n        var me: Float32Array = matrix3x3.elements;\r\n        var m11: number = me[0];\r\n        var m12: number = me[1];\r\n        var m13: number = me[2];\r\n        var m21: number = me[3];\r\n        var m22: number = me[4];\r\n        var m23: number = me[5];\r\n        var m31: number = me[6];\r\n        var m32: number = me[7];\r\n        var m33: number = me[8];\r\n\r\n        var sqrt: number, half: number;\r\n        var scale: number = m11 + m22 + m33;\r\n\r\n        if (scale > 0) {\r\n\r\n            sqrt = Math.sqrt(scale + 1);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (m23 - m32) * sqrt;\r\n            out.y = (m31 - m13) * sqrt;\r\n            out.z = (m12 - m21) * sqrt;\r\n\r\n        } else if ((m11 >= m22) && (m11 >= m33)) {\r\n\r\n            sqrt = Math.sqrt(1 + m11 - m22 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (m12 + m21) * half;\r\n            out.z = (m13 + m31) * half;\r\n            out.w = (m23 - m32) * half;\r\n        } else if (m22 > m33) {\r\n\r\n            sqrt = Math.sqrt(1 + m22 - m11 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m21 + m12) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (m32 + m23) * half;\r\n            out.w = (m31 - m13) * half;\r\n        } else {\r\n\r\n            sqrt = Math.sqrt(1 + m33 - m11 - m22);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m31 + m13) * half;\r\n            out.y = (m32 + m23) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (m12 - m21) * half;\r\n        }\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array = null): void//[NATIVE_TS]\r\n    {\r\n\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n            (<any>this).elements[2] = this.z;\r\n            (<any>this).elements[3] = this.w;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n        Vector2.rewriteNumProperty(this, \"z\", 2);\r\n        Vector2.rewriteNumProperty(this, \"w\", 3);\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _tempVector0 = new Vector3();\r\nconst _tempVector1 = new Vector3();\r\nconst _tempVector2 = new Vector3();\r\nconst _tempVector3 = new Vector3();\r\nconst DEFAULTARRAY = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n\r\n/**\r\n * <code>Matrix4x4</code> 类用于创建4x4矩阵。\r\n */\r\nexport class Matrix4x4 implements IClone {\r\n    /**@internal */\r\n    static TEMPMatrix0: Matrix4x4 = new Matrix4x4();\r\n    /**@internal */\r\n    static TEMPMatrix1: Matrix4x4 = new Matrix4x4();\r\n\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly DEFAULT: Readonly<Matrix4x4> = new Matrix4x4();\r\n    static readonly DEFAULTINVERT: Readonly<Matrix4x4> = new Matrix4x4(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly ZERO: Readonly<Matrix4x4> = new Matrix4x4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\r\n    /**\r\n     * 绕X轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationX(rad: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[7] = oe[8] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[0] = oe[15] = 1;\r\n        oe[5] = oe[10] = c;\r\n        oe[6] = s;\r\n        oe[9] = -s;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * 绕Y轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationY(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[3] = oe[4] = oe[6] = oe[7] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[5] = oe[15] = 1;\r\n        oe[0] = oe[10] = c;\r\n        oe[2] = -s;\r\n        oe[8] = s;\r\n    }\r\n\r\n    /**\r\n     * 绕Z轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationZ(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[2] = oe[3] = oe[6] = oe[7] = oe[8] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[10] = oe[15] = 1;\r\n        oe[0] = oe[5] = c;\r\n        oe[1] = s;\r\n        oe[4] = -s;\r\n    }\r\n\r\n    /**\r\n     * 通过yaw pitch roll旋转创建旋转矩阵。\r\n     * @param\tyaw\r\n     * @param\tpitch\r\n     * @param\troll\r\n     * @param\tresult\r\n     */\r\n    static createRotationYawPitchRoll(yaw: number, pitch: number, roll: number, result: Matrix4x4): void {\r\n        Quaternion.createFromYawPitchRoll(yaw, pitch, roll, Quaternion.TEMP);\r\n        Matrix4x4.createRotationQuaternion(Quaternion.TEMP, result);\r\n    }\r\n\r\n    /**\r\n     * 通过旋转轴axis和旋转角度angle计算旋转矩阵。\r\n     * @param\taxis 旋转轴,假定已经归一化。\r\n     * @param\tangle 旋转角度。\r\n     * @param\tresult 结果矩阵。\r\n     */\r\n    static createRotationAxis(axis: Vector3, angle: number, result: Matrix4x4): void {\r\n        var x: number = axis.x;\r\n        var y: number = axis.y;\r\n        var z: number = axis.z;\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var xx: number = x * x;\r\n        var yy: number = y * y;\r\n        var zz: number = z * z;\r\n        var xy: number = x * y;\r\n        var xz: number = x * z;\r\n        var yz: number = y * z;\r\n\r\n        var resultE: Float32Array = result.elements;\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = xx + (cos * (1.0 - xx));\r\n        resultE[1] = (xy - (cos * xy)) + (sin * z);\r\n        resultE[2] = (xz - (cos * xz)) - (sin * y);\r\n        resultE[4] = (xy - (cos * xy)) - (sin * z);\r\n        resultE[5] = yy + (cos * (1.0 - yy));\r\n        resultE[6] = (yz - (cos * yz)) + (sin * x);\r\n        resultE[8] = (xz - (cos * xz)) + (sin * y);\r\n        resultE[9] = (yz - (cos * yz)) - (sin * x);\r\n        resultE[10] = zz + (cos * (1.0 - zz));\r\n    }\r\n\r\n    /**\r\n     * 通过四元数创建旋转矩阵。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tresult 输出旋转矩阵\r\n     */\r\n    static createRotationQuaternion(rotation: Quaternion, result: Matrix4x4): void {\r\n        var resultE: Float32Array = result.elements;\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[4] = 2.0 * (xy - zw);\r\n        resultE[5] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[6] = 2.0 * (yz + xw);\r\n        resultE[8] = 2.0 * (zx + yw);\r\n        resultE[9] = 2.0 * (yz - xw);\r\n        resultE[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 根据平移计算输出矩阵\r\n     * @param\ttrans  平移向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createTranslate(trans: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[4] = oe[8] = oe[1] = oe[9] = oe[2] = oe[6] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n    }\r\n\r\n    /**\r\n     * 根据缩放计算输出矩阵\r\n     * @param\tscale  缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createScaling(scale: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = scale.x;\r\n        oe[5] = scale.y;\r\n        oe[10] = scale.z;\r\n        oe[1] = oe[4] = oe[8] = oe[12] = oe[9] = oe[13] = oe[2] = oe[6] = oe[14] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算两个矩阵的乘法\r\n     * @param\tleft left矩阵\r\n     * @param\tright  right矩阵\r\n     * @param\tout  输出矩阵\r\n     */\r\n    static multiply(left: Matrix4x4, right: Matrix4x4, out: Matrix4x4): void {\r\n        var l: Float32Array = right.elements;\r\n        var r: Float32Array = left.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2], l14: number = l[3];\r\n        var l21: number = l[4], l22: number = l[5], l23: number = l[6], l24: number = l[7];\r\n        var l31: number = l[8], l32: number = l[9], l33: number = l[10], l34: number = l[11];\r\n        var l41: number = l[12], l42: number = l[13], l43: number = l[14], l44: number = l[15];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2], r14: number = r[3];\r\n        var r21: number = r[4], r22: number = r[5], r23: number = r[6], r24: number = r[7];\r\n        var r31: number = r[8], r32: number = r[9], r33: number = r[10], r34: number = r[11];\r\n        var r41: number = r[12], r42: number = r[13], r43: number = r[14], r44: number = r[15];\r\n\r\n        e[0] = (l11 * r11) + (l12 * r21) + (l13 * r31) + (l14 * r41);\r\n        e[1] = (l11 * r12) + (l12 * r22) + (l13 * r32) + (l14 * r42);\r\n        e[2] = (l11 * r13) + (l12 * r23) + (l13 * r33) + (l14 * r43);\r\n        e[3] = (l11 * r14) + (l12 * r24) + (l13 * r34) + (l14 * r44);\r\n        e[4] = (l21 * r11) + (l22 * r21) + (l23 * r31) + (l24 * r41);\r\n        e[5] = (l21 * r12) + (l22 * r22) + (l23 * r32) + (l24 * r42);\r\n        e[6] = (l21 * r13) + (l22 * r23) + (l23 * r33) + (l24 * r43);\r\n        e[7] = (l21 * r14) + (l22 * r24) + (l23 * r34) + (l24 * r44);\r\n        e[8] = (l31 * r11) + (l32 * r21) + (l33 * r31) + (l34 * r41);\r\n        e[9] = (l31 * r12) + (l32 * r22) + (l33 * r32) + (l34 * r42);\r\n        e[10] = (l31 * r13) + (l32 * r23) + (l33 * r33) + (l34 * r43);\r\n        e[11] = (l31 * r14) + (l32 * r24) + (l33 * r34) + (l34 * r44);\r\n        e[12] = (l41 * r11) + (l42 * r21) + (l43 * r31) + (l44 * r41);\r\n        e[13] = (l41 * r12) + (l42 * r22) + (l43 * r32) + (l44 * r42);\r\n        e[14] = (l41 * r13) + (l42 * r23) + (l43 * r33) + (l44 * r43);\r\n        e[15] = (l41 * r14) + (l42 * r24) + (l43 * r34) + (l44 * r44);\r\n    }\r\n\r\n    /**\r\n     * 从四元数计算旋转矩阵\r\n     * @param\trotation 四元数\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromQuaternion(rotation: Quaternion, out: Matrix4x4): void {\r\n        var e: Float32Array = out.elements;\r\n        var x: number = rotation.x, y: number = rotation.y, z: number = rotation.z, w: number = rotation.w;\r\n        var x2: number = x + x;\r\n        var y2: number = y + y;\r\n        var z2: number = z + z;\r\n\r\n        var xx: number = x * x2;\r\n        var yx: number = y * x2;\r\n        var yy: number = y * y2;\r\n        var zx: number = z * x2;\r\n        var zy: number = z * y2;\r\n        var zz: number = z * z2;\r\n        var wx: number = w * x2;\r\n        var wy: number = w * y2;\r\n        var wz: number = w * z2;\r\n\r\n        e[0] = 1 - yy - zz;\r\n        e[1] = yx + wz;\r\n        e[2] = zx - wy;\r\n        e[3] = 0;\r\n\r\n        e[4] = yx - wz;\r\n        e[5] = 1 - xx - zz;\r\n        e[6] = zy + wx;\r\n        e[7] = 0;\r\n\r\n        e[8] = zx + wy;\r\n        e[9] = zy - wx;\r\n        e[10] = 1 - xx - yy;\r\n        e[11] = 0;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算仿射矩阵\r\n     * @param\ttrans 平移\r\n     * @param\trot 旋转\r\n     * @param\tscale 缩放\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createAffineTransformation(trans: Vector3, rot: Quaternion, scale: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n\r\n        var x: number = rot.x, y: number = rot.y, z: number = rot.z, w: number = rot.w, x2: number = x + x, y2: number = y + y, z2: number = z + z;\r\n        var xx: number = x * x2, xy: number = x * y2, xz: number = x * z2, yy: number = y * y2, yz: number = y * z2, zz: number = z * z2;\r\n        var wx: number = w * x2, wy: number = w * y2, wz: number = w * z2, sx: number = scale.x, sy: number = scale.y, sz: number = scale.z;\r\n\r\n        oe[0] = (1 - (yy + zz)) * sx;\r\n        oe[1] = (xy + wz) * sx;\r\n        oe[2] = (xz - wy) * sx;\r\n        oe[3] = 0;\r\n        oe[4] = (xy - wz) * sy;\r\n        oe[5] = (1 - (xx + zz)) * sy;\r\n        oe[6] = (yz + wx) * sy;\r\n        oe[7] = 0;\r\n        oe[8] = (xz + wy) * sz;\r\n        oe[9] = (yz - wx) * sz;\r\n        oe[10] = (1 - (xx + yy)) * sz;\r\n        oe[11] = 0;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算观察矩阵\r\n     * @param\teye 视点位置\r\n     * @param\ttarget 视点目标\r\n     * @param\tup 向上向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4x4): void {\r\n        var oE: Float32Array = out.elements;\r\n        var xaxis: Vector3 = _tempVector0;\r\n        var yaxis: Vector3 = _tempVector1;\r\n        var zaxis: Vector3 = _tempVector2;\r\n        Vector3.subtract(eye, target, zaxis);\r\n        Vector3.normalize(zaxis, zaxis);\r\n        Vector3.cross(up, zaxis, xaxis);\r\n        Vector3.normalize(xaxis, xaxis);\r\n        Vector3.cross(zaxis, xaxis, yaxis);\r\n\r\n        oE[3] = oE[7] = oE[11] = 0;\r\n        oE[15] = 1;\r\n        oE[0] = xaxis.x;\r\n        oE[4] = xaxis.y;\r\n        oE[8] = xaxis.z;\r\n        oE[1] = yaxis.x;\r\n        oE[5] = yaxis.y;\r\n        oE[9] = yaxis.z;\r\n        oE[2] = zaxis.x;\r\n        oE[6] = zaxis.y;\r\n        oE[10] = zaxis.z;\r\n\r\n        oE[12] = -Vector3.dot(xaxis, eye);\r\n        oE[13] = -Vector3.dot(yaxis, eye);\r\n        oE[14] = -Vector3.dot(zaxis, eye);\r\n    }\r\n\r\n    /**\r\n     * 通过FOV创建透视投影矩阵。\r\n     * @param\tfov  视角。\r\n     * @param\taspect 横纵比。\r\n     * @param\tnear 近裁面。\r\n     * @param\tfar 远裁面。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createPerspective(fov: number, aspect: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var yScale: number = 1.0 / Math.tan(fov * 0.5);\r\n        var xScale: number = yScale / aspect;\r\n\r\n        var halfWidth: number = znear / xScale;\r\n        var halfHeight: number = znear / yScale;\r\n        Matrix4x4.createPerspectiveOffCenter(-halfWidth, halfWidth, -halfHeight, halfHeight, znear, zfar, out);\r\n    }\r\n\r\n    /**\r\n     * 创建透视投影矩阵。\r\n     * @param\tleft 视椎左边界。\r\n     * @param\tright 视椎右边界。\r\n     * @param\tbottom 视椎底边界。\r\n     * @param\ttop 视椎顶边界。\r\n     * @param\tznear 视椎近边界。\r\n     * @param\tzfar 视椎远边界。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createPerspectiveOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = zfar / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[7] = oe[12] = oe[13] = oe[15] = 0;\r\n        oe[0] = 2.0 * znear / (right - left);\r\n        oe[5] = 2.0 * znear / (top - bottom);\r\n        oe[8] = (left + right) / (right - left);\r\n        oe[9] = (top + bottom) / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[11] = -1.0;\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**\r\n     * 计算正交投影矩阵。\r\n     * @param\tleft 视椎左边界。\r\n     * @param\tright 视椎右边界。\r\n     * @param\tbottom 视椎底边界。\r\n     * @param\ttop 视椎顶边界。\r\n     * @param\tnear 视椎近边界。\r\n     * @param\tfar 视椎远边界。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createOrthoOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = 1.0 / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[8] = oe[7] = oe[9] = oe[11] = 0;\r\n        oe[15] = 1;\r\n        oe[0] = 2.0 / (right - left);\r\n        oe[5] = 2.0 / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[12] = (left + right) / (left - right);\r\n        oe[13] = (top + bottom) / (bottom - top);\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**矩阵元素数组*/\r\n    elements: Float32Array;\r\n\r\n    /**\r\n     * 创建一个 <code>Matrix4x4</code> 实例。\r\n     * @param\t4x4矩阵的各元素\r\n     */\r\n    constructor(m11: number = 1, m12: number = 0, m13: number = 0, m14: number = 0, m21: number = 0, m22: number = 1, m23: number = 0, m24: number = 0, m31: number = 0, m32: number = 0, m33: number = 1, m34: number = 0, m41: number = 0, m42: number = 0, m43: number = 0, m44: number = 1, elements: Float32Array = null) {\r\n        if (arguments.length == 0) {\r\n            this.elements = DEFAULTARRAY.slice();\r\n            return;\r\n        }\r\n        if (arguments.length === 1 && arguments[0] === null)\r\n            return;\r\n\r\n        var e: Float32Array = elements ? this.elements = elements : this.elements = new Float32Array(16);//TODO:[NATIVE]临时\r\n        e[0] = m11;\r\n        e[1] = m12;\r\n        e[2] = m13;\r\n        e[3] = m14;\r\n        e[4] = m21;\r\n        e[5] = m22;\r\n        e[6] = m23;\r\n        e[7] = m24;\r\n        e[8] = m31;\r\n        e[9] = m32;\r\n        e[10] = m33;\r\n        e[11] = m34;\r\n        e[12] = m41;\r\n        e[13] = m42;\r\n        e[14] = m43;\r\n        e[15] = m44;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param row \r\n     * @param column \r\n     * @returns \r\n     */\r\n    getElementByRowColumn(row: number, column: number): number {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        return this.elements[(row * 4) + column];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param row \r\n     * @param column \r\n     * @param value \r\n     */\r\n    setElementByRowColumn(row: number, column: number, value: number): void {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        this.elements[(row * 4) + column] = value;\r\n    }\r\n\r\n    /**\r\n  * 四元数生成矩阵\r\n  * @param rotation \r\n  */\r\n    setRotation(rotation: Quaternion): void {\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1.0 - (2.0 * (yy + zz));\r\n        e[1] = 2.0 * (xy + zw);\r\n        e[2] = 2.0 * (zx - yw);\r\n        e[4] = 2.0 * (xy - zw);\r\n        e[5] = 1.0 - (2.0 * (zz + xx));\r\n        e[6] = 2.0 * (yz + xw);\r\n        e[8] = 2.0 * (zx + yw);\r\n        e[9] = 2.0 * (yz - xw);\r\n        e[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 位置\r\n     * @param position \r\n     */\r\n    setPosition(position: Vector3): void {\r\n        var e: Float32Array = this.elements;\r\n        e[12] = position.x;\r\n        e[13] = position.y;\r\n        e[14] = position.z;\r\n    }\r\n\r\n\r\n    /**\r\n     * 判断两个4x4矩阵的值是否相等。\r\n     * @param\tother 4x4矩阵\r\n     */\r\n    equalsOtherMatrix(other: Matrix4x4): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var oe: Float32Array = other.elements;\r\n\r\n        return (MathUtils3D.nearEqual(e[0], oe[0]) && MathUtils3D.nearEqual(e[1], oe[1]) && MathUtils3D.nearEqual(e[2], oe[2]) && MathUtils3D.nearEqual(e[3], oe[3]) && MathUtils3D.nearEqual(e[4], oe[4]) && MathUtils3D.nearEqual(e[5], oe[5]) && MathUtils3D.nearEqual(e[6], oe[6]) && MathUtils3D.nearEqual(e[7], oe[7]) && MathUtils3D.nearEqual(e[8], oe[8]) && MathUtils3D.nearEqual(e[9], oe[9]) && MathUtils3D.nearEqual(e[10], oe[10]) && MathUtils3D.nearEqual(e[11], oe[11]) && MathUtils3D.nearEqual(e[12], oe[12]) && MathUtils3D.nearEqual(e[13], oe[13]) && MathUtils3D.nearEqual(e[14], oe[14]) && MathUtils3D.nearEqual(e[15], oe[15]));\r\n    }\r\n\r\n    /**\r\n     * 分解矩阵为平移向量、旋转四元数、缩放向量。\r\n     * @param\ttranslation 平移向量。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tscale 缩放向量。\r\n     * @return 是否分解成功。\r\n     */\r\n    decomposeTransRotScale(translation: Vector3, rotation: Quaternion, scale: Vector3): boolean {\r\n        var rotationMatrix: Matrix4x4 = _tempMatrix4x4;\r\n        if (this.decomposeTransRotMatScale(translation, rotationMatrix, scale)) {\r\n            Quaternion.createFromMatrix4x4(rotationMatrix, rotation);\r\n            return true;\r\n        } else {\r\n            rotation.identity();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 分解矩阵为平移向量、旋转矩阵、缩放向量。\r\n     * @param\ttranslation 平移向量。\r\n     * @param\trotationMatrix 旋转矩阵。\r\n     * @param\tscale 缩放向量。\r\n     * @return 是否分解成功。\r\n     */\r\n    decomposeTransRotMatScale(translation: Vector3, rotationMatrix: Matrix4x4, scale: Vector3): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var te: Vector3 = translation;\r\n        var re: Float32Array = rotationMatrix.elements;\r\n        var se: Vector3 = scale;\r\n\r\n        //Get the translation. \r\n        te.x = e[12];\r\n        te.y = e[13];\r\n        te.z = e[14];\r\n\r\n        //Scaling is the length of the rows. \r\n        var m11: number = e[0], m12: number = e[1], m13: number = e[2];\r\n        var m21: number = e[4], m22: number = e[5], m23: number = e[6];\r\n        var m31: number = e[8], m32: number = e[9], m33: number = e[10];\r\n\r\n        var sX: number = se.x = Math.sqrt((m11 * m11) + (m12 * m12) + (m13 * m13));\r\n        var sY: number = se.y = Math.sqrt((m21 * m21) + (m22 * m22) + (m23 * m23));\r\n        var sZ: number = se.z = Math.sqrt((m31 * m31) + (m32 * m32) + (m33 * m33));\r\n\r\n        //If any of the scaling factors are zero, than the rotation matrix can not exist. \r\n        if (MathUtils3D.isZero(sX) || MathUtils3D.isZero(sY) || MathUtils3D.isZero(sZ)) {\r\n            re[1] = re[2] = re[3] = re[4] = re[6] = re[7] = re[8] = re[9] = re[11] = re[12] = re[13] = re[14] = 0;\r\n            re[0] = re[5] = re[10] = re[15] = 1;\r\n            return false;\r\n        }\r\n\r\n        // Calculate an perfect orthonormal matrix (no reflections)\r\n        var at: Vector3 = _tempVector0;\r\n        at.x = m31 / sZ;\r\n        at.y = m32 / sZ;\r\n        at.z = m33 / sZ;\r\n        var tempRight: Vector3 = _tempVector1;\r\n        tempRight.x = m11 / sX;\r\n        tempRight.y = m12 / sX;\r\n        tempRight.z = m13 / sX;\r\n        var up: Vector3 = _tempVector2;\r\n        Vector3.cross(at, tempRight, up);\r\n        var right: Vector3 = _tempVector1;\r\n        Vector3.cross(up, at, right);\r\n\r\n        re[3] = re[7] = re[11] = re[12] = re[13] = re[14] = 0;\r\n        re[15] = 1;\r\n        re[0] = right.x;\r\n        re[1] = right.y;\r\n        re[2] = right.z;\r\n\r\n        re[4] = up.x;\r\n        re[5] = up.y;\r\n        re[6] = up.z;\r\n\r\n        re[8] = at.x;\r\n        re[9] = at.y;\r\n        re[10] = at.z;\r\n\r\n        // In case of reflexions//TODO:是否不用计算dot后的值即为结果\r\n        ((re[0] * m11 + re[1] * m12 + re[2] * m13)/*Vector3.dot(right,Right)*/ < 0.0) && (se.x = -sX);\r\n        ((re[4] * m21 + re[5] * m22 + re[6] * m23)/* Vector3.dot(up, Up)*/ < 0.0) && (se.y = -sY);\r\n        ((re[8] * m31 + re[9] * m32 + re[10] * m33)/*Vector3.dot(at, Backward)*/ < 0.0) && (se.z = -sZ);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 分解旋转矩阵的旋转为YawPitchRoll欧拉角。\r\n     * @param\tout float yaw\r\n     * @param\tout float pitch\r\n     * @param\tout float roll\r\n     * @return\r\n     */\r\n    decomposeYawPitchRoll(yawPitchRoll: Vector3): void {//TODO:经飞仙测试,好像有BUG。\r\n        var pitch: number = Math.asin(-this.elements[9]);\r\n        yawPitchRoll.y = pitch;\r\n        // Hardcoded constant - burn him, he's a witch\r\n        // double threshold = 0.001; \r\n        var test: number = Math.cos(pitch);\r\n        if (test > MathUtils3D.zeroTolerance) {\r\n            yawPitchRoll.z = Math.atan2(this.elements[1], this.elements[5]);\r\n            yawPitchRoll.x = Math.atan2(this.elements[8], this.elements[10]);\r\n        } else {\r\n            yawPitchRoll.z = Math.atan2(-this.elements[4], this.elements[0]);\r\n            yawPitchRoll.x = 0.0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 归一化矩阵 \r\n     */\r\n    normalize(): void {\r\n        var v: Float32Array = this.elements;\r\n        var c: number = v[0], d: number = v[1], e: number = v[2], g: number = Math.sqrt(c * c + d * d + e * e);\r\n        if (g) {\r\n            if (g == 1)\r\n                return;\r\n        } else {\r\n            v[0] = 0;\r\n            v[1] = 0;\r\n            v[2] = 0;\r\n            return;\r\n        }\r\n        g = 1 / g;\r\n        v[0] = c * g;\r\n        v[1] = d * g;\r\n        v[2] = e * g;\r\n    }\r\n\r\n    /**\r\n     * 计算矩阵的转置矩阵\r\n     */\r\n    transpose(): Matrix4x4 {\r\n        var e: Float32Array, t: number;\r\n        e = this.elements;\r\n        t = e[1];\r\n        e[1] = e[4];\r\n        e[4] = t;\r\n        t = e[2];\r\n        e[2] = e[8];\r\n        e[8] = t;\r\n        t = e[3];\r\n        e[3] = e[12];\r\n        e[12] = t;\r\n        t = e[6];\r\n        e[6] = e[9];\r\n        e[9] = t;\r\n        t = e[7];\r\n        e[7] = e[13];\r\n        e[13] = t;\r\n        t = e[11];\r\n        e[11] = e[14];\r\n        e[14] = t;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 计算一个矩阵的逆矩阵\r\n     * @param\tout 输出矩阵\r\n     */\r\n    invert(out: Matrix4x4): void {\r\n\r\n        var ae: Float32Array = this.elements;\r\n        var oe: Float32Array = out.elements;\r\n        var a00: number = ae[0], a01: number = ae[1], a02: number = ae[2], a03: number = ae[3], a10: number = ae[4], a11: number = ae[5], a12: number = ae[6], a13: number = ae[7], a20: number = ae[8], a21: number = ae[9], a22: number = ae[10], a23: number = ae[11], a30: number = ae[12], a31: number = ae[13], a32: number = ae[14], a33: number = ae[15],\r\n\r\n            b00: number = a00 * a11 - a01 * a10, b01: number = a00 * a12 - a02 * a10, b02: number = a00 * a13 - a03 * a10, b03: number = a01 * a12 - a02 * a11, b04: number = a01 * a13 - a03 * a11, b05: number = a02 * a13 - a03 * a12, b06: number = a20 * a31 - a21 * a30, b07: number = a20 * a32 - a22 * a30, b08: number = a20 * a33 - a23 * a30, b09: number = a21 * a32 - a22 * a31, b10: number = a21 * a33 - a23 * a31, b11: number = a22 * a33 - a23 * a32,\r\n\r\n            // Calculate the determinant \r\n            det: number = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (Math.abs(det) === 0.0) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        oe[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        oe[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        oe[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        oe[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        oe[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        oe[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        oe[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        oe[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        oe[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        oe[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        oe[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        oe[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        oe[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        oe[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        oe[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        oe[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n    }\r\n\r\n    /**\r\n     * 计算BlillBoard矩阵\r\n     * @param\tobjectPosition 物体位置\r\n     * @param\tcameraPosition 相机位置\r\n     * @param\tcameraUp       相机上向量\r\n     * @param\tcameraForward  相机前向量\r\n     * @param\tmat            变换矩阵\r\n     */\r\n    static billboard(objectPosition: Vector3, cameraPosition: Vector3, cameraUp: Vector3, cameraForward: Vector3, mat: Matrix4x4): void {\r\n\r\n        Vector3.subtract(objectPosition, cameraPosition, _tempVector0);\r\n\r\n        var lengthSq: number = Vector3.scalarLengthSquared(_tempVector0);\r\n\r\n        if (MathUtils3D.isZero(lengthSq)) {\r\n            Vector3.scale(cameraForward, -1, _tempVector1);\r\n            _tempVector1.cloneTo(_tempVector0);\r\n        } else {\r\n            Vector3.scale(_tempVector0, 1 / Math.sqrt(lengthSq), _tempVector0);\r\n        }\r\n\r\n        Vector3.cross(cameraUp, _tempVector0, _tempVector2);\r\n        Vector3.normalize(_tempVector2, _tempVector2);\r\n        Vector3.cross(_tempVector0, _tempVector2, _tempVector3);\r\n\r\n        var crosse: Vector3 = _tempVector2;\r\n        var finale: Vector3 = _tempVector3;\r\n        var diffee: Vector3 = _tempVector0;\r\n        var obpose: Vector3 = objectPosition;\r\n\r\n        var mate: Float32Array = mat.elements;\r\n        mate[0] = crosse.x;\r\n        mate[1] = crosse.y;\r\n        mate[2] = crosse.z;\r\n        mate[3] = 0.0;\r\n        mate[4] = finale.x;\r\n        mate[5] = finale.y;\r\n        mate[6] = finale.z;\r\n        mate[7] = 0.0;\r\n        mate[8] = diffee.x;\r\n        mate[9] = diffee.y;\r\n        mate[10] = diffee.z;\r\n        mate[11] = 0.0;\r\n        mate[12] = obpose.x;\r\n        mate[13] = obpose.y;\r\n        mate[14] = obpose.z;\r\n        mate[15] = 1.0;\r\n    }\r\n\r\n    /**\r\n     * 归一化\r\n     */\r\n    identity(): void {\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[1] = e[2] = e[3] = e[4] = e[6] = e[7] = e[8] = e[9] = e[11] = e[12] = e[13] = e[14] = 0;\r\n        e[0] = e[5] = e[10] = e[15] = 1;\r\n        */\r\n        this.elements.set(DEFAULTARRAY);\r\n    }\r\n\r\n    /**判断是否是单位矩阵 */\r\n    isIdentity(): boolean {\r\n        let delty = function (num0: number, num1: number) {\r\n            return Math.abs(num0 - num1) < 1e-7;\r\n        }\r\n        let e = this.elements;\r\n        let defined = Matrix4x4.DEFAULT.elements;\r\n        for (let i = 0, n = e.length; i < n; i++) {\r\n            if (!delty(e[i], defined[i]))\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        destObject.elements.set(this.elements);\r\n        /*for (i = 0; i < 16; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @param destObject \r\n     */\r\n    cloneByArray(destObject: Float32Array) {\r\n        this.elements.set(destObject);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix4x4 = new Matrix4x4(null);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    static translation(v3: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = v3.x;\r\n        oe[13] = v3.y;\r\n        oe[14] = v3.z;\r\n    }\r\n\r\n    /**\r\n     * 获取平移向量。\r\n     * @param\tout 平移向量。\r\n     */\r\n    getTranslationVector(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = me[12];\r\n        out.y = me[13];\r\n        out.z = me[14];\r\n    }\r\n\r\n    /**\r\n     * 设置平移向量。\r\n     * @param\ttranslate 平移向量。\r\n     */\r\n    setTranslationVector(translate: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        var ve: Vector3 = translate;\r\n        me[12] = ve.x;\r\n        me[13] = ve.y;\r\n        me[14] = ve.z;\r\n    }\r\n\r\n    /**\r\n     * 获取前向量。\r\n     * @param\tout 前向量。\r\n     */\r\n    getForward(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = -me[8];\r\n        out.y = -me[9];\r\n        out.z = -me[10];\r\n    }\r\n\r\n    /**\r\n     * 设置前向量。\r\n     * @param\tforward 前向量。\r\n     */\r\n    setForward(forward: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        me[8] = -forward.x;\r\n        me[9] = -forward.y;\r\n        me[10] = -forward.z;\r\n    }\r\n\r\n    /**\r\n     * 判断此矩阵是否是反向矩阵\r\n     */\r\n    getInvertFront(): boolean {\r\n        this.decomposeTransRotScale(_tempVector0, Quaternion.TEMP, _tempVector1);\r\n        var scale: Vector3 = _tempVector1;\r\n        var isInvert: boolean = scale.x < 0;\r\n        (scale.y < 0) && (isInvert = !isInvert);\r\n        (scale.z < 0) && (isInvert = !isInvert);\r\n        return isInvert;\r\n    }\r\n}\r\n\r\nconst _tempMatrix4x4 = new Matrix4x4();","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { ITexture3DContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * 2D 纹理 数组\r\n */\r\nexport class Texture2DArray extends BaseTexture {\r\n\r\n    private static _defaultTexture: Texture2DArray;\r\n\r\n    static get defaultTexture() {\r\n        return this._defaultTexture;\r\n    }\r\n\r\n    /** @internal */\r\n    static __init__() {\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n            this._defaultTexture = new Texture2DArray(1, 1, 1, TextureFormat.R8G8B8A8, false, false, false);\r\n            this._defaultTexture.lock = true;\r\n\r\n            this._defaultTexture.setPixelsData(new Uint8Array([255, 255, 255, 255]), false, false);\r\n        }\r\n    }\r\n\r\n    depth: number;\r\n\r\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Texture2DArray;\r\n        this._gammaSpace = sRGB;\r\n\r\n        this.depth = depth;\r\n\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n\r\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 设置Image数据\r\n     * @param sources Image 数组\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setImageData(sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DImageData(texture, sources, this.depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素数据\r\n     * @param source 像素数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DPixelsData(texture, source, this.depth, premultiplyAlpha, invertY)\r\n    }\r\n\r\n    /**\r\n     * 更新像素数据\r\n     * @param xOffset x 偏移\r\n     * @param yOffset y 偏移\r\n     * @param zOffset z 偏移\r\n     * @param width 更新数据宽度\r\n     * @param height 更新数据高度\r\n     * @param depth 更新数据深度层级\r\n     * @param pixels 像素数据\r\n     * @param mipmapLevel mipmap 等级\r\n     * @param generateMipmap 是否生成 mipmap\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转 Y 轴\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n}","import { BaseTexture } from \"../../resource/BaseTexture\";\r\nimport { Resource } from \"../../resource/Resource\";\r\nimport { DefineDatas } from \"./DefineDatas\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\nimport { IClone } from \"../../utils/IClone\";\r\nimport { UniformBufferObject } from \"../UniformBufferObject\";\r\nimport {\r\n\tUniformBufferParamsType,\r\n\tUnifromBufferData,\r\n} from \"../UniformBufferData\";\r\nimport { Color } from \"../../maths/Color\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Quaternion } from \"../../maths/Quaternion\";\r\nimport { Vector2 } from \"../../maths/Vector2\";\r\nimport { Vector3 } from \"../../maths/Vector3\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\nimport { Matrix3x3 } from \"../../maths/Matrix3x3\";\r\nimport { Texture2DArray } from \"../../resource/Texture2DArray\";\r\ntype uboParams = { ubo: UniformBufferObject; uboBuffer: UnifromBufferData };\r\nexport enum ShaderDataType {\r\n\tInt,\r\n\tBool,\r\n\tFloat,\r\n\tVector2,\r\n\tVector3,\r\n\tVector4,\r\n\tColor,\r\n\tMatrix4x4,\r\n\tTexture2D,\r\n\tTextureCube,\r\n\tBuffer,\r\n\tMatrix3x3,\r\n\tTexture2DArray,\r\n\tTexture3D\r\n}\r\n\r\nexport type ShaderDataItem = number | boolean | Vector2 | Vector3 | Vector4 | Color | Matrix4x4 | BaseTexture | Float32Array | Matrix3x3;\r\n\r\nexport function ShaderDataDefaultValue(type: ShaderDataType) {\r\n\tswitch (type) {\r\n\t\tcase ShaderDataType.Int:\r\n\t\t\treturn 0;\r\n\t\tcase ShaderDataType.Bool:\r\n\t\t\treturn false;\r\n\t\tcase ShaderDataType.Float:\r\n\t\t\treturn 0;\r\n\t\tcase ShaderDataType.Vector2:\r\n\t\t\treturn Vector2.ZERO;\r\n\t\tcase ShaderDataType.Vector3:\r\n\t\t\treturn Vector3.ZERO;\r\n\t\tcase ShaderDataType.Vector4:\r\n\t\t\treturn Vector4.ZERO;\r\n\t\tcase ShaderDataType.Color:\r\n\t\t\treturn Color.BLACK;\r\n\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\treturn Matrix4x4.DEFAULT;\r\n\t\tcase ShaderDataType.Matrix3x3:\r\n\t\t\treturn Matrix3x3.DEFAULT;\r\n\t\tcase ShaderDataType.Texture2DArray:\r\n\t\t\treturn Texture2DArray.defaultTexture;\r\n\t\tcase ShaderDataType.Texture3D:\r\n\t\t\treturn Texture2DArray.defaultTexture;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * 着色器数据类。\r\n */\r\nexport class ShaderData implements IClone {\r\n\t/**@internal 反向找Material*/\r\n\tprotected _ownerResource: Resource = null;\r\n\r\n\t/**@internal */\r\n\tprotected _gammaColorMap: Map<number, Color>;\r\n\t/**@internal */\r\n\tapplyUBO: boolean = false;\r\n\t/**@internal */\r\n\t_data: any = null;\r\n\r\n\t/** @internal */\r\n\t_defineDatas: DefineDatas = new DefineDatas();\r\n\r\n\t/**@internal */\r\n\t_uniformBufferDatas: Map<string, uboParams>;\r\n\r\n\t/**\r\n\t * @internal\r\n\t * key: uniform property id\r\n\t * value: UniformBufferObject\r\n\t * 保存 每个 uniform id 所在的 ubo\r\n\t */\r\n\t_uniformBuffersMap: Map<number, UniformBufferObject>;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget uniformBufferDatas() {\r\n\t\treturn this._uniformBufferDatas;\r\n\t}\r\n\r\n\tget uniformBuffersMap(): Map<number, UniformBufferObject> {\r\n\t\treturn this._uniformBuffersMap;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\t\r\n\t */\r\n\tconstructor(ownerResource: Resource = null) {\r\n\t\tthis._ownerResource = ownerResource;\r\n\t\tthis._initData();\r\n\r\n\t\tthis._uniformBufferDatas = new Map();\r\n\t\tthis._uniformBuffersMap = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param key \r\n\t * @param ubo \r\n\t * @param uboData \r\n\t */\r\n\t_addCheckUBO(key: string, ubo: UniformBufferObject, uboData: UnifromBufferData) {\r\n\t\tthis._uniformBufferDatas.set(key, { ubo: ubo, uboBuffer: uboData });\r\n\t\tuboData._uniformParamsState.forEach(\r\n\t\t\t(value: UniformBufferParamsType, id: number) => {\r\n\t\t\t\tthis.uniformBuffersMap.set(id, ubo);\r\n\t\t\t}\r\n\t\t);\r\n\t\tubo.setDataByUniformBufferData(uboData);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_initData(): void {\r\n\t\tthis._data = {};\r\n\t\tthis._gammaColorMap = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tgetData(): any {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\tapplyUBOData() {\r\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\r\n\t\t\tvalue.ubo.setDataByUniformBufferData(value.uboBuffer);\r\n\t\t});\r\n\t\tthis.applyUBO = false;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\taddDefine(define: ShaderDefine): void {\r\n\t\tthis._defineDatas.add(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 移除Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\tremoveDefine(define: ShaderDefine): void {\r\n\t\tthis._defineDatas.remove(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 是否包含Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\thasDefine(define: ShaderDefine): boolean {\r\n\t\treturn this._defineDatas.has(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 清空宏定义。\r\n\t */\r\n\tclearDefine(): void {\r\n\t\tthis._defineDatas.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * 获取布尔。\r\n\t * @param\tindex shader索引。\r\n\t * @return  布尔。\r\n\t */\r\n\tgetBool(index: number): boolean {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置布尔。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 布尔。\r\n\t */\r\n\tsetBool(index: number, value: boolean): void {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取整形。\r\n\t * @param\tindex shader索引。\r\n\t * @return  整形。\r\n\t */\r\n\tgetInt(index: number): number {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置整型。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 整形。\r\n\t */\r\n\tsetInt(index: number, value: number): void {\r\n\t\tthis._data[index] = value;\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getInt(index));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取浮点。\r\n\t * @param\tindex shader索引。\r\n\t * @return\t浮点。\r\n\t */\r\n\tgetNumber(index: number): number {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置浮点。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 浮点。\r\n\t */\r\n\tsetNumber(index: number, value: number): void {\r\n\t\tthis._data[index] = value;\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getNumber(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Vector2向量。\r\n\t * @param\tindex shader索引。\r\n\t * @return Vector2向量。\r\n\t */\r\n\tgetVector2(index: number): Vector2 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Vector2向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue Vector2向量。\r\n\t */\r\n\tsetVector2(index: number, value: Vector2): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector2(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Vector3向量。\r\n\t * @param\tindex shader索引。\r\n\t * @return Vector3向量。\r\n\t */\r\n\tgetVector3(index: number): Vector3 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Vector3向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue Vector3向量。\r\n\t */\r\n\tsetVector3(index: number, value: Vector3): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector3(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取颜色。\r\n\t * @param \tindex shader索引。\r\n\t * @return  向量。\r\n\t */\r\n\tgetVector(index: number): Vector4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 向量。\r\n\t */\r\n\tsetVector(index: number, value: Vector4): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取颜色\r\n\t * @param index 索引\r\n\t * @returns 颜色\r\n\t */\r\n\tgetColor(index: number): Color {\r\n\t\treturn this._gammaColorMap.get(index);\r\n\t}\r\n\r\n\t/**\r\n\t * 设置颜色\r\n\t * @param index 索引\r\n\t * @param value 颜色值\r\n\t */\r\n\tsetColor(index: number, value: Color): void {\r\n\t\tif (!value)\r\n\t\t\treturn;\r\n\t\tif (this._data[index]) {\r\n\t\t\tlet gammaColor = this._gammaColorMap.get(index);\r\n\t\t\tvalue.cloneTo(gammaColor);\r\n\t\t\tlet linearColor = this._data[index];\r\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\r\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\r\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\r\n\t\t\tlinearColor.w = value.a;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet linearColor = new Vector4();\r\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\r\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\r\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\r\n\t\t\tlinearColor.w = value.a;\r\n\t\t\tthis._data[index] = linearColor;\r\n\t\t\tthis._gammaColorMap.set(index, value.clone());\r\n\t\t}\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getLinearColor(index));\r\n\t\t\tthis.applyUBO = true;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param index \r\n\t */\r\n\tgetLinearColor(index: number): Vector4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 获取矩阵。\r\n\t * @param\tindex shader索引。\r\n\t * @return  矩阵。\r\n\t */\r\n\tgetMatrix4x4(index: number): Matrix4x4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置矩阵。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue  矩阵。\r\n\t */\r\n\tsetMatrix4x4(index: number, value: Matrix4x4): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t}\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getMatrix4x4(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取矩阵\r\n\t * @param index \r\n\t * @returns \r\n\t */\r\n\tgetMatrix3x3(index: number): Matrix3x3 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置矩阵。\r\n\t * @param index \r\n\t * @param value \r\n\t */\r\n\tsetMatrix3x3(index: number, value: Matrix3x3): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t}\r\n\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getMatrix3x3(index));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Buffer。\r\n\t * @param\tindex shader索引。\r\n\t * @return\r\n\t */\r\n\tgetBuffer(index: number): Float32Array {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Buffer。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue  buffer数据。\r\n\t */\r\n\tsetBuffer(index: number, value: Float32Array): void {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置纹理。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 纹理。\r\n\t */\r\n\tsetTexture(index: number, value: BaseTexture): void {\r\n\t\tvar lastValue: BaseTexture = this._data[index];\r\n\t\tif (value) {\r\n\t\t\tlet shaderDefine = ShaderDefine._texGammaDefine[index];\r\n\t\t\tif (shaderDefine && value && value.gammaCorrection > 1) {\r\n\t\t\t\tthis.addDefine(shaderDefine);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// todo 自动的\r\n\t\t\t\tshaderDefine && this.removeDefine(shaderDefine);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//维护Reference\r\n\t\tthis._data[index] = value;\r\n\t\tlastValue && lastValue._removeReference();\r\n\t\tvalue && value._addReference();\r\n\t}\r\n\t/**\r\n\t * 获取纹理。\r\n\t * @param\tindex shader索引。\r\n\t * @return  纹理。\r\n\t */\r\n\tgetTexture(index: number): BaseTexture {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\tgetSourceIndex(value: any) {\r\n\t\tfor (var i in this._data) {\r\n\t\t\tif (this._data[i] == value)\r\n\t\t\t\treturn Number(i);\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * set shader data\r\n\t * @deprecated\r\n\t * @param index uniformID\r\n\t * @param value data\r\n\t */\r\n\tsetValueData(index: number, value: any) {\r\n\t\t//Color 需要特殊处理\r\n\t\tif (value instanceof Color) {\r\n\t\t\tthis.setColor(index, value);\r\n\t\t\treturn;\r\n\t\t} else if (!value) {\r\n\t\t\t//value null\r\n\t\t\tthis._data[index] = value;\r\n\t\t} else if (!!value.clone) {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t} else this._data[index] = value;\r\n\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getValueData(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param index \r\n\t * @param value \r\n\t */\r\n\tsetUniformBuffer(index: number, value: UniformBufferObject) {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\tgetUniformBuffer(index: number): UniformBufferObject {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\tsetShaderData(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem | Quaternion) {\r\n\t\tswitch (type) {\r\n\t\t\tcase ShaderDataType.Int:\r\n\t\t\t\tthis.setInt(uniformIndex, <number>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Bool:\r\n\t\t\t\tthis.setBool(uniformIndex, <boolean>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Float:\r\n\t\t\t\tthis.setNumber(uniformIndex, <number>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector2:\r\n\t\t\t\tthis.setVector2(uniformIndex, <Vector2>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector3:\r\n\t\t\t\tthis.setVector3(uniformIndex, <Vector3>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector4:\r\n\t\t\t\tthis.setVector(uniformIndex, <Vector4>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Color:\r\n\t\t\t\tthis.setColor(uniformIndex, <Color>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\tthis.setMatrix4x4(uniformIndex, <Matrix4x4>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Matrix3x3:\r\n\t\t\t\tthis.setMatrix3x3(uniformIndex, <Matrix3x3>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Texture2D:\r\n\t\t\tcase ShaderDataType.TextureCube:\r\n\t\t\tcase ShaderDataType.Texture2DArray:\r\n\t\t\tcase ShaderDataType.Texture3D:\r\n\t\t\t\tthis.setTexture(uniformIndex, <BaseTexture>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Buffer:\r\n\t\t\t\tthis.setBuffer(uniformIndex, <Float32Array>value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`unkown shader data type: ${type}`);\r\n\t\t}\r\n\t}\r\n\r\n\tgetShaderData(uniformIndex: number, type: ShaderDataType) {\r\n\t\tswitch (type) {\r\n\t\t\tcase ShaderDataType.Int:\r\n\t\t\t\treturn this.getInt(uniformIndex);\r\n\t\t\tcase ShaderDataType.Bool:\r\n\t\t\t\treturn this.getBool(uniformIndex);\r\n\t\t\tcase ShaderDataType.Float:\r\n\t\t\t\treturn this.getNumber(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector2:\r\n\t\t\t\treturn this.getVector2(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector3:\r\n\t\t\t\treturn this.getVector3(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector4:\r\n\t\t\t\treturn this.getVector(uniformIndex);\r\n\t\t\tcase ShaderDataType.Color:\r\n\t\t\t\treturn this.getColor(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\r\n\t\t\tcase ShaderDataType.Texture2D:\r\n\t\t\tcase ShaderDataType.TextureCube:\r\n\t\t\tcase ShaderDataType.Texture2DArray:\r\n\t\t\tcase ShaderDataType.Texture3D:\r\n\t\t\t\treturn this.getTexture(uniformIndex);\r\n\t\t\tcase ShaderDataType.Buffer:\r\n\t\t\t\treturn this.getBuffer(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix3x3:\r\n\t\t\t\treturn this.getMatrix3x3(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"unkone shader data type.\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get shader data\r\n\t * @deprecated\r\n\t * @param index uniform ID\r\n\t * @returns \r\n\t */\r\n\tgetValueData(index: number): any {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @param\tdestObject 克隆源。\r\n\t */\r\n\tcloneTo(destObject: ShaderData): void {\r\n\t\tvar dest: ShaderData = <ShaderData>destObject;\r\n\t\tvar destData: { [key: string]: number | boolean | Vector2 | Vector3 | Vector4 | Matrix3x3 | Matrix4x4 | BaseTexture } = dest._data;\r\n\t\tfor (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value != null) {\r\n\t\t\t\tif (typeof value == \"number\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (typeof value == \"number\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (typeof value == \"boolean\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (value instanceof Vector2) {\r\n\t\t\t\t\tvar v2 = destData[k] || (destData[k] = new Vector2());\r\n\t\t\t\t\t(<Vector2>value).cloneTo(v2);\r\n\t\t\t\t\tdestData[k] = v2;\r\n\t\t\t\t} else if (value instanceof Vector3) {\r\n\t\t\t\t\tvar v3 = destData[k] || (destData[k] = new Vector3());\r\n\t\t\t\t\t(<Vector3>value).cloneTo(v3);\r\n\t\t\t\t\tdestData[k] = v3;\r\n\t\t\t\t} else if (value instanceof Vector4) {\r\n\t\t\t\t\tlet color = this.getColor(parseInt(k));\r\n\t\t\t\t\tif (color) {\r\n\t\t\t\t\t\tlet clonecolor = color.clone();\r\n\t\t\t\t\t\tdestObject.setColor(parseInt(k), clonecolor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar v4 = destData[k] || (destData[k] = new Vector4());\r\n\t\t\t\t\t\t(<Vector4>value).cloneTo(v4);\r\n\t\t\t\t\t\tdestData[k] = v4;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (value instanceof Matrix3x3) {\r\n\t\t\t\t\tlet mat = destData[k] || (destData[k] = new Matrix3x3());\r\n\t\t\t\t\tvalue.cloneTo(mat);\r\n\t\t\t\t\tdestData[k] = mat;\r\n\t\t\t\t}\r\n\t\t\t\telse if (value instanceof Matrix4x4) {\r\n\t\t\t\t\tvar mat = destData[k] || (destData[k] = new Matrix4x4());\r\n\t\t\t\t\t(<Matrix4x4>value).cloneTo(mat);\r\n\t\t\t\t\tdestData[k] = mat;\r\n\t\t\t\t} else if (value instanceof BaseTexture) {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t\tvalue._addReference();\r\n\t\t\t\t} else if (value instanceof Resource) {\r\n\t\t\t\t\tdestData[k] = value as any;\r\n\t\t\t\t\tvalue._addReference();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._defineDatas.cloneTo(dest._defineDatas);\r\n\t\tthis._gammaColorMap.forEach((color, index) => {\r\n\t\t\tdestObject._gammaColorMap.set(index, color.clone());\r\n\t\t});\r\n\r\n\t\t//UBO Clone\r\n\t\tthis._cloneUBO(dest._uniformBufferDatas);\r\n\t\tdest.applyUBO = true;\r\n\t}\r\n\r\n\t/**\r\n\t * clone UBO Data\r\n\t * @internal\r\n\t * @param uboDatas \r\n\t */\r\n\t_cloneUBO(uboDatas: Map<string, uboParams>) {\r\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\r\n\t\t\tuboDatas.has(key) && (value.uboBuffer.cloneTo(uboDatas.get(key).uboBuffer));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: ShaderData = new ShaderData();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\treset() {\r\n\t\tfor (var k in this._data) {\r\n\t\t\t//维护Refrence\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value instanceof Resource) {\r\n\t\t\t\tvalue._removeReference();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._data = {};\r\n\t\tthis._gammaColorMap.clear();\r\n\t\tthis._uniformBufferDatas.clear();\r\n\t\tthis.applyUBO = false;\r\n\t\tthis._uniformBuffersMap.clear();\r\n\t\tthis._defineDatas.clear();\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tthis._defineDatas.destroy();\r\n\t\tthis._defineDatas = null;\r\n\t\tfor (var k in this._data) {\r\n\t\t\t//维护Refrence\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value instanceof Resource) {\r\n\t\t\t\tvalue._removeReference();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._data = null;\r\n\t\tthis._gammaColorMap.clear();\r\n\t\tthis._gammaColorMap = null;\r\n\t\t// // 使用对象解析\r\n\t\tdelete this._uniformBufferDatas;\r\n\t\tdelete this._uniformBuffersMap;\r\n\t\tthis._uniformBufferDatas = null;\r\n\t\tthis._uniformBuffersMap = null;\r\n\t}\r\n\r\n}\r\n","import { Color } from \"../maths/Color\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Shader3D } from \"./RenderShader/Shader3D\";\r\n\r\n/**\r\n *描述UniformBuffer参数类型\r\n */\r\nexport enum UniformBufferParamsType {\r\n    Number,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Matrix4x4,\r\n    Vector4Array,//Numberarray, vec2array and vec3array occupy the same memory as vec4array, so only vector4 is provided\r\n    MatrixArray\r\n}\r\n\r\n/**\r\n * 实例化UniformBuffer数据\r\n * 注：要与glsl中Uniform block结构相同\r\n */\r\nexport class UnifromBufferData {\r\n\r\n    /**\r\n     * @internal\r\n     * key: UniformID,value: x:offset y:length z:\r\n     */\r\n    protected _layoutMap: any;\r\n\r\n    /**\r\n     * @internal\r\n     * data length\r\n     */\r\n    protected _bytelength: number;\r\n\r\n    /**\r\n     * @internal\r\n     * params describe\r\n     */\r\n    _uniformParamsState: Map<number, UniformBufferParamsType>;\r\n\r\n    /**\r\n     * @internal\r\n     * update frome x to max,x:min,y:max\r\n     */\r\n    _updateFlag: Vector2;\r\n\r\n    /**\r\n     * Buffer Data\r\n     */\r\n    _buffer: Float32Array;\r\n\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>) {\r\n        // todo 后面改掉 不用map 初始化\r\n        this._uniformParamsState = new Map(uniformParamsStat);\r\n        this._createBuffer();\r\n        this._updateFlag = new Vector2();\r\n        this._resetUpdateFlag();\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * createBuffer\r\n     */\r\n    protected _createBuffer() {\r\n        var dataPos = 0;\r\n        this._layoutMap = {};\r\n        const elementSize = 4;\r\n        this._uniformParamsState.forEach((key, value) => {\r\n            dataPos += this._addUniformParams(value, key, dataPos);\r\n        });\r\n        //这里需要对手机平台做兼容\r\n        //this._bytelength = dataPos * elementSize;\r\n        this._bytelength = Math.ceil(dataPos / 4) * 4 * elementSize;\r\n        this._buffer = new Float32Array(dataPos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _getArraySize(key: string) {\r\n        let left = key.indexOf(\"[\");\r\n        let right = key.indexOf(\"]\");\r\n        if (left != -1 && right != -1 && left < right) {\r\n            return parseFloat(key.substring(left + 1, right));\r\n        } else\r\n            throw key + \" is illegal \"\r\n    }\r\n\r\n    /**\r\n     * @interanl\r\n     * layout UniformBuffer pitch std140\r\n     */\r\n    protected _addUniformParams(uniformID: number, value: UniformBufferParamsType, offset: number): number {\r\n        let size: number = 0;\r\n        let posAdd: number = 0;\r\n        let posG = offset % 4;\r\n        let offsetadd;\r\n        switch (value) {\r\n            case UniformBufferParamsType.Number:\r\n                size = 1;\r\n                posAdd = 1;\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                size = 2;\r\n                switch (posG) {\r\n                    case 0:\r\n                    case 2:\r\n                        posAdd = 2;\r\n                        break;\r\n                    case 1:\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                size = 3;\r\n                posAdd = 3;\r\n                switch (posG) {\r\n                    case 1:\r\n                    case 2:\r\n                    case 3:\r\n                        offset += (4 - posG);\r\n                        posAdd = (4 - posG) + 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                //case UniformBufferParamsType.Color:\r\n                size = 4;\r\n                switch (posG) {\r\n                    case 0:\r\n                        posAdd = 4;\r\n                        break;\r\n                    case 1:\r\n                        offset += 3;\r\n                        posAdd = 7;\r\n                        break;\r\n                    case 2:\r\n                        offset += 2;\r\n                        posAdd = 6;\r\n                        break;\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 5;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                size = 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 4;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            default:\r\n                throw \"Unifrom Buffer Params Type is illegal \"\r\n        }\r\n        const paramsInfo = new Vector2(offset, size);\r\n        this._layoutMap[uniformID] = paramsInfo;\r\n        return posAdd;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _getParamsInfo(key: number): Vector2 {\r\n        return this._layoutMap[key];\r\n    }\r\n\r\n    /**\r\n     * @interanl\r\n     * set upload range\r\n     */\r\n    private _setUpdateFlag(min: number, max: number) {\r\n        if (min < this._updateFlag.x)\r\n            this._updateFlag.x = min;\r\n        if (max > this._updateFlag.y)\r\n            this._updateFlag.y = max;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        delete this._buffer;\r\n        this._uniformParamsState.clear();\r\n        this._uniformParamsState = null;\r\n        this._layoutMap = null;\r\n        this._updateFlag = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetUpdateFlag() {\r\n        this._updateFlag.setValue(this._buffer.length, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param uniformID \r\n     * @returns \r\n     */\r\n    _has(uniformID: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        return !!info;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * set buffer params Data\r\n     */\r\n    _setData(uniformID: number, value: any) {\r\n\r\n        let uniformType = this._uniformParamsState.get(uniformID);\r\n\r\n        switch (uniformType) {\r\n            case UniformBufferParamsType.Number:\r\n                this.setNumberbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                this.setVector2byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                this.setVector3byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                this.setVector4byIndex(uniformID, value);\r\n                break;\r\n            // case UniformBufferParamsType.Color:\r\n            //     this.setColorbyIndex(uniformID, value);\r\n            //     break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                this.setMatrixbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                this.setVector4ArraybyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                this.setMatrixArraybyIndex(uniformID, value);\r\n                break;\r\n            // todo\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Buffer byte length\r\n     * @returns \r\n     */\r\n    getbyteLength(): number {\r\n        return this._bytelength;\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsName\r\n     * @param name uniform params name\r\n     * @param value vector4Array data\r\n     */\r\n    setVector4Array(name: string, value: Vector4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4ArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value vector4Array data\r\n     * @returns \r\n     */\r\n    setVector4ArraybyIndex(uniformID: number, value: Vector4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let vec = value[i];\r\n            this._buffer[pos++] = vec.x;\r\n            this._buffer[pos++] = vec.y;\r\n            this._buffer[pos++] = vec.z;\r\n            this._buffer[pos++] = vec.w;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsName\r\n     * @param name uniform params name\r\n     * @param value MatrixArray data\r\n     */\r\n    setMatrixArray(name: string, value: Matrix4x4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value MatrixArray data\r\n     * @returns \r\n     */\r\n    setMatrixArraybyIndex(uniformID: number, value: Matrix4x4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let mat = value[i];\r\n            this._buffer.set(mat.elements, pos);\r\n            pos += 16;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsName\r\n     * @param name uniform params name\r\n     * @param value Number data\r\n     */\r\n    setNumber(name: string, value: number) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setNumberbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Number data\r\n     * @returns \r\n     */\r\n    setNumberbyIndex(uniformID: number, value: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector2 data\r\n     */\r\n    setVector2(name: string, value: Vector2) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector2byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector2 data\r\n     * @returns \r\n     */\r\n    setVector2byIndex(uniformID: number, value: Vector2) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector3 data\r\n     */\r\n    setVector3(name: string, value: Vector3) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector3byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by uniformID\r\n     * @param uniformID uniform params index\r\n     * @param value Vector3 data\r\n     * @returns \r\n     */\r\n    setVector3byIndex(uniformID: number, value: Vector3) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector4 data\r\n     */\r\n    setVector4(name: string, value: Vector4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector4 data\r\n     * @returns \r\n     */\r\n    setVector4byIndex(uniformID: number, value: Vector4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._buffer[pos++] = value.w;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Color by paramsName\r\n     * @param name uniform params name\r\n     * @param value Color data\r\n     */\r\n    setColor(name: string, value: Color) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setColorbyIndex(uniformID, value);\r\n    }\r\n\r\n    setColorbyIndex(uniformID: number, value: Color) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.r);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.g);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.b);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.a);\r\n        this._setUpdateFlag(info.x, pos);\r\n\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsName\r\n     * @param name uniform params name\r\n     * @param value Matrix data\r\n     */\r\n    setMatrix(name: string, value: Matrix4x4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Matrix data\r\n     * @returns \r\n     */\r\n    setMatrixbyIndex(uniformID: number, value: Matrix4x4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer.set(value.elements, pos);\r\n        pos += 16;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n\r\n    clone(): UnifromBufferData {\r\n        // todo clone 更改\r\n        let ubd = new UnifromBufferData(this._uniformParamsState);\r\n        this.cloneTo(ubd);\r\n        return ubd\r\n    }\r\n\r\n    cloneTo(destObject: UnifromBufferData) {\r\n        if (destObject._bytelength == this._bytelength) {\r\n            destObject._buffer = Float32Array.from(this._buffer);\r\n            this._updateFlag.setValue(0, this._buffer.length);\r\n        }\r\n    }\r\n}","export enum RenderParams{\r\n    Max_Active_Texture_Count,//可激活的纹理数量，即shader中的最大纹理数量\r\n    Max_Uniform_Count,//最大Uniform数量\r\n    Max_AnisoLevel_Count,//最大各向异性数量\r\n    MAX_Texture_Size,//Shader中的最大纹理\r\n    MAX_Texture_Image_Uint,//图形设备支持的最大纹理数量。\r\n    SHADER_CAPAILITY_LEVEL,//Shader质量\r\n    FLOAT,\r\n    UNSIGNED_BYTE,\r\n    BYTE,\r\n    UNSIGNED_SHORT,\r\n}","import { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { DefineDatas } from \"./DefineDatas\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { ShaderVariant, ShaderVariantCollection } from \"./ShaderVariantCollection\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\nexport interface IShaderObjStructor {\r\n    name: string,\r\n    enableInstancing: boolean,\r\n    supportReflectionProbe: boolean,\r\n    surportVolumetricGI: boolean,\r\n    attributeMap: any;\r\n    uniformMap: any;\r\n    defaultValue: any;\r\n    shaderPass: Array<any>;\r\n}\r\n\r\nexport interface IShaderpassStructor {\r\n    VS?: string,\r\n    FS?: string,\r\n    VSPath?: string,//TODO\r\n    FSPath?: string,//TODO\r\n    pipeline?: string,\r\n    statefirst?: boolean;\r\n    renderState?: Record<string, string | boolean | number | string[]>\r\n\r\n}\r\n\r\nexport enum ShaderFeatureType {\r\n    DEFAULT,\r\n    D3,\r\n    D2,\r\n    PostProcess,\r\n    Sky,\r\n    Effect\r\n}\r\n\r\n/**\r\n * <code>Shader3D</code> 类用于创建Shader3D。\r\n */\r\nexport class Shader3D {\r\n    static _configDefineValues = new DefineDatas();\r\n    /**@internal */\r\n    private static _compileDefineDatas: DefineDatas = new DefineDatas();\r\n    /**渲染状态_剔除。*/\r\n    static CULL: number;\r\n    /**渲染状态_混合。*/\r\n    static BLEND: number;\r\n    /**渲染状态_混合源。*/\r\n    static BLEND_SRC: number;\r\n    /**渲染状态_混合目标。*/\r\n    static BLEND_DST: number;\r\n    /**渲染状态_混合源RGB。*/\r\n    static BLEND_SRC_RGB: number;\r\n    /**渲染状态_混合目标RGB。*/\r\n    static BLEND_DST_RGB: number;\r\n    /**渲染状态_混合源ALPHA。*/\r\n    static BLEND_SRC_ALPHA: number;\r\n    /**渲染状态_混合目标ALPHA。*/\r\n    static BLEND_DST_ALPHA: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION_RGB: number;\r\n    /**渲染状态_ALPHA混合方程。*/\r\n    static BLEND_EQUATION_ALPHA: number;\r\n    /**渲染状态_深度测试。*/\r\n    static DEPTH_TEST: number;\r\n    /**渲染状态_深度写入。*/\r\n    static DEPTH_WRITE: number;\r\n    /**渲染状态_模板测试。*/\r\n    static STENCIL_TEST: number;\r\n    /**渲染状态_模板写入 */\r\n    static STENCIL_WRITE: number;\r\n    /**渲染状态_模板写入值 */\r\n    static STENCIL_Ref: number;\r\n    /**渲染状态_模板写入设置 */\r\n    static STENCIL_Op: number;\r\n\r\n    /**shader变量提交周期，自定义。*/\r\n    static PERIOD_CUSTOM: number = 0;\r\n    /**shader变量提交周期，逐材质。*/\r\n    static PERIOD_MATERIAL: number = 1;\r\n    /**shader变量提交周期，逐精灵和相机，注：因为精灵包含MVP矩阵，为复合属性，所以摄像机发生变化时也应提交。*/\r\n    static PERIOD_SPRITE: number = 2;\r\n    /**shader变量提交周期，逐相机。*/\r\n    static PERIOD_CAMERA: number = 3;\r\n    /**shader变量提交周期，逐场景。*/\r\n    static PERIOD_SCENE: number = 4;\r\n\r\n    /**@internal */\r\n    static SHADERDEFINE_LEGACYSINGALLIGHTING: ShaderDefine;\r\n    /**@internal 图形数据传输使用UniformBlock的方式 */\r\n    static SHADERDEFINE_ENUNIFORMBLOCK: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR: ShaderDefine;\r\n    /**@internal */\r\n    static _propertyNameMap: any = {};\r\n    /**@internal */\r\n    private static _propertyNameCounter: number = 0;\r\n    /**@internal */\r\n    private static _defineCounter: number = 0;\r\n    // todo  这个 map 和 get 函数转移到 ShaderDefine 里面\r\n    /**@internal */\r\n    private static _defineMap: { [key: string]: ShaderDefine } = {};\r\n    /**@internal */\r\n    static _preCompileShader: { [key: string]: Shader3D } = {};\r\n    /**@internal */\r\n    static _maskMap: Array<{ [key: number]: string }> = [];\r\n    /**@internal */\r\n    static _debugShaderVariantInfo: ShaderVariant;\r\n    /**是否开启调试模式。 */\r\n    static debugMode: boolean = false;\r\n    /**调试着色器变种集合。 */\r\n    static debugShaderVariantCollection: ShaderVariantCollection;\r\n\r\n\r\n    static init() {\r\n        Shader3D.debugShaderVariantCollection = new ShaderVariantCollection();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getNamesByDefineData(defineData: DefineDatas, out: Array<string>): void {\r\n        var maskMap: Array<{ [key: number]: string }> = Shader3D._maskMap;\r\n        var mask: Array<number> = defineData._mask;\r\n        out.length = 0;\r\n        for (var i: number = 0, n: number = defineData._length; i < n; i++) {\r\n            var subMaskMap: { [key: number]: string } = maskMap[i];\r\n            var subMask: number = mask[i];\r\n            for (var j: number = 0; j < 32; j++) {\r\n                var d: number = 1 << j;\r\n                if (subMask > 0 && d > subMask)//如果31位存在subMask为负数,避免break\r\n                    break;\r\n                if (subMask & d)\r\n                    out.push(subMaskMap[d]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注册宏定义。\r\n     * @param name \r\n     */\r\n    static getDefineByName(name: string): ShaderDefine {\r\n        var define: ShaderDefine = Shader3D._defineMap[name];\r\n        if (!define) {\r\n            var maskMap = Shader3D._maskMap;\r\n            var counter: number = Shader3D._defineCounter;\r\n            var index: number = Math.floor(counter / 32);\r\n            var value: number = 1 << counter % 32;\r\n            define = new ShaderDefine(index, value);\r\n            Shader3D._defineMap[name] = define;\r\n            if (index == maskMap.length) {\r\n                maskMap.length++;\r\n                maskMap[index] = {};\r\n            }\r\n            maskMap[index][value] = name;\r\n            Shader3D._defineCounter++;\r\n        }\r\n        return define;\r\n    }\r\n\r\n    /**\r\n     * 通过Shader属性名称获得唯一ID。\r\n     * @param name Shader属性名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static propertyNameToID(name: string): number {\r\n        return LayaGL.renderEngine.propertyNameToID(name);\r\n    }\r\n\r\n    static propertyIDToName(id: number): string {\r\n        return LayaGL.renderEngine.propertyIDToName(id);\r\n    }\r\n\r\n    /**\r\n     * 添加函数库引用。\r\n     * @param fileName 文件名字。\r\n     * @param txt 文件内容\r\n     */\r\n    static addInclude(fileName: string, txt: string): void {\r\n        ShaderCompile.addInclude(fileName, txt);\r\n    }\r\n\r\n    /**\r\n     * 通过宏定义名字编译shader。\r\n     * @param\tshaderName Shader名称。\r\n     * @param   subShaderIndex 子着色器索引。\r\n     * @param   passIndex  通道索引。\r\n     * @param\tdefineNames 宏定义名字集合。\r\n     */\r\n    static compileShaderByDefineNames(shaderName: string, subShaderIndex: number, passIndex: number, defineNames: string[], nodeCommonMap: string[]): void {\r\n        var shader: Shader3D = Shader3D.find(shaderName);\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                pass.nodeCommonMap = nodeCommonMap;\r\n                if (pass) {\r\n                    var compileDefineDatas: DefineDatas = Shader3D._compileDefineDatas;\r\n                    Shader3D._configDefineValues.cloneTo(compileDefineDatas);\r\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++)\r\n                        compileDefineDatas.add(Shader3D.getDefineByName(defineNames[i]));\r\n                    pass.withCompile(compileDefineDatas);\r\n                } else {\r\n                    console.warn(\"Shader3D: unknown passIndex.\");\r\n                }\r\n            } else {\r\n                console.warn(\"Shader3D: unknown subShaderIndex.\");\r\n            }\r\n        } else {\r\n            console.warn(\"Shader3D: unknown shader name.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加预编译shader文件，主要是处理宏定义\r\n     */\r\n    static add(name: string, enableInstancing: boolean = false, supportReflectionProbe: boolean = false): Shader3D {\r\n        return Shader3D._preCompileShader[name] = new Shader3D(name, enableInstancing, supportReflectionProbe);\r\n    }\r\n\r\n    /**\r\n     * 获取ShaderCompile3D。\r\n     * @param\tname\r\n     * @return ShaderCompile3D。\r\n     */\r\n    static find(name: string): Shader3D {\r\n        return Shader3D._preCompileShader[name];\r\n    }\r\n\r\n    static parse(data: IShaderObjStructor, basePath: string) {\r\n        if (!data.name)\r\n            console.warn(\"shader name is empty\", data);\r\n        if (!data.uniformMap)\r\n            console.warn(`${data.name}: uniformMap is empty`);\r\n\r\n        let shader = Shader3D.add(data.name, data.enableInstancing, data.supportReflectionProbe);\r\n        shader._surportVolumetricGI = data.surportVolumetricGI;\r\n        let subshader = new SubShader(data.attributeMap ? data.attributeMap : SubShader.DefaultAttributeMap, data.uniformMap, data.defaultValue);\r\n        shader.addSubShader(subshader);\r\n        let passDataArray = data.shaderPass;\r\n        for (var i in passDataArray) {\r\n            let passData = passDataArray[i] as IShaderpassStructor;\r\n            if (!passData.VS) {\r\n                console.warn(`${data.name}: VS of pass ${i} is empty`);\r\n                continue;\r\n            }\r\n            if (!passData.FS) {\r\n                console.warn(`${data.name}: FS of pass ${i} is empty`);\r\n                continue;\r\n            }\r\n\r\n            let shaderPass = subshader._addShaderPass(ShaderCompile.compile(passData.VS, passData.FS, basePath), passData.pipeline);\r\n\r\n            shaderPass.statefirst = passData.statefirst ?? false;\r\n\r\n            ShaderCompile.getRenderState(passData.renderState, shaderPass.renderState);\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    /**@internal */\r\n    _name: string;\r\n    /**@internal */\r\n    _enableInstancing: boolean = false;\r\n    /**@internal */\r\n    _supportReflectionProbe: boolean = false;\r\n    /**@internal */\r\n    _surportVolumetricGI: boolean = false;\r\n    /**@internal */\r\n    _subShaders: SubShader[] = [];\r\n\r\n    shaderType: ShaderFeatureType;\r\n    /**\r\n     * 名字。\r\n     */\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Shader3D</code> 实例。\r\n     */\r\n    constructor(name: string, enableInstancing: boolean, supportReflectionProbe: boolean) {\r\n        this._name = name;\r\n        this._enableInstancing = enableInstancing;\r\n        this._supportReflectionProbe = supportReflectionProbe;\r\n    }\r\n\r\n    /**\r\n     * 添加子着色器。\r\n     * @param 子着色器。\r\n     */\r\n    addSubShader(subShader: SubShader): void {\r\n        this._subShaders.push(subShader);\r\n        subShader._owner = this;\r\n    }\r\n\r\n    /**\r\n     * 在特定索引获取子着色器。\r\n     * @param\tindex 索引。\r\n     * @return 子着色器。\r\n     */\r\n    getSubShaderAt(index: number): SubShader {\r\n        return this._subShaders[index];\r\n    }\r\n\r\n}\r\n\r\n\r\n","/**\r\n * 纹理寻址模式。\r\n */\r\nexport enum WrapMode {\r\n    /** 循环平铺。*/\r\n    Repeat = 0,\r\n    /** 超过UV边界后采用最后一个像素。*/\r\n    Clamp = 1,\r\n    /** 镜像采样 */\r\n    Mirrored = 2\r\n}","import { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderInstance } from \"../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { SubShader, UniformMapType } from \"../../RenderEngine/RenderShader/SubShader\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IShaderCompiledObj } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\nexport class ShaderProcessInfo {\r\n    defineString: string[];\r\n    vs: ShaderNode;\r\n    ps: ShaderNode;\r\n    attributeMap: { [name: string]: [number, ShaderDataType] };\r\n    uniformMap: UniformMapType;\r\n    is2D: boolean;\r\n    //....其他数据\r\n};\r\nexport class ShaderCompileDefineBase {\r\n    /** @internal */\r\n    static _defineString: Array<string> = [];\r\n    /** @internal */\r\n    static _debugDefineString: string[] = [];\r\n    /** @internal */\r\n    static _debugDefineMask: number[] = [];\r\n    /** @internal */\r\n    public _VS: ShaderNode;\r\n    /** @internal */\r\n    public _PS: ShaderNode;\r\n    /** @internal */\r\n    _defs: Set<string>;\r\n    /** @internal */\r\n    _validDefine: DefineDatas = new DefineDatas();\r\n    /** @internal */\r\n    protected _cacheShaderHierarchy: number = 1;\r\n    /** @internal */\r\n    protected _owner: SubShader;\r\n    /** @internal */\r\n    name: string;\r\n\r\n    nodeCommonMap: Array<string>;\r\n    /** @internal */\r\n    protected _cacheSharders: { [key: number]: { [key: number]: { [key: number]: ShaderInstance } } } = {};\r\n\r\n    constructor(owner: any, name: string, compiledObj: IShaderCompiledObj) {\r\n        this._owner = owner;\r\n        this.name = name;\r\n        this._VS = compiledObj.vsNode;\r\n        this._PS = compiledObj.psNode;\r\n        this._defs = compiledObj.defs;\r\n        for (let k of compiledObj.defs)\r\n            this._validDefine.add(Shader3D.getDefineByName(k));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resizeCacheShaderMap(cacheMap: any, hierarchy: number, resizeLength: number): void {\r\n        var end: number = this._cacheShaderHierarchy - 1;\r\n        if (hierarchy == end) {\r\n            for (var k in cacheMap) {\r\n                var shader = cacheMap[k];\r\n                for (var i: number = 0, n: number = resizeLength - end; i < n; i++) {\r\n                    if (i == n - 1)\r\n                        cacheMap[0] = shader;//0替代(i == 0 ? k : 0),只扩不缩\r\n                    else\r\n                        cacheMap = cacheMap[i == 0 ? k : 0] = {};\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            ++hierarchy;\r\n            for (var k in cacheMap)\r\n                this._resizeCacheShaderMap(cacheMap[k], hierarchy, resizeLength);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: DefineDatas): ShaderInstance {\r\n        var debugDefineString: string[] = ShaderCompileDefineBase._debugDefineString;\r\n        var debugDefineMask: number[] = ShaderCompileDefineBase._debugDefineMask;\r\n        var debugMaskLength: number;\r\n        compileDefine._intersectionDefineDatas(this._validDefine);\r\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\r\n            debugMaskLength = compileDefine._length;\r\n        }\r\n        //compileDefine.addDefineDatas(Scene3D._configDefineValues);\r\n\r\n        var cacheShaders: any = this._cacheSharders;\r\n        var maskLength: number = compileDefine._length;\r\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\r\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\r\n            this._cacheShaderHierarchy = maskLength;\r\n        }\r\n\r\n        var mask: Array<number> = compileDefine._mask;\r\n        var endIndex: number = compileDefine._length - 1;\r\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\r\n        for (var i: number = 0; i < maxEndIndex; i++) {\r\n            var subMask: number = endIndex < i ? 0 : mask[i];\r\n            var subCacheShaders = cacheShaders[subMask];\r\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\r\n            cacheShaders = subCacheShaders;\r\n        }\r\n\r\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\r\n        var shader: ShaderInstance = cacheShaders[cacheKey];\r\n        if (shader)\r\n            return shader;\r\n\r\n        var defineString: string[] = ShaderCompileDefineBase._defineString;\r\n        //TODO\r\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\r\n        let shaderProcessInfo: ShaderProcessInfo = new ShaderProcessInfo();\r\n        shaderProcessInfo.is2D = true;\r\n        shaderProcessInfo.vs = this._VS;\r\n        shaderProcessInfo.ps = this._PS;\r\n        shaderProcessInfo.attributeMap = this._owner._attributeMap;\r\n        shaderProcessInfo.uniformMap = this._owner._uniformMap;\r\n        shaderProcessInfo.defineString = defineString;\r\n\r\n        shader = LayaGL.renderOBJCreate.createShaderInstance(shaderProcessInfo, this);\r\n\r\n        cacheShaders[cacheKey] = shader;\r\n\r\n        if (Shader3D.debugMode) {\r\n            var defStr: string = \"\";\r\n            var defMask: string = \"\";\r\n\r\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++)\r\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\r\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++)\r\n                (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\r\n\r\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this.name + \" \" + \" DefineMask:[\" + defMask + \"]\" + \" DefineNames:[\" + defStr + \"]\", \"color:green\");\r\n        }\r\n\r\n        return shader;\r\n    }\r\n}","import { SubShader } from \"./SubShader\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderVariant } from \"../../RenderEngine/RenderShader/ShaderVariantCollection\";\r\nimport { IShaderCompiledObj } from \"../../webgl/utils/ShaderCompile\";\r\nimport { RenderState } from \"./RenderState\";\r\nimport { ShaderInstance } from \"./ShaderInstance\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * <code>ShaderPass</code> 类用于实现ShaderPass。\r\n */\r\nexport class ShaderPass extends ShaderCompileDefineBase {\r\n\r\n    /** @internal */\r\n    private static _defineStrings: Array<string> = [];\r\n    /** @internal */\r\n    private static _debugDefineStrings: string[] = [];\r\n    /** @internal */\r\n    private static _debugDefineMasks: number[] = [];\r\n    /** @internal */\r\n    private _renderState: RenderState;\r\n    /** @internal */\r\n    _tags: any = {};\r\n    /** @internal */\r\n    _pipelineMode: string;\r\n    /**@internal */\r\n    _nodeUniformCommonMap: Array<string>;\r\n    /** 优先 ShaderPass 渲染状态 */\r\n    statefirst: boolean = false;\r\n\r\n    /**\r\n     * 渲染状态。\r\n     */\r\n    get renderState(): RenderState {\r\n        return this._renderState;\r\n    }\r\n\r\n    constructor(owner: SubShader, compiledObj: IShaderCompiledObj) {\r\n        super(owner, null, compiledObj);\r\n        this._renderState = LayaGL.renderOBJCreate.createRenderState();\r\n        this._renderState.setNull();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addDebugShaderVariantCollection(compileDefine: DefineDatas, outDebugDefines: string[], outDebugDefineMask: number[]): void {\r\n        var dbugShaderVariantInfo: ShaderVariant = Shader3D._debugShaderVariantInfo;\r\n        var debugSubShader: SubShader = this._owner;\r\n        var debugShader: Shader3D = debugSubShader._owner;\r\n        var mask: number[] = compileDefine._mask;\r\n        Shader3D._getNamesByDefineData(compileDefine, outDebugDefines);\r\n        outDebugDefineMask.length = mask.length;\r\n        for (var i: number = 0, n: number = mask.length; i < n; i++)\r\n            outDebugDefineMask[i] = mask[i];\r\n\r\n        if (dbugShaderVariantInfo)\r\n            dbugShaderVariantInfo.setValue(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\r\n        else\r\n            Shader3D._debugShaderVariantInfo = dbugShaderVariantInfo = new ShaderVariant(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\r\n        Shader3D.debugShaderVariantCollection.add(dbugShaderVariantInfo);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: DefineDatas, IS2d: boolean = false): ShaderInstance {\r\n        var debugDefineString: string[] = ShaderPass._debugDefineStrings;\r\n        var debugDefineMask: number[] = ShaderPass._debugDefineMasks;\r\n        var debugMaskLength: number;\r\n        compileDefine._intersectionDefineDatas(this._validDefine);\r\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\r\n            debugMaskLength = compileDefine._length;\r\n            this._addDebugShaderVariantCollection(compileDefine, debugDefineString, debugDefineMask);\r\n        }\r\n\r\n        var cacheShaders: any = this._cacheSharders;\r\n        var maskLength: number = compileDefine._length;\r\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\r\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\r\n            this._cacheShaderHierarchy = maskLength;\r\n        }\r\n\r\n        var mask: Array<number> = compileDefine._mask;\r\n        var endIndex: number = compileDefine._length - 1;\r\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\r\n        for (var i: number = 0; i < maxEndIndex; i++) {\r\n            var subMask: number = endIndex < i ? 0 : mask[i];\r\n            var subCacheShaders = cacheShaders[subMask];\r\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\r\n            cacheShaders = subCacheShaders;\r\n        }\r\n\r\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\r\n        var shader: ShaderInstance = cacheShaders[cacheKey];\r\n        if (shader)\r\n            return shader;\r\n\r\n        let shaderProcessInfo: ShaderProcessInfo = new ShaderProcessInfo();\r\n        shaderProcessInfo.is2D = IS2d;\r\n        shaderProcessInfo.vs = this._VS;\r\n        shaderProcessInfo.ps = this._PS;\r\n        shaderProcessInfo.attributeMap = this._owner._attributeMap;\r\n        shaderProcessInfo.uniformMap = this._owner._uniformMap;\r\n\r\n        var defineString: string[] = ShaderPass._defineStrings;\r\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\r\n        shaderProcessInfo.defineString = defineString;\r\n\r\n        shader = LayaGL.renderOBJCreate.createShaderInstance(shaderProcessInfo, this);\r\n\r\n        cacheShaders[cacheKey] = shader;\r\n\r\n        if (Shader3D.debugMode) {\r\n            var defStr: string = \"\";\r\n            var defCommonStr: string = \"\";\r\n            var defMask: string = \"\";\r\n            var spriteCommonNode: string = \"\";\r\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++) {\r\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\r\n            }\r\n            // for (var i: number = 0, n: number = debugDefineString.length; i < n; i++){}\r\n            //     (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\r\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++) {\r\n                if (Shader3D._configDefineValues.has(Shader3D.getDefineByName(debugDefineString[i])))\r\n                    defCommonStr += debugDefineString[i] + \",\";\r\n                else\r\n                    defStr += debugDefineString[i] + \",\";\r\n            }\r\n            if (this.nodeCommonMap) {\r\n                for (var j = 0; j < this.nodeCommonMap.length; j++) {\r\n                    spriteCommonNode += this.nodeCommonMap[j] + \",\";\r\n                }\r\n            }\r\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this._owner._owner._name +\r\n                \" SubShaderIndex:\" + this._owner._owner._subShaders.indexOf(this._owner) +\r\n                \" PassIndex:\" + this._owner._passes.indexOf(this) +\r\n                \" DefineMask:[\" + defMask + \"]\" +\r\n                \" DefineNames:[\" + defStr + \"]\" +\r\n                \" Environment Macro DefineNames:[\" + defCommonStr + \"]\" +\r\n                \"Sprite CommonNode:[\" + spriteCommonNode + \"]\",\r\n                \"color:green\");\r\n        }\r\n        return shader;\r\n    }\r\n}\r\n\r\n","/**\r\n* <code>VertexElement</code> 类用于创建顶点结构分配。\r\n*/\r\nexport class VertexElement {\r\n    /**@internal */\r\n    _offset: number;\r\n    /**@internal */\r\n    _elementFormat: string;\r\n    /**@internal */\r\n    _elementUsage: number;\r\n    //usageIndex:int;//TODO:待确定是否添加\r\n\r\n    /**\r\n     * 顶点偏移\r\n     */\r\n    get offset(): number {\r\n        return this._offset;\r\n    }\r\n    /**\r\n     * 顶点信息名称\r\n     */\r\n    get elementFormat(): string {\r\n        return this._elementFormat;\r\n    }\r\n\r\n    /**\r\n     * 顶点宏标记\r\n     */\r\n    get elementUsage(): number {\r\n        return this._elementUsage;\r\n    }\r\n\r\n    /**\r\n     * 创建顶点结构分配实例\r\n     * @param offset 顶点偏移\r\n     * @param elementFormat 顶点数据格式名称\r\n     * @param elementUsage 顶点宏标记\r\n     */\r\n    constructor(offset: number, elementFormat: string, elementUsage: number) {\r\n        this._offset = offset;\r\n        this._elementFormat = elementFormat;\r\n        this._elementUsage = elementUsage;\r\n        //this.usageIndex = usageIndex;\r\n    }\r\n}\r\n\r\n","import { RenderParams } from \"../RenderEngine/RenderEnum/RenderParams\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * 类用来定义顶点元素格式\r\n */\r\nexport class VertexElementFormat {\r\n\t/**单精度浮点数 */\r\n\tstatic Single: string = \"single\";\r\n\t/**vec2 数据*/\r\n\tstatic Vector2: string = \"vector2\";\r\n\t/**vec3 数据*/\r\n\tstatic Vector3: string = \"vector3\";\r\n\t/**vec4 数据 */\r\n\tstatic Vector4: string = \"vector4\";\r\n\t/**颜色 */\r\n\tstatic Color: string = \"color\";\r\n\t/**字节数组4 */\r\n\tstatic Byte4: string = \"byte4\";\r\n\t/**字节数组3 */\r\n\tstatic Byte3: string = \"byte3\";\r\n\t/**字节数组2 */\r\n\tstatic Byte2: string = \"byte2\";\r\n\t/**字节数组1 */\r\n\tstatic ByteOne: string = \"byte\";\r\n\t/**半精度浮点数数组2 */\r\n\tstatic Short2: string = \"short2\";\r\n\t/**半精度浮点数数组4 */\r\n\tstatic Short4: string = \"short4\";\r\n\t/**归一化半精度浮点数组2 */\r\n\tstatic NormalizedShort2: string = \"normalizedshort2\";\r\n\t/**归一化半精度浮点数组4 */\r\n\tstatic NormalizedShort4: string = \"normalizedshort4\";\r\n\t/**@internal */\r\n\tstatic HalfVector2: string = \"halfvector2\";\r\n\t/**@internal */\r\n\tstatic HalfVector4: string = \"halfvector4\";\r\n\t/**@internal */\r\n\tstatic NorByte4: string = \"nbyte4\";\r\n\t/**@internal */\r\n\tstatic NorUByte4: string = \"ubyte4\";\r\n\r\n\t/** @internal [组数量,数据类型,是否归一化:0为false]。*/\r\n\tprivate static _elementInfos: any;\r\n\t/**@internal */\r\n\tstatic __init__(): void {\r\n\t\tVertexElementFormat._elementInfos = {\r\n\t\t\t\"single\": [1, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector3\": [3, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"color\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"byte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte3\": [3, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte\": [1, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"short2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"short4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"normalizedshort2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"normalizedshort4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"halfvector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"halfvector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"nbyte4\": [4, LayaGL.renderEngine.getParams(RenderParams.BYTE), 1],\r\n\t\t\t\"ubyte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 1],\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点元素格式信息。\r\n\t * @param element 元素名称\r\n\t * @returns 返回顶点元素信息\r\n\t */\r\n\tstatic getElementInfos(element: string): any[] {\r\n\t\tvar info: any[] = VertexElementFormat._elementInfos[element];\r\n\t\tif (info)\r\n\t\t\treturn info;\r\n\t\telse\r\n\t\t\tthrow \"VertexElementFormat: this vertexElementFormat is not implement.\";\r\n\t}\r\n}\r\n\r\n","import { VertexElement } from \"../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../renders/VertexElementFormat\";\r\nimport { VAElement } from \"./VertexAttributeLayout\"\r\n/**\r\n * <code>VertexDeclaration</code> 类用于生成顶点声明。\r\n */\r\nexport class VertexDeclaration {\r\n    /**@internal */\r\n    private static _uniqueIDCounter: number = 1;\r\n\r\n    /**@internal */\r\n    private _id: number;\r\n    /**@internal */\r\n    private _vertexStride: number;\r\n    /**@internal */\r\n    private _vertexElementsDic: { [key: string]: VertexElement };\r\n    /**@internal */\r\n    _shaderValues: { [key: number]: Int32Array };\r\n\r\n    /**@internal [只读]*/\r\n    _vertexElements: Array<VertexElement>;\r\n    /**@internal */\r\n    _VAElements: Array<VAElement>;\r\n    /**\r\n     * 获取唯一标识ID(通常用于优化或识别)。\r\n     * @return 唯一标识ID\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 顶点跨度，以字节为单位。\r\n     */\r\n    get vertexStride(): number {\r\n        return this._vertexStride;\r\n    }\r\n\r\n    /**\r\n     * 顶点元素的数量。\r\n     */\r\n    get vertexElementCount(): number {\r\n        return this._vertexElements.length;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>VertexDeclaration</code> 实例。\r\n     * @param\tvertexStride 顶点跨度。\r\n     * @param\tvertexElements 顶点元素集合。\r\n     */\r\n    constructor(vertexStride: number, vertexElements: Array<VertexElement>) {\r\n        this._id = ++VertexDeclaration._uniqueIDCounter;\r\n        this._vertexElementsDic = {};\r\n        this._vertexStride = vertexStride;\r\n        this._vertexElements = vertexElements;\r\n        this._VAElements = [];\r\n        var count: number = vertexElements.length;\r\n        this._shaderValues = {};\r\n\r\n        for (var j: number = 0; j < count; j++) {\r\n            var vertexElement: VertexElement = vertexElements[j];\r\n            var name: number = vertexElement._elementUsage;\r\n            this._vertexElementsDic[name] = vertexElement;\r\n            var value: Int32Array = new Int32Array(5);\r\n            var elmentInfo: any[] = VertexElementFormat.getElementInfos(vertexElement._elementFormat);\r\n            value[0] = elmentInfo[0];\r\n            value[1] = elmentInfo[1];\r\n            value[2] = elmentInfo[2];\r\n            value[3] = this._vertexStride;\r\n            value[4] = vertexElement._offset;\r\n            this._shaderValues[name] = value;\r\n\r\n            //VAElement\r\n            this._VAElements.push({ format: vertexElement._elementFormat, stride: vertexElement._offset, shaderLocation: name })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取顶点元素。\r\n     * @param index 索引。\r\n     */\r\n    getVertexElementByIndex(index: number): VertexElement {\r\n        return this._vertexElements[index];\r\n    }\r\n\r\n    /**\r\n     * get vertexElement by usage\r\n     */\r\n    getVertexElementByUsage(usage: number): VertexElement {\r\n        return this._vertexElementsDic[usage];\r\n    }\r\n}\r\n\r\n\r\n","import { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { VertexDeclaration } from \"../VertexDeclaration\";\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nexport class VertexMesh {\r\n\t/**顶点位置数据 */\r\n\tstatic MESH_POSITION0: number = 0;\r\n\t/**顶点顶点色数据 */\r\n\tstatic MESH_COLOR0: number = 1;\r\n\t/**顶点UV0数据 */\r\n\tstatic MESH_TEXTURECOORDINATE0: number = 2;\r\n\t/**顶点法线数据 */\r\n\tstatic MESH_NORMAL0: number = 3;\r\n\t/**顶点切线数据 */\r\n\tstatic MESH_TANGENT0: number = 4;\r\n\t/**顶点骨骼索引数据 */\r\n\tstatic MESH_BLENDINDICES0: number = 5;\r\n\t/**顶点骨骼权重数据 */\r\n\tstatic MESH_BLENDWEIGHT0: number = 6;\r\n\t/**顶点UV1数据 */\r\n\tstatic MESH_TEXTURECOORDINATE1: number = 7;\r\n\t/**顶点世界矩阵数据Row0 */\r\n\tstatic MESH_WORLDMATRIX_ROW0: number = 8;\r\n\t/**顶点世界矩阵数据Row1 */\r\n\tstatic MESH_WORLDMATRIX_ROW1: number = 9;\r\n\t/**顶点世界矩阵数据Row2 */\r\n\tstatic MESH_WORLDMATRIX_ROW2: number = 10;\r\n\t/**顶点世界矩阵数据Row3 */\r\n\tstatic MESH_WORLDMATRIX_ROW3: number = 11;\r\n\r\n\r\n\t//TODO：location不够\r\n\t/**简单数据动画数据 */\r\n\tstatic MESH_SIMPLEANIMATOR: number = 12;\r\n\r\n\t/**光照贴图的缩放和偏移 */\r\n\tstatic MESH_LIGHTMAPSCALEOFFSET: number = 13;\r\n\t/**instanceworld顶点描述 */\r\n\tstatic instanceWorldMatrixDeclaration: VertexDeclaration;\r\n\t/**instanceSimple动画数据顶点描述 */\r\n\tstatic instanceSimpleAnimatorDeclaration: VertexDeclaration;\r\n\t/**instanceLightMap光照贴图的缩放和偏移顶点描述 */\r\n\tstatic instanceLightMapScaleOffsetDeclaration: VertexDeclaration;\r\n\r\n\r\n\t/**自定义attribute instance 预留位*/\r\n\t/**顶点自定义数据0 */\r\n\tstatic MESH_CUSTOME0: number = 12;\r\n\t/**顶点自定义数据1 */\r\n\tstatic MESH_CUSTOME1: number = 13;\r\n\t/**顶点自定义数据2 */\r\n\tstatic MESH_CUSTOME2: number = 14;\r\n\t/**顶点自定义数据3 */\r\n\tstatic MESH_CUSTOME3: number = 15;\r\n\r\n\r\n\r\n\r\n\t/**@internal */\r\n\tprivate static _vertexDeclarationMap: any = {};\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __init__(): void {\r\n\t\tVertexMesh.instanceWorldMatrixDeclaration = new VertexDeclaration(64,\r\n\t\t\t[new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW0),\r\n\t\t\tnew VertexElement(16, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW1),\r\n\t\t\tnew VertexElement(32, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW2),\r\n\t\t\tnew VertexElement(48, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW3)]);\r\n\r\n\t\tVertexMesh.instanceSimpleAnimatorDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_SIMPLEANIMATOR)]);\r\n\t\tVertexMesh.instanceLightMapScaleOffsetDeclaration = new VertexDeclaration(16, [new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_LIGHTMAPSCALEOFFSET)]);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t * @param vertexFlag 顶点声明标记字符,格式为:\"POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT\"。\r\n\t * @return 顶点声明。\r\n\t */\r\n\tstatic getVertexDeclaration(vertexFlag: string, compatible: boolean = true): VertexDeclaration {\r\n\t\tvar verDec: VertexDeclaration = VertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\r\n\t\tif (!verDec) {\r\n\t\t\tvar subFlags: any[] = vertexFlag.split(\",\");\r\n\t\t\tvar offset: number = 0;\r\n\t\t\tvar elements: any[] = [];\r\n\t\t\tfor (var i: number = 0, n: number = subFlags.length; i < n; i++) {\r\n\t\t\t\tvar element: VertexElement;\r\n\t\t\t\tswitch (subFlags[i]) {\r\n\t\t\t\t\tcase \"POSITION\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"COLOR\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_COLOR0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE0);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV1\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE1);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDWEIGHT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDWEIGHT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDINDICES\":\r\n\t\t\t\t\t\tif (compatible) {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDINDICES0);//兼容\r\n\t\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Byte4, VertexMesh.MESH_BLENDINDICES0);\r\n\t\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"TANGENT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_TANGENT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL_BYTE\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.NorByte4, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow \"VertexMesh: unknown vertex flag.\";\r\n\t\t\t\t}\r\n\t\t\t\telements.push(element);\r\n\t\t\t}\r\n\t\t\tverDec = new VertexDeclaration(offset, elements);\r\n\t\t\tVertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\r\n\t\t}\r\n\t\treturn verDec;\r\n\t}\r\n}\r\n\r\n\r\n","import { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataItem, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { UniformBufferParamsType, UnifromBufferData } from \"../../RenderEngine/UniformBufferData\";\r\nimport { IShaderCompiledObj, ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { VertexMesh } from \"./VertexMesh\";\r\n\r\n// todo 初始化 uniformMap 提取出来 供 Scene, Camera, Sprite3D 生成 uniform shader代码 ?\r\n// export type UniformItem = { [uniformName: string]: ShaderDataType } | { type: ShaderDataType, value?: ShaderDataItem };\r\n\r\nexport type UniformMapType = { [blockName: string]: { [uniformName: string]: ShaderDataType } | ShaderDataType };\r\n\r\nexport type AttributeMapType = { [name: string]: [number, ShaderDataType] };\r\n\r\n/**\r\n * <code>SubShader</code> 类用于创建SubShader。\r\n */\r\nexport class SubShader {\r\n    public static IncludeUniformMap: any = {};\r\n\r\n    /**\r\n     * 注册glsl所用到的Uniform\r\n     * 会在生成Uniformmap的时候根据包含的Include文件，添加所需要的uniform因素\r\n     * @param includeName \r\n     * @param uniformInfo \r\n     * @param defaultUniformData \r\n     */\r\n    public static regIncludeBindUnifrom(includeName: string, uniformMap: { [name: string]: ShaderDataType }, defaultValue: { [key: string]: any }) {\r\n        let obj: any = {};\r\n        let data: any = obj[includeName] = {};\r\n        data[\"uniformMap\"] = uniformMap;\r\n        data[\"defaultValue\"] = defaultValue;\r\n        Object.assign(SubShader.IncludeUniformMap, obj);\r\n    }\r\n\r\n    public static readonly DefaultAttributeMap: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_Position': [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4],\r\n        'a_Normal': [VertexMesh.MESH_NORMAL0, ShaderDataType.Vector3],\r\n        'a_Tangent0': [VertexMesh.MESH_TANGENT0, ShaderDataType.Vector4],\r\n        'a_Texcoord0': [VertexMesh.MESH_TEXTURECOORDINATE0, ShaderDataType.Vector2],\r\n        'a_Texcoord1': [VertexMesh.MESH_TEXTURECOORDINATE1, ShaderDataType.Vector2],\r\n        'a_Color': [VertexMesh.MESH_COLOR0, ShaderDataType.Vector4],\r\n        'a_BoneWeights': [VertexMesh.MESH_BLENDWEIGHT0, ShaderDataType.Vector4],\r\n        'a_BoneIndices': [VertexMesh.MESH_BLENDINDICES0, ShaderDataType.Vector4],\r\n        'a_WorldMat': [VertexMesh.MESH_WORLDMATRIX_ROW0, ShaderDataType.Matrix4x4],\r\n        'a_SimpleTextureParams': [VertexMesh.MESH_SIMPLEANIMATOR, ShaderDataType.Vector4],\r\n        'a_LightmapScaleOffset': [VertexMesh.MESH_LIGHTMAPSCALEOFFSET, ShaderDataType.Vector4]\r\n    }\r\n\r\n\r\n    /**@internal */\r\n    _attributeMap: AttributeMapType;\r\n\r\n    /**@internal */\r\n    _uniformMap: UniformMapType;\r\n\r\n    // todo uniform 相关信息统一用结构体存储？ 合并 value type map\r\n    /**\r\n     * @internal\r\n     * uniform 默认值\r\n     */\r\n    readonly _uniformDefaultValue: { [name: string]: ShaderDataItem };\r\n    /**\r\n     * @internal\r\n     * uniform 数据类型\r\n     */\r\n    readonly _uniformTypeMap: Map<string, ShaderDataType>;\r\n\r\n    /**@internal */\r\n    readonly _uniformBufferDataMap: Map<string, UnifromBufferData> = new Map();\r\n\r\n    /**@internal */\r\n    _owner: Shader3D;\r\n    /**@internal */\r\n    _flags: any = {};\r\n    /**@internal */\r\n    _passes: ShaderPass[] = [];\r\n\r\n    /**\r\n     * 创建一个 <code>SubShader</code> 实例。\r\n     * @param\tattributeMap  顶点属性表。\r\n     * @param\tuniformMap  uniform属性表。\r\n     */\r\n    constructor(attributeMap: { [name: string]: [number, ShaderDataType] } = SubShader.DefaultAttributeMap, uniformMap: UniformMapType = {}, uniformDefaultValue: { [name: string]: ShaderDataItem } = null) {\r\n        this._attributeMap = attributeMap;\r\n        this._uniformMap = uniformMap;\r\n        this._uniformDefaultValue = uniformDefaultValue;\r\n        this._uniformTypeMap = new Map();\r\n        for (const key in uniformMap) {\r\n            if (typeof uniformMap[key] == \"object\") {\r\n                let block = <{ [uniformName: string]: ShaderDataType }>(uniformMap[key]);\r\n                let blockUniformMap = new Map<string, UniformBufferParamsType>();\r\n                for (const uniformName in block) {\r\n                    let uniformType = ShaderDataTypeToUniformBufferType(block[uniformName]);\r\n                    blockUniformMap.set(uniformName, uniformType);\r\n\r\n                    this._uniformTypeMap.set(uniformName, block[uniformName]);\r\n                }\r\n\r\n                let blockUniformIndexMap = new Map<number, UniformBufferParamsType>();\r\n                blockUniformMap.forEach((value, key) => {\r\n                    blockUniformIndexMap.set(Shader3D.propertyNameToID(key), value);\r\n                });\r\n                let blockData = new UnifromBufferData(blockUniformIndexMap);\r\n                this._uniformBufferDataMap.set(key, blockData);\r\n            }\r\n            else {\r\n                let unifromType = <ShaderDataType>uniformMap[key];\r\n                this._uniformTypeMap.set(key, unifromType);\r\n                if (unifromType == ShaderDataType.Texture2D || unifromType == ShaderDataType.TextureCube || unifromType == ShaderDataType.Texture3D || unifromType == ShaderDataType.Texture2DArray) {\r\n                    let textureGammaDefine = Shader3D.getDefineByName(`Gamma_${key}`);\r\n                    let uniformIndex = Shader3D.propertyNameToID(key);\r\n                    ShaderDefine._texGammaDefine[uniformIndex] = textureGammaDefine;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加标记。\r\n     * @param key 标记键。\r\n     * @param value 标记值。\r\n     */\r\n    setFlag(key: string, value: string): void {\r\n        if (value)\r\n            this._flags[key] = value;\r\n        else\r\n            delete this._flags[key];\r\n    }\r\n\r\n    /**\r\n     * 获取标记值。\r\n     * @return key 标记键。\r\n     */\r\n    getFlag(key: string): string {\r\n        return this._flags[key];\r\n    }\r\n\r\n    /**\r\n     * 添加着色器Pass\r\n     * @param vs \r\n     * @param ps \r\n     * @param stateMap \r\n     * @param pipelineMode 渲染管线模式。 \r\n     */\r\n    addShaderPass(vs: string, ps: string, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        return this._addShaderPass(ShaderCompile.compile(vs, ps), pipelineMode);\r\n    }\r\n\r\n    _addShaderPass(compiledObj: IShaderCompiledObj, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        var shaderPass: ShaderPass = new ShaderPass(this, compiledObj);\r\n        shaderPass._pipelineMode = pipelineMode;\r\n        this._passes.push(shaderPass);\r\n        this._addIncludeUniform(compiledObj.includeNames);\r\n        return shaderPass;\r\n    }\r\n\r\n    private _addIncludeUniform(includemap: Set<string>) {\r\n        for (let ele of includemap) {\r\n            if (SubShader.IncludeUniformMap[ele]) {\r\n                let includeBindInfo = SubShader.IncludeUniformMap[ele];\r\n                let bindtypeMap = includeBindInfo[\"uniformMap\"];\r\n                let bindDefaultValue = includeBindInfo[\"defaultValue\"];\r\n                for (var i in bindtypeMap) {\r\n                    if (!this._uniformTypeMap.has(i)) {\r\n                        this._uniformTypeMap.set(i, bindtypeMap[i]);\r\n                        this._uniformMap[i] = bindtypeMap[i];\r\n                    }\r\n                }\r\n                for (var i in bindDefaultValue) {\r\n                    if (!this._uniformDefaultValue[i]) {\r\n                        this._uniformDefaultValue[i] = bindDefaultValue[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction ShaderDataTypeToUniformBufferType(shaderDataType: ShaderDataType) {\r\n\r\n    switch (shaderDataType) {\r\n        case ShaderDataType.Float:\r\n            return UniformBufferParamsType.Number;\r\n        case ShaderDataType.Vector2:\r\n            return UniformBufferParamsType.Vector2;\r\n        case ShaderDataType.Vector3:\r\n            return UniformBufferParamsType.Vector3;\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return UniformBufferParamsType.Vector4;\r\n        case ShaderDataType.Matrix4x4:\r\n            return UniformBufferParamsType.Matrix4x4;\r\n        default:\r\n            throw \"ShaderDataType can not be in UniformBuffer.\";\r\n    }\r\n\r\n}\r\n\r\n","import { Shader3D } from \"../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataType } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../../../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\nexport class ShaderDefines2D {\r\n    /**@internal */\r\n    static TEXTURE2D: ShaderDefine;\r\n    /**@internal */\r\n    static PRIMITIVE: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERGLOW: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERBLUR: ShaderDefine;\r\n    /**@internal */\r\n    static FILTERCOLOR: ShaderDefine;\r\n    /**@internal */\r\n    static COLORADD: ShaderDefine;\r\n    /**@internal */\r\n    static WORLDMAT: ShaderDefine;\r\n    /**@internal */\r\n    static FILLTEXTURE: ShaderDefine;\r\n    /**@internal */\r\n    static SKINMESH: ShaderDefine;\r\n    /**@internal */\r\n    static MVP3D: ShaderDefine;\r\n    /**@internal */\r\n    static GAMMASPACE: ShaderDefine;\r\n    /**@internal */\r\n    static INVERTY: ShaderDefine;\r\n    /**@internal */\r\n    static GAMMATEXTURE: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static TEXTURESHADER: ShaderDefine;\r\n    /**@internal */\r\n    static PRIMITIVESHADER: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static UNIFORM_MMAT: number;// mat4 u_mmat\r\n    static UNIFORM_CLIPMATDIR: number;// uniform vec4 u_clipMatDir;\r\n    static UNIFORM_CLIPMATPOS: number;// uniform vec2 u_clipMatPos;\r\n    static UNIFORM_MMAT2: number;// uniform mat4 u_mmat2;\r\n    static UNIFORM_SIZE: number;// uniform vec2 u_size;\r\n    static UNIFORM_CLIPOFF: number;//uniform vec2 u_clipOff;\t\r\n    static UNIFORM_MVPMatrix: number;//uniform mat4 u_MvpMatrix;\r\n\r\n    static UNIFORM_SPRITETEXTURE: number;// uniform sampler2D u_spriteTexture;\r\n    static UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1: number;//uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\r\n    static UNIFORM_BLURINFO: number; //uniform vec2 u_blurInfo;\r\n\r\n    static UNIFORM_COLORALPHA: number;// uniform vec4 u_colorAlpha;\r\n    static UNIFORM_COLORMAT: number; //uniform mat4 u_colorMat;\r\n    static UNIFORM_COLOR: number;//uniform vec4 u_color;\r\n    static UNIFORM_BLURINFO1: number//uniform vec4 u_blurInfo1;\r\n    static UNIFORM_BLURINFO2: number//uniform vec4 u_blurInfo2;\r\n    static UNIFORM_COLORADD: number;//uniform vec4 u_colorAdd;\r\n    static UNIFORM_TEXRANGE: number;//uniform vec4 u_TexRange;\r\n\r\n    //TODO?\r\n    //static NOOPTMASK: number = ShaderDefines2D.FILTERGLOW | ShaderDefines2D.FILTERBLUR | ShaderDefines2D.FILTERCOLOR | ShaderDefines2D.FILLTEXTURE;\t//有这些定义的不要优化。见submittexture\r\n\r\n    static __init__(): void {\r\n        ShaderDefines2D.TEXTURE2D = Shader3D.getDefineByName(\"TEXTURE2D\");\r\n        ShaderDefines2D.PRIMITIVE = Shader3D.getDefineByName(\"PRIMITIVE\");\r\n\r\n        ShaderDefines2D.FILTERGLOW = Shader3D.getDefineByName(\"GLOW_FILTER\");\r\n        ShaderDefines2D.FILTERBLUR = Shader3D.getDefineByName(\"BLUR_FILTER\");\r\n        ShaderDefines2D.FILTERCOLOR = Shader3D.getDefineByName(\"COLOR_FILTER\");\r\n        ShaderDefines2D.COLORADD = Shader3D.getDefineByName(\"COLOR_ADD\");\r\n        ShaderDefines2D.WORLDMAT = Shader3D.getDefineByName(\"WORLDMAT\");\r\n        ShaderDefines2D.FILLTEXTURE = Shader3D.getDefineByName(\"FILLTEXTURE\");\r\n        ShaderDefines2D.MVP3D = Shader3D.getDefineByName('MVP3D');\r\n\r\n        ShaderDefines2D.GAMMASPACE = Shader3D.getDefineByName('GAMMASPACE');\r\n\r\n        ShaderDefines2D.INVERTY = Shader3D.getDefineByName('INVERTY');\r\n\r\n        ShaderDefines2D.GAMMATEXTURE = Shader3D.getDefineByName('GAMMATEXTURE');\r\n\r\n        ShaderDefines2D.TEXTURESHADER = Shader3D.getDefineByName(\"TEXTUREVS\");\r\n        ShaderDefines2D.PRIMITIVESHADER = Shader3D.getDefineByName(\"PRIMITIVEMESH\");\r\n\r\n        ShaderDefines2D.initSprite2DCommandEncoder();\r\n    }\r\n\r\n    static initSprite2DCommandEncoder() {\r\n        ShaderDefines2D.UNIFORM_MMAT = Shader3D.propertyNameToID(\"u_mmat\");\r\n        ShaderDefines2D.UNIFORM_CLIPMATDIR = Shader3D.propertyNameToID(\"u_clipMatDir\");\r\n        ShaderDefines2D.UNIFORM_CLIPMATPOS = Shader3D.propertyNameToID(\"u_clipMatPos\");\r\n        ShaderDefines2D.UNIFORM_MMAT2 = Shader3D.propertyNameToID(\"u_mmat2\");\r\n        ShaderDefines2D.UNIFORM_SIZE = Shader3D.propertyNameToID(\"u_size\");\r\n        ShaderDefines2D.UNIFORM_CLIPOFF = Shader3D.propertyNameToID(\"u_clipOff\");\r\n\r\n        ShaderDefines2D.UNIFORM_MVPMatrix = Shader3D.propertyNameToID(\"u_MvpMatrix\");\r\n        ShaderDefines2D.UNIFORM_SPRITETEXTURE = Shader3D.propertyNameToID(\"u_spriteTexture\");\r\n        ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1 = Shader3D.propertyNameToID(\"u_strength_sig2_2sig2_gauss1\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO = Shader3D.propertyNameToID(\"u_blurInfo\");\r\n        ShaderDefines2D.UNIFORM_COLORALPHA = Shader3D.propertyNameToID(\"u_colorAlpha\");\r\n        ShaderDefines2D.UNIFORM_COLORMAT = Shader3D.propertyNameToID(\"u_colorMat\");\r\n\r\n        ShaderDefines2D.UNIFORM_COLOR = Shader3D.propertyNameToID(\"u_color\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO1 = Shader3D.propertyNameToID(\"u_blurInfo1\");\r\n        ShaderDefines2D.UNIFORM_BLURINFO2 = Shader3D.propertyNameToID(\"u_blurInfo2\");\r\n        ShaderDefines2D.UNIFORM_COLORADD = Shader3D.propertyNameToID(\"u_colorAdd\");\r\n        ShaderDefines2D.UNIFORM_TEXRANGE = Shader3D.propertyNameToID(\"u_TexRange\");\r\n\r\n        const commandUniform = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2D\");\r\n\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT, \"u_mmat\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATDIR, \"u_clipMatDir\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPMATPOS, \"u_clipMatPos\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MMAT2, \"u_mmat2\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SIZE, \"u_size\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_CLIPOFF, \"u_clipOff\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_MVPMatrix, \"u_MvpMatrix\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_SPRITETEXTURE, \"u_spriteTexture\", ShaderDataType.Texture2D);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, \"u_strength_sig2_2sig2_gauss1\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO, \"u_blurInfo\", ShaderDataType.Vector2);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORALPHA, \"u_colorAlpha\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORMAT, \"u_colorMat\", ShaderDataType.Matrix4x4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLOR, \"u_color\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO1, \"u_blurInfo1\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_BLURINFO2, \"u_blurInfo2\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_COLORADD, \"u_colorAdd\", ShaderDataType.Vector4);\r\n        commandUniform.addShaderUniform(ShaderDefines2D.UNIFORM_TEXRANGE, \"u_TexRange\", ShaderDataType.Vector4);\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n * \r\n * @author laya\r\n */\r\nexport class RenderInfo {\r\n    /**当前帧的开始时间 */\r\n    static loopStTm: number = 0;\r\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\r\n    static loopCount: number = 0;\r\n}","import { Point } from \"../../maths/Point\"\r\n\r\n// 注意长宽都不要超过256，一个是影响效率，一个是超出表达能力\r\nexport class AtlasGrid {\r\n    atlasID: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    private _texCount: number = 0;\r\n    private _rowInfo: Uint8Array = null;\t\t// 当前行的最大长度\r\n    private _cells: Uint8Array = null;\t\t// 每个格子的信息。{type,w,h} 相当于一个距离场. type =0 表示空闲的。不为0的情况下填充的是宽高（有什么用呢）\r\n    _used: number = 0;\t\t\t\t// 使用率\r\n\r\n    // TODO type 是否有用\r\n\r\n    //------------------------------------------------------------------------------\r\n    constructor(width: number = 0, height: number = 0, id: number = 0) {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n        this.atlasID = id;\r\n        this._init(width, height);\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    addRect(type: number, width: number, height: number, pt: Point): boolean {\r\n        //调用获得应该放在哪 返回值有三个。。bRet是否成功，nX x位置，nY y位置\r\n        if (!this._get(width, height, pt))\r\n            return false;\r\n        //根据获得的x,y填充\r\n        this._fill(pt.x, pt.y, width, height, type);\r\n        this._texCount++;\r\n        //返回是否成功，以及X位置和Y位置\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _release(): void {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _init(width: number, height: number): boolean {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._release();\r\n        if (this._width == 0) return false;\r\n        this._cells = new Uint8Array(this._width * this._height * 3);\r\n        this._rowInfo = new Uint8Array(this._height);\r\n        this._used = 0;\r\n        this._clear();\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _get(width: number, height: number, pt: Point): boolean {\r\n        if (width > this._width || height > this._height) {\r\n            return false;\r\n        }\r\n        //定义返回的x,y的位置\r\n        var rx: number = -1;\r\n        var ry: number = -1;\r\n        //为了效率先保存临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeight: number = this._height;\r\n        //定义一个变量为了指向 m_pCells\r\n        var pCellBox: Uint8Array = this._cells;\r\n\r\n        //遍历查找合适的位置  //TODO 下面的方法应该可以优化\r\n        for (var y: number = 0; y < nHeight; y++) {\r\n            //如果该行的空白数 小于 要放入的宽度返回\r\n            if (this._rowInfo[y] < width) continue;\r\n            for (var x: number = 0; x < nWidth;) {\r\n\r\n                var tm: number = (y * nWidth + x) * 3;\r\n\r\n                if (pCellBox[tm] != 0 || pCellBox[tm + 1] < width || pCellBox[tm + 2] < height) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                rx = x;\r\n                ry = y;\r\n                // 检查当前宽度是否能完全放下，即x方向的每个位置都有足够的高度。\r\n                for (var xx: number = 0; xx < width; xx++) {\r\n                    if (pCellBox[3 * xx + tm + 2] < height) {\r\n                        rx = -1;\r\n                        break;\r\n                    }\r\n                }\r\n                // 不行就x继续前进\r\n                if (rx < 0) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                // 找到了\r\n                pt.x = rx;\r\n                pt.y = ry;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _fill(x: number, y: number, w: number, h: number, type: number): void {\r\n        //定义一些临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeghit: number = this._height;\r\n        //代码检查\r\n        this._check((x + w) <= nWidth && (y + h) <= nHeghit);\r\n\r\n        //填充\r\n        for (var yy: number = y; yy < (h + y); ++yy) {\r\n            this._check(this._rowInfo[yy] >= w);\r\n            this._rowInfo[yy] -= w;\r\n            for (var xx: number = 0; xx < w; xx++) {\r\n                var tm: number = (x + yy * nWidth + xx) * 3;\r\n                this._check(this._cells[tm] == 0);\r\n                this._cells[tm] = type;\r\n                this._cells[tm + 1] = w;\r\n                this._cells[tm + 2] = h;\r\n            }\r\n        }\r\n        //调整我左方相邻空白格子的宽度连续信息描述\r\n        if (x > 0) {\r\n            for (yy = 0; yy < h; ++yy) {\r\n                // TODO 下面应该可以优化\r\n                var s: number = 0;\r\n                for (xx = x - 1; xx >= 0; --xx, ++s) {\r\n                    if (this._cells[((y + yy) * nWidth + xx) * 3] != 0) break;\r\n                }\r\n                for (xx = s; xx > 0; --xx) {\r\n                    this._cells[((y + yy) * nWidth + x - xx) * 3 + 1] = xx;\r\n                    this._check(xx > 0);\r\n                }\r\n            }\r\n        }\r\n        //调整我上方相邻空白格子的高度连续信息描述\r\n        if (y > 0) {\r\n            for (xx = x; xx < (x + w); ++xx) {\r\n                // TODO 下面应该可以优化\r\n                s = 0;\r\n                for (yy = y - 1; yy >= 0; --yy, s++) {\r\n                    if (this._cells[(xx + yy * nWidth) * 3] != 0) break;\r\n                }\r\n                for (yy = s; yy > 0; --yy) {\r\n                    this._cells[(xx + (y - yy) * nWidth) * 3 + 2] = yy;\r\n                    this._check(yy > 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._used += (w * h) / (this._width * this._height);\r\n    }\r\n\r\n    private _check(ret: boolean): void {\r\n        if (ret == false) {\r\n            console.log(\"xtexMerger 错误啦\");\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _clear(): void {\r\n        this._texCount = 0;\r\n        for (var y: number = 0; y < this._height; y++) {\r\n            this._rowInfo[y] = this._width;\r\n        }\r\n        for (var i: number = 0; i < this._height; i++) {\r\n            for (var j: number = 0; j < this._width; j++) {\r\n                var tm: number = (i * this._width + j) * 3;\r\n                this._cells[tm] = 0;\r\n                this._cells[tm + 1] = this._width - j;\r\n                this._cells[tm + 2] = this._width - i;\r\n            }\r\n        }\r\n    }\r\n    //------------------------------------------------------------------\r\n}\r\n\r\n\r\n","export class FontInfo {\r\n\r\n    private static _cache: Record<string, FontInfo> = {};\r\n\r\n    /**\r\n     * 解析字体模型\r\n     * @param font \r\n     */\r\n    static parse(font: string): FontInfo {\r\n        if (font === _lastFont) {\r\n            return _lastFontInfo;\r\n        }\r\n        let r = FontInfo._cache[font];\r\n        if (!r) {\r\n            r = FontInfo._cache[font] = new FontInfo(font);\r\n        }\r\n        _lastFont = font;\r\n        _lastFontInfo = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    _font: string;\r\n    /**@internal */\r\n    _family: string = \"Arial\";\r\n    /**@internal */\r\n    _size: number = 14;\r\n    /**@internal */\r\n    _italic: boolean = false;\r\n    /**@internal */\r\n    _bold: boolean = false;\r\n\r\n    constructor(font: string | null) {\r\n        this.setFont(font || \"14px Arial\");\r\n    }\r\n\r\n    /**\r\n     * 设置字体格式\r\n     * @param value \r\n     */\r\n    setFont(value: string): void {\r\n        this._font = value;\r\n        var words: any[] = value.split(' ');\r\n        var l: number = words.length;\r\n        if (l < 2) {\r\n            if (l == 1) {\r\n                if (words[0].indexOf('px') > 0) {\r\n                    this._size = parseInt(words[0]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        var szpos: number = -1;\r\n        //由于字体可能有空格，例如Microsoft YaHei 所以不能直接取倒数第二个，要先找到px\r\n        for (let i = 0; i < l; i++) {\r\n            if (words[i].indexOf('px') > 0 || words[i].indexOf('pt') > 0) {\r\n                szpos = i;\r\n                this._size = parseInt(words[i]);\r\n                if (this._size <= 0) {\r\n                    console.debug('font parse error:' + value);\r\n                    this._size = 14;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        //最后一个是用逗号分开的family\r\n        var fpos: number = szpos + 1;\r\n        var familys: string = words[fpos];\r\n        fpos++;//下一个\r\n        for (; fpos < l; fpos++) {\r\n            familys += ' ' + words[fpos];\r\n        }\r\n        this._family = (familys.split(','))[0];\r\n        this._italic = words.indexOf('italic') >= 0;\r\n        this._bold = words.indexOf('bold') >= 0;\r\n    }\r\n}\r\n\r\nvar _lastFont: string = '';\r\nvar _lastFontInfo: FontInfo;","import { Texture } from \"../../../../resource/Texture\"\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\r\nimport { RenderState2D } from \"../../../utils/RenderState2D\"\r\nimport { RenderTexture2D } from \"../../../../resource/RenderTexture2D\"\r\nimport { Const } from \"../../../../Const\"\r\nimport { ShaderData } from \"../../../../RenderEngine/RenderShader/ShaderData\"\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\"\r\nimport { Material } from \"../../../../resource/Material\"\r\nimport { DefineDatas } from \"../../../../RenderEngine/RenderShader/DefineDatas\"\r\nimport { Vector2 } from \"../../../../maths/Vector2\"\r\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\"\r\nimport { Vector4 } from \"../../../../maths/Vector4\"\r\nimport { TextTexture } from \"../../../text/TextTexture\"\r\n\r\nexport enum RenderSpriteData {\r\n    Zero,\r\n    Texture2D,\r\n    Primitive\r\n}\r\n\r\n//系统自带渲染数据，不可忽视，如果不设置自定义Shader，将调用引擎本身的Shader\r\nexport class Value2D {\r\n\r\n    static globalShaderData: ShaderData;\r\n\r\n    protected static _cache: any[] = [];\r\n    protected static _typeClass: any = [];\r\n\r\n    public static _initone(type: number, classT: any): void {\r\n        Value2D._typeClass[type] = classT;\r\n        Value2D._cache[type] = [];\r\n        Value2D._cache[type]._length = 0;\r\n        Value2D.globalShaderData = new ShaderData();\r\n    }\r\n\r\n    static TEMPMAT4_ARRAY: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static _compileDefine: DefineDatas = new DefineDatas();\r\n    /**\r\n     * 对象池概念\r\n     * @param mainType \r\n     * @returns \r\n     */\r\n    static create(mainType: RenderSpriteData): Value2D {\r\n        var types: any = Value2D._cache[mainType] ? Value2D._cache[mainType] : [];\r\n        if (types._length)\r\n            return types[--types._length];\r\n        else\r\n            return new Value2D._typeClass[mainType]();\r\n    }\r\n\r\n    defines: ShaderData = new ShaderData();\r\n\r\n    _defaultShader: Shader3D;\r\n    //TODO\r\n    alpha: number = 1.0;\t//这个目前只给setIBVB用。其他的都放到attribute的color中了\r\n    //TODO\r\n    ALPHA: number = 1.0;\t//这个？\r\n\r\n    mainID: RenderSpriteData = RenderSpriteData.Zero;\r\n\r\n    ref: number = 1;\r\n\r\n    private _inClassCache: any;\r\n\r\n    private _cacheID: number = 0;\r\n\r\n    /**@internal */\r\n    private _size: Vector2 = new Vector2();\r\n\r\n    /**@internal */\r\n    set size(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_SIZE, value);\r\n    }\r\n\r\n    get size() {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_SIZE);\r\n    }\r\n\r\n    /**@internal */\r\n    private _mmat: Matrix4x4 = new Matrix4x4();\r\n\r\n    /**@internal */\r\n    set mmat(value: Matrix4x4) {\r\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_MMAT, value);\r\n    }\r\n\r\n    /**@internal */\r\n    get mmat() {\r\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_MMAT);\r\n    }\r\n\r\n    filters: any[];\r\n\r\n    ///**@internal */\r\n    //private _mvpMatrix: Matrix4x4 = new Matrix4x4();\r\n    /**@internal */\r\n    set u_MvpMatrix(value: Matrix4x4) {\r\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix, value);\r\n    }\r\n\r\n    get u_MvpMatrix() {\r\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_MVPMatrix);\r\n    }\r\n\r\n    texture: any;\r\n    private _textureHost: Texture | RenderTexture2D | TextTexture\r\n    public get textureHost(): Texture | RenderTexture2D | TextTexture {\r\n        return this._textureHost\r\n    }\r\n    public set textureHost(value: Texture | RenderTexture2D | TextTexture) {\r\n        this._textureHost = value;\r\n        //var tex = value && value._getSource();\r\n        //@ts-ignore\r\n        this.defines.setTexture(ShaderDefines2D.UNIFORM_SPRITETEXTURE, value);\r\n    }\r\n    //public var fillStyle:DrawStyle;\t\t\t//TODO 这个有什么用？\r\n    _color: Vector4;\r\n\r\n    set color(value: Vector4) {\r\n        value && this.defines.setVector(ShaderDefines2D.UNIFORM_COLOR, value);\r\n    }\r\n\r\n    get color() {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLOR);\r\n    }//Vector4\r\n    //public var strokeStyle:DrawStyle;\r\n    //colorAdd: any[];//Vector4\r\n    _colorAdd: Vector4;\r\n\r\n    set colorAdd(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_COLORADD, value);\r\n    }\r\n\r\n    get colorAdd() {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLORADD);\r\n    }//Vector4\r\n\r\n\r\n    private _clipMatDir: Vector4 = new Vector4(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE);\r\n\r\n    set clipMatDir(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_CLIPMATDIR, value);\r\n    }\r\n\r\n    get clipMatDir() {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_CLIPMATDIR);\r\n    }//Vector4\r\n\r\n    private _clipMatpos: Vector2 = new Vector2();\r\n    set clipMatPos(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS, value);\r\n    }\r\n\r\n    get clipMatPos() {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_CLIPMATPOS);\r\n    }//Vector2\r\n    //clipMatPos: Array<number> = [0, 0];//Vector2\r\n    _clipOff: Vector2 = new Vector2();//vector2\t\t\t// 裁剪是否需要加上偏移，cacheas normal用\r\n    set clipOff(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_CLIPOFF, value);\r\n    }\r\n\r\n    get clipOff() {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_CLIPOFF);\r\n    }//Vector2\r\n\r\n    constructor(mainID: RenderSpriteData) {\r\n        this.mainID = mainID;\r\n        this.textureHost = null;\r\n        this.texture = null;\r\n        //this.fillStyle = null;\r\n        //this.color = null;\r\n        //this.strokeStyle = null;\r\n        //this.colorAdd = null;\r\n\r\n        this.clipMatDir = this._clipMatDir;\r\n        this.clipMatPos = this._clipMatpos;\r\n        this.clipOff = this._clipOff;\r\n        this._cacheID = mainID;\r\n        this._inClassCache = Value2D._cache[this._cacheID];\r\n        if (mainID > 0 && !this._inClassCache) {\r\n            this._inClassCache = Value2D._cache[this._cacheID] = [];\r\n            this._inClassCache._length = 0;\r\n        }\r\n        this.clear();\r\n\r\n    }\r\n\r\n    /**\r\n     * 组织Define宏数据\r\n     */\r\n    public updateShaderData() {\r\n        var renderstate2d: any = RenderState2D;\r\n        // 如果有矩阵的话，就设置 WORLDMAT 宏\r\n        RenderState2D.worldMatrix4 === RenderState2D.TEMPMAT4_ARRAY || this.defines.addDefine(ShaderDefines2D.WORLDMAT);\r\n        this._mmat.cloneByArray(renderstate2d.worldMatrix4);\r\n        this.mmat = this._mmat;\r\n\r\n        if (RenderState2D.matWVP) {\r\n            this.defines.addDefine(ShaderDefines2D.MVP3D);\r\n            this.u_MvpMatrix = RenderState2D.matWVP;\r\n        }\r\n        let returnGamma: boolean = !(RenderTexture2D.currentActive) || ((RenderTexture2D.currentActive)._texture.gammaCorrection != 1);\r\n        //returnGamma = returnGamma && (this.textureHost && ((this.textureHost as RenderTexture2D).gammaCorrection == 1 || (this.textureHost as Texture).bitmap.gammaCorrection == 1));\r\n        let textrueReadGamma: boolean = false;\r\n        if (this.textureHost) {\r\n            if (this.textureHost instanceof RenderTexture2D) {\r\n                textrueReadGamma = (this.textureHost as RenderTexture2D).gammaCorrection != 1;\r\n            } else if (this.textureHost instanceof Texture && (this.textureHost as Texture).bitmap) {\r\n                textrueReadGamma = (this.textureHost as Texture).bitmap.gammaCorrection != 1;\r\n            } else if (this.textureHost instanceof TextTexture && (this.textureHost as TextTexture).bitmap) {\r\n                // TextTexture\r\n                textrueReadGamma = (this.textureHost as TextTexture).gammaCorrection != 1;\r\n            }\r\n        }\r\n\r\n        if (textrueReadGamma) {\r\n            this.defines.addDefine(ShaderDefines2D.GAMMATEXTURE);\r\n        } else {\r\n            this.defines.removeDefine(ShaderDefines2D.GAMMATEXTURE);\r\n        }\r\n\r\n        if (returnGamma) {\r\n            this.defines.addDefine(ShaderDefines2D.GAMMASPACE);\r\n        } else {\r\n            this.defines.removeDefine(ShaderDefines2D.GAMMASPACE);\r\n        }\r\n\r\n        if (RenderState2D.InvertY) {\r\n            this.defines.addDefine(ShaderDefines2D.INVERTY);\r\n        } else {\r\n            this.defines.removeDefine(ShaderDefines2D.INVERTY);\r\n        }\r\n\r\n        if (this.mainID == RenderSpriteData.Texture2D) {\r\n            this.defines.addDefine(ShaderDefines2D.TEXTURESHADER);\r\n        }\r\n        if (this.mainID == RenderSpriteData.Primitive) {\r\n            this.defines.addDefine(ShaderDefines2D.PRIMITIVESHADER);\r\n        }\r\n    }\r\n\r\n    upload(material: Material = null): void {\r\n\r\n        this._size.setValue(RenderState2D.width, RenderState2D.height)\r\n        this.size = this._size;\r\n        //update owner ShaderData\r\n        this.updateShaderData();\r\n        if (material) {\r\n            //Custom Shader\r\n            var shaderPass = material._shader._subShaders[0]._passes;\r\n            \r\n            var pass;\r\n            for (var j: number = 0, m: number = shaderPass.length; j < m; j++) {\r\n                pass = shaderPass[j];\r\n                //NOTE:this will cause maybe a shader not render but do prepare before，but the developer can avoide this manual,for example shaderCaster=false.\r\n                if (pass._pipelineMode == \"Forward\")\r\n                    break;\r\n            }\r\n            var comDef: DefineDatas = Value2D._compileDefine;\r\n            this.defines._defineDatas.cloneTo(Value2D._compileDefine);\r\n            //mateiral Define\r\n            Value2D._compileDefine.addDefineDatas(material._defineDatas);\r\n            //Global Define\r\n            Value2D._compileDefine.addDefineDatas(Value2D.globalShaderData._defineDatas);\r\n            var shaderIns = pass.withCompile(Value2D._compileDefine, true);\r\n            shaderIns.bind();\r\n            shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, this.defines, true);\r\n            shaderIns.uploadUniforms(shaderIns._sceneUniformParamsMap, Value2D.globalShaderData, true);\r\n            shaderIns.uploadUniforms(shaderIns._materialUniformParamsMap, material.shaderData, true);\r\n        } else {\r\n            //default pass\r\n            var shaderPass = this._defaultShader._subShaders[0]._passes;\r\n\r\n            if (shaderPass.length >= 1) {\r\n                pass = shaderPass[0];\r\n                //var comDef: DefineDatas = Value2D._compileDefine;\r\n                var shaderIns = pass.withCompile(this.defines._defineDatas, true);\r\n                shaderIns.bind();\r\n                shaderIns.uploadUniforms(shaderIns._sprite2DUniformParamsMap, this.defines, true);\r\n            } else {\r\n                //TODO 多pass情况\r\n            }\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    setFilters(value: any[]): void {\r\n        this.filters = value;\r\n        if (!value)\r\n            return;\r\n\r\n        var n: number = value.length, f: any;\r\n        for (var i: number = 0; i < n; i++) {\r\n            f = value[i];\r\n            if (f) {\r\n                this.defines.addDefine(f.typeDefine);//搬到setValue中\r\n                f.action.setValue(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.clipOff.x = 0;\r\n        this.clipOff = this.clipOff\r\n    }\r\n\r\n    release(): void {\r\n        if ((--this.ref) < 1) {\r\n            this._inClassCache && (this._inClassCache[this._inClassCache._length++] = this);\r\n            this.clear();\r\n            this.filters = null;\r\n            this.ref = 1;\r\n            this.clipOff.x = 0;\r\n            this.clipOff = this.clipOff;\r\n            this.texture = null;\r\n            this.textureHost = null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Context } from \"../resource/Context\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class WordText {\r\n    text: string;\r\n    width: number;\t//整个WordText的长度。-1表示没有计算还。\r\n    pageChars: any[];\t//把本对象的字符按照texture分组保存的文字信息。里面又是一个数组。具体含义见使用的地方。\r\n    pagecharsCtx: Context = null;  // 上面缓存的时候用的ctx。跨ctx的时候（例如drawToTexture）要清理\r\n    scalex;\t// 缓存的时候的缩放\r\n    scaley;\r\n\r\n    _nativeObj: any;\r\n    _splitRender: boolean;\t// 强制拆分渲染\r\n\r\n    constructor() {\r\n        if ((window as any).conch && !(window as any).conchConfig.conchWebGL)\r\n            this._nativeObj = new (window as any)._conchWordText();\r\n        else {\r\n            this.width = -1;\r\n            this.pageChars = [];\r\n            this.scalex = 1;\r\n            this.scaley = 1;\r\n        }\r\n    }\r\n\r\n    setText(txt: string): void {\r\n        this.text = txt;\r\n        if (this._nativeObj)\r\n            this._nativeObj._text = txt;\r\n        else\r\n            this.width = -1;\r\n        this.cleanCache();\r\n    }\r\n\r\n    toString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.text ? this.text.length : 0;\r\n    }\r\n\r\n    /**\r\n     * 自己主动清理缓存，需要把关联的贴图删掉\r\n     * 不做也可以，textrender会自动清理不用的\r\n     * TODO 重用\r\n     */\r\n    cleanCache(): void {\r\n        if (this._nativeObj) {\r\n            this._nativeObj.cleanCache();\r\n            return;\r\n        }\r\n\r\n        // 如果是独占文字贴图的，需要删掉\r\n        //TODO 这个效果不对。会造成文字错乱\r\n        let chars = this.pageChars;\r\n        if (chars.length > 0) {\r\n            for( var i in chars){\r\n                //should use for in since chars maybe sparse \r\n                let p = chars[i];\r\n                if(!p)continue;\r\n                let tex = p.tex;\r\n                let words = p.words;\r\n                if (words.length == 1 && tex && tex.ri) {// 如果有ri表示是独立贴图\r\n                    tex.destroy();\r\n                }\r\n            }\r\n\r\n            this.pageChars = [];\r\n        }\r\n        this.scalex = 1;\r\n        this.scaley = 1;\r\n    }\r\n\r\n    get splitRender() {\r\n        return this._splitRender;\r\n    }\r\n\r\n    set splitRender(value: boolean) {\r\n        this._splitRender = value;\r\n        if (this._nativeObj)\r\n            this._nativeObj.splitRender = value;\r\n    }\r\n}","import { RenderInfo } from \"../../renders/RenderInfo\"\r\n/**\r\n * TODO如果占用内存较大,这个结构有很多成员可以临时计算\r\n */\r\nexport class CharRenderInfo {\r\n    char: string = '';\t\t\t\t// 调试用\r\n    tex: any;\t\t\t\t\t\t//\r\n    deleted: boolean = false; \t// 已经被删除了\r\n    uv: any[] = new Array(8);// [0, 0, 1, 1];\t\t//uv\r\n    pos: number = 0;\t\t\t\t\t//数组下标\r\n    width: number;\t\t\t\t\t//字体宽度。测量的宽度，用来排版。没有缩放\r\n    height: number; \t\t\t\t//字体高度。没有缩放\r\n    bmpWidth: number;\t\t\t\t//实际图片的宽度。可能与排版用的width不一致。包含缩放和margin\r\n    bmpHeight: number;\r\n    orix: number = 0;\t\t\t\t// 原点位置，通常都是所在区域的左上角\r\n    oriy: number = 0;\r\n    touchTick: number = 0;\t\t//\r\n    isSpace: boolean = false;\t\t//是否是空格，如果是空格，则只有width有效\r\n    touch(): void {\r\n        var curLoop: number = RenderInfo.loopCount;\r\n        if (this.touchTick != curLoop) {// 这个保证每帧只调用一次\r\n            this.tex.touchRect(this, curLoop);\r\n        }\r\n        this.touchTick = curLoop;\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\";\r\nexport class ICharRender {\r\n    fontsz = 16;\r\n    getWidth(font: string, str: string): number { return 0; }\r\n\r\n    scale(sx: number, sy: number): void {\r\n    }\r\n\r\n    get canvasWidth(): number {\r\n        return 0;\r\n    }\r\n\r\n    set canvasWidth(w: number) {\r\n\r\n    }\r\n    /**\r\n     *TODO stroke \r\n     * @param\tchar\r\n     * @param\tfont\r\n     * @param\tsize  返回宽高\r\n     * @return\r\n     */\r\n    getCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, size: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[]|null = null): ImageData|null {\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Config } from \"../../Config\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>Browser</code> 是浏览器代理类。封装浏览器及原生 js 提供的一些功能。\r\n */\r\nexport class Browser {\r\n\r\n    /** 浏览器代理信息。*/\r\n    static userAgent: string;\r\n    /** 表示是否在移动设备，包括IOS和安卓等设备内。*/\r\n    static onMobile: boolean;\r\n    /** 表示是否在 IOS 设备内。*/\r\n    static onIOS: boolean;\r\n    /** 表示是否在 Mac 设备。*/\r\n    static onMac: boolean;\r\n    /** 表示是否在 IPhone 设备内。*/\r\n    static onIPhone: boolean;\r\n    /** 表示是否在 IPad 设备内。*/\r\n    static onIPad: boolean;\r\n    /** 表示是否在 Android 设备内。*/\r\n    static onAndroid: boolean;\r\n    /** 表示是否在 Windows Phone 设备内。*/\r\n    static onWP: boolean;\r\n    /** 表示是否在 QQ 浏览器内。*/\r\n    static onQQBrowser: boolean;\r\n    /** 表示是否在移动端 QQ 或 QQ 浏览器内。*/\r\n    static onMQQBrowser: boolean;\r\n    /** 表示是否在 Safari 内。*/\r\n    static onSafari: boolean;\r\n    /** 表示是否在 Chrome 内 */\r\n    static onChrome: boolean;\r\n    /** 表示是否在 IE 浏览器内*/\r\n    static onIE: boolean;\r\n    /** 表示是否在 微信 内*/\r\n    static onWeiXin: boolean;\r\n    /** 表示是否在 PC 端。*/\r\n    static onPC: boolean;\r\n    /** 微信小游戏 **/\r\n    static onMiniGame: boolean;\r\n    /** 百度小游戏 **/\r\n    static onBDMiniGame: boolean;\r\n    /** 小米戏小游戏 **/\r\n    static onKGMiniGame: boolean;\r\n    /** OPPO小游戏 **/\r\n    static onQGMiniGame: boolean;\r\n    /** VIVO小游戏 **/\r\n    static onVVMiniGame: boolean;\r\n    /** 阿里小游戏 **/\r\n    static onAlipayMiniGame: boolean;\r\n    /***手机QQ小游戏 */\r\n    static onQQMiniGame: boolean;\r\n    /*** BILIBILI小游戏 */\r\n    static onBLMiniGame: boolean;\r\n    /** 抖音小游戏*/\r\n    static onTTMiniGame: boolean;\r\n    /** 华为快游戏 */\r\n    static onHWMiniGame: boolean;\r\n    /** 淘宝小程序 */\r\n    static onTBMiniGame: boolean;\r\n    /** @private */\r\n    static onFirefox: boolean;//TODO:求补充\r\n    /** Edge浏览器 */\r\n    static onEdge: boolean;\r\n    /** @private */\r\n    static onLayaRuntime: boolean;\r\n\r\n    /** 真实平台类型，onMobile等是通过UserAgent判断，可能具有欺骗性 **/\r\n    static platform: number;\r\n    static PLATFORM_PC = 0;\r\n    static PLATFORM_ANDROID = 1;\r\n    static PLATFORM_IOS = 2;\r\n\r\n    /** 表示是否支持WebAudio*/\r\n    static supportWebAudio: boolean;\r\n    /** 表示是否支持LocalStorage*/\r\n    static supportLocalStorage: boolean;\r\n\r\n    /** 全局离线画布（非主画布）。主要用来测量字体、获取image数据。*/\r\n    static canvas: any;\r\n    /** 全局离线画布上绘图的环境（非主画布）。 */\r\n    static context: CanvasRenderingContext2D;\r\n\r\n    /** 小游戏平台服务对象 */\r\n    static miniGameContext: any;\r\n\r\n    /** @private */\r\n    private static _window: any;\r\n    /** @private */\r\n    private static _document: Document;\r\n    /** @private */\r\n    private static _container: any;\r\n    /** @private */\r\n    private static _pixelRatio: number = -1;\r\n\r\n    /** @private */\r\n    private static _clientWidth: number;\r\n    /** @private */\r\n    private static _clientHeight: number;\r\n\r\n    /** @private */\r\n    static mainCanvas: any = null;\r\n\r\n    /**@private */\r\n    private static hanzi: RegExp = new RegExp(\"^[\\u4E00-\\u9FA5]$\");\r\n    /**@private */\r\n    private static fontMap: { [key: string]: string } = {};\r\n    /**@private */\r\n    static measureText: Function = function (txt: string, font: string): any {\r\n        let isChinese: boolean = Browser.hanzi.test(txt);\r\n        if (isChinese && Browser.fontMap[font]) {\r\n            return Browser.fontMap[font];\r\n        }\r\n\r\n        let ctx: CanvasRenderingContext2D = Browser.context;\r\n        ctx.font = font;\r\n\r\n        let r: any = ctx.measureText(txt);\r\n        if (isChinese) Browser.fontMap[font] = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        let Laya: any = (window as any).Laya || ILaya.Laya;\r\n        if (Browser._window) return Browser._window;\r\n        let win: any = Browser._window = window;\r\n        let doc: any = Browser._document = win.document;\r\n        let u: string = Browser.userAgent = win.navigator.userAgent;\r\n        let maxTouchPoints: number = win.navigator.maxTouchPoints || 0;\r\n        let platform: string = win.navigator.platform;\r\n        let miniGame: [string, string, string];\r\n\r\n        //微信小游戏\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            miniGame = [\"wxMiniGame\", \"MiniAdpter\", \"wx\"];\r\n        }\r\n        //阿里小游戏\r\n        if (\"my\" in Browser.window) {\r\n            if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n                miniGame = [\"tbMiniGame\", \"TBMiniAdapter\", \"my\"];\r\n            } else if (u.indexOf('AlipayMiniGame') > -1) {\r\n                miniGame = [\"aliPayMiniGame\", \"ALIMiniAdapter\", \"my\"];\r\n            }\r\n        }\r\n\r\n        if (((u.indexOf('OPPO') == -1 && u.indexOf(\"MiniGame\") > -1) || u.indexOf('runtime') != -1 || (u.indexOf('miniprogram') != -1 && (window as any).isWXMiMi)) && \"wx\" in Browser.window) {\r\n            if (\"tt\" in Browser.window) {\r\n                //抖音小游戏\r\n                miniGame = [\"ttMiniGame\", \"TTMiniAdapter\", \"tt\"];\r\n            } else if (\"bl\" in Browser.window) {\r\n                //手机B站小游戏\r\n                miniGame = [\"biliMiniGame\", \"BLMiniAdapter\", null];\r\n            }\r\n            else if (\"qq\" in Browser.window) {\r\n                //手机QQ小游戏\r\n                miniGame = [\"qqMiniGame\", \"QQMiniAdapter\", null];\r\n            }\r\n            else {\r\n                //微信小游戏\r\n                miniGame = [\"wxMiniGame\", \"MiniAdpter\", \"wx\"];\r\n            }\r\n        }\r\n        //华为快游戏\r\n        if (\"hbs\" in Browser.window) {\r\n            miniGame = [\"hwMiniGame\", \"HWMiniAdapter\", null];\r\n        }\r\n\r\n        //百度小游戏\r\n        if (u.indexOf(\"SwanGame\") > -1) {\r\n            miniGame = [\"bdMiniGame\", \"BMiniAdapter\", null];\r\n        }\r\n\r\n        //小米小游戏\r\n        if (u.indexOf('QuickGame') > -1) {\r\n            miniGame = [\"miMiniGame\", \"KGMiniAdapter\", \"qg\"];\r\n        }\r\n\r\n        //OPPO小游戏\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            miniGame = [\"qgMiniGame\", \"QGMiniAdapter\", \"qg\"];\r\n            //temp oppo 需要修改交换链的功能\r\n            Config.fixedFrames = false;\r\n        }\r\n\r\n        //VIVO小游戏\r\n        if (u.indexOf('VVGame') > -1) {\r\n            miniGame = [\"vvMiniGame\", \"VVMiniAdapter\", \"qg\"];\r\n            //temp oppo 需要修改交换链的功能\r\n            Config.fixedFrames = false;\r\n        }\r\n\r\n        if (miniGame != null) {\r\n            Browser.window[miniGame[0]](Laya, Laya);\r\n            Laya[miniGame[1]].enable();\r\n            Browser.miniGameContext = Browser.window[miniGame[2]];\r\n        }\r\n\r\n        //新增trace的支持\r\n        win.trace = console.log;\r\n\r\n        //兼容requestAnimationFrame\r\n        win.requestAnimationFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (fun: any): any {\r\n            return win.setTimeout(fun, 1000 / 60);\r\n        }\r\n\r\n        //强制修改body样式\r\n        var bodyStyle: any = doc.body.style;\r\n        bodyStyle.margin = 0;\r\n        bodyStyle.overflow = 'hidden';\r\n        bodyStyle['-webkit-user-select'] = 'none';\r\n        bodyStyle['-webkit-tap-highlight-color'] = 'rgba(200,200,200,0)';\r\n\r\n        //强制修改meta标签，防止开发者写错\r\n        var metas: any[] = doc.getElementsByTagName('meta');\r\n        let viewportContent: Record<string, string> = {\r\n            \"width\": \"device-width\",\r\n            \"initial-scale\": \"1.0\",\r\n            \"minimum-scale\": \"1.0\",\r\n            \"maximum-scale\": \"1.0\",\r\n            \"user-scalable\": \"no\"\r\n        };\r\n        let viewport: any;\r\n        for (const meta of metas) {\r\n            if (meta.name == \"viewport\") {\r\n                viewport = meta;\r\n                break;\r\n            }\r\n        }\r\n        if (!viewport) {\r\n            viewport = doc.createElement('meta');\r\n            viewport.name = 'viewport';\r\n            doc.getElementsByTagName('head')[0]?.appendChild(viewport);\r\n        }\r\n        else {\r\n            let arr: Array<string> = (viewport.content || \"\").split(\",\");\r\n            for (let ele of arr) {\r\n                let arr2 = ele.split(\"=\");\r\n                if (!viewportContent[arr2[0].trim()])\r\n                    viewportContent[arr2[0]] = arr2[1];\r\n            }\r\n        }\r\n        viewport.content = Object.keys(viewportContent).map(k => k + \"=\" + viewportContent[k]);\r\n\r\n        //处理兼容性\t\t\t\r\n        Browser.onMobile = (window as any).conch ? true : u.indexOf(\"Mobile\") > -1;\r\n        Browser.onIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\r\n        Browser.onIPhone = u.indexOf(\"iPhone\") > -1;\r\n        Browser.onMac = u.indexOf(\"Mac OS X\") > -1;\r\n        Browser.onIPad = u.indexOf(\"iPad\") > -1 || (platform === 'MacIntel' && maxTouchPoints > 1);//\"platform === 'MacIntel' && maxTouchPoints >1\" is a temporary solution，maybe accidentally injure other platform.\r\n        Browser.onAndroid = u.indexOf('Android') > -1 || u.indexOf('Adr') > -1;\r\n        Browser.onWP = u.indexOf(\"Windows Phone\") > -1;\r\n        Browser.onQQBrowser = u.indexOf(\"QQBrowser\") > -1;\r\n        Browser.onMQQBrowser = u.indexOf(\"MQQBrowser\") > -1 || (u.indexOf(\"Mobile\") > -1 && u.indexOf(\"QQ\") > -1);\r\n        Browser.onIE = !!win.ActiveXObject || \"ActiveXObject\" in win;\r\n        Browser.onWeiXin = u.indexOf('MicroMessenger') > -1;\r\n        Browser.onSafari = u.indexOf(\"Safari\") > -1 && u.indexOf(\"Chrome\") === -1;\r\n        Browser.onChrome = u.indexOf(\"Chrome\") > -1;\r\n        Browser.onPC = !Browser.onMobile;\r\n        Browser.onFirefox = u.indexOf('Firefox') > -1;\r\n        Browser.onEdge = u.indexOf('Edge') > -1 || u.indexOf('Edg') > -1;\r\n        Browser.onMiniGame = u.indexOf('MiniGame') > -1;\r\n        Browser.onBDMiniGame = u.indexOf('SwanGame') > -1;\r\n        Browser.onLayaRuntime = !!(window as any).conch;\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQGMiniGame = true;//OPPO环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"qq\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQQMiniGame = true;//手机QQ环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"bl\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onBLMiniGame = true;//B站环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"tt\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onTTMiniGame = true;\r\n            Browser.onMiniGame = false;\r\n        }\r\n\r\n        Browser.onHWMiniGame = \"hbs\" in Browser.window;\r\n        Browser.onVVMiniGame = u.indexOf('VVGame') > -1;//vivo\r\n        Browser.onKGMiniGame = u.indexOf('QuickGame') > -1;//小米运行环境判断\r\n        if (u.indexOf('AlipayMiniGame') > -1) {\r\n            Browser.onAlipayMiniGame = true;//阿里小游戏环境判断\r\n            Browser.onMiniGame = false;\r\n        }\r\n        if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n            Browser.onTBMiniGame = true;\r\n        }\r\n\r\n        if (Browser.onAndroid || Browser.onIOS) {\r\n            //也有可能是模拟器\r\n            if (platform && (platform.indexOf(\"Win\") != -1 || platform.indexOf(\"Mac\") != -1))\r\n                Browser.platform = Browser.PLATFORM_PC;\r\n            else if (Browser.onAndroid)\r\n                Browser.platform = Browser.PLATFORM_ANDROID;\r\n            else\r\n                Browser.platform = Browser.PLATFORM_IOS;\r\n        }\r\n        else\r\n            Browser.platform = Browser.PLATFORM_PC;\r\n\r\n        return win;\r\n    }\r\n    /**\r\n     * 获取是否为小游戏环境\r\n     * @returns onMiniGame || onBDMiniGame || onQGMiniGame || onKGMiniGame || onVVMiniGame || onAlipayMiniGame || onQQMiniGame || onBLMiniGame || onTTMiniGame || onHWMiniGame || onTBMiniGame\r\n     */\r\n    static get _isMiniGame(): boolean {\r\n        return Browser.onMiniGame || Browser.onBDMiniGame || Browser.onQGMiniGame || Browser.onKGMiniGame || Browser.onVVMiniGame || Browser.onAlipayMiniGame || Browser.onQQMiniGame || Browser.onBLMiniGame || Browser.onTTMiniGame || Browser.onHWMiniGame || Browser.onTBMiniGame || (Browser.window && Browser.window.isWXMiMi);\r\n    }\r\n    /**\r\n     * 创建浏览器原生节点。\r\n     * @param\ttype 节点类型。\r\n     * @return\t创建的节点对象的引用。\r\n     */\r\n    static createElement(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.createElement(type);\r\n    }\r\n\r\n    /**\r\n     * 返回 Document 对象中拥有指定 id 的第一个对象的引用。\r\n     * @param\ttype 节点id。\r\n     * @return\t节点对象。\r\n     */\r\n    static getElementById(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.getElementById(type);\r\n    }\r\n\r\n    /**\r\n     * 移除指定的浏览器原生节点对象。\r\n     * @param\ttype 节点对象。\r\n     */\r\n    static removeElement(ele: any): void {\r\n        if (ele && ele.parentNode) ele.parentNode.removeChild(ele);\r\n    }\r\n\r\n    /**\r\n     * 获取浏览器当前时间戳，单位为毫秒。\r\n     */\r\n    static now(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /**\r\n     * 浏览器窗口可视宽度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerWidth(包含滚动条宽度) > document.body.clientWidth(不包含滚动条宽度)，如果前者为0或为空，则选择后者。\r\n     */\r\n    static get clientWidth(): number {\r\n        Browser.__init__();\r\n        return Browser._clientWidth || Browser._window.innerWidth || Browser._document.body.clientWidth;\r\n    }\r\n\r\n    static set clientWidth(value: number) {\r\n        Browser._clientWidth = value;\r\n    }\r\n\r\n    /**\r\n     * 浏览器窗口可视高度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerHeight(包含滚动条高度) > document.body.clientHeight(不包含滚动条高度) > document.documentElement.clientHeight(不包含滚动条高度)，如果前者为0或为空，则选择后者。\r\n     */\r\n    static get clientHeight(): number {\r\n        Browser.__init__();\r\n        return Browser._clientHeight || Browser._window.innerHeight || Browser._document.body.clientHeight || Browser._document.documentElement.clientHeight;\r\n    }\r\n\r\n    static set clientHeight(value: number) {\r\n        Browser._clientHeight = value;\r\n    }\r\n\r\n    /** 浏览器窗口物理宽度。考虑了设备像素比。*/\r\n    static get width(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientHeight : Browser.clientWidth) * Browser.pixelRatio;\r\n    }\r\n\r\n    /** 浏览器窗口物理高度。考虑了设备像素比。*/\r\n    static get height(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientWidth : Browser.clientHeight) * Browser.pixelRatio;\r\n    }\r\n\r\n    /** 获得设备像素比。*/\r\n    static get pixelRatio(): number {\r\n        if (Browser._pixelRatio < 0) {\r\n            Browser.__init__();\r\n            if (Browser.userAgent.indexOf(\"Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)\") > -1) Browser._pixelRatio = 2;\r\n            else {\r\n                Browser._pixelRatio = (Browser._window.devicePixelRatio || 1);\r\n                if (Browser._pixelRatio < 1) Browser._pixelRatio = 1;\r\n            }\r\n        }\r\n        return Browser._pixelRatio;\r\n    }\r\n\r\n    /**画布容器，用来盛放画布的容器。方便对画布进行控制*/\r\n    static get container(): any {\r\n        if (!Browser._container) {\r\n            Browser.__init__();\r\n            Browser._container = Browser.createElement(\"div\");\r\n            Browser._container.id = \"layaContainer\";\r\n            Browser._document.body.appendChild(Browser._container);\r\n        }\r\n        return Browser._container;\r\n    }\r\n\r\n    static set container(value: any) {\r\n        Browser._container = value;\r\n    }\r\n\r\n    /**浏览器原生 window 对象的引用。*/\r\n    static get window(): any {\r\n        return Browser._window || Browser.__init__();\r\n    }\r\n\r\n    /**浏览器原生 document 对象的引用。*/\r\n    static get document(): any {\r\n        Browser.__init__();\r\n        return Browser._document;\r\n    }\r\n\r\n    /**\r\n     * 获得URL参数值\r\n     * @param\tname 参数名称\r\n     * @return\t参数值\r\n     */\r\n    static getQueryString(name: string): string {\r\n        if (Browser.onMiniGame) return null;\r\n        if (!window.location || !window.location.search)\r\n            return null;\r\n        var reg: RegExp = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n        var r: any = window.location.search.substring(1).match(reg);\r\n        if (r != null) return unescape(r[2]);\r\n        return null;\r\n    }\r\n\r\n    // Safari横屏工具栏偏移\r\n    static getSafariToolbarOffset() {\r\n        return (Browser.window.__innerHeight || Browser.document.body.clientHeight || Browser.document.documentElement.clientHeight) - Browser.window.innerHeight;\r\n    }\r\n\r\n    static loadLib(src: string) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let script = Browser.document.createElement('script');\r\n            script.onload = function () {\r\n                resolve();\r\n            };\r\n            script.onerror = function () {\r\n                reject(`load ${src} failed`);\r\n            };\r\n            script.src = src;\r\n            Browser.document.body.appendChild(script);\r\n        });\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { Browser } from \"../../utils/Browser\";\r\nexport class CharRender_Canvas extends ICharRender {\r\n\tprivate static canvas: any = null;// HTMLCanvasElement;\r\n\tprivate ctx: any = null;\r\n\tprivate lastScaleX = 1.0;\r\n\tprivate lastScaleY = 1.0;\r\n\t//private needResetScale: boolean = false;\r\n\tprivate maxTexW = 0;\r\n\tprivate maxTexH = 0;\r\n\tprivate scaleFontSize = true;\r\n\tprivate showDbgInfo = false;\r\n\tprivate supportImageData = true;\r\n\tconstructor(maxw: number, maxh: number, scalefont: boolean = true, useImageData: boolean = true, showdbg: boolean = false) {\r\n\t\tsuper();\r\n\t\tthis.maxTexW = maxw;\r\n\t\tthis.maxTexH = maxh;\r\n\t\tthis.scaleFontSize = scalefont;\r\n\t\tthis.supportImageData = useImageData;\r\n\t\tthis.showDbgInfo = showdbg;\r\n\t\tif (!CharRender_Canvas.canvas) {\r\n\t\t\tCharRender_Canvas.canvas = Browser.createElement('canvas');\r\n\t\t\tCharRender_Canvas.canvas.width = 1024;\r\n\t\t\tCharRender_Canvas.canvas.height = 512;\r\n\t\t\t//这个canvas是用来获取字体渲染结果的。由于不可见canvas的字体不能小于12，所以要加到body上\r\n\t\t\t//为了避免被发现，设一个在屏幕外的绝对位置。\r\n\t\t\tCharRender_Canvas.canvas.style.left = \"-10000px\";\r\n\t\t\tCharRender_Canvas.canvas.style.position = \"absolute\";\r\n\t\t\twindow.document.body.appendChild(CharRender_Canvas.canvas);;\r\n\t\t\tthis.ctx = CharRender_Canvas.canvas.getContext('2d', { willReadFrequently: true });\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tget canvasWidth(): number {\r\n\t\treturn CharRender_Canvas.canvas.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tset canvasWidth(w: number) {\r\n\t\tif (CharRender_Canvas.canvas.width == w)\r\n\t\t\treturn;\r\n\t\tCharRender_Canvas.canvas.width = w;\r\n\t\tif (w > 2048) {\r\n\t\t\tconsole.warn(\"画文字设置的宽度太大，超过2048了\");\r\n\t\t}\r\n\t\t// 重新恢复一下缩放\r\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\tthis.ctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param font \r\n\t * @param str \r\n\t * @override\r\n\t */\r\n\tgetWidth(font: string, str: string): number {\r\n\t\tif (!this.ctx) return 0;\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\tif (this.ctx._lastFont != font) {\r\n\t\t\tthis.ctx.font = font;\r\n\t\t\tthis.ctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\t\treturn this.ctx.measureText(str).width;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param sx \r\n\t * @param sy \r\n\t * @override\r\n\t */\r\n\tscale(sx: number, sy: number): void {\r\n\t\tif (!this.supportImageData) {// supportImageData==false表示用 getCharCanvas，这个自己管理缩放\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.lastScaleX != sx || this.lastScaleY != sy) {\r\n\t\t\tthis.ctx.setTransform(sx, 0, 0, sy, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *TODO stroke \r\n\t * @param\tchar\r\n\t * @param\tfont\r\n\t * @param\tcri  修改里面的width。\r\n\t * @return\r\n\t * @override\r\n\t */\r\n\tgetCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo,\r\n\t\tmargin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[] | null = null): ImageData | null {\r\n\t\tif (!this.supportImageData)\r\n\t\t\treturn this.getCharCanvas(char, font, lineWidth, colStr, strokeColStr, cri, margin_left, margin_top, margin_right, margin_bottom);\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += (margin_top + margin_bottom) * this.lastScaleY;\r\n\t\tw = Math.ceil(w);\r\n\t\th = Math.ceil(h);\r\n\t\tw = Math.min(w, CharRender_Canvas.canvas.width);\r\n\t\th = Math.min(h, CharRender_Canvas.canvas.height);\r\n\r\n\t\tvar clearW: number = w + lineWidth * 2 + 1;\r\n\t\tvar clearH: number = h + lineWidth * 2 + 1;\r\n\t\tif (rect) {// measureText可能会小于请求的区域。 rect[2]可能为-1\r\n\t\t\tclearW = Math.max(clearW, rect[0] + rect[2] + 1);\r\n\t\t\tclearH = Math.max(clearH, rect[1] + rect[3] + 1);\r\n\t\t}\r\n\t\tctx.clearRect(0, 0, clearW / this.lastScaleX + 1, clearH / this.lastScaleY + 1);\r\n\t\tctx.save();\r\n\t\t//ctx.textAlign = \"end\";\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\t//设置文本描边为圆角模式，默认值miter会导致在某些字体的转角字符出现尖刺现象。\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\tctx.strokeText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\t\tif (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(1, 1, w - 2, h - 2);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(margin_left, margin_top, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\t//ctx.restore();\r\n\t\tif (rect) {\r\n\t\t\tif (rect[2] <= 0)//<=0表示原点的x偏移，例如原点在2，则这里就是-2， 这时候测量的宽度是从原点开始的，所以要加上偏移。否则会有右边被裁剪的情况\r\n\t\t\t\trect[2] = Math.ceil(-rect[2] + (cri.width + lineWidth * 2) * this.lastScaleX);\r\n\t\t\t//if (rect[2] == -1) rect[2] = Math.ceil((cri.width + lineWidth * 2) * this.lastScaleX); // 这个没有考虑左右margin\r\n\t\t\tif (rect[2] <= 0) rect[2] = 1;\t// 有的字体在处理不存在文字的时候，测量宽度为0，会导致getImageData出错\r\n\t\t}\r\n\t\tvar imgdt: ImageData = rect ? (ctx.getImageData(rect[0], rect[1], rect[2], rect[3] + 1)) : (ctx.getImageData(0, 0, w, h + 1));\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = imgdt.width;\r\n\t\tcri.bmpHeight = imgdt.height;\r\n\t\treturn imgdt;\r\n\t}\r\n\r\n\tgetCharCanvas(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number): ImageData {\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\t\tif (Browser.window.isIOSHighPerformanceModePlus) {\r\n\t\t\t// 临时处理,微信高性能+模式下文本会出现裁剪问题,这里强制设置font解决\r\n\t\t\tctx.font = font;\r\n\t\t}\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += ((margin_top + margin_bottom) * this.lastScaleY + 1);\t// 这个+1只是为了让测试能通过。确实应该加点高度，否则会被裁掉一部分，但是加多少还没找到方法。\r\n\t\tw = Math.min(w, this.maxTexW);\r\n\t\th = Math.min(h, this.maxTexH);\r\n\r\n\t\t//if (canvas.width != (w + 1) || canvas.height != (h + 1)) {\r\n\t\tCharRender_Canvas.canvas.width = Math.min(w + 1, this.maxTexW);\r\n\t\tCharRender_Canvas.canvas.height = Math.min(h + 1, this.maxTexH);\r\n\t\tctx.font = font;\r\n\t\t//}\r\n\t\tctx.clearRect(0, 0, w + 1 + lineWidth, h + 1 + lineWidth);\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\r\n\t\tctx.save();\r\n\t\tif (Browser.onAlipayMiniGame) {\r\n\t\t\t// 临时处理，兼容支付宝平台上自定义字体设置无效的问题\r\n\t\t\tctx.font = font;\r\n\t\t}\r\n\t\tif (this.scaleFontSize) {\r\n\t\t\t//这里的缩放会导致与上面的缩放同时起作用。所以上面保护\r\n\t\t\tctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t\t}\r\n\t\tctx.translate(margin_left, margin_top);\r\n\t\tctx.textAlign = \"left\";\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\t//ctx.strokeText(char, margin_left, margin_top);\r\n\t\t\tif (ctx.fillAndStrokeText) {\r\n\t\t\t\tctx.fillAndStrokeText(char, 0, sz / 2);\r\n\t\t\t} else {\r\n\t\t\t\tctx.strokeText(char, 0, sz / 2);\r\n\t\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t\t}\r\n\t\t} else if (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t}\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(0, 0, w, h);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(0, 0, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = CharRender_Canvas.canvas.width;\r\n\t\tcri.bmpHeight = CharRender_Canvas.canvas.height;\r\n\t\treturn CharRender_Canvas.canvas;\r\n\t}\r\n}\r\n\r\n","import { TextAtlas } from \"./TextAtlas\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { FontInfo } from \"../../utils/FontInfo\"\r\nimport { WordText } from \"../../utils/WordText\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { CharRender_Canvas } from \"./CharRender_Canvas\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Const } from \"../../Const\";\r\n\r\nexport class TextRender {\r\n    //config\r\n    static useOldCharBook = false;\r\n    static atlasWidth = 1024;\r\n    static noAtlas = false;\t\t\t\t// 一串文字用独立贴图\r\n    static forceSplitRender = false;\t    // 强制把一句话拆开渲染\r\n    static forceWholeRender = false; \t// 强制整句话渲染\r\n    static scaleFontWithCtx = true;\t\t// 如果有缩放，则修改字体，以保证清晰度\r\n    static maxFontScale = 4;            //当scaleFontWithCtx为true时，最大允许放大的倍数\r\n    static standardFontSize = 32;\t\t\t// 测量的时候使用的字体大小\r\n    static destroyAtlasDt = 10;\t\t\t\t\t// 回收图集贴图的时间\r\n    static checkCleanTextureDt = 2000;\t\t// 检查是否要真正删除纹理的时间。单位是ms\r\n    static destroyUnusedTextureDt = 3000; \t// 长时间不用的纹理删除的时间。单位是ms\r\n    static cleanMem = 100 * 1024 * 1024;\t\t// 多大内存触发清理图集。这时候占用率低的图集会被清理\r\n    static isWan1Wan = false;\r\n    static showLog = false;\r\n    static debugUV = false;\t\t\t\t// 文字纹理需要保护边。当像素没有对齐的时候，可能会采样到旁边的贴图。true则填充texture为白色，模拟干扰\r\n    //config\r\n\r\n    /**\r\n     * fontSizeInfo\r\n     * 记录每种字体的像素的大小。标准是32px的字体。由4个byte组成，分别表示[xdist,ydist,w,h]。 \r\n     * xdist,ydist 是像素起点到排版原点的距离，都是正的，表示实际数据往左和上偏多少，如果实际往右和下偏，则算作0，毕竟这个只是一个大概\r\n     * 例如 [Arial]=0x00002020, 表示宽高都是32\r\n     */\r\n    private fontSizeInfo: any = {};\r\n    static atlasWidth2: number;\r\n    private charRender: ICharRender;\r\n    private static tmpRI: CharRenderInfo = new CharRenderInfo();\r\n    private static pixelBBX: number[] = [0, 0, 0, 0];\r\n    private mapFont: any = {};\t\t// 把font名称映射到数字\r\n    private fontID: number = 0;\r\n\r\n    private fontScaleX: number = 1.0;\t\t\t\t\t\t//临时缩放。\r\n    private fontScaleY: number = 1.0;\r\n\r\n    //private var charMaps:Object = {};\t// 所有的都放到一起\r\n\r\n    private _curStrPos: number = 0;\t\t//解开一个字符串的时候用的。表示当前解到什么位置了\r\n    static textRenderInst: TextRender;\t//debug\r\n\r\n    textAtlases: TextAtlas[] = [];\t\t// 所有的大图集\r\n    private isoTextures: TextTexture[] = [];\t// 所有的独立贴图\r\n\r\n    private bmpData32: Uint32Array;\r\n    private static imgdtRect: any[] = [0, 0, 0, 0];\r\n\r\n    // 当前字体的测量信息。\r\n    private lastFont: FontInfo | null = null;\r\n    private fontSizeW: number = 0;\r\n    private fontSizeH: number = 0;\r\n    private fontSizeOffX: number = 0;\r\n    private fontSizeOffY: number = 0;\r\n\r\n    private renderPerChar: boolean = true;\t// 是否是单个字符渲染。这个是结果，上面的是配置\r\n    private tmpAtlasPos: Point = new Point();\r\n    private textureMem: number = 0; \t\t\t// 当前贴图所占用的内存\r\n    private fontStr: string;\t\t\t\t\t// 因为要去掉italic，所以自己保存一份\r\n    static simClean: boolean = false;\t\t\t\t// 测试用。强制清理占用低的图集\r\n\r\n    constructor() {\r\n        var bugIOS = false;//是否是有bug的ios版本\r\n        //在微信下有时候不显示文字，所以采用canvas模式，现在测试微信好像都好了，所以去掉了。\r\n        var miniadp: any = ILaya.Laya['MiniAdpter']; //头条也继承了这个bug\r\n        if (miniadp && miniadp.systemInfo && miniadp.systemInfo.system) {\r\n            bugIOS = miniadp.systemInfo.system.toLowerCase() === 'ios 10.1.1';\r\n            //12.3\r\n        }\r\n        if ((ILaya.Browser.onMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onTBMiniGame) /*&& !Browser.onAndroid*/ && !bugIOS) TextRender.isWan1Wan = true; //android 微信下 字边缘发黑，所以不用getImageData了\r\n        //TextRender.isWan1Wan = true;\r\n        this.charRender = new CharRender_Canvas(2048, 2048, TextRender.scaleFontWithCtx, !TextRender.isWan1Wan, false);\r\n        TextRender.textRenderInst = this;\r\n        ILaya.Laya['textRender'] = this;\r\n        TextRender.atlasWidth2 = TextRender.atlasWidth * TextRender.atlasWidth;\r\n        //TEST\r\n        //forceSplitRender = true;\r\n        //noAtlas = true;\r\n        //forceWholeRender = true;\r\n        //TEST\r\n    }\r\n\r\n    /**\r\n     * 设置当前字体，获得字体的大小信息。\r\n     * @param\tfont\r\n     */\r\n    setFont(font: FontInfo): void {\r\n        if (this.lastFont == font) return;\r\n        this.lastFont = font;\r\n        var fontsz = this.getFontSizeInfo(font._family);\r\n        var offx = fontsz >> 24\r\n        var offy = (fontsz >> 16) & 0xff;\r\n        var fw = (fontsz >> 8) & 0xff;\r\n        var fh = fontsz & 0xff;\r\n        var k = font._size / TextRender.standardFontSize;\r\n        this.fontSizeOffX = Math.ceil(offx * k);\r\n        this.fontSizeOffY = Math.ceil(offy * k);\r\n        this.fontSizeW = Math.ceil(fw * k);\r\n        this.fontSizeH = Math.ceil(fh * k);\r\n        if (font._font.indexOf('italic') >= 0) {// 先判断一下效率会高一些\r\n            this.fontStr = font._font.replace('italic', '');\r\n        } else {\r\n            this.fontStr = font._font;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从string中取出一个完整的char，例如emoji的话要多个\r\n     * 会修改 _curStrPos\r\n     * TODO 由于各种文字中的组合写法，这个需要能扩展，以便支持泰文等\r\n     * @param\tstr\r\n     * @param\tstart\t开始位置\r\n     */\r\n    getNextChar(str: string): string | null {\r\n        var len = str.length;\r\n        var start = this._curStrPos;\r\n        if (!str.substring) return null;\t// 保护一下，避免下面 substring 报错\r\n        if (start >= len)\r\n            return null;\r\n\r\n        //var link: boolean = false;\t//如果是连接的话要再加一个完整字符\r\n        var i = start;\r\n        var state = 0; //0 初始化 1  正常 2 连续中\r\n        for (; i < len; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if ((c >>> 11) == 0x1b) { //可能是0b110110xx或者0b110111xx。 这都表示2个u16组成一个emoji\r\n                if (state == 1) break;//新的字符了，要截断\r\n                state = 1;\t// 其他状态都转成正常读取字符状态，只是一次读两个\r\n                i++;\t//跨过一个。\r\n            }\r\n            else if (c === 0xfe0e || c === 0xfe0f) {\t//样式控制字符\r\n                // 继续。不改变状态\r\n            }\r\n            else if (c == 0x200d) {\t\t//zero width joiner\r\n                state = 2; \t// 继续\r\n            } else {\r\n                if (state == 0) state = 1;\r\n                else if (state == 1) break;\r\n                else if (state == 2) {\r\n                    // 继续\r\n                }\r\n            }\r\n        }\r\n        this._curStrPos = i;\r\n        return str.substring(start, i);\r\n    }\r\n\r\n    filltext(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        if (data.length <= 0)\r\n            return;\r\n        //以后保存到wordtext中\r\n        var font = FontInfo.parse(fontStr);\r\n\r\n        var nTextAlign = 0;\r\n        switch (textAlign) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\r\n    }\r\n\r\n    _fast_filltext(ctx: Context, data: string | WordText | null, x: number, y: number, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        if (data && !(data.length >= 1)) return;\t// length有可能是 undefined\r\n        if (lineWidth < 0) lineWidth = 0;\r\n        this.setFont(font);\r\n        this.fontScaleX = this.fontScaleY = 1.0;\r\n        if (TextRender.scaleFontWithCtx) {\r\n            let sx = ctx.getMatScaleX();\r\n            let sy = ctx.getMatScaleY();\r\n\r\n\r\n            if (sx < 1e-4 || sy < 1e-1)\r\n                return;\r\n\r\n            if (sx > 1) this.fontScaleX = Math.min(TextRender.maxFontScale, sx);\r\n            if (sy > 1) this.fontScaleY = Math.min(TextRender.maxFontScale, sy);\r\n        }\r\n\r\n        font._italic && (ctx._italicDeg = 13);\r\n        //准备bmp\r\n        //拷贝到texture上,得到一个gltexture和uv\r\n        var wt = <WordText>data;\r\n        var isWT = data instanceof WordText;\r\n        var str = data && data.toString();//(<string>data);guo 某种情况下，str还是WordText（没找到为啥），这里保护一下\r\n\r\n        /**\r\n         * sameTexData \r\n         * WordText 中保存了一个数组，这个数组是根据贴图排序的，目的是为了能相同的贴图合并。\r\n         * 类型是 {ri:CharRenderInfo,stx:int,sty:int,...}[文字个数][贴图分组]\r\n         */\r\n        var sameTexData: any[] = isWT ? wt.pageChars : [];\r\n\r\n        var strWidth = 0;\r\n        if (isWT) {\r\n            str = wt.text;\r\n            strWidth = wt.width;\r\n            if (strWidth < 0) {\r\n                strWidth = wt.width = this.charRender.getWidth(this.fontStr, str);\t// 字符串长度是原始的。\r\n            }\r\n        } else {\r\n            strWidth = str ? this.charRender.getWidth(this.fontStr, str) : 0;\r\n        }\r\n\r\n        //水平对齐方式\r\n        switch (textAlign) {\r\n            case Const.ENUM_TEXTALIGN_CENTER:\r\n                x -= strWidth / 2;\r\n                break;\r\n            case Const.ENUM_TEXTALIGN_RIGHT:\r\n                x -= strWidth;\r\n                break;\r\n        }\r\n\r\n        //检查保存的数据是否有的已经被释放了\r\n        if (isWT) {\t// TODO 能利用lastGCCnt么\r\n            //wt.lastGCCnt = _curPage.gcCnt;\r\n            if (this.hasFreedText(sameTexData) || wt.pagecharsCtx != ctx) {\r\n                sameTexData = wt.pageChars = [];\r\n            }\r\n            // if(isWT && (this.fontScaleX!=wt.scalex || this.fontScaleY!=wt.scaley)) {\r\n            // \t// 文字缩放要清理缓存\r\n            // \tsameTexData = wt.pageChars = [];\r\n            // }\r\n        }\r\n        var ri: CharRenderInfo = null;\r\n        //var oneTex: boolean = isWT || TextRender.forceWholeRender;\t// 如果能缓存的话，就用一张贴图\r\n        var splitTex = this.renderPerChar = (!isWT) || TextRender.forceSplitRender || (isWT && wt.splitRender); \t// 拆分字符串渲染，这个优先级高\r\n        if (!sameTexData || sameTexData.length < 1) {\r\n            if (isWT) {\r\n                wt.scalex = this.fontScaleX;\r\n                wt.scaley = this.fontScaleY;\r\n            }\r\n            // 重新构建缓存的贴图信息\r\n            // TODO 还是要ctx.scale么\r\n            if (splitTex) {\r\n                // 如果要拆分字符渲染\r\n                var stx = 0;\r\n                var sty = 0;\r\n\r\n                this._curStrPos = 0;\r\n                var curstr: string | null;\r\n                while (true) {\r\n                    curstr = this.getNextChar(str);\r\n                    if (!curstr)\r\n                        break;\r\n                    ri = this.getCharRenderInfo(curstr, font, color, strokeColor, lineWidth, false);\r\n                    if (!ri) {\r\n                        // 没有分配到。。。\r\n                        break;\r\n                    }\r\n                    if (ri.isSpace) {\t// 空格什么都不做\r\n                    } else {\r\n                        //分组保存\r\n                        var add = sameTexData[ri.tex.id];\r\n                        if (!add) {\r\n                            var o1 = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: new Array() };\t// 根据genid来减少是否释放的判断量\r\n                            sameTexData[ri.tex.id] = o1;\r\n                            add = o1.words;\r\n                        } else {\r\n                            add = add.words;\r\n                        }\r\n                        //不能直接修改ri.bmpWidth, 否则会累积缩放，所以把缩放保存到独立的变量中\r\n                        add.push({ ri: ri, x: stx, y: sty, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY });\r\n                        stx += ri.width;\t// TODO 缩放\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // 如果要整句话渲染\r\n                var margin = (font._size / 3 | 0);  // margin保持与charrender_canvas的一致\r\n                var isotex = TextRender.noAtlas || (strWidth + margin + margin) * this.fontScaleX > TextRender.atlasWidth;\t// 独立贴图还是大图集。需要考虑margin\r\n                ri = this.getCharRenderInfo(str, font, color, strokeColor, lineWidth, isotex);\r\n                // 整句渲染，则只有一个贴图\r\n                sameTexData[0] = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: [{ ri: ri, x: 0, y: 0, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY }] };\r\n            }\r\n            isWT && (wt.pagecharsCtx = ctx);\r\n            //TODO getbmp 考虑margin 字体与标准字体的关系\r\n        }\r\n\r\n        this._drawResortedWords(ctx, x, y, sameTexData);\r\n        ctx._italicDeg = 0;\r\n    }\r\n\r\n    /**\r\n     * 画出重新按照贴图顺序分组的文字。\r\n     * @param\tsamePagesData\r\n     * @param  startx 保存的数据是相对位置，所以需要加上这个偏移。用相对位置更灵活一些。\r\n     * @param y {int} 因为这个只能画在一行上所以没有必要保存y。所以这里再把y传进来\r\n     */\r\n    protected _drawResortedWords(ctx: Context, startx: number, starty: number, samePagesData: any[]): void {\r\n        var isLastRender = ctx._charSubmitCache ? ctx._charSubmitCache._enable : false;\r\n        var mat = ctx._curMat;\r\n        //var slen = samePagesData.length;\r\n        //for (var id = 0; id < slen; id++) {\r\n        for (var id in samePagesData) {// TODO samePagesData可能是个不连续的数组，比如只有一个samePagesData[29999] = dt;\r\n            // TODO 想个更好的方法\r\n            var dt = samePagesData[id];\r\n            if (!dt) continue;\r\n            var pri: any[] = dt.words;\r\n            var pisz = pri.length; if (pisz <= 0) continue;\r\n            var tex = ((<TextTexture>samePagesData[id].tex));\r\n            for (var j = 0; j < pisz; j++) {\r\n                var riSaved: any = pri[j];\r\n                var ri: CharRenderInfo = riSaved.ri;\r\n                if (ri.isSpace) continue;\r\n                ri.touch();\r\n                ctx.drawTexAlign = true;\r\n                //ctx._drawTextureM(ri.tex.texture as Texture, startx +riSaved.x -ri.orix / fontScaleX , starty + riSaved.y -ri.oriy / fontScaleY , riSaved.w, riSaved.h, null, 1.0, ri.uv);\r\n\r\n                let t = tex as TextTexture;\r\n                ctx._inner_drawTexture(t.texture, t.id,\r\n                    startx + riSaved.x - ri.orix, starty + riSaved.y - ri.oriy, riSaved.w, riSaved.h,\r\n                     mat, ri.uv, 1.0, isLastRender, 0xffffffff);\r\n                \r\n\r\n                if ((<any>ctx).touches) {\r\n                    (<any>ctx).touches.push(ri);\r\n                }\r\n            }\r\n        }\r\n        //不要影响别人\r\n        //ctx._curSubmit._key.other = -1;\r\n    }\r\n\r\n    /**\r\n     * 检查 txts数组中有没有被释放的资源\r\n     * @param\ttxts {{ri:CharRenderInfo,...}[][]}\r\n     * @param\tstartid\r\n     * @return\r\n     */\r\n    hasFreedText(txts: any[]): boolean {\r\n        for (let i in txts) {\r\n            var pri = txts[i];\r\n            if (!pri) continue;\r\n            var tex = (<TextTexture>pri.tex);\r\n            if (tex.destroyed || tex.genID != pri.texgen) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCharRenderInfo(str: string, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, isoTexture: boolean = false): CharRenderInfo {\r\n        var fid = this.mapFont[font._family];\r\n        if (fid == undefined) {\r\n            this.mapFont[font._family] = fid = this.fontID++;\r\n        }\r\n        /*\r\n        var cid:int = mapColor[color];\r\n        if (cid == undefined) {\r\n            mapColor[color] = cid = colorID++;\r\n        }\r\n        var scid:int = mapColor[strokeColor];\r\n        */\r\n        var key = str + '_' + fid + '_' + font._size + '_' + color;\r\n        if (lineWidth > 0)\r\n            key += '_' + strokeColor! + lineWidth;\r\n        if (font._bold)\r\n            key += 'P';\r\n        if (this.fontScaleX != 1 || this.fontScaleY != 1) {\r\n            key += (this.fontScaleX * 20 | 0) + '_' + (this.fontScaleY * 20 | 0);\t// 这个精度可以控制占用资源的大小，精度越高越能细分缩放。\r\n        }\r\n\r\n        var i = 0;\r\n        // 遍历所有的大图集看是否存在\r\n        var sz = this.textAtlases.length;\r\n        var ri: CharRenderInfo;\r\n        var atlas: TextAtlas;\r\n        if (!isoTexture) {\r\n            for (i = 0; i < sz; i++) {\r\n                atlas = this.textAtlases[i];\r\n                ri = atlas.charMaps[key]\r\n                if (ri) {\r\n                    ri.touch();\r\n                    return ri;\r\n                }\r\n            }\r\n        }\r\n        // 没有找到，要创建一个\r\n        ri = new CharRenderInfo();\r\n        this.charRender.scale(this.fontScaleX, this.fontScaleY);\r\n        ri.char = str;\r\n        ri.height = font._size;\r\n        var margin = (font._size / 3 | 0);\t// 凑的。 注意这里不能乘以缩放，因为ctx会自动处理\r\n        // 如果不存在，就要插入已有的，或者创建新的\r\n        var imgdt: ImageData | null = null;\r\n        // 先大约测量文字宽度 \r\n\r\n        if (!lineWidth) {\r\n            lineWidth = 0;\r\n        }\r\n        var w1 = Math.ceil((this.charRender.getWidth(this.fontStr, str) + 2 * lineWidth) * this.fontScaleX);\r\n        if (w1 > this.charRender.canvasWidth) {\r\n            this.charRender.canvasWidth = Math.min(2048, w1 + margin * 2);\r\n        }\r\n        if (isoTexture) {\r\n            // 独立贴图\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri, margin, margin, margin, margin, null);\r\n            // 这里可以直接\r\n            if (imgdt) {\r\n                var tex = TextTexture.getTextTexture(imgdt.width, imgdt.height);\r\n                tex.addChar(imgdt, 0, 0, ri.uv);\r\n                ri.tex = tex;\r\n                ri.orix = margin; // 这里是原始的，不需要乘scale,因为scale的会创建一个scale之前的rect\r\n                ri.oriy = margin;\r\n                tex.ri = ri;\r\n                this.isoTextures.push(tex);\r\n            }\r\n        } else {\r\n            // 大图集\r\n            var len = str.length;\r\n            if (len > 1) {\r\n                // emoji或者组合的\r\n            }\r\n            var lineExt = lineWidth * 1;\t// 这里，包括下面的*2 都尽量用整数。否则在取整以后可能有有偏移。\r\n            var fw = Math.ceil((this.fontSizeW + lineExt * 2) * this.fontScaleX); \t//本来只要 lineWidth就行，但是这样安全一些\r\n            var fh = Math.ceil((this.fontSizeH + lineExt * 2) * this.fontScaleY);\r\n            TextRender.imgdtRect[0] = ((margin - this.fontSizeOffX - lineExt) * this.fontScaleX) | 0;\t// 本来要 lineWidth/2 但是这样一些尖角会有问题，所以大一点\r\n            TextRender.imgdtRect[1] = ((margin - this.fontSizeOffY - lineExt) * this.fontScaleY) | 0;\r\n            if (this.renderPerChar || len == 1) {\r\n                // 单个字符的处理\r\n                TextRender.imgdtRect[2] = Math.max(w1, fw);\r\n                TextRender.imgdtRect[3] = Math.max(w1, fh);\t// 高度也要取大的。 例如emoji\r\n            } else {\r\n                // 多个字符的处理\r\n                //TextRender.imgdtRect[2] = -1;\t// -1 表示宽度要测量\r\n                TextRender.imgdtRect[2] =  -(this.fontSizeOffX * this.fontScaleX);//<0表示要测量宽度，但是提供了原点偏移\r\n                TextRender.imgdtRect[3] = fh; \t// TODO 如果被裁剪了，可以考虑把这个加大一点点\r\n            }\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri,\r\n                margin, margin, margin, margin, TextRender.imgdtRect);\r\n            if (imgdt) {\r\n                atlas = this.addBmpData(imgdt, ri);\r\n                if (TextRender.isWan1Wan) {\r\n                    // 这时候 imgdtRect 是不好使的，要自己设置\r\n                    ri.orix = margin;\t// 不要乘缩放。要不后面也要除。\r\n                    ri.oriy = margin;\r\n                } else {\r\n                    // 取下来的imagedata的原点在哪\r\n                    ri.orix = (this.fontSizeOffX + lineExt);\t// 由于是相对于imagedata的，上面会根据包边调整左上角，所以原点也要相应反向调整\r\n                    ri.oriy = (this.fontSizeOffY + lineExt);\r\n                }\r\n                atlas.charMaps[key] = ri;\r\n            }\r\n        }\r\n        return ri;\r\n    }\r\n\r\n    /**\r\n     * 添加数据到大图集\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    addBmpData(data: ImageData, ri: CharRenderInfo): TextAtlas {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var sz = this.textAtlases.length;\r\n        var atlas: TextAtlas;\r\n        var find = false;\r\n        for (var i = 0; i < sz; i++) {\r\n            atlas = this.textAtlases[i];\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (find) {\r\n                break;\r\n            }\r\n        }\r\n        if (!find) {\r\n            // 创建一个新的\r\n            atlas = new TextAtlas()\r\n            this.textAtlases.push(atlas);\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (!find) {\r\n                throw 'err1'; //TODO\r\n            }\r\n            // 清理旧的\r\n            this.cleanAtlases();\r\n        }\r\n        if (find) {\r\n            atlas.texture.addChar(data, this.tmpAtlasPos.x, this.tmpAtlasPos.y, ri.uv);\r\n            ri.tex = atlas.texture;\r\n        }\r\n        return atlas;\r\n    }\r\n\r\n    /**\r\n     * 清理利用率低的大图集\r\n     */\r\n    GC(): void {\r\n        var i = 0;\r\n        var sz = this.textAtlases.length;\r\n        var dt = 0;\r\n        var destroyDt = TextRender.destroyAtlasDt;\r\n        var totalUsedRate = 0;\t// 总使用率\r\n        var totalUsedRateAtlas = 0;\r\n        var curloop = RenderInfo.loopCount;\r\n\r\n        //var minUsedRateID:int = -1;\r\n        //var minUsedRate:Number = 1;\r\n        var maxWasteRateID = -1;\r\n        var maxWasteRate = 0;\r\n        var tex: TextTexture = null;\r\n        var curatlas: TextAtlas = null;\r\n        // 图集的清理\r\n        for (; i < sz; i++) {\r\n            curatlas = this.textAtlases[i];\r\n            tex = curatlas.texture;\r\n            if (tex) {\r\n                totalUsedRate += tex.curUsedCovRate;\r\n                totalUsedRateAtlas += tex.curUsedCovRateAtlas;\r\n                // 浪费掉的图集\r\n                // (已经占用的图集和当前使用的图集的差。图集不可局部重用，所以有占用的和使用的的区别)\r\n                var waste = curatlas.usedRate - tex.curUsedCovRateAtlas;\r\n                // 记录哪个图集浪费的最多\r\n                if (maxWasteRate < waste) {\r\n                    maxWasteRate = waste;\r\n                    maxWasteRateID = i;\r\n                }\r\n                /*\r\n                if (minUsedRate > tex.curUsedCovRate) {\r\n                    minUsedRate = tex.curUsedCovRate;\r\n                    minUsedRateID = i;\r\n                }\r\n                */\r\n            }\r\n            // 如果当前贴图的touch时间超出了指定的间隔（单位是帧，例如），则设置回收\r\n            // 可能同时会有多个图集被回收\r\n            dt = curloop - curatlas.texture.lastTouchTm;\r\n            if (dt > destroyDt) {\r\n                TextRender.showLog && console.log('TextRender GC delete atlas ' + tex ? curatlas.texture.id : 'unk');\r\n                curatlas.destroy();\r\n                this.textAtlases[i] = this.textAtlases[sz - 1];\t// 把最后的拿过来冲掉\r\n                sz--;\r\n                i--;\r\n                maxWasteRateID = -1;\r\n            }\r\n        }\r\n        // 缩减图集数组的长度\r\n        this.textAtlases.length = sz;\r\n\r\n        // 独立贴图的清理 TODO 如果多的话，要不要分开处理\r\n        sz = this.isoTextures.length;\r\n        for (i = 0; i < sz; i++) {\r\n            tex = this.isoTextures[i];\r\n            dt = curloop - tex.lastTouchTm;\r\n            if (dt > TextRender.destroyUnusedTextureDt) {\r\n                tex.ri.deleted = true;\r\n                tex.ri.tex = null;\r\n                // 直接删除，不回收\r\n                tex.destroy();\r\n                this.isoTextures[i] = this.isoTextures[sz - 1];\r\n                sz--;\r\n                i--;\r\n            }\r\n        }\r\n        this.isoTextures.length = sz;\r\n\r\n        // 如果超出内存需要清理不常用\r\n        var needGC = this.textAtlases.length > 1 && this.textAtlases.length - totalUsedRateAtlas >= 2;\t// 总量浪费了超过2张\r\n        if (TextRender.atlasWidth * TextRender.atlasWidth * 4 * this.textAtlases.length > TextRender.cleanMem || needGC || TextRender.simClean) {\r\n            TextRender.simClean = false;\r\n            TextRender.showLog && console.log('清理使用率低的贴图。总使用率:', totalUsedRateAtlas, ':', this.textAtlases.length, '最差贴图:' + maxWasteRateID);\r\n            if (maxWasteRateID >= 0) {\r\n                curatlas = this.textAtlases[maxWasteRateID];\r\n                curatlas.destroy();\r\n                this.textAtlases[maxWasteRateID] = this.textAtlases[this.textAtlases.length - 1];\r\n                this.textAtlases.length = this.textAtlases.length - 1;\r\n            }\r\n        }\r\n\r\n        TextTexture.clean();\r\n    }\r\n\r\n    /**\r\n     * 尝试清理大图集\r\n     */\r\n    cleanAtlases(): void {\r\n        // TODO 根据覆盖率决定是否清理\r\n    }\r\n\r\n    getCharBmp(c: string): any {\r\n\r\n    }\r\n\r\n    /**\r\n     * 检查当前线是否存在数据\r\n     * @param\tdata\r\n     * @param\tl\r\n     * @param\tsx\r\n     * @param\tex\r\n     * @return\r\n     */\r\n    private checkBmpLine(data: ImageData, l: number, sx: number, ex: number): boolean {\r\n        if (this.bmpData32.buffer != data.data.buffer) {\r\n            this.bmpData32 = new Uint32Array(data.data.buffer);\r\n        }\r\n        var stpos = data.width * l + sx;\r\n        for (var x = sx; x < ex; x++) {\r\n            if (this.bmpData32[stpos++] != 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 根据bmp数据和当前的包围盒，更新包围盒\r\n     * 由于选择的文字是连续的，所以可以用二分法\r\n     * @param\tdata\r\n     * @param\tcurbbx \t[l,t,r,b]\r\n     * @param   onlyH 不检查左右\r\n     */\r\n    private updateBbx(data: ImageData, curbbx: number[], onlyH: boolean = false): void {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var x = 0;\r\n        // top\r\n        var sy = curbbx[1];\t//从t到0 sy表示有数据的行\r\n        var ey = 0;\r\n        var y = sy;\r\n        if (this.checkBmpLine(data, sy, 0, w)) {\r\n            // 如果当前行有数据，就要往上找\r\n            while (true) {\r\n                y = (sy + ey) / 2 | 0;\t// 必须是int\r\n                if (y + 1 >= sy) {// \r\n                    // 找到了。严格来说还不知道这个是否有像素，不过这里要求不严格，可以认为有\r\n                    curbbx[1] = y;\r\n                    break;\r\n                }\r\n                if (this.checkBmpLine(data, y, 0, w)) {\r\n                    //中间线有数据，搜索上半部分\r\n                    sy = y;\r\n                } else {\r\n                    //中间线没有有数据，搜索下半部分\r\n                    ey = y;\r\n                }\r\n            }\r\n        }\r\n        // 下半部分\r\n        if (curbbx[3] > h) curbbx[3] = h;\r\n        else {\r\n            y = sy = curbbx[3];\r\n            ey = h;\r\n            if (this.checkBmpLine(data, sy, 0, w)) {\r\n                while (true) {\r\n                    y = (sy + ey) / 2 | 0;\r\n                    if (y - 1 <= sy) {\r\n                        curbbx[3] = y;\r\n                        break;\r\n                    }\r\n                    if (this.checkBmpLine(data, y, 0, w)) {\r\n                        sy = y;\r\n                    } else {\r\n                        ey = y;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (onlyH)\r\n            return;\r\n\r\n        // 左半部分\r\n        var minx = curbbx[0];\r\n        var stpos = w * curbbx[1]; //w*cy+0\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = 0; x < minx; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    minx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[0] = minx;\r\n        // 右半部分\r\n        var maxx = curbbx[2];\r\n        stpos = w * curbbx[1]; //w*cy\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = maxx; x < w; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    maxx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[2] = maxx;\r\n    }\r\n\r\n    getFontSizeInfo(font: string): number {\r\n        var finfo: any = this.fontSizeInfo[font];\r\n        if (finfo != undefined)\r\n            return finfo;\r\n\r\n        var fontstr: string = 'bold ' + TextRender.standardFontSize + 'px ' + font;\r\n        if (TextRender.isWan1Wan) {\r\n            // 这时候无法获得imagedata，只能采取保险测量\r\n            this.fontSizeW = this.charRender.getWidth(fontstr, '有') * 1.5;\r\n            this.fontSizeH = TextRender.standardFontSize * 1.5;\r\n            var szinfo: number = this.fontSizeW << 8 | this.fontSizeH;\r\n            this.fontSizeInfo[font] = szinfo;\r\n            return szinfo;\r\n        }\r\n        // bbx初始大小\r\n        TextRender.pixelBBX[0] = TextRender.standardFontSize / 2;// 16;\r\n        TextRender.pixelBBX[1] = TextRender.standardFontSize / 2;// 16;\r\n        TextRender.pixelBBX[2] = TextRender.standardFontSize;// 32;\r\n        TextRender.pixelBBX[3] = TextRender.standardFontSize;// 32;\r\n\r\n        var orix: number = 16;\t\t// 左边留白，也就是x原点的位置\r\n        var oriy: number = 16;\r\n        var marginr: number = 16;\r\n        var marginb: number = 16;\r\n        this.charRender.scale(1, 1);\r\n        TextRender.tmpRI.height = TextRender.standardFontSize;\r\n        this.charRender.fontsz = TextRender.standardFontSize;\r\n        var bmpdt = this.charRender.getCharBmp('g', fontstr, 0, 'red', null, TextRender.tmpRI, orix, oriy, marginr, marginb);\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        //测量宽度是 tmpRI.width\r\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);\r\n        bmpdt = this.charRender.getCharBmp('有', fontstr, 0, 'red', null, TextRender.tmpRI, oriy, oriy, marginr, marginb);// '有'比'国'大\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        // 国字的宽度就用系统测量的，不再用像素检测\r\n        if (TextRender.pixelBBX[2] < orix + TextRender.tmpRI.width)\r\n            TextRender.pixelBBX[2] = orix + TextRender.tmpRI.width;\r\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);//TODO 改成 true\r\n        // 原点在 16,16\r\n        var xoff = Math.max(orix - TextRender.pixelBBX[0], 0);\r\n        var yoff = Math.max(oriy - TextRender.pixelBBX[1], 0);\r\n        var bbxw = TextRender.pixelBBX[2] - TextRender.pixelBBX[0];\r\n        var bbxh = TextRender.pixelBBX[3] - TextRender.pixelBBX[1];\r\n        var sizeinfo = xoff << 24 | yoff << 16 | bbxw << 8 | bbxh;\r\n        this.fontSizeInfo[font] = sizeinfo;\r\n        return sizeinfo;\r\n    }\r\n\r\n    printDbgInfo(): void {\r\n        console.log('图集个数:' + this.textAtlases.length + ',每个图集大小:' + TextRender.atlasWidth + 'x' + TextRender.atlasWidth, ' 用canvas:', TextRender.isWan1Wan);\r\n        console.log('图集占用空间:' + (TextRender.atlasWidth * TextRender.atlasWidth * 4 / 1024 / 1024 * this.textAtlases.length) + 'M');\r\n        console.log('缓存用到的字体:');\r\n        for (var f in this.mapFont) {\r\n            var fontsz = this.getFontSizeInfo(f);\r\n            var offx = fontsz >> 24\r\n            var offy = (fontsz >> 16) & 0xff;\r\n            var fw = (fontsz >> 8) & 0xff;\r\n            var fh = fontsz & 0xff;\r\n            console.log('    ' + f, ' off:', offx, offy, ' size:', fw, fh);\r\n        }\r\n        var num = 0;\r\n        console.log('缓存数据:');\r\n        var totalUsedRate = 0;\t// 总使用率\r\n        var totalUsedRateAtlas = 0;\r\n        this.textAtlases.forEach(function (a: TextAtlas): void {\r\n            var id = a.texture.id;\r\n            var dt = RenderInfo.loopCount - a.texture.lastTouchTm\r\n            var dtstr = dt > 0 ? ('' + dt + '帧以前') : '当前帧';\r\n            totalUsedRate += a.texture.curUsedCovRate;\r\n            totalUsedRateAtlas += a.texture.curUsedCovRateAtlas;\r\n            console.log('--图集(id:' + id + ',当前使用率:' + (a.texture.curUsedCovRate * 1000 | 0) + '‰', '当前图集使用率:', (a.texture.curUsedCovRateAtlas * 100 | 0) + '%', '图集使用率:', (a.usedRate * 100 | 0), '%, 使用于:' + dtstr + ')--:');\r\n            for (var k in a.charMaps) {\r\n                var ri: CharRenderInfo = a.charMaps[k];\r\n                console.log('     off:', ri.orix, ri.oriy, ' bmp宽高:', ri.bmpWidth, ri.bmpHeight, '无效:', ri.deleted, 'touchdt:', (RenderInfo.loopCount - ri.touchTick), '位置:', ri.uv[0] * TextRender.atlasWidth | 0, ri.uv[1] * TextRender.atlasWidth | 0,\r\n                    '字符:', ri.char, 'key:', k);\r\n                num++;\r\n            }\r\n        });\r\n        console.log('独立贴图文字(' + this.isoTextures.length + '个):');\r\n        this.isoTextures.forEach(function (tex: TextTexture): void {\r\n            console.log('    size:', tex._texW, tex._texH, 'touch间隔:', (RenderInfo.loopCount - tex.lastTouchTm), 'char:', tex.ri.char);\r\n        });\r\n        console.log('总缓存:', num, '总使用率:', totalUsedRate, '总当前图集使用率:', totalUsedRateAtlas);\r\n\r\n    }\r\n\r\n    // 在屏幕上显示某个大图集\r\n    showAtlas(n: number, bgcolor: string, x: number, y: number, w: number, h: number): Sprite {\r\n        if (!this.textAtlases[n]) {\r\n            console.log('没有这个图集');\r\n            return null;\r\n        }\r\n        var sp = new Sprite();\r\n        var texttex = this.textAtlases[n].texture;\r\n        var texture: any = {\r\n            width: TextRender.atlasWidth,\r\n            height: TextRender.atlasWidth,\r\n            sourceWidth: TextRender.atlasWidth,\r\n            sourceHeight: TextRender.atlasWidth,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            getIsReady: function (): boolean { return true; },\r\n            _addReference: function (): void { },\r\n            _removeReference: function (): void { },\r\n            _getSource: function (): any { return texttex._getSource(); },\r\n            bitmap: { id: texttex.id },\r\n            _uv: Texture.DEF_UV\r\n        };\r\n        ((<any>sp)).size = function (w: number, h: number): Sprite {\r\n            this.width = w;\r\n            this.height = h;\r\n            sp.graphics.clear();\r\n            sp.graphics.drawRect(0, 0, sp.width, sp.height, bgcolor);\r\n            sp.graphics.drawTexture((<Texture>texture), 0, 0, sp.width, sp.height);\r\n            return (<Sprite>this);\r\n        }\r\n        sp.graphics.drawRect(0, 0, w, h, bgcolor);\r\n        sp.graphics.drawTexture((<Texture>texture), 0, 0, w, h);\r\n        sp.pos(x, y);\r\n        ILaya.stage.addChild(sp);\r\n        return sp;\r\n    }\r\n\r\n    /////// native ///////\r\n    filltext_native(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        if (data && data.length <= 0) return;\r\n\r\n        var font = FontInfo.parse(fontStr);\r\n\r\n        var nTextAlign = 0;\r\n        switch (textAlign) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        return this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\r\n    }\r\n}\r\n","import { AtlasGrid } from \"./AtlasGrid\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Point } from \"../../maths/Point\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { TextRender } from \"./TextRender\";\r\n\r\n/**\r\n *  文字贴图的大图集。\r\n */\r\nexport class TextAtlas {\r\n    texWidth: number = 1024;\r\n    texHeight: number = 1024;\r\n    private atlasgrid: AtlasGrid;\r\n    //private protectDist: number = 1;\r\n    texture: TextTexture|null = null;\r\n    charMaps: any = {};\t\t// 保存文字信息的字典\r\n    static atlasGridW: number = 16;\r\n\r\n    constructor() {\r\n        this.texHeight = this.texWidth = TextRender.atlasWidth;\r\n        this.texture = TextTexture.getTextTexture(this.texWidth, this.texHeight);\r\n        if (this.texWidth / TextAtlas.atlasGridW > 256) {\r\n            TextAtlas.atlasGridW = Math.ceil(this.texWidth / 256);\r\n        }\r\n        this.atlasgrid = new AtlasGrid(this.texWidth / TextAtlas.atlasGridW, this.texHeight / TextAtlas.atlasGridW, this.texture.id);\r\n    }\r\n\r\n    setProtecteDist(d: number): void {\r\n        //this.protectDist = d;\r\n    }\r\n\r\n    /**\r\n     * 如果返回null，则表示无法加入了\r\n     * 分配的时候优先选择最接近自己高度的节点\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    getAEmpty(w: number, h: number, pt: Point): boolean {\r\n        var find: boolean = this.atlasgrid.addRect(1, Math.ceil(w / TextAtlas.atlasGridW), Math.ceil(h / TextAtlas.atlasGridW), pt);\r\n        if (find) {\r\n            pt.x *= TextAtlas.atlasGridW;\r\n            pt.y *= TextAtlas.atlasGridW;\r\n        }\r\n        return find;\r\n    }\r\n\r\n    /**\r\n     * 大图集格子单元的占用率，老的也算上了。只是表示这个大图集还能插入多少东西。\r\n     */\r\n    get usedRate(): number {\r\n        return this.atlasgrid._used;\r\n    }\r\n    //data 也可能是canvas\r\n    /*\r\n    public function pushData(data:ImageData, node:TextAtlasNode):void {\r\n        texture.addChar(data, node.x, node.y);\r\n    }\r\n    */\r\n\r\n    destroy(): void {\r\n        for (var k in this.charMaps) {\r\n            var ri: CharRenderInfo = this.charMaps[k];\r\n            ri.deleted = true;\r\n        }\r\n        this.texture.discard();\r\n    }\r\n\r\n    printDebugInfo(): void {\r\n\r\n    }\r\n}\r\n\r\n","import { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { Resource } from \"../../resource/Resource\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { IRender2DContext } from \"../../RenderEngine/RenderInterface/IRender2DContext\"\r\nimport { Texture2D } from \"../../resource/Texture2D\";\r\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../../RenderEngine/RenderEnum/WrapMode\";\r\nimport { TextAtlas } from \"./TextAtlas\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { TextRender } from \"./TextRender\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\nexport class TextTexture extends Resource {\r\n    private static pool: any[] = new Array(10); // 回收用\r\n    private static poolLen: number = 0;\r\n    private static cleanTm: number = 0;\r\n    private _render2DContext: IRender2DContext;\r\n\r\n    /**@internal */\r\n    _source: Texture2D;\t// webgl 贴图\r\n    /**@internal */\r\n    _texW: number = 0;\r\n    /**@internal */\r\n    _texH: number = 0;\r\n    /**@internal */\r\n    _discardTm: number = 0;\t\t\t//释放的时间。超过一定时间会被真正删除\r\n    genID: number = 0; \t\t\t\t// 这个对象会重新利用，为了能让引用他的人知道自己引用的是否有效，加个id\r\n    bitmap: any = { id: 0, _glTexture: null };\t\t\t\t\t\t//samekey的判断用的\r\n    curUsedCovRate: number = 0; \t// 当前使用到的使用率。根据面积算的\r\n    curUsedCovRateAtlas: number = 0; \t// 大图集中的占用率。由于大图集分辨率低，所以会浪费一些空间\r\n    lastTouchTm: number = 0;\r\n    ri: CharRenderInfo = null; \t\t// 如果是独立文字贴图的话带有这个信息\r\n    //public var isIso:Boolean = false;\r\n    get gammaCorrection(): number {\r\n        return (this.bitmap._glTexture as any).gammaCorrection;\r\n    }\r\n    constructor(textureW: number, textureH: number) {\r\n        super();\r\n        this._texW = textureW || TextRender.atlasWidth;\r\n        this._texH = textureH || TextRender.atlasWidth;\r\n        this.bitmap.id = this.id;\r\n        this.lock = true;//防止被资源管理清除\r\n        this._render2DContext = LayaGL.render2DContext;\r\n    }\r\n\r\n    recreateResource(): void {\r\n        if (this._source)\r\n            return;\r\n        var glTex: Texture2D = this._source = new Texture2D(this._texW, this._texH, TextureFormat.R8G8B8A8, false, false, true, true);\r\n        glTex.setPixelsData(null, true, false);\r\n        glTex.lock = true;\r\n        this.bitmap._glTexture = glTex;\r\n\r\n        this._source.filterMode = FilterMode.Bilinear;\r\n        this._source.wrapModeU = WrapMode.Clamp;\r\n        this._source.wrapModeV = WrapMode.Clamp;\r\n\r\n        //TODO 预乘alpha\r\n        if (TextRender.debugUV) {\r\n            this.fillWhite();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tdata\r\n     * @param\tx\t\t\t拷贝位置。\r\n     * @param\ty\r\n     * @param  uv  \r\n     * @return uv数组  如果uv不为空就返回传入的uv，否则new一个数组\r\n     */\r\n    addChar(data: ImageData, x: number, y: number, uv: any[] = null): any[] {\r\n        //if (!LayaEnv.isConch &&  !__JS__('(data instanceof ImageData)')) {\r\n        if (TextRender.isWan1Wan) {\r\n            return this.addCharCanvas(data, x, y, uv);\r\n        }\r\n        var dt: any = data.data;\r\n        if (data.data instanceof Uint8ClampedArray)\r\n            dt = new Uint8Array(dt.buffer);\r\n        !this._source && this.recreateResource();\r\n\r\n        LayaGL.textureContext.setTextureSubPixelsData(this._source._texture, dt, 0, false, x, y, data.width, data.height, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        u0 = x / this._texW;\r\n        v0 = y / this._texH;\r\n        u1 = (x + data.width) / this._texW;\r\n        v1 = (y + data.height) / this._texH;\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 玩一玩不支持 getImageData\r\n     * @param\tcanv\r\n     * @param\tx\r\n     * @param\ty\r\n     */\r\n    addCharCanvas(canv: any, x: number, y: number, uv: any[] = null): any[] {\r\n        !this._source && this.recreateResource();\r\n\r\n        LayaGL.textureContext.setTextureSubImageData(this._source._texture, canv, x, y, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        if (LayaEnv.isConch) {\r\n            u0 = x / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = y / this._texH;\r\n            u1 = (x + canv.width) / this._texW;\r\n            v1 = (y + canv.height) / this._texH;\r\n        } else {\r\n            u0 = (x + 1) / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = (y + 1) / this._texH;\r\n            u1 = (x + canv.width - 1) / this._texW;\r\n            v1 = (y + canv.height - 1) / this._texH;\r\n        }\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 填充白色。调试用。\r\n     */\r\n    fillWhite(): void {\r\n        !this._source && this.recreateResource();\r\n        var dt: Uint8Array = new Uint8Array(this._texW * this._texH * 4);\r\n        ((<any>dt)).fill(0xff);\r\n        LayaGL.textureContext.setTextureImageData(this._source._getSource(), dt as any, true, false);\r\n    }\r\n\r\n    discard(): void {\r\n        // 文字贴图的释放要触发全局cacheas normal无效\r\n        ILaya.stage.setGlobalRepaint();\r\n        // 不再使用问题贴图的重用，否则会有内容清理问题\r\n        this.destroy();\r\n        return;\r\n    }\r\n\r\n    static getTextTexture(w: number, h: number): TextTexture {\r\n        // 不再回收\r\n        return new TextTexture(w, h);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        //console.log('destroy TextTexture');\r\n        this._source && this._source.destroy();\r\n        this._source = null;\r\n    }\r\n\r\n    /**\r\n     * 定期清理\r\n     * 为了简单，只有发生 getAPage 或者 discardPage的时候才检测是否需要清理\r\n     */\r\n    static clean(): void {\r\n        var curtm: number = RenderInfo.loopStTm;// Laya.stage.getFrameTm();\r\n        if (TextTexture.cleanTm === 0) TextTexture.cleanTm = curtm;\r\n        if (curtm - TextTexture.cleanTm >= TextRender.checkCleanTextureDt) {\t//每10秒看看pool中的贴图有没有很老的可以删除的\r\n            for (var i: number = 0; i < TextTexture.poolLen; i++) {\r\n                var p: TextTexture = TextTexture.pool[i];\r\n                if (curtm - p._discardTm >= TextRender.destroyUnusedTextureDt) {//超过20秒没用的删掉\r\n                    p.destroy();\t\t\t\t\t//真正删除贴图\r\n                    TextTexture.pool[i] = TextTexture.pool[TextTexture.poolLen - 1];\r\n                    TextTexture.poolLen--;\r\n                    i--;\t//这个还要处理，用来抵消i++\r\n                }\r\n            }\r\n            TextTexture.cleanTm = curtm;\r\n        }\r\n    }\r\n\r\n    touchRect(ri: CharRenderInfo, curloop: number): void {\r\n        if (this.lastTouchTm != curloop) {\r\n            this.curUsedCovRate = 0;\r\n            this.curUsedCovRateAtlas = 0;\r\n            this.lastTouchTm = curloop;\r\n        }\r\n        var texw2: number = TextRender.atlasWidth * TextRender.atlasWidth;\r\n        var gridw2: number = TextAtlas.atlasGridW * TextAtlas.atlasGridW;\r\n        this.curUsedCovRate += (ri.bmpWidth * ri.bmpHeight) / texw2;\r\n        this.curUsedCovRateAtlas += (Math.ceil(ri.bmpWidth / TextAtlas.atlasGridW) * Math.ceil(ri.bmpHeight / TextAtlas.atlasGridW)) / (texw2 / gridw2);\r\n    }\r\n\r\n    // 为了与当前的文字渲染兼容的补丁\r\n    get texture(): any {\r\n        return this;\r\n    }\r\n    /**@internal */\r\n    _getSource(): any {\r\n        return this._source._getSource();\r\n    }\r\n\r\n    // for debug\r\n    drawOnScreen(x: number, y: number): void {\r\n\r\n    }\r\n}\r\n","/**\r\n\t * ...\r\n\t * @author xie\r\n\t */\r\nexport class SubmitKey {\r\n    blendShader: number;\r\n    submitType: number;\r\n    other: number;\r\n\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n\r\n    clear(): void {\r\n        this.submitType = -1;\r\n        this.blendShader = this.other = 0;\r\n        //alpha = 1;\r\n    }\r\n\r\n    //TODO:coverage\r\n    copyFrom(src: SubmitKey): void {\r\n        this.other = src.other;\r\n        this.blendShader = src.blendShader;\r\n        this.submitType = src.submitType;\r\n        //alpha = src.alpha;\r\n    }\r\n\r\n    copyFrom2(src: SubmitKey, submitType: number, other: number): void {\r\n        //this.blendShader = src.blendShader;\r\n        //this.alpha = src.alpha;\t\t\t\r\n        this.other = other;\r\n        this.submitType = submitType;\r\n    }\r\n\r\n    //�Ƚ�3�����ⲿ�ṩ2��\r\n    //TODO:coverage\r\n    equal3_2(next: SubmitKey, submitType: number, other: number): boolean {\r\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && this.alpha === alpha;\r\n    }\r\n\r\n    //ȫ�Ƚϡ��ⲿ�ṩ2��\r\n    //TODO:coverage\r\n    equal4_2(next: SubmitKey, submitType: number, other: number): boolean {\r\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n\r\n    //�Ƚ�3��\r\n    //TODO:coverage\r\n    equal_3(next: SubmitKey): boolean {\r\n        return this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n    //ȫ�Ƚϡ�4��\r\n    //TODO:coverage\r\n    equal(next: SubmitKey): boolean {\r\n        return this.other === next.other && this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nexport class SubmitCMD implements ISubmit {\r\n    static POOL: SubmitCMD[] = []; fun: Function;\r\n    /**@internal */\r\n    _this: any;\r\n    args: any[];\r\n    /**@internal */\r\n    _ref: number = 1;\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    renderSubmit(): number {\r\n        this.fun.apply(this._this, this.args);\r\n        return 1;\r\n    }\r\n\r\n    getRenderType(): number {\r\n        return 0;\r\n    }\r\n\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var pool: any = SubmitCMD.POOL;\r\n            pool[pool._length++] = this;\r\n            this.args = null;\r\n            this.fun = null;\r\n            this._this = null;\r\n        }\r\n    }\r\n\r\n    static create(args: any[], fun: Function, thisobj: any): SubmitCMD {\r\n        var o: SubmitCMD = (SubmitCMD.POOL as any)._length ? SubmitCMD.POOL[--(SubmitCMD.POOL as any)._length] : new SubmitCMD();\r\n        o.fun = fun;\r\n        o.args = args;\r\n        o._this = thisobj;\r\n        o._ref = 1;\r\n        o._key.clear();\r\n        return o;\r\n    }\r\n}\r\n{ (SubmitCMD.POOL as any)._length = 0 }\r\n\r\n\r\n","import { IFilter } from \"./IFilter\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { Texture2D } from \"../resource/Texture2D\"\r\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\"\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\"\r\nimport { ColorFilter } from \"./ColorFilter\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\n/**\r\n * <code>Filter</code> 是滤镜基类。\r\n */\r\nexport class Filter extends EventDispatcher implements IFilter {\r\n    /**@private 模糊滤镜。*/\r\n    static BLUR: number = 0x10;\r\n    /**@private 颜色滤镜。*/\r\n    static COLOR: number = 0x20;\r\n    /**@private 发光滤镜。*/\r\n    static GLOW: number = 0x08;\r\n    /** @internal*/\r\n    _glRender: any;\r\n    static EVENT_CHANGE = 'change';\r\n\r\n    /**\r\n     * 创建一个 <code>Filter</code> 实例。\r\n     * */\r\n    constructor() { super();}\r\n\r\n    /**@private 滤镜类型。*/\r\n    get type(): number { return -1 }\r\n\r\n    protected onChange(){\r\n        this.event(Filter.EVENT_CHANGE);\r\n    }\r\n\r\n    static _filter = function (this: RenderSprite, sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var webglctx: Context = context;\r\n        var next: any = ((<RenderSprite>this))._next;\r\n        if (next) {\r\n            var filters: any[] = sprite.filters, len: number = filters.length;\r\n            //如果只有一个滤镜，那么还用原来的方式\r\n            if (len == 1 && (filters[0].type == Filter.COLOR)) {\r\n                context.save();\r\n                context.setColorFilter(filters[0]);\r\n                next._fun.call(next, sprite, context, x, y);\r\n                context.restore();\r\n                return;\r\n            }\r\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\r\n            var svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\t//拷贝用shaderValue\r\n            var b: Rectangle;\r\n\r\n            var p: Point = Point.TEMP;\r\n            var tMatrix: Matrix = webglctx._curMat;\r\n            var mat: Matrix = Matrix.create();\r\n            tMatrix.copyTo(mat);\r\n            var tPadding: number = 0;\t//给glow用\r\n            var tHalfPadding: number = 0;\r\n            var tIsHaveGlowFilter: boolean = false;\r\n            //这里判断是否存储了out，如果存储了直接用;\r\n            var source: RenderTexture2D = null;\r\n            var out: RenderTexture2D = sprite._cacheStyle.filterCache || null;\r\n            if (!out || sprite.getRepaint() != 0) {\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\r\n                //glow需要扩展边缘\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = new Rectangle();\r\n                b.copyFrom(sprite.getSelfBounds());\r\n                b.x += sprite.x;\r\n                b.y += sprite.y;\r\n                b.x -= sprite.pivotX + 4;//blur \r\n                b.y -= sprite.pivotY + 4;//blur\r\n                var tSX: number = b.x;\r\n                var tSY: number = b.y;\r\n                //重新计算宽和高\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                b.width = Math.ceil(b.width);\r\n                b.height = Math.ceil(b.height);\r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                out && WebGLRTMgr.releaseRT(out);// out.recycle();\r\n                source = WebGLRTMgr.getRT(b.width, b.height);\r\n                var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\r\n                sprite._getCacheStyle().filterCache = out;\r\n                //使用RT\r\n                webglctx.pushRT();\r\n                webglctx.useRT(source);\r\n                var tX: number = sprite.x - tSX + tHalfPadding;\r\n                var tY: number = sprite.y - tSY + tHalfPadding;\r\n                //执行节点的渲染\r\n                next._fun.call(next, sprite, context, tX, tY);\r\n                webglctx.useRT(outRT);\r\n                for (var i: number = 0; i < len; i++) {\r\n                    if (i != 0) {\r\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\r\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\r\n                        webglctx.useRT(source);\r\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\r\n                        webglctx.useRT(outRT);\r\n                    }\r\n                    var fil: Filter = filters[i];\r\n                    //把src往out上画\r\n                    switch (fil.type) {\r\n                        case Filter.BLUR:\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\r\n                            break;\r\n                        case Filter.GLOW:\r\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            break;\r\n                        case Filter.COLOR:\r\n                            webglctx.setColorFilter((<ColorFilter>fil));\r\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(RenderSpriteData.Texture2D));\r\n                            webglctx.setColorFilter(null);\r\n                            break;\r\n                    }\r\n                }\r\n                webglctx.popRT();\r\n            } else {\r\n\r\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = sprite.getBounds();\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //edit\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                b.x -= sprite.pivotX + 4; //blur \r\n                b.y -= sprite.pivotY + 4;//blur \r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                //scope.addValue(\"out\", out);\r\n            }\r\n            x = x - tHalfPadding - sprite.x;\r\n            y = y - tHalfPadding - sprite.y;\r\n            p.setTo(x, y);\r\n            mat.transformPoint(p);\r\n            x = p.x + b.x;\r\n            y = p.y + b.y;\r\n            //把最后的out纹理画出来\r\n            webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\r\n\r\n            //把对象放回池子中\r\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\r\n            if (source) {\r\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\r\n                    s.destroy();\r\n                }, this);\r\n                source = null;\r\n                context.addRenderObject(submit);\r\n            }\r\n            mat.destroy();\r\n        }\r\n    }\r\n}\r\n\r\n","import { Utils } from \"./Utils\"\r\n\r\nconst _COLOR_MAP: Record<string, string> = { \"purple\": \"#800080\", \"orange\": \"#ffa500\", \"white\": '#FFFFFF', \"red\": '#FF0000', \"green\": '#00FF00', \"blue\": '#0000FF', \"black\": '#000000', \"yellow\": '#FFFF00', 'gray': '#808080' };\r\n\r\n/**\r\n * @private\r\n * <code>ColorUtils</code> 是一个颜色值处理类。\r\n */\r\nexport class ColorUtils {\r\n    /**@private */\r\n    static _SAVE: any = {};\r\n    /**@private */\r\n    static _SAVE_SIZE: number = 0;\r\n    /**@private */\r\n\r\n    /**@private */\r\n    private static _DEFAULT: any = ColorUtils._initDefault();\r\n\r\n    /**rgba 取值范围0-1*/\r\n    //TODO:delete？\r\n    arrColor: any[] = [];\r\n    /** 字符串型颜色值。*/\r\n    strColor: string;\r\n    /** uint 型颜色值。*/\r\n    numColor: number;\r\n    /**@internal TODO:*/\r\n    _drawStyle: any;\r\n\r\n    /**\r\n     * 根据指定的属性值，创建一个 <code>Color</code> 类的实例。\r\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\r\n     */\r\n    constructor(value: any) {\r\n        if (value == null || value == 'none') {\r\n            this.strColor = \"#00000000\";\r\n            this.numColor = 0;\r\n            this.arrColor = [0, 0, 0, 0];\r\n            return;\r\n        }\r\n\r\n        let color: number;\r\n        if (typeof (value) == 'string') {\r\n            color = Utils.fromStringColor(value);\r\n            this.strColor = value;\r\n        } else {\r\n            color = value;\r\n            this.strColor = Utils.toHexColor(color);\r\n        }\r\n\r\n        if (this.strColor.indexOf(\"rgba\") >= 0 || this.strColor.length === 9) {\r\n            //color:0xrrggbbaa numColor此时为负数\r\n            this.arrColor = [((0xFF000000 & color) >>> 24) / 255, ((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255];\r\n            this.numColor = (0xff000000 & color) >>> 24 | (color & 0xff0000) >> 8 | (color & 0x00ff00) << 8 | ((color & 0xff) << 24);//to 0xffbbggrr\r\n        } else {\r\n            this.arrColor = [((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255, 1];\r\n            this.numColor = 0xff000000 | (color & 0xff0000) >> 16 | (color & 0x00ff00) | (color & 0xff) << 16;//to 0xffbbggrr\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static _initDefault(): any {\r\n        ColorUtils._DEFAULT = {};\r\n        for (var i in _COLOR_MAP) ColorUtils._SAVE[i] = ColorUtils._DEFAULT[i] = new ColorUtils(_COLOR_MAP[i]);\r\n        return ColorUtils._DEFAULT;\r\n    }\r\n\r\n    /**@private 缓存太大，则清理缓存*/\r\n    static _initSaveMap(): void {\r\n        ColorUtils._SAVE_SIZE = 0;\r\n        ColorUtils._SAVE = Object.assign({}, ColorUtils._DEFAULT);\r\n    }\r\n\r\n    /**\r\n     * 根据指定的属性值，创建并返回一个 <code>Color</code> 类的实例。\r\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\r\n     * @return 一个 <code>Color</code> 类的实例。\r\n     */\r\n    static create(value: any): ColorUtils {\r\n        let key: string = value + \"\";\r\n        let color: ColorUtils = ColorUtils._SAVE[key];\r\n        if (color != null) return color;\r\n        if (ColorUtils._SAVE_SIZE > 500) ColorUtils._initSaveMap();\r\n        ColorUtils._SAVE_SIZE++;\r\n        return ColorUtils._SAVE[key] = new ColorUtils(value);\r\n    }\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { IFilter } from \"./IFilter\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\n\r\n/**对比度列表*/\r\nconst DELTA_INDEX: any[] = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0];\r\n/**灰色矩阵*/\r\nconst GRAY_MATRIX: any[] = [0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0];\r\n/**单位矩阵,表示什么效果都没有*/\r\nconst IDENTITY_MATRIX: any[] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\r\n/**标准矩阵长度*/\r\nconst LENGTH: number = 25;\r\n\r\n/**\r\n * <p><code>ColorFilter</code> 是颜色滤镜。使用 ColorFilter 类可以将 4 x 5 矩阵转换应用于输入图像上的每个像素的 RGBA 颜色和 Alpha 值，以生成具有一组新的 RGBA 颜色和 Alpha 值的结果。该类允许饱和度更改、色相旋转、亮度转 Alpha 以及各种其他效果。您可以将滤镜应用于任何显示对象（即，从 Sprite 类继承的对象）。</p>\r\n * <p>注意：对于 RGBA 值，最高有效字节代表红色通道值，其后的有效字节分别代表绿色、蓝色和 Alpha 通道值。</p>\r\n */\r\nexport class ColorFilter extends Filter implements IFilter {\r\n\r\n    /** @internal */\r\n    _mat: Float32Array;\r\n    /** @internal */\r\n    _alpha: Float32Array;\r\n    /**当前使用的矩阵*/\r\n    _matrix: any[];\r\n\r\n    /**\r\n     * 创建一个 <code>ColorFilter</code> 实例。\r\n     * @param mat\t（可选）由 20 个项目（排列成 4 x 5 矩阵）组成的数组，用于颜色转换。\r\n     */\r\n    constructor(mat: any[] = null) {\r\n        super();\r\n        if (!mat) mat = this._copyMatrix(IDENTITY_MATRIX);\r\n        this._mat = new Float32Array(16);\r\n        this._alpha = new Float32Array(4);\r\n        this.setByMatrix(mat);\r\n    }\r\n\r\n    /**\r\n     * 设置为灰色滤镜\r\n     */\r\n    gray(): ColorFilter {\r\n        return this.setByMatrix(GRAY_MATRIX);\r\n    }\r\n\r\n    /**\r\n     * 设置为变色滤镜\r\n     * @param red 红色系数,范围:0~1\r\n     * @param green 绿色系数,范围:0~1\r\n     * @param blue 蓝色系数,范围:0~1\r\n     * @param alpha alpha系数,范围:0~1\r\n     */\r\n    color(red: number = 0, green: number = 0, blue: number = 0, alpha: number = 1): ColorFilter {\r\n        return this.setByMatrix([red, 0, 0, 0, 1, 0, green, 0, 0, 1, 0, 0, blue, 0, 1, 0, 0, 0, alpha, 0]);\r\n    }\r\n\r\n    /**\r\n     * 设置滤镜色\r\n     * @param\tcolor 颜色值\r\n     */\r\n    setColor(color: string): ColorFilter {\r\n        var arr: any[] = ColorUtils.create(color).arrColor;\r\n        var mt: any[] = [0, 0, 0, 0, 256 * arr[0], 0, 0, 0, 0, 256 * arr[1], 0, 0, 0, 0, 256 * arr[2], 0, 0, 0, 1, 0];\r\n        return this.setByMatrix(mt);\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵数据\r\n     * @param matrix 由 20 个项目（排列成 4 x 5 矩阵）组成的数组\r\n     * @return this\r\n     */\r\n    setByMatrix(matrix: any[]): ColorFilter {\r\n        if (this._matrix != matrix) this._copyMatrix(matrix);\r\n        var j: number = 0;\r\n        var z: number = 0;\r\n        for (var i: number = 0; i < 20; i++) {\r\n            if (i % 5 != 4) {\r\n                this._mat[j++] = matrix[i];\r\n            } else {\r\n                this._alpha[z++] = matrix[i];\r\n            }\r\n        }\r\n        this.onChange();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    get type(): number {\r\n        return Filter.COLOR;\r\n    }\r\n\r\n    /**@internal */\r\n    get typeDefine(): ShaderDefine {\r\n        return ShaderDefines2D.FILTERCOLOR;\r\n    }\r\n\r\n    /**\r\n     * 调整颜色，包括亮度，对比度，饱和度和色调\r\n     * @param brightness 亮度,范围:-100~100\r\n     * @param contrast 对比度,范围:-100~100\r\n     * @param saturation 饱和度,范围:-100~100\r\n     * @param hue 色调,范围:-180~180\r\n     * @return this\r\n     */\r\n    adjustColor(brightness: number, contrast: number, saturation: number, hue: number): ColorFilter {\r\n        this.adjustHue(hue);\r\n        this.adjustContrast(contrast);\r\n        this.adjustBrightness(brightness);\r\n        this.adjustSaturation(saturation);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 调整亮度\r\n     * @param brightness 亮度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustBrightness(brightness: number): ColorFilter {\r\n        brightness = this._clampValue(brightness, 100);\r\n        if (brightness == 0 || isNaN(brightness)) return this;\r\n        return this._multiplyMatrix([1, 0, 0, 0, brightness, 0, 1, 0, 0, brightness, 0, 0, 1, 0, brightness, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整对比度\r\n     * @param contrast 对比度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustContrast(contrast: number): ColorFilter {\r\n        contrast = this._clampValue(contrast, 100);\r\n        if (contrast == 0 || isNaN(contrast)) return this;\r\n        var x: number;\r\n        if (contrast < 0) {\r\n            x = 127 + contrast / 100 * 127\r\n        } else {\r\n            x = contrast % 1;\r\n            if (x == 0) {\r\n                x = DELTA_INDEX[contrast];\r\n            } else {\r\n                x = DELTA_INDEX[(contrast << 0)] * (1 - x) + DELTA_INDEX[(contrast << 0) + 1] * x;\r\n            }\r\n            x = x * 127 + 127;\r\n        }\r\n        var x1: number = x / 127;\r\n        var x2: number = (127 - x) * 0.5;\r\n        return this._multiplyMatrix([x1, 0, 0, 0, x2, 0, x1, 0, 0, x2, 0, 0, x1, 0, x2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整饱和度\r\n     * @param saturation 饱和度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustSaturation(saturation: number): ColorFilter {\r\n        saturation = this._clampValue(saturation, 100);\r\n        if (saturation == 0 || isNaN(saturation)) return this;\r\n        var x: number = 1 + ((saturation > 0) ? 3 * saturation / 100 : saturation / 100);\r\n        var dx: number = 1 - x;\r\n        var r: number = 0.3086 * dx;\r\n        var g: number = 0.6094 * dx;\r\n        var b: number = 0.0820 * dx;\r\n\r\n        return this._multiplyMatrix([r + x, g, b, 0, 0, r, g + x, b, 0, 0, r, g, b + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整色调\r\n     * @param hue 色调,范围:-180~180\r\n     * @return this\r\n     */\r\n    adjustHue(hue: number): ColorFilter {\r\n        hue = this._clampValue(hue, 180) / 180 * Math.PI;\r\n        if (hue == 0 || isNaN(hue)) return this;\r\n        var cos: number = Math.cos(hue);\r\n        var sin: number = Math.sin(hue);\r\n        var r: number = 0.213;\r\n        var g: number = 0.715;\r\n        var b: number = 0.072;\r\n        return this._multiplyMatrix([r + cos * (1 - r) + sin * (-r), g + cos * (-g) + sin * (-g), b + cos * (-b) + sin * (1 - b), 0, 0, r + cos * (-r) + sin * (0.143), g + cos * (1 - g) + sin * (0.140), b + cos * (-b) + sin * (-0.283), 0, 0, r + cos * (-r) + sin * (-(1 - r)), g + cos * (-g) + sin * (g), b + cos * (1 - b) + sin * (b), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 重置成单位矩阵，去除滤镜效果\r\n     */\r\n    reset(): ColorFilter {\r\n        return this.setByMatrix(this._copyMatrix(IDENTITY_MATRIX));\r\n    }\r\n\r\n    /**\r\n     * 矩阵乘法\r\n     * @param matrix\r\n     * @return this\r\n     */\r\n    private _multiplyMatrix(matrix: any[]): ColorFilter {\r\n        var col: any[] = [];\r\n        this._matrix = this._fixMatrix(this._matrix);\r\n        for (var i: number = 0; i < 5; i++) {\r\n            for (var j: number = 0; j < 5; j++) {\r\n                col[j] = this._matrix[j + i * 5];\r\n            }\r\n            for (j = 0; j < 5; j++) {\r\n                var val: number = 0;\r\n                for (var k: number = 0; k < 5; k++) {\r\n                    val += matrix[j + k * 5] * col[k];\r\n                }\r\n                this._matrix[j + i * 5] = val;\r\n            }\r\n        }\r\n        return this.setByMatrix(this._matrix);\r\n    }\r\n\r\n    /**\r\n     * 规范值的范围\r\n     * @param val 当前值\r\n     * @param limit 值的范围-limit~limit\r\n     */\r\n    private _clampValue(val: number, limit: number): number {\r\n        return Math.min(limit, Math.max(-limit, val));\r\n    }\r\n\r\n    /**\r\n     * 规范矩阵,将矩阵调整到正确的大小\r\n     * @param matrix 需要调整的矩阵\r\n     */\r\n    private _fixMatrix(matrix: any[] = null): any[] {\r\n        if (matrix == null) return IDENTITY_MATRIX;\r\n        if (matrix.length < LENGTH) matrix = matrix.slice(0, matrix.length).concat(IDENTITY_MATRIX.slice(matrix.length, LENGTH));\r\n        else if (matrix.length > LENGTH) matrix = matrix.slice(0, LENGTH);\r\n        return matrix;\r\n    }\r\n\r\n    /**\r\n     * 复制矩阵\r\n     */\r\n    private _copyMatrix(matrix: any[]): any[] {\r\n        var len: number = LENGTH;\r\n        if (!this._matrix) this._matrix = [];\r\n        for (var i: number = 0; i < len; i++) {\r\n            this._matrix[i] = matrix[i];\r\n        }\r\n        return this._matrix;\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        let arr: any[] = ColorUtils.create((<any>this)._color || \"#FFFFFF\").arrColor;\r\n        this.color(arr[0], arr[1], arr[2], arr[3]);\r\n        this.adjustColor((<any>this)._brightness || 0, (<any>this)._contrast || 0, (<any>this)._saturation || 0, (<any>this)._hue || 0);\r\n    }\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\nimport { Utils } from \"../utils/Utils\"\r\n\r\n/**\r\n * @private\r\n * 凸包算法。\r\n */\r\nexport class GrahamScan {\r\n\r\n    private static _mPointList: any[];\r\n    private static _tempPointList: any[] = [];\r\n    private static _temPList: any[] = [];\r\n    private static _temArr: any[] = [];\r\n\r\n    static multiply(p1: Point, p2: Point, p0: Point): number {\r\n        return ((p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y));\r\n    }\r\n\r\n    /**\r\n     * 计算两个点的距离。\r\n     * @param\tp1\r\n     * @param\tp2\r\n     * @return\r\n     */\r\n    static dis(p1: Point, p2: Point): number {\r\n        return (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y);\r\n    }\r\n\r\n    private static _getPoints(count: number, tempUse: boolean = false, rst: any[]|null = null): any[] {\r\n        if (!GrahamScan._mPointList) GrahamScan._mPointList = [];\r\n        while (GrahamScan._mPointList.length < count) GrahamScan._mPointList.push(new Point());\r\n        if (!rst) rst = [];\r\n        rst.length = 0;\r\n        if (tempUse) {\r\n            //\t\t\t\trst=_mPointList.slice(0,count);\r\n            GrahamScan.getFrom(rst, GrahamScan._mPointList, count);\r\n        } else {\r\n            //\t\t\t\trst=_mPointList.splice(0,count);\r\n            GrahamScan.getFromR(rst, GrahamScan._mPointList, count);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 将数组 src 从索引0位置 依次取 cout 个项添加至 tst 数组的尾部。\r\n     * @param\trst 原始数组，用于添加新的子元素。\r\n     * @param\tsrc 用于取子元素的数组。\r\n     * @param\tcount 需要取得子元素个数。\r\n     * @return 添加完子元素的 rst 对象。\r\n     */\r\n    static getFrom(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src[i]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 将数组 src 从末尾索引位置往头部索引位置方向 依次取 cout 个项添加至 tst 数组的尾部。\r\n     * @param\trst 原始数组，用于添加新的子元素。\r\n     * @param\tsrc 用于取子元素的数组。\r\n     * @param\tcount 需要取得子元素个数。\r\n     * @return 添加完子元素的 rst 对象。\r\n     */\r\n    static getFromR(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src.pop());\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     *  [x,y...]列表 转 Point列表\r\n     * @param pList Point列表\r\n     * @return [x,y...]列表\r\n     */\r\n    static pListToPointList(pList: any[], tempUse: boolean = false): any[] {\r\n        var i: number, len: number = pList.length / 2, rst: any[] = GrahamScan._getPoints(len, tempUse, GrahamScan._tempPointList);\r\n        for (i = 0; i < len; i++) {\r\n            rst[i].setTo(pList[i + i], pList[i + i + 1]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * Point列表转[x,y...]列表\r\n     * @param pointList Point列表\r\n     * @return [x,y...]列表\r\n     */\r\n    static pointListToPlist(pointList: any[]): any[] {\r\n        var i: number, len: number = pointList.length, rst: any[] = GrahamScan._temPList, tPoint: Point;\r\n        rst.length = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tPoint = pointList[i];\r\n            rst.push(tPoint.x, tPoint.y);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     *  寻找包括所有点的最小多边形顶点集合\r\n     * @param pList 形如[x0,y0,x1,y1...]的点列表\r\n     * @return  最小多边形顶点集合\r\n     */\r\n    static scanPList(pList: any[]): any[] {\r\n        return Utils.copyArray(pList, GrahamScan.pointListToPlist(GrahamScan.scan(GrahamScan.pListToPointList(pList, true))));\r\n    }\r\n\r\n    /**\r\n     * 寻找包括所有点的最小多边形顶点集合\r\n     * @param PointSet Point列表\r\n     * @return 最小多边形顶点集合\r\n     */\r\n    static scan(PointSet: any[]): any[] {\r\n        var i: number, j: number, k: number = 0, top: number = 2, tmp: Point, n: number = PointSet.length, ch: any[];\r\n        var _tmpDic: any = {};\r\n        var key: string;\r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        n = PointSet.length;\r\n        for (i = n - 1; i >= 0; i--) {\r\n            tmp = PointSet[i];\r\n            key = tmp.x + \"_\" + tmp.y;\r\n            if (!(key in _tmpDic)) {\r\n                _tmpDic[key] = true;\r\n                ch.push(tmp);\r\n            }\r\n        }\r\n        n = ch.length;\r\n        Utils.copyArray(PointSet, ch);\r\n        //\t\t\tPointSet=ch;\r\n        //\t\t\tn=PointSet.length;\r\n        //找到最下且偏左的那个点  \r\n        for (i = 1; i < n; i++)\r\n            if ((PointSet[i].y < PointSet[k].y) || ((PointSet[i].y == PointSet[k].y) && (PointSet[i].x < PointSet[k].x)))\r\n                k = i;\r\n        //将这个点指定为PointSet[0]  \r\n        tmp = PointSet[0];\r\n        PointSet[0] = PointSet[k];\r\n        PointSet[k] = tmp;\r\n        //按极角从小到大,距离偏短进行排序  \r\n        for (i = 1; i < n - 1; i++) {\r\n            k = i;\r\n            for (j = i + 1; j < n; j++)\r\n                if ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) > 0) || ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) == 0) && (GrahamScan.dis(PointSet[0], PointSet[j]) < GrahamScan.dis(PointSet[0], PointSet[k]))))\r\n                    k = j;//k保存极角最小的那个点,或者相同距离原点最近  \r\n            tmp = PointSet[i];\r\n            PointSet[i] = PointSet[k];\r\n            PointSet[k] = tmp;\r\n        }\r\n        //第三个点先入栈  \r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        //trace(\"scan:\",PointSet[0],PointSet[1],PointSet[2]);\r\n        if (PointSet.length < 3) {\r\n            return Utils.copyArray(ch, PointSet);\r\n        }\r\n        ch.push(PointSet[0], PointSet[1], PointSet[2]);\r\n        //ch=[PointSet[0],PointSet[1],PointSet[2]];\r\n        //判断与其余所有点的关系  \r\n        for (i = 3; i < n; i++) {\r\n            //不满足向左转的关系,栈顶元素出栈  \r\n            while (ch.length >= 2 && GrahamScan.multiply(PointSet[i], ch[ch.length - 1], ch[ch.length - 2]) >= 0) ch.pop();\r\n            //当前点与栈内所有点满足向左关系,因此入栈.  \r\n            PointSet[i] && ch.push(PointSet[i]);\r\n        }\r\n        return ch;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class SpriteConst {\r\n    /** @private */\r\n    static ALPHA: number = 0x01;\r\n    /** @private */\r\n    static TRANSFORM: number = 0x02;\r\n    /** @private */\r\n    static BLEND: number = 0x04;\r\n    /** @private */\r\n    static CANVAS: number = 0x08;\r\n    /** @private */\r\n    static FILTERS: number = 0x10;\r\n    /** @private */\r\n    static MASK: number = 0x20;\r\n    /** @private */\r\n    static CLIP: number = 0x40;\r\n    /** @private */\r\n    static STYLE: number = 0x80;\r\n    /** @private */\r\n    static TEXTURE: number = 0x100;\r\n    /** @private */\r\n    static GRAPHICS: number = 0x200;\r\n    /** @private */\r\n    static LAYAGL3D: number = 0x400;\r\n    /** @private */\r\n    static CUSTOM: number = 0x800;\r\n    /** @private */\r\n    static ONECHILD: number = 0x1000;\r\n    /** @private */\r\n    static HITAREA: number = 0x2000;\r\n    /** @private */\r\n    static CHILDS: number = 0x4000;\r\n\r\n    /** @private */\r\n    static REPAINT_NONE: number = 0;\r\n    /** @private */\r\n    static REPAINT_NODE: number = 0x01;\r\n    /** @private */\r\n    static REPAINT_CACHE: number = 0x02;\r\n    /** @private */\r\n    static REPAINT_ALL: number = 0x03;\r\n}\r\n\r\n\r\n","/**\r\n * 渲染统计数据\r\n */\r\nexport enum RenderStatisticsInfo{\r\n    DrawCall,\r\n    InstanceDrawCall,\r\n    Triangle,\r\n    UniformUpload,//TODO\r\n    GPUMemory,\r\n    TextureMemeory,\r\n    RenderTextureMemory,\r\n    BufferMemory,\r\n}","export enum BufferTargetType{\r\n    ARRAY_BUFFER,//顶点\r\n    ELEMENT_ARRAY_BUFFER,//索引\r\n    //WebGL2.0 UniformBuffer\r\n    UNIFORM_BUFFER,//UBO\r\n    COPY_READ_BUFFER,//TODO\r\n    COPY_WRITE_BUFFER,//TODO\r\n    TRANSFORM_FEEDBACK_BUFFER,//TODO\r\n    PIXEL_PACK_BUFFER,//TODO\r\n    PIXEL_UNPACK_BUFFER,//TODO\r\n}\r\n\r\n\r\n/**\r\n * Buffer usage.\r\n */\r\n export enum BufferUsage {\r\n    /** The buffer content are intended to be specified once, and used many times */\r\n    Static,\r\n    /** The buffer contents are intended to be respecified repeatedly, and used many times */\r\n    Dynamic,\r\n    /** The buffer contents are intended to be specified once, and used at most a few times */\r\n    Stream\r\n  }","export enum IndexFormat {\r\n    /** 8 位无符号整型索引格式。*/\r\n    UInt8,\r\n    /** 16 位无符号整型索引格式。*/\r\n    UInt16,\r\n    /** 32 位无符号整型索引格式。*/\r\n    UInt32\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { RenderStatisticsInfo } from \"../RenderEngine/RenderEnum/RenderStatInfo\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Browser } from \"./Browser\";\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IStatUI, StatToggleUIParams, StatUIParams } from \"./IStatUI\";\r\n\r\n/**\r\n * <p> <code>Stat</code> 是一个性能统计面板，可以实时更新相关的性能参数。</p>\r\n * <p>参与统计的性能参数如下（所有参数都是每大约1秒进行更新）：<br/>\r\n * FPS(WebGL)：WebGL 模式下的帧频，也就是每秒显示的帧数，值越高、越稳定，感觉越流畅；<br/>\r\n * Sprite：统计所有渲染节点（包括容器）数量，它的大小会影响引擎进行节点遍历、数据组织和渲染的效率。其值越小，游戏运行效率越高；<br/>\r\n * DrawCall：此值是决定性能的重要指标，其值越小，游戏运行效率越高。Canvas模式下表示每大约1秒的图像绘制次数；WebGL模式下表示每大约1秒的渲染提交批次，每次准备数据并通知GPU渲染绘制的过程称为1次DrawCall，在每次DrawCall中除了在通知GPU的渲染上比较耗时之外，切换材质与shader也是非常耗时的操作；<br/>\r\n * CurMem：Canvas模式下，表示内存占用大小，值越小越好，过高会导致游戏闪退；WebGL模式下，表示内存与显存的占用，值越小越好；<br/>\r\n * Shader：是 WebGL 模式独有的性能指标，表示每大约1秒 Shader 提交次数，值越小越好；<br/>\r\n * Canvas：由三个数值组成，只有设置 CacheAs 后才会有值，默认为0/0/0。从左到右数值的意义分别为：每帧重绘的画布数量 / 缓存类型为\"normal\"类型的画布数量 / 缓存类型为\"bitmap\"类型的画布数量。</p>\r\n */\r\nexport class Stat {\r\n    //FPS\r\n    public static FPSStatUIParams: StatUIParams = { title: \"FPS\", value: \"_fpsStr\", color: \"yellow\", units: \"int\", mode: \"summit\" };\r\n    //Node nums\r\n    public static NodeStatUIParams: StatUIParams = { title: \"Node\", value: \"spriteCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //Sprite3D nums\r\n    public static Sprite3DStatUIParams: StatUIParams = { title: \"Sprite3D\", value: \"sprite3DCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //DrawCall\r\n    public static DrawCall: StatUIParams = { title: \"DrawCall\", value: \"drawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //triangleFace\r\n    public static TriangleFace: StatUIParams = { title: \"TriangleFace\", value: \"trianglesFaces\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //RenderNoe 渲染节点数量\r\n    public static RenderNode: StatUIParams = { title: \"RenderNode\", value: \"renderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //SkinRenderNode\r\n    public static SkinRenderNode: StatUIParams = { title: \"SkinRenderNode\", value: \"skinRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //ParticleRenderNode\r\n    public static ParticleRenderNode: StatUIParams = { title: \"ParticleRenderNode\", value: \"particleRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //FrustumCulling\r\n    public static FrustumCulling: StatUIParams = { title: \"FrustumCulling\", value: \"frustumCulling\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //uniformUpload\r\n    public static UniformUpload: StatUIParams = { title: \"UniformUpload\", value: \"uniformUpload\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //OpaqueDrawCall\r\n    public static OpaqueDrawCall: StatUIParams = { title: \"OpaqueDrawCall\", value: \"opaqueDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //TransformDrawCall\r\n    public static TransDrawCall: StatUIParams = { title: \"TransDrawCall\", value: \"transDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //DepthCastDrawCall\r\n    public static DepthCastDrawCall: StatUIParams = { title: \"DepthCastDrawCall\", value: \"depthCastDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //InstanceDrawCall\r\n    public static InstanceDrawCall: StatUIParams = { title: \"InstanceDrawCall\", value: \"instanceDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //CMDDrawCall\r\n    public static CMDDrawCall: StatUIParams = { title: \"CMDDrawCall\", value: \"cmdDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //BlitDrawCall\r\n    public static BlitDrawCall: StatUIParams = { title: \"BlitDrawCall\", value: \"blitDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //GPU 显存:\r\n    public static GPUMemory: StatUIParams = { title: \"GPUMemory\", value: \"gpuMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //Texture2D memory\r\n    public static TextureMemeory: StatUIParams = { title: \"TextureMemory\", value: \"textureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //RenderTexture memory\r\n    public static RenderTextureMemory: StatUIParams = { title: \"RenderTextureMemory\", value: \"renderTextureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //BufferMemory\r\n    public static BufferMemory: StatUIParams = { title: \"BufferMemory\", value: \"bufferMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //upload Uniform\r\n    public static uploadUniformNum: StatUIParams = { title: \"UploadUniformNum\", value: \"uploadUniform\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //所有显示\r\n    public static AllShow: Array<StatUIParams> = [Stat.FPSStatUIParams, Stat.NodeStatUIParams, Stat.Sprite3DStatUIParams, Stat.DrawCall, Stat.TriangleFace, Stat.RenderNode, Stat.SkinRenderNode, Stat.ParticleRenderNode\r\n        , Stat.FrustumCulling, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall, Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory, Stat.uploadUniformNum];\r\n    //memory显示\r\n    public static memoryShow: Array<StatUIParams> = [Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory];\r\n    //渲染显示\r\n    public static renderShow: Array<StatUIParams> = [Stat.DrawCall, Stat.TriangleFace, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall];\r\n\r\n    /**@internal 开启关闭阴影 */\r\n    public static toogle_Shadow: StatToggleUIParams = { title: \"Shadow\", value: \"enableShadow\", color: \"white\" };\r\n    /**@internal 开启关闭多光源 */\r\n    public static toogle_MulLight: StatToggleUIParams = { title: \"MulLight\", value: \"enableMulLight\", color: \"white\" };\r\n    /**@internal 开启关闭光源 */\r\n    public static toogle_Light: StatToggleUIParams = { title: \"Light\", value: \"enableLight\", color: \"white\" };\r\n    /**@internal 开启关闭后期处理 */\r\n    public static toogle_Postprocess: StatToggleUIParams = { title: \"Postprocess\", value: \"enablePostprocess\", color: \"white\" };\r\n    /**@internal 开启关闭动画更新 */\r\n    public static toogle_AnimatorUpdate: StatToggleUIParams = { title: \"AnimatorUpdate\", value: \"enableAnimatorUpdate\", color: \"white\" };\r\n    /**@internal 开启关闭物理更新*/\r\n    public static toogle_PhysicsUpdate: StatToggleUIParams = { title: \"PhysicsUpdate\", value: \"enablePhysicsUpdate\", color: \"white\" };\r\n    /**@internal 开启关闭skin渲染 */\r\n    public static toogle_Skin: StatToggleUIParams = { title: \"Skin\", value: \"enableSkin\", color: \"white\" };\r\n    /**@internal 开启关闭透明渲染 */\r\n    public static toogle_Transparent: StatToggleUIParams = { title: \"Transparent\", value: \"enableTransparent\", color: \"white\" };\r\n    /**@internal 开启关闭粒子 */\r\n    public static toogle_Particle: StatToggleUIParams = { title: \"Particle\", value: \"enableParticle\", color: \"white\" };\r\n    /**@internal 开启关闭msaa */\r\n    public static toogle_msaa: StatToggleUIParams = { title: \"MSAA\", value: \"enablemsaa\", color: \"white\" };\r\n    /**@internal 开启关闭CMD */\r\n    public static toogle_CameraCMD: StatToggleUIParams = { title: \"CameraCMD\", value: \"enableCameraCMD\", color: \"white\" };\r\n    /**@internal 开启关闭非透明物体渲染 */\r\n    public static toogle_Opaque: StatToggleUIParams = { title: \"Opaque\", value: \"enableOpaque\", color: \"white\" };\r\n\r\n    //所有开关\r\n    public static AllToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate, Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n    //渲染开关\r\n    public static RenderModeToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate];\r\n    //功能开关\r\n    public static RenderFuncToggle: Array<StatToggleUIParams> = [Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n\r\n    /** 每秒帧数。*/\r\n    public static FPS: number = 0;\r\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\r\n    public static loopCount: number = 0;\r\n    /** 精灵渲染使用缓存<code>Sprite</code> 的数量。*/\r\n    public static spriteRenderUseCacheCount: number = 0;\r\n\r\n    /** 画布 canvas 使用标准渲染的次数。*/\r\n    static canvasNormal: number = 0;\r\n    /** 画布 canvas 使用位图渲染的次数。*/\r\n    static canvasBitmap: number = 0;\r\n    /** 画布 canvas 缓冲区重绘次数。*/\r\n    static canvasReCache: number = 0;\r\n    /** 表示当前使用的是否为慢渲染模式。*/\r\n    static renderSlow: boolean = false;\r\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\r\n    //static gpuMemory: number;\r\n    static cpuMemory: number;\r\n\r\n    /**@internal */\r\n    public static _timer: number = 0;\r\n    /**@internal */\r\n    public static _count: number = 0;\r\n\r\n    /**@internal */\r\n    public static _fpsStr: string = \"\";\r\n    /**@internal */\r\n    public static spriteCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static sprite3DCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static drawCall: number = 0;\r\n    /**@internal */\r\n    public static trianglesFaces: number = 0;\r\n    /**@internal */\r\n    public static renderNode: number = 0;\r\n    /**@internal */\r\n    public static skinRenderNode: number = 0;\r\n    /**@internal */\r\n    public static particleRenderNode: number = 0;\r\n    /**@internal 视锥剔除次数。*/\r\n    public static frustumCulling: number = 0;\r\n    /**@internal */\r\n    public static uniformUpload: number = 0;\r\n    /**@internal */\r\n    public static opaqueDrawCall: number = 0;\r\n    /**@internal */\r\n    public static transDrawCall: number = 0;\r\n    /**@internal */\r\n    public static depthCastDrawCall: number = 0;\r\n    /**@internal */\r\n    public static instanceDrawCall: number = 0;\r\n    /**@internal */\r\n    public static cmdDrawCall: number = 0;\r\n\r\n    public static blitDrawCall: number = 0;\r\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\r\n    public static gpuMemory: number;\r\n    /**@internal */\r\n    public static textureMemory: number = 0;\r\n    /**@internal */\r\n    public static renderTextureMemory: number = 0;\r\n    /**@interanl */\r\n    public static bufferMemory: number = 0;\r\n    /**@internal */\r\n    public static uploadUniform: number = 0;\r\n\r\n    //Toggle\r\n    /**@internal 开启关闭阴影 */\r\n    public static enableShadow: boolean = true;\r\n    /**@internal 开启关闭多光源 */\r\n    public static enableMulLight: boolean = true;\r\n    /**@internal 开启关闭光源 */\r\n    public static enableLight: boolean = true;\r\n    /**@internal 开启关闭CMD */\r\n    public static enableCameraCMD: boolean = true;\r\n    /**@internal 开启关闭后期处理 */\r\n    public static enablePostprocess: boolean = true;\r\n    /**@internal 开启关闭skin渲染 */\r\n    public static enableSkin: boolean = true;\r\n    /**@internal 开启关闭透明渲染 */\r\n    public static enableTransparent: boolean = true;\r\n    /**@internal 开启关闭粒子 */\r\n    public static enableParticle: boolean = true;\r\n    /**@internal 开启关闭动画更新 */\r\n    public static enableAnimatorUpdate: boolean = true;\r\n    /**@internal 开启关闭物理更新*/\r\n    public static enablePhysicsUpdate: boolean = true;\r\n    /**@internal 开启关闭msaa */\r\n    public static enablemsaa: boolean = true;\r\n    /**@internal 开启关闭非透明物体渲染 */\r\n    public static enableOpaque: boolean = true;\r\n\r\n    static _statUI: IStatUI;\r\n\r\n    /**@internal */\r\n    private static _currentShowArray: Array<StatUIParams>;\r\n    /**@internal */\r\n    private static _currentToggleArray: Array<StatToggleUIParams>;\r\n    /**@internal */\r\n    private static _show: boolean;\r\n\r\n    /**\r\n     * 显示性能统计信息。\r\n     * @param\tx X轴显示位置。\r\n     * @param\ty Y轴显示位置。\r\n     */\r\n    static show(x?: number, y?: number, views?: Array<StatUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        Stat._currentShowArray = views||Stat.AllShow;\r\n        Stat._statUI.show(x, y, Stat._currentShowArray);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n    }\r\n\r\n    static showToggle(x?: number, y?: number, views?: Array<StatToggleUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        Stat._currentToggleArray = views;\r\n        Stat._statUI.showToggle(x, y, views);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n    }\r\n\r\n    private static checkUI() {\r\n        if (!Stat._statUI) {\r\n            let cls = ClassUtils.getClass(\"StatUI\");\r\n            if (!cls) {\r\n                console.error(\"StatUI not found\");\r\n                return false;\r\n            }\r\n            Stat._statUI = new cls();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 隐藏性能统计信息。\r\n     */\r\n    static hide(): void {\r\n        if (!Stat._show)\r\n            return;\r\n\r\n        Stat._show = false;\r\n        Stat._currentShowArray = null;\r\n        Stat._currentToggleArray = null;\r\n        ILaya.systemTimer.clear(null, Stat.loop);\r\n        if (Stat._statUI)\r\n            Stat._statUI.hide();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 性能统计参数计算循环处理函数。\r\n     */\r\n    static loop(): void {\r\n        Stat._count++;\r\n        let timer: number = Browser.now();\r\n        if (timer - Stat._timer < 1000) return;\r\n\r\n        let count: number = Stat._count;\r\n        //计算更精确的FPS值\r\n        Stat.FPS = Math.round((count * 1000) / (timer - Stat._timer));\r\n\r\n        if (Stat._show) {\r\n            Stat.updateEngineData();\r\n            let delay: string = Stat.FPS > 0 ? Math.floor(1000 / Stat.FPS).toString() : \" \";\r\n            Stat._fpsStr = Stat.FPS + (Stat.renderSlow ? \" slow\" : \"\") + \" \" + delay + \"ms\";\r\n            Stat._statUI.update();\r\n            Stat.clear();\r\n        }\r\n\r\n        Stat._count = 0;\r\n        Stat._timer = timer;\r\n    }\r\n\r\n    static updateEngineData(): void {\r\n        Stat.trianglesFaces = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.Triangle);\r\n        Stat.drawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.DrawCall);\r\n        Stat.instanceDrawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\r\n\r\n        Stat.gpuMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.GPUMemory);\r\n        Stat.textureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.TextureMemeory);\r\n        Stat.renderTextureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory);\r\n        Stat.bufferMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.BufferMemory);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清零性能统计计算相关的数据。\r\n     */\r\n    static clear(): void {\r\n        if (!Stat._currentShowArray)\r\n            return;\r\n        Stat._currentShowArray.forEach(element => {\r\n            if (element.mode == \"average\")\r\n                (Stat as any)[element.value] = 0;\r\n        });\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.Triangle);\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.DrawCall);\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\r\n    }\r\n\r\n    static render(ctx: any, x: number, y: number) {\r\n        if (Stat._show)\r\n            Stat._statUI.render(ctx, x, y);\r\n    }\r\n}\r\n\r\n(window as any).Stat = Stat;\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\n\r\nexport class SubmitBase implements ISubmit {\r\n\r\n    static TYPE_2D: number = 10000;\r\n    static TYPE_CANVAS: number = 10003;\r\n    static TYPE_CMDSETRT: number = 10004;\r\n    static TYPE_CUSTOM: number = 10005;\r\n    static TYPE_BLURRT: number = 10006;\r\n    static TYPE_CMDDESTORYPRERT: number = 10007;\r\n    static TYPE_DISABLESTENCIL: number = 10008;\r\n    static TYPE_OTHERIBVB: number = 10009;\r\n    static TYPE_PRIMITIVE: number = 10010;\r\n    static TYPE_RT: number = 10011;\r\n    static TYPE_BLUR_RT: number = 10012;\r\n    static TYPE_TARGET: number = 10013;\r\n    static TYPE_CHANGE_VALUE: number = 10014;\r\n    static TYPE_SHAPE: number = 10015;\r\n    static TYPE_TEXTURE: number = 10016;\r\n    static TYPE_FILLTEXTURE: number = 10017;\r\n\r\n    static KEY_ONCE: number = -1;\r\n    static KEY_FILLRECT: number = 1;\r\n    static KEY_DRAWTEXTURE: number = 2;\r\n    static KEY_VG: number = 3;\r\n    static KEY_TRIANGLES: number = 4;\r\n\r\n    static RENDERBASE: SubmitBase;\r\n    static ID: number = 1;\r\n    static preRender: ISubmit = null;\t//上一个submit，主要用来比较key,以减少uniform的重复提交。\r\n\r\n    clipInfoID: number = -1;\t//用来比较clipinfo\r\n    /**@internal */\r\n    _mesh: Mesh2D | null = null;\t\t\t//代替 _vb,_ib\r\n    /**@internal */\r\n    _blendFn: Function = null;\r\n    protected _id: number = 0;\r\n    /**@internal */\r\n    _renderType: number = 0;\r\n    /**@internal */\r\n    _parent: ISubmit = null;\r\n    //渲染key，通过key判断是否是同一个\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n\r\n    // 从VB中什么地方开始画，画到哪\r\n    /**@internal */\r\n    _startIdx: number = 0;\t\t//indexbuffer 的偏移，单位是byte\r\n    /**@internal */\r\n    _numEle: number = 0;\r\n    /**@internal */\r\n    _ref: number = 1;\t// 其实已经没有用了\r\n\r\n    shaderValue: Value2D = null;\r\n\r\n    static __init__(): void {\r\n        var s: SubmitBase = SubmitBase.RENDERBASE = new SubmitBase(-1);\r\n        s.shaderValue = new Value2D(RenderSpriteData.Zero);\r\n        s.shaderValue.ALPHA = 1;\r\n        s._ref = 0xFFFFFFFF;\r\n    }\r\n\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        this._renderType = renderType;\r\n        this._id = ++SubmitBase.ID;\r\n    }\r\n\r\n    getID(): number {\r\n        return this._id;\r\n    }\r\n\r\n\r\n    getRenderType(): number {\r\n        return this._renderType;\r\n    }\r\n\r\n    toString(): string {\r\n        return \"ibindex:\" + this._startIdx + \" num:\" + this._numEle + \" key=\" + this._key;\r\n    }\r\n\r\n    renderSubmit(): number { return 1; }\r\n    releaseRender(): void { }\r\n}\r\n\r\n\r\n","import { VertexBuffer } from \"./VertexBuffer\";\r\n//vertex Layout cache pool\r\nexport interface VAElement { format: string, stride: number, shaderLocation: number };\r\nexport class VertexAttributeLayout {\r\n    static IPoint: number = 0;\r\n    static _pool: { [key: number]: VertexAttributeLayout } = {};\r\n\r\n    static getVertexLayoutByPool(vertexs: VertexBuffer[]) {\r\n        let pool =VertexAttributeLayout._pool;\r\n        for(var i in pool){\r\n            let layout = pool[i];\r\n            if(layout.deepthEqaul(vertexs)){\r\n                return layout\r\n            }\r\n        }\r\n        return new VertexAttributeLayout(vertexs);\r\n    }\r\n\r\n    /**\r\n     * vertex attribute byte size Array\r\n     */\r\n    attributeByteSize:Array<number>;\r\n\r\n    /**\r\n     * vertex Layout des\r\n     */\r\n    VAElements: Array<VAElement[]>;\r\n\r\n    instanceMode:Array<boolean>;\r\n    /**\r\n     * pool index\r\n     */\r\n    id: number;\r\n\r\n    \r\n\r\n    /**\r\n     * instance one VertexAttributeLayout\r\n     * @param vertexs \r\n     */\r\n    constructor(vertexs: VertexBuffer[]) {\r\n        this.VAElements = new Array();\r\n        this.attributeByteSize = new Array();\r\n        this.instanceMode = new Array();\r\n        //this.VAElements.length = vertexs.length;\r\n        for (let i = 0; i < vertexs.length; i++) {\r\n            let vaelements: VAElement[] = [];\r\n            let oneAttributeSize = vertexs[i].vertexDeclaration.vertexStride;\r\n            let vdec = vertexs[i].vertexDeclaration._VAElements;\r\n\r\n            for (let j = 0; j < vdec.length; j++) {\r\n                vaelements.push({ format: vdec[j].format, stride: vdec[j].stride, shaderLocation: vdec[j].shaderLocation });\r\n            }\r\n            this.attributeByteSize.push(oneAttributeSize);\r\n            this.VAElements.push(vaelements);\r\n            this.instanceMode.push(vertexs[i].instanceBuffer);\r\n        }\r\n        this.id = VertexAttributeLayout.IPoint;\r\n        VertexAttributeLayout._pool[VertexAttributeLayout.IPoint++] = this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param vertexs \r\n     * @returns \r\n     */\r\n    deepthEqaul(vertexs: VertexBuffer[]): boolean {\r\n        if (vertexs.length != this.VAElements.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < vertexs.length; i++) {\r\n            let vaelemets = vertexs[i]._vertexDeclaration._VAElements;\r\n            let thisVaeEs = this.VAElements[i];\r\n            if (vaelemets.length != thisVaeEs.length) {\r\n                return false;\r\n            } else {\r\n                for (var ii = 0, nn = vaelemets.length; ii < nn; ii++) {\r\n                    let v0 = vaelemets[ii];\r\n                    let v1 = thisVaeEs[ii];\r\n                    if (v0.format != v1.format || v0.stride != v1.stride || v0.shaderLocation != v1.shaderLocation)\r\n                        return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderEngine/RenderInterface/IRenderVertexState\";\r\nimport { VertexAttributeLayout } from \"../../RenderEngine/VertexAttributeLayout\";\r\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n\r\n\r\n/**\r\n * <code>BufferState</code> 类用于实现渲染所需的Buffer状态集合。\r\n */\r\nexport class BufferState {\r\n\tstatic _curBindedBufferState: BufferState;\r\n\t/**@private [只读]*/\r\n\tprotected _nativeVertexArrayObject: IRenderVertexState;\r\n\r\n\t/**@internal [只读]*/\r\n\t_bindedIndexBuffer: IndexBuffer;\r\n\r\n\t/**@internal */\r\n\t_vertexBuffers: VertexBuffer[];\r\n\r\n\t/**@internal */\r\n\tvertexlayout: VertexAttributeLayout;\r\n\r\n\t/**\r\n\t * 创建一个 <code>BufferState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._nativeVertexArrayObject = LayaGL.renderEngine.createVertexState();\r\n\t}\r\n\r\n\tprotected applyVertexBuffers(): void {\r\n\t\tthis._nativeVertexArrayObject&&this._nativeVertexArrayObject.applyVertexBuffer(this._vertexBuffers);\r\n\t}\r\n\r\n\tprotected applyIndexBuffers(): void {\r\n\t\tthis._nativeVertexArrayObject&&this._nativeVertexArrayObject.applyIndexBuffer(this._bindedIndexBuffer);\r\n\t}\r\n\r\n\r\n\tapplyState(vertexBuffers: VertexBuffer[], indexBuffer: IndexBuffer | null) {\r\n\t\tthis.vertexlayout = VertexAttributeLayout.getVertexLayoutByPool(vertexBuffers);\r\n\t\tthis._vertexBuffers = vertexBuffers;\r\n\t\tthis._bindedIndexBuffer = indexBuffer;\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\r\n\t\tthis.bind();\r\n\t\tthis.applyVertexBuffers();\r\n\t\tthis.applyIndexBuffers();\r\n\t\tthis.unBind();\r\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\r\n\t\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tbind(): void {\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tthis._nativeVertexArrayObject.bindVertexArray();\r\n\t\tBufferState._curBindedBufferState = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tunBind(): void {\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tif (BufferState._curBindedBufferState == this) {\r\n\t\t\tthis._nativeVertexArrayObject.unbindVertexArray();\r\n\t\t\tBufferState._curBindedBufferState = null;\r\n\t\t} else {\r\n\t\t\tthrow \"BufferState: must call bind() function first.\";\r\n\t\t}\r\n\t}\r\n\r\n\tisbind(): boolean {\r\n\t\treturn (BufferState._curBindedBufferState == this);\r\n\t}\r\n\r\n\tstatic clearbindBufferState() {\r\n\t\tLayaGL.renderEngine.unbindVertexState();\r\n\t\tBufferState._curBindedBufferState = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tif(!this._nativeVertexArrayObject)\r\n\t\t\treturn;\r\n\t\tthis._nativeVertexArrayObject.destroy();\r\n\t\tthis._nativeVertexArrayObject = null;\r\n\t}\r\n}\r\n\r\n\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { IRenderBuffer } from \"./RenderInterface/IRenderBuffer\";\r\n\r\nexport class Buffer {\r\n\r\n\t_glBuffer: IRenderBuffer;\r\n\t_buffer: Float32Array|Uint16Array|Uint8Array|Uint32Array;\r\n\r\n\t_bufferType: number;\r\n\t_bufferUsage: number;\r\n\r\n\t_byteLength: number = 0; \r\n\r\n\tget bufferUsage(): number {\r\n\t\treturn this._bufferUsage;\r\n\t}\r\n\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\tthis._glBuffer = LayaGL.renderEngine.createBuffer(targetType,bufferUsageType);\r\n\t\tthis._bufferType = targetType;\r\n\t\tthis._bufferUsage = bufferUsageType;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tbind(): boolean {\r\n\t\treturn this._glBuffer.bindBuffer();\r\n\t}\r\n\r\n\tunbind():void{\r\n\t\treturn this._glBuffer.unbindBuffer();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tif (this._glBuffer) {\r\n\t\t\tthis._glBuffer.destroy();\r\n\t\t\tthis._glBuffer = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { IndexFormat } from \"./RenderEnum/IndexFormat\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { BufferState } from \"../webgl/utils/BufferState\";\r\n\r\nexport class IndexBuffer extends Buffer {\r\n    /** @internal */\r\n    protected _indexType: IndexFormat = IndexFormat.UInt16;\r\n    /** @internal */\r\n    protected _indexTypeByteCount: number;\r\n    /** @internal */\r\n    protected _indexCount: number;\r\n    constructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n        super(targetType, bufferUsageType);\r\n    }\r\n\r\n\r\n    _setIndexData(data: number): void;\r\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array, bufferOffset: number): void;\r\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array | number, bufferOffset?: number): void {\r\n        var curBufSta: BufferState = BufferState._curBindedBufferState;\r\n\r\n        if (curBufSta) {\r\n            if (curBufSta._bindedIndexBuffer === this) {\r\n                this._glBuffer.setDataLength(0);\r\n            } else {\r\n                curBufSta.unBind();//避免影响VAO\r\n                this.bind();\r\n                if (typeof data === \"number\")\r\n                    this._glBuffer.setDataLength(data);\r\n                else\r\n                    this._glBuffer.setData(data, bufferOffset);\r\n                curBufSta.bind();\r\n            }\r\n        } else {\r\n            this.bind();\r\n            if (typeof data === \"number\")\r\n                this._glBuffer.setDataLength(data);\r\n            else\r\n                this._glBuffer.setData(data, bufferOffset)\r\n        }\r\n    }\r\n}","import { RenderInfo } from \"../../renders/RenderInfo\";\r\nimport { BaseShader } from \"../shader/BaseShader\";\r\nimport { Buffer } from \"../../RenderEngine/Buffer\";\r\n\r\nexport class Buffer2D {\r\n\r\n    static FLOAT32: number = 4;\r\n    static SHORT: number = 2;\r\n\r\n    protected _maxsize: number = 0;\r\n\r\n    _upload: boolean = true;\r\n    protected _uploadSize: number = 0;\r\n    protected _bufferSize: number = 0;\r\n    protected _u8Array: Uint8Array = null;\t\t//反正常常要拷贝老的数据，所以保留这个可以提高效率\r\n    _floatArray32: Float32Array;\r\n    _uint32Array: Uint32Array;\r\n    _uint16Array: Uint16Array;\r\n\r\n    private constBuffer: Buffer;\r\n\r\n    get bufferLength(): number {\r\n        return this.constBuffer._buffer.byteLength;\r\n    }\r\n\r\n    set byteLength(value: number) {\r\n        this.setByteLength(value);\r\n    }\r\n\r\n    setByteLength(value: number): void {\r\n        if (this.constBuffer._byteLength !== value) {\r\n            value <= this._bufferSize || (this._resizeBuffer(value * 2 + 256, true));\r\n            this.constBuffer._byteLength = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 在当前的基础上需要多大空间，单位是byte\r\n     * @param\tsz\r\n     * @return  增加大小之前的写位置。单位是byte\r\n     */\r\n    needSize(sz: number): number {\r\n        var old: number = this.constBuffer._byteLength;\r\n        if (sz) {\r\n            var needsz: number = this.constBuffer._byteLength + sz;\r\n            needsz <= this._bufferSize || (this._resizeBuffer(needsz << 1, true));\r\n            this.constBuffer._byteLength = needsz;\r\n        }\r\n        return old;\r\n    }\r\n\r\n    constructor(buffer: Buffer) {\r\n        this.constBuffer = buffer;\r\n    }\r\n\r\n    getFloat32Array(): Float32Array {\r\n        if (!this._floatArray32) {\r\n            this._floatArray32 = new Float32Array(this.constBuffer._buffer.buffer);\r\n        }\r\n        return this._floatArray32;\r\n    }\r\n\r\n    protected _bufferData(): void {\r\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {//每30帧缩小一下buffer\t。TODO 这个有问题。不知道_maxsize和_byteLength是怎么维护的，这里会导致重新分配64字节\r\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\r\n                //_setGPUMemory(_buffer.byteLength);\r\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this.constBuffer._buffer.byteLength;\r\n                this._checkArrayUse();\r\n                let buff = this.constBuffer._buffer.buffer;\r\n                ((this._bufferSize % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\r\n                ((this._bufferSize % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\r\n                this._uint16Array = new Uint16Array(buff);\r\n            }\r\n            this._maxsize = this.constBuffer._byteLength;\r\n        }\r\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\r\n            this._uploadSize = this.constBuffer._buffer.byteLength;\r\n\r\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\r\n        }\r\n        this.constBuffer._glBuffer.setData(new Uint8Array(this.constBuffer._buffer.buffer, 0, this.constBuffer._byteLength), 0);\r\n        this.constBuffer.unbind();\r\n    }\r\n\r\n    //TODO:coverage\r\n    protected _bufferSubData(offset: number = 0, dataStart: number = 0, dataLength: number = 0): void {\r\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {\r\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\r\n                //_setGPUMemory(_buffer.byteLength);\r\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this.constBuffer._buffer.byteLength;\r\n                this._checkArrayUse();\r\n            }\r\n            this._maxsize = this.constBuffer._byteLength;\r\n        }\r\n\r\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\r\n            this._uploadSize = this.constBuffer._buffer.byteLength;\r\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\r\n            //_setGPUMemory(_uploadSize);\r\n        }\r\n\r\n        if (dataStart || dataLength) {\r\n            var subBuffer: ArrayBuffer = this.constBuffer._buffer.buffer.slice(dataStart, dataLength);\r\n            this.constBuffer._glBuffer.setData(subBuffer, offset);\r\n        } else {\r\n            this.constBuffer._glBuffer.setData(this.constBuffer._buffer.buffer, offset);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * buffer重新分配了，继承类根据需要做相应的处理。\r\n     */\r\n    protected _checkArrayUse(): void {\r\n\r\n    }\r\n\r\n    // /**\r\n    //  * 给vao使用的 _bind_upload函数。不要与已经绑定的判断是否相同\r\n    //  * @return\r\n    //  */\r\n    // _bind_uploadForVAO(): boolean {\r\n    // \tif (!this._upload)\r\n    // \t\treturn false;\r\n    // \tthis._upload = false;\r\n    // \tthis.constBuffer.bind();\r\n    // \tthis._bufferData();\r\n    // \treturn true;\r\n    // }\r\n\r\n    _bind_upload(): boolean {\r\n        if (!this._upload)\r\n            return false;\r\n        this._upload = false;\r\n        this.constBuffer.bind();\r\n        this._bufferData();\r\n        return true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    _bind_subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\r\n        if (!this._upload)\r\n            return false;\r\n\r\n        this._upload = false;\r\n        this.constBuffer.bind();\r\n        this._bufferSubData(offset, dataStart, dataLength);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 重新分配buffer大小，如果nsz比原来的小则什么都不做。\r\n     * @param\tnsz\t\tbuffer大小，单位是byte。\r\n     * @param\tcopy\t是否拷贝原来的buffer的数据。\r\n     * @return\r\n     */\r\n    _resizeBuffer(nsz: number, copy: boolean): Buffer2D //是否修改了长度\r\n    {\r\n        var buff: any = this.constBuffer._buffer;\r\n        if (buff && nsz <= buff.byteLength)\r\n            return this;\r\n        var u8buf: Uint8Array = this._u8Array;\r\n        //_setGPUMemory(nsz);\r\n        if (copy && buff && buff.byteLength > 0) {\r\n            var oldU8Arr: Uint8Array = new Uint8Array(buff.buffer);\r\n            var newbuffer: Uint8Array = new Uint8Array(nsz);\r\n            newbuffer.set(oldU8Arr, 0);\r\n            buff = this.constBuffer._buffer = newbuffer;\r\n            this._u8Array = new Uint8Array(this.constBuffer._buffer.buffer);\r\n        } else {\r\n            var data = new ArrayBuffer(nsz);\r\n            buff = this.constBuffer._buffer = new Uint8Array(data);\r\n            this._u8Array = new Uint8Array(buff.buffer);\r\n        }\r\n        buff = this.constBuffer._buffer.buffer;\r\n        ((nsz % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\r\n        ((nsz % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\r\n        this._uint16Array = new Uint16Array(buff);\r\n        this._checkArrayUse();\r\n        this._upload = true;\r\n        this._bufferSize = buff.byteLength;\r\n        return this;\r\n    }\r\n\r\n    append(data: any): void {\r\n        this._upload = true;\r\n        var byteLen: number, n: any;\r\n        byteLen = data.byteLength;\r\n        if (data instanceof Uint8Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Uint8Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        } else if (data instanceof Uint16Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        } else if (data instanceof Float32Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Float32Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        }\r\n        n.set(data, 0);\r\n        this.constBuffer._byteLength += byteLen;\r\n        this._checkArrayUse();\r\n    }\r\n\r\n    /**\r\n     * 附加Uint16Array的数据。数据长度是len。byte的话要*2\r\n     * @param\tdata\r\n     * @param\tlen\r\n     */\r\n    appendU16Array(data: Uint16Array, len: number): void {\r\n        this._resizeBuffer(this.constBuffer._byteLength + len * 2, true);\r\n        //(new Uint16Array(_buffer, _byteLength, len)).set(data.slice(0, len));\r\n        //下面这种写法比上面的快多了\r\n        var u: Uint16Array = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength, len);\t//TODO 怎么能不用new\r\n        if (len == 6) {\r\n            u[0] = data[0]; u[1] = data[1]; u[2] = data[2];\r\n            u[3] = data[3]; u[4] = data[4]; u[5] = data[5];\r\n        } else if (len >= 100) {\r\n            u.set(new Uint16Array(data.buffer, 0, len));\r\n        } else {\r\n            for (var i: number = 0; i < len; i++) {\r\n                u[i] = data[i];\r\n            }\r\n        }\r\n        this.constBuffer._byteLength += len * 2;\r\n        this._checkArrayUse();\r\n    }\r\n\r\n    //TODO:coverage\r\n    getBuffer(): ArrayBuffer {\r\n        return this.constBuffer._buffer.buffer;\r\n    }\r\n\r\n    setNeedUpload(): void {\r\n        this._upload = true;\r\n    }\r\n\r\n\r\n    //TODO:coverage\r\n    subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\r\n        var scuess: boolean = this._bind_subUpload();\r\n        this.constBuffer.unbind();\r\n        //gl.bindBuffer(this._bufferType, null);\r\n        //if (this._bufferType == gl.ARRAY_BUFFER) Buffer._bindedVertexBuffer = null;\r\n        //if (this._bufferType == gl.ELEMENT_ARRAY_BUFFER) Buffer._bindedIndexBuffer = null;\r\n        BaseShader.activeShader = null\r\n        return scuess;\r\n    }\r\n\r\n    _disposeResource(): void {\r\n        this._upload = true;\r\n        this._uploadSize = 0;\r\n        this._floatArray32 = null;\r\n        this._uint32Array = null;\r\n        this._u8Array = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * 清理数据。保留ArrayBuffer\r\n     */\r\n    clear(): void {\r\n        this.constBuffer._byteLength = 0;\r\n        this._upload = true;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { Buffer2D } from \"./Buffer2D\";\r\n\r\nexport class IndexBuffer2D extends IndexBuffer {\r\n    static create: Function = function (bufferUsage: number = BufferUsage.Static): IndexBuffer2D {\r\n        return new IndexBuffer2D(bufferUsage);\r\n    }\r\n\r\n    protected _uint16Array: Uint16Array;\r\n    buffer2D:Buffer2D;\r\n    constructor(bufferUsage: number = BufferUsage.Static) {\r\n        super(BufferTargetType.ELEMENT_ARRAY_BUFFER,bufferUsage);\r\n        this.buffer2D = new Buffer2D(this);\r\n        this._bufferUsage = bufferUsage;\r\n        this._buffer = new Uint8Array(8);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    // protected _checkArrayUse(): void {\r\n    //     this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));\r\n    // }\r\n\r\n    // getUint16Array(): Uint16Array {\r\n    //     return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));\r\n    // }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _bindForVAO(): void {\r\n        \r\n        this._glBuffer.bindBuffer()\r\n    }\r\n\r\n    destory(): void {\r\n        this._uint16Array = null;\r\n        this._buffer = null;\r\n    }\r\n\r\n    disposeResource(): void {\r\n        this.buffer2D._disposeResource();\r\n    }\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { VertexDeclaration } from \"./VertexDeclaration\";\r\n\r\nexport class VertexBuffer extends Buffer {\r\n\tprivate _instanceBuffer: boolean = false;\r\n\t/** @internal */\r\n\t_vertexDeclaration: VertexDeclaration | null = null;\r\n\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t */\r\n\tget vertexDeclaration(): VertexDeclaration | null {\r\n\t\treturn this._vertexDeclaration;\r\n\t}\r\n\r\n\tset vertexDeclaration(value: VertexDeclaration | null) {\r\n\t\tthis._vertexDeclaration = value;\r\n\t}\r\n\tget instanceBuffer(): boolean {\r\n\t\treturn this._instanceBuffer;\r\n\t}\r\n\r\n\tset instanceBuffer(value: boolean) {\r\n\t\tthis._instanceBuffer = value;\r\n\t}\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\tsuper(targetType, bufferUsageType);\r\n\t}\r\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\r\nimport { Buffer2D } from \"./Buffer2D\";\r\n\r\nexport class VertexBuffer2D extends VertexBuffer {\r\n    static create: Function = function (vertexStride: number, bufferUsage: number = BufferUsage.Dynamic): VertexBuffer2D {\r\n        return new VertexBuffer2D(vertexStride, bufferUsage);\r\n    }\r\n\r\n    buffer2D: Buffer2D;\r\n\r\n    private _vertexStride: number;\r\n\r\n    get vertexStride(): number {\r\n        return this._vertexStride;\r\n    }\r\n\r\n    constructor(vertexStride: number, bufferUsage: number) {\r\n        super(BufferTargetType.ARRAY_BUFFER, bufferUsage);\r\n        this.buffer2D = new Buffer2D(this);\r\n        this._vertexStride = vertexStride;\r\n        this._bufferUsage = bufferUsage;\r\n        //this._buffer = new Uint8Array(8);\r\n        //this._floatArray32 = new Float32Array(this._buffer);\r\n        //this._uint32Array = new Uint32Array(this._buffer);\r\n    }\r\n\r\n    getFloat32Array(): Float32Array {\r\n        return this.buffer2D._floatArray32;\r\n    }\r\n\r\n    get _floatArray32() {\r\n        return this.buffer2D._floatArray32;\r\n    }\r\n\r\n    get _uint32Array() {\r\n        return this.buffer2D._uint32Array;\r\n    }\r\n\r\n    /**\r\n     * 在当前位置插入float数组。\r\n     * @param\tdata\r\n     * @param\tpos\r\n     */\r\n    appendArray(data: any[]): void {\r\n        var oldoff: number = this._byteLength >> 2;\r\n        this.buffer2D.setByteLength(this._byteLength + data.length * 4);\r\n        var vbdata: Float32Array = this.getFloat32Array();\r\n        vbdata.set(data, oldoff);\r\n        this.buffer2D._upload = true;\r\n    }\r\n    // \t/**\r\n    // \t * @override\r\n    // \t */\r\n    // \t protected _checkArrayUse(): void {\r\n    //     this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));\r\n    //     this._uint32Array && (this._uint32Array = new Uint32Array(this._buffer));\r\n    // }\r\n\r\n    //只删除buffer，不disableVertexAttribArray\r\n    deleteBuffer(): void {\r\n        this.buffer2D._disposeResource();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _bindForVAO(): void {\r\n        this._glBuffer.bindBuffer();\r\n    }\r\n    /**\r\n     * @override\r\n     * override\r\n     */\r\n    destroy(): void {\r\n        super.destroy();\r\n        this._byteLength = 0;\r\n        this.buffer2D._upload = true;\r\n        this._buffer = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { Config } from \"./../../../Config\";\r\nimport { BufferState } from \"./BufferState\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * Mesh2d只是保存数据。描述attribute用的。本身不具有渲染功能。\r\n */\r\nexport class Mesh2D {\r\n    _stride = 0;\t\t\t//顶点结构大小。每个mesh的顶点结构是固定的。\r\n    vertNum = 0;\t\t\t\t//当前的顶点的个数\r\n    indexNum = 0;\t\t\t//实际index 个数。例如一个三角形是3个。由于ib本身可能超过实际使用的数量，所以需要一个indexNum\r\n    protected _applied = false;\t//是否已经设置给webgl了\r\n    _vb: VertexBuffer2D;\t\t\t//vb和ib都可能需要在外部修改，所以public\r\n    _ib: IndexBuffer2D;\r\n    private _vao: BufferState;\t\t\t\t\t\t//webgl VAO对象。需要WebGL扩展。\r\n    private static _gvaoid = 0;\r\n    private _attribInfo: any[];\t\t\t//保存起来的属性定义数组。\r\n    protected _quadNum = 0;\r\n    //public static var meshlist:Array = [];\t//活着的mesh对象列表。\r\n    canReuse = false;\t//用完以后，是删除还是回收。\r\n\r\n    /**\r\n     * @param\tstride\r\n     * @param\tvballoc  vb预分配的大小。主要是用来提高效率。防止不断的resizebfufer\r\n     * @param\tiballoc\r\n     */\r\n    constructor(stride: number, vballoc: number, iballoc: number) {\r\n        this._stride = stride;\r\n        this._vb = new VertexBuffer2D(stride, BufferUsage.Dynamic);\r\n        if (vballoc) {\r\n            this._vb.buffer2D._resizeBuffer(vballoc, false);\r\n        } else {\r\n            Config.webGL2D_MeshAllocMaxMem && this._vb.buffer2D._resizeBuffer(64 * 1024 * stride, false);\r\n        }\r\n        this._ib = new IndexBuffer2D();\r\n        if (iballoc) {\r\n            this._ib.buffer2D._resizeBuffer(iballoc, false);\r\n        }\r\n        //meshlist.push(this);\r\n    }\r\n\r\n    /**\r\n     * 直接创建一个固定的ib。按照固定四边形的索引。\r\n     * @param\tvar QuadNum\r\n     */\r\n    createQuadIB(QuadNum: number): void {\r\n        this._quadNum = QuadNum;\r\n        this._ib.buffer2D._resizeBuffer(QuadNum * 6 * 2, false);\t//short类型\r\n        this._ib.buffer2D.byteLength = this._ib.buffer2D.bufferLength;\t//这个我也不知道是什么意思\r\n\r\n        var bd: Uint16Array = this._ib.buffer2D._uint16Array;\r\n        var idx: number = 0;\r\n        var curvert: number = 0;\r\n        for (var i: number = 0; i < QuadNum; i++) {\r\n            bd[idx++] = curvert;\r\n            bd[idx++] = curvert + 2;\r\n            bd[idx++] = curvert + 1;\r\n            bd[idx++] = curvert;\r\n            bd[idx++] = curvert + 3;\r\n            bd[idx++] = curvert + 2;\r\n            curvert += 4;\r\n        }\r\n\r\n        this._ib.buffer2D.setNeedUpload();\r\n    }\r\n\r\n    /**\r\n     * 设置mesh的属性。每3个一组，对应的location分别是0,1,2...\r\n     * 含义是：type,size,offset\r\n     * 不允许多流。因此stride是固定的，offset只是在一个vertex之内。\r\n     * @param\tattribs\r\n     */\r\n    setAttributes(attribs: any[]): void {\r\n        this._attribInfo = attribs;\r\n        if (this._attribInfo.length % 3 != 0) {\r\n            throw 'Mesh2D setAttributes error!';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化VAO的配置，只需要执行一次。以后使用的时候直接bind就行\r\n     * @param\tgl\r\n     */\r\n    private configVAO(): void {\r\n        if (this._applied)\r\n            return;\r\n        this._applied = true;\r\n        if (!this._vao) {\r\n            //_vao = __JS__('gl.createVertexArray();');\r\n            this._vao = new BufferState();\r\n            //_vao.dbgid = _gvaoid++;\r\n        }\r\n        this._vao.applyState([this._vb], this._ib);\r\n        // var attribNum: number = this._attribInfo.length / 3;\r\n        // var idx: number = 0;\r\n        // for (var i: number = 0; i < attribNum; i++) {\r\n        //     var _size: number = this._attribInfo[idx + 1];\r\n        //     var _type: number = this._attribInfo[idx];\r\n        //     var _off: number = this._attribInfo[idx + 2];\r\n        //     gl.enableVertexAttribArray(i);\r\n        //     gl.vertexAttribPointer(i, _size, _type, false, this._stride, _off); //注意 normalize都设置为false了，想必没人要用这个功能把。\r\n        //     idx += 3;\r\n        // }\r\n        // this._vao.unBind();\r\n        //gl.bindVertexArray(null);\r\n    }\r\n\r\n    /**\r\n     * 应用这个mesh\r\n     * @param\tgl\r\n     */\r\n    useMesh(): void {\r\n        if ((this._vao && !this._vao.isbind()) || this._ib.buffer2D._upload || this._vb.buffer2D._upload) {\r\n            BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n        }\r\n        //要先bind，在bufferData\r\n        this._applied || this.configVAO();\r\n        this._ib.buffer2D._bind_upload();\r\n        this._vb.buffer2D._bind_upload();\r\n        this._vao.bind();\r\n    }\r\n\r\n    // //TODO:coverage\r\n    // getEleNum(): number {\r\n    //     return this._ib.buffer2D.getBuffer().byteLength / 2;\r\n    // }\r\n\r\n    /**\r\n     * 子类实现。用来把自己放到对应的回收池中，以便复用。\r\n     */\r\n    releaseMesh(): void { }\r\n\r\n    /**\r\n     * 释放资源。\r\n     */\r\n    destroy(): void {\r\n    }\r\n\r\n    /**\r\n     * 清理vb数据\r\n     */\r\n    clearVB(): void {\r\n        this._vb.buffer2D.clear();\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\r\n */\r\nexport class MeshQuadTexture extends Mesh2D {\r\n\tstatic const_stride: number = 24;// 48;  24是不带clip的\r\n\tprivate static _fixib: IndexBuffer2D;\r\n\tprivate static _maxIB: number = 16 * 1024;\r\n\tprivate static _fixattriInfo: any[];\r\n\tprivate static _POOL: any[] = [];\r\n\t//private static var _num;\r\n\tstatic VertexDeclarition: VertexDeclaration;\r\n\tstatic __int__(): void {\r\n\t\t//var gl: WebGLRenderingContext = LayaGL.instance;\r\n\t\tMeshQuadTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\r\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\r\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 20];\r\n\t}\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper(MeshQuadTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\r\n\t\tthis.canReuse = true;\r\n\t\tthis.setAttributes(MeshQuadTexture._fixattriInfo);\r\n\t\tif (!MeshQuadTexture._fixib) {\r\n\t\t\tthis.createQuadIB(MeshQuadTexture._maxIB);\t//每个quad 4个顶点。正好达到64k的索引。\r\n\t\t\tMeshQuadTexture._fixib = this._ib;\r\n\t\t} else {\r\n\t\t\tthis._ib = MeshQuadTexture._fixib;\r\n\t\t\tthis._quadNum = MeshQuadTexture._maxIB;\r\n\t\t}\r\n\t\tif (!MeshQuadTexture.VertexDeclarition)\r\n\t\t\tMeshQuadTexture.VertexDeclarition = new VertexDeclaration(24, [\r\n\t\t\t\tnew VertexElement(0, VertexElementFormat.Vector4, 0),\r\n\t\t\t\tnew VertexElement(16, VertexElementFormat.Byte4, 1),\r\n\t\t\t\tnew VertexElement(20, VertexElementFormat.Byte4, 2),\r\n\t\t\t])\r\n\t\tthis._vb.vertexDeclaration = MeshQuadTexture.VertexDeclarition;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tstatic getAMesh(mainctx: boolean): MeshQuadTexture {\r\n\t\t//console.log('getmesh');\r\n\t\tvar ret: MeshQuadTexture = null;\r\n\t\tif (MeshQuadTexture._POOL.length) {\r\n\t\t\tret = MeshQuadTexture._POOL.pop();\r\n\t\t} else\r\n\t\t\tret = new MeshQuadTexture();\r\n\t\t// 先分配64k顶点的空间，这样可以避免浪费内存，否则后面增加内存的时候是成倍增加的，当快超过64k的时候，直接变成了128k\r\n\t\tmainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshQuadTexture.const_stride, false);\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * 把本对象放到回收池中，以便getMesh能用。\r\n\t * @override\r\n\t */\r\n\treleaseMesh(): void {\r\n\t\tthis._vb.buffer2D.setByteLength(0);\r\n\t\tthis.vertNum = 0;\r\n\t\tthis.indexNum = 0;\r\n\t\t//_applied = false;\r\n\t\tMeshQuadTexture._POOL.push(this);\r\n\t}\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tdestroy(): void {\r\n\t\t//_ib.destroy(); ib是公用的。\r\n\t\tthis._vb.destroy();\r\n\t\tthis._vb.deleteBuffer();\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param pos 顶点坐标\r\n\t * @param uv 纹理坐标\r\n\t * @param color 顶点颜色\r\n\t * @param useTex 是否使用贴图。false的话是给fillRect用的\r\n\t */\r\n\taddQuad(pos: ArrayLike<number>, uv: ArrayLike<number>, color: number, useTex: boolean): void {\r\n\t\tvar vb: VertexBuffer2D = this._vb;\r\n\t\tvar vpos: number = (vb._byteLength >> 2);\t//float数组的下标\r\n\t\t//x,y,u,v,rgba\r\n\t\tvb.buffer2D.setByteLength((vpos + MeshQuadTexture.const_stride) << 2); //是一个四边形的大小，也是这里填充的大小\r\n\t\tvar vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\r\n\t\tvar vbu32Arr: Uint32Array = vb._uint32Array;\r\n\t\tvar cpos: number = vpos;\r\n\t\tvar useTexVal: number = useTex ? 0xff : 0;\r\n\t\tvbdata[cpos++] = pos[0]; vbdata[cpos++] = pos[1]; vbdata[cpos++] = uv[0]; vbdata[cpos++] = uv[1]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[2]; vbdata[cpos++] = pos[3]; vbdata[cpos++] = uv[2]; vbdata[cpos++] = uv[3]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[4]; vbdata[cpos++] = pos[5]; vbdata[cpos++] = uv[4]; vbdata[cpos++] = uv[5]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[6]; vbdata[cpos++] = pos[7]; vbdata[cpos++] = uv[6]; vbdata[cpos++] = uv[7]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvb.buffer2D._upload = true;\r\n\t}\r\n}\r\n\r\n","import { Matrix } from \"../../maths/Matrix\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * 与MeshQuadTexture基本相同。不过index不是固定的\r\n */\r\nexport class MeshTexture extends Mesh2D {\r\n    static const_stride: number = 24;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n\r\n    static VertexDeclarition: VertexDeclaration;\r\n\r\n\r\n\r\n    static __init__(): void {\r\n        MeshTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 20];\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshTexture._fixattriInfo);\r\n        if (!MeshTexture.VertexDeclarition)\r\n            MeshTexture.VertexDeclarition = new VertexDeclaration(24, [\r\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\r\n                new VertexElement(16, VertexElementFormat.Byte4, 1),\r\n                new VertexElement(20, VertexElementFormat.Byte4, 2),\r\n            ])\r\n        this._vb.vertexDeclaration = MeshTexture.VertexDeclarition;\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getAMesh(mainctx: boolean): MeshTexture {\r\n        //console.log('getmesh');\r\n        var ret: MeshTexture;\r\n        if (MeshTexture._POOL.length) {\r\n            ret = MeshTexture._POOL.pop();\r\n        }\r\n        else ret = new MeshTexture();\r\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshTexture.const_stride, false);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 增加四个顶点\r\n     * @param vertices \r\n     * @param uvs \r\n     * @param idx \r\n     * @param matrix \r\n     * @param rgba \r\n     */\r\n    addData(vertices: Float32Array, uvs: Float32Array, idx: Uint16Array, matrix: Matrix, rgba: number): void {\r\n        //vb\r\n        var vb: VertexBuffer2D = this._vb;\r\n        var ib: IndexBuffer2D = this._ib;\r\n        var vertsz: number = vertices.length >> 1;\r\n        var startpos: number = vb.buffer2D.needSize(vertsz * MeshTexture.const_stride);//vb的起点。\t\t\t\r\n        var f32pos: number = startpos >> 2;\r\n        var vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\r\n        var vbu32Arr: Uint32Array = vb._uint32Array;\r\n        var ci: number = 0;\r\n        var m00: number = matrix.a;\r\n        var m01: number = matrix.b;\r\n        var m10: number = matrix.c;\r\n        var m11: number = matrix.d;\r\n        var tx: number = matrix.tx;\r\n        var ty: number = matrix.ty;\r\n        var i: number = 0;\r\n        //var clipinfo:Array = ctx.getTransedClipInfo();\r\n        for (i = 0; i < vertsz; i++) {\r\n            var x: number = vertices[ci], y: number = vertices[ci + 1];\r\n            vbdata[f32pos] = x * m00 + y * m10 + tx;\r\n            vbdata[f32pos + 1] = x * m01 + y * m11 + ty;\r\n            vbdata[f32pos + 2] = uvs[ci];\r\n            vbdata[f32pos + 3] = uvs[ci + 1];\r\n            vbu32Arr[f32pos + 4] = rgba;\r\n            vbu32Arr[f32pos + 5] = 0xff;\r\n            f32pos += 6;\r\n            //裁剪信息。\r\n            //vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\r\n            //vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1];\t//cliprect的位置\r\n            ci += 2;\r\n        }\r\n        vb.buffer2D.setNeedUpload();\r\n\r\n        var vertN: number = this.vertNum;\r\n        var sz: number = idx.length;\r\n        var stib: number = ib.buffer2D.needSize(idx.byteLength);\r\n        var cidx: Uint16Array = ib.buffer2D._uint16Array;\r\n        //var cidx:Uint16Array = new Uint16Array(__JS__('ib._buffer'), stib);\r\n        var stibid: number = stib >> 1;\t// indexbuffer的起始位置\r\n        if (vertN > 0) {\r\n            var end: number = stibid + sz;\r\n            var si: number = 0;\r\n            for (i = stibid; i < end; i++, si++) {\r\n                cidx[i] = idx[si] + vertN;\r\n            }\r\n        } else {\r\n            cidx.set(idx, stibid);\r\n        }\r\n        ib.buffer2D.setNeedUpload();\r\n\r\n        this.vertNum += vertsz;\r\n        this.indexNum += idx.length;\r\n    }\r\n\r\n\t\t/**\r\n\t\t * 把本对象放到回收池中，以便getMesh能用。\r\n\t\t * @override\r\n\t\t */\r\n\t\t /*override*/ releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this._ib.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshTexture._POOL.push(this);\r\n    }\r\n/**\r\n * @override\r\n */\r\n\t\t /*override*/ destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._ib.disposeResource();\r\n        this._vb.deleteBuffer();\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\n\r\n/**\r\n * 用来画矢量的mesh。顶点格式固定为 x,y,rgba\r\n */\r\nexport class MeshVG extends Mesh2D {\r\n    static const_stride: number = 12;// 36;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n    static vertexDeclaration: VertexDeclaration = null;\r\n\r\n    static __init__(): void {\r\n        MeshVG._fixattriInfo = [5126/*gl.FLOAT*/, 2, 0,\t//x,y\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 8];\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshVG.const_stride, 4, 4);\t//x,y,rgba\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshVG._fixattriInfo);\r\n        if (!MeshVG.vertexDeclaration)\r\n            MeshVG.vertexDeclaration = new VertexDeclaration(12, [\r\n                new VertexElement(0, VertexElementFormat.Vector2, 0),\r\n                new VertexElement(8, VertexElementFormat.Byte4, 1),\r\n            ]);\r\n        this._vb.vertexDeclaration = MeshVG.vertexDeclaration;\r\n    }\r\n\r\n    static getAMesh(mainctx: boolean): MeshVG {\r\n        //console.log('getmeshvg');\r\n        var ret: MeshVG;\r\n        if (MeshVG._POOL.length) {\r\n            ret = MeshVG._POOL.pop();\r\n        } else\r\n            ret = new MeshVG();\r\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshVG.const_stride, false);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 往矢量mesh中添加顶点和index。会把rgba和points在mesh中合并。\r\n     * @param\tpoints\t顶点数组，只包含x,y。[x,y,x,y...]\r\n     * @param\trgba\trgba颜色\r\n     * @param\tib\t\tindex数组。\r\n     */\r\n    addVertAndIBToMesh(ctx: Context, points: any[], rgba: number, ib: any[]): void {\r\n        var startpos: number = this._vb.buffer2D.needSize(points.length / 2 * MeshVG.const_stride);//vb的起点。\r\n        var f32pos: number = startpos >> 2;\r\n        var vbdata: Float32Array = this._vb._floatArray32 || this._vb.getFloat32Array();\r\n        var vbu32Arr: Uint32Array = this._vb._uint32Array;\r\n        var ci: number = 0;\r\n        //vb\r\n        //var clipinfo:Array = ctx.getTransedClipInfo();\r\n        var sz: number = points.length / 2;\r\n        for (var i: number = 0; i < sz; i++) {\r\n            vbdata[f32pos++] = points[ci]; vbdata[f32pos++] = points[ci + 1]; ci += 2;\r\n            vbu32Arr[f32pos++] = rgba;\r\n            /*\r\n            //裁剪信息。\r\n            vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\r\n            vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1]; //cliprect的位置\r\n            */\r\n        }\r\n        this._vb.buffer2D.setNeedUpload();\r\n\r\n        //ib\r\n        //TODO 现在这种添加数据的方法效率非常低。而且会引起大量的gc\r\n        this._ib.buffer2D.append(new Uint16Array(ib));\r\n        this._ib.buffer2D.setNeedUpload();\r\n\r\n        this.vertNum += sz;\r\n        this.indexNum += ib.length;\r\n    }\r\n\r\n    /**\r\n     * 把本对象放到回收池中，以便getMesh能用。\r\n     * @override\r\n     */\r\n    releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this._ib.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshVG._POOL.push(this);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._ib.disposeResource();\r\n        this._vb.deleteBuffer();\r\n    }\r\n}\r\n\r\n","export class NativeWebGLCacheAsNormalCanvas {\r\n    _nativeObj: any;\r\n    _context: any;\r\n    constructor(ctx: any, sp: any)\r\n    {\r\n        this._context = ctx;\r\n        this._nativeObj = new (window as any)._conchWebGLCacheAsNormalCanvas(ctx._nativeObj, 0);\r\n    }\r\n    startRec(): void {\r\n        this._nativeObj.startRec();\r\n    }\r\n    endRec(): void {\r\n        this._nativeObj.endRec();\r\n    }\r\n    isCacheValid(): boolean {\r\n        return this._nativeObj.isCacheValid();\r\n    }  \r\n    isTextNeedRestore(): boolean {\r\n        return this._nativeObj.isTextNeedRestore();\r\n    }\r\n    get context() {\r\n        return this._context;\r\n    }\r\n}\r\n","import { Sprite } from \"../../display/Sprite\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Submit } from \"../submit/Submit\"\r\nimport { SubmitBase } from \"../submit/SubmitBase\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { MeshTexture } from \"../utils/MeshTexture\"\r\nimport { MeshVG } from \"../utils/MeshVG\"\r\nimport { NativeWebGLCacheAsNormalCanvas } from \"./NativeWebGLCacheAsNormalCanvas\"\r\n\r\n/**\r\n * 对象 cacheas normal的时候，本质上只是想把submit缓存起来，以后直接执行\r\n * 为了避免各种各样的麻烦，这里采用复制相应部分的submit的方法。执行环境还是在原来的context中\r\n * 否则包括clip等都非常难以处理\r\n */\r\nexport class WebGLCacheAsNormalCanvas {\r\n    submitStartPos: number = 0;\t// 对应的context的submit的开始的地方\r\n    submitEndPos: number = 0;\r\n    context: Context;\r\n    touches: any[] = [];\t\t//记录的文字信息。cacheas normal的话，文字要能正确touch\r\n    submits: any[] = [];\t\t// 从context中剪切的submit\r\n    sprite: Sprite|null = null;\t// 对应的sprite对象\r\n\r\n    // submit需要关联稳定独立的mesh。所以这里要创建自己的mesh对象\r\n    /**@internal */\r\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    private _pathMesh: MeshVG;\t\t\t//矢量专用mesh。\r\n    private _triangleMesh: MeshTexture;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\r\n    meshlist: any[] = [];\t\t\t//本context用到的mesh\r\n\r\n    // 原始context的原始值\r\n    private _oldMesh: MeshQuadTexture|null;\r\n    private _oldPathMesh: MeshVG|null;\r\n    private _oldTriMesh: MeshTexture|null;\r\n    private _oldMeshList: any[];\r\n\r\n    // cache的时候对应的clip\r\n    private cachedClipInfo: Matrix = new Matrix();\t// 用来判断是否需要把cache无效\r\n    //private var oldMatrix:Matrix = null;\t\t\t\t//本地画的时候完全不应用矩阵，所以需要先保存老的，以便恢复\t\t这样会丢失缩放信息，导致文字模糊，所以不用这种方式了\r\n    private oldTx: number = 0;\r\n    private oldTy: number = 0;\r\n    private static matI: Matrix = new Matrix();\r\n\r\n    // 创建这个canvas的时候对应的矩阵的逆矩阵。因为要保留矩阵的缩放信息。所以采用逆矩阵的方法。\r\n    invMat: Matrix = new Matrix();\r\n\r\n    constructor(ctx: Context, sp: Sprite) {\r\n        this.context = ctx;\r\n        this.sprite = sp;\r\n        ctx._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n    }\r\n\r\n    startRec(): void {\r\n\t\tlet context = this.context;\r\n        // 如果有文字优化，这里要先提交一下\r\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n            context._charSubmitCache.enable(false, context);\r\n            context._charSubmitCache.enable(true, context);\r\n        }\r\n        context._incache = true;\r\n        this.touches.length = 0;\r\n        //记录需要touch的文字资源\r\n        ((<any>context)).touches = this.touches;\r\n        context._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n\r\n        this.submits.length = 0;\r\n        this.submitStartPos = context._submits._length;\r\n\r\n        // 先把之前的释放掉\r\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this._mesh = MeshQuadTexture.getAMesh(false);\r\n        this._pathMesh = MeshVG.getAMesh(false);\r\n        this._triangleMesh = MeshTexture.getAMesh(false);\r\n\r\n        this.meshlist.push(this._mesh);\r\n        this.meshlist.push(this._pathMesh);\r\n        this.meshlist.push(this._triangleMesh);\r\n\r\n        // 打断合并\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        // 接管context中的一些值\r\n        this._oldMesh = context._mesh;\r\n        this._oldPathMesh = context._pathMesh;\r\n        this._oldTriMesh = context._triangleMesh;\r\n        this._oldMeshList = context.meshlist;\r\n\r\n        context._mesh = this._mesh;\r\n        context._pathMesh = this._pathMesh;\r\n        context._triangleMesh = this._triangleMesh;\r\n        context.meshlist = this.meshlist;\r\n\r\n        // 要取消位置，因为以后会再传入位置。这里好乱\r\n        this.oldTx = context._curMat.tx;\r\n        this.oldTy = context._curMat.ty;\r\n        context._curMat.tx = 0;\r\n        context._curMat.ty = 0;\r\n\r\n        // 取消缩放等\r\n        context._curMat.copyTo(this.invMat);\r\n        this.invMat.invert();\r\n        //oldMatrix = context._curMat;\r\n        //context._curMat = matI;\r\n    }\r\n\r\n    endRec(): void {\r\n\t\tlet context = this.context;\r\n        // 如果有文字优化，这里要先提交一下\r\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n            context._charSubmitCache.enable(false, context);\r\n            context._charSubmitCache.enable(true, context);\r\n        }\r\n        // copy submit\r\n        var parsubmits: any = context._submits;\r\n        this.submitEndPos = parsubmits._length;\r\n        var num: number = this.submitEndPos - this.submitStartPos;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this.submits.push(parsubmits[this.submitStartPos + i]);\r\n        }\r\n        parsubmits._length -= num;\r\n\r\n        // 恢复原始context的值\r\n        context._mesh = this._oldMesh;\r\n        context._pathMesh = this._oldPathMesh;\r\n        context._triangleMesh = this._oldTriMesh;\r\n        context.meshlist = this._oldMeshList;\r\n\r\n        // 打断合并\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        // 恢复matrix\r\n        //context._curMat = oldMatrix;\r\n        context._curMat.tx = this.oldTx;\r\n        context._curMat.ty = this.oldTy;\r\n        ((<any>context)).touches = null;\r\n        context._incache = false;\r\n    }\r\n\r\n    /**\r\n     * 当前缓存是否还有效。例如clip变了就失效了，因为clip太难自动处理\r\n     * @return\r\n     */\r\n    isCacheValid(): boolean {\r\n        var curclip: Matrix = this.context._globalClipMatrix;\r\n        if (curclip.a != this.cachedClipInfo.a || curclip.b != this.cachedClipInfo.b || curclip.c != this.cachedClipInfo.c\r\n            || curclip.d != this.cachedClipInfo.d || curclip.tx != this.cachedClipInfo.tx || curclip.ty != this.cachedClipInfo.ty)\r\n            return false;\r\n        return true;\r\n    }\r\n    isTextNeedRestore(): boolean {\r\n        var textNeedRestore: boolean = false;\r\n        var charRIs: any[] = this.touches;\r\n\t\tif (charRIs) {\r\n\t\t\tfor (var ci: number = 0; ci < charRIs.length; ci++) {\r\n\t\t\t\tif (charRIs[ci].deleted) {\r\n\t\t\t\t\ttextNeedRestore = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        return textNeedRestore;\r\n    }\r\n    flushsubmit(): void {\r\n        var curSubmit: SubmitBase = SubmitBase.RENDERBASE;\r\n        this.submits.forEach(function (subm: Submit): void {\r\n            if (subm == SubmitBase.RENDERBASE) return;\r\n            SubmitBase.preRender = curSubmit;\r\n            curSubmit = subm;\r\n            subm.renderSubmit();\r\n        });\r\n    }\r\n\r\n    releaseMem(): void {\r\n\r\n    }\r\n}\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n\t//@ts-ignore\r\n\tWebGLCacheAsNormalCanvas = NativeWebGLCacheAsNormalCanvas;\r\n}","import { NodeFlags } from \"../Const\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { SpriteStyle } from \"../display/css/SpriteStyle\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { _RenderFunction } from \"./RenderSprite\"\r\n\r\n/**\r\n * @internal\r\n * 快速节点命令执行器\r\n * 多个指令组合才有意义，单个指令没必要在下面加\r\n */\r\nexport class LayaGLQuickRunner {\r\n    /*[FILEINDEX:10000]*/\r\n    static map: _RenderFunction[] = [];\r\n    private static curMat: Matrix = new Matrix();\r\n    /**@internal */\r\n    static __init__(): void {\r\n        /*\r\n           glQuickMap[\"drawNode;\"] = drawNode;\r\n           glQuickMap[\"drawNodes;\"] = drawNodes;\r\n           glQuickMap[\"drawLayaGL;\"] = drawLayaGL;\r\n           glQuickMap[\"drawLayaGL;drawNodes;\"] = drawLayaGL_drawNodes;\r\n           glQuickMap[\"save;alpha;drawNode;restore;\"] = save_alpha_drawNode_restore;\r\n           glQuickMap[\"save;alpha;drawLayaGL;restore;\"] = save_alpha_drawLayaGL_restore;\r\n         */\r\n        //glQuickMap[\"save;alpha;drawTextureWithGr;restore;\"] = save_alpha_drawTextureWithGr_restore;\r\n        //glQuickMap[\"save;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\r\n        //glQuickMap[\"drawTextureWithGr;\"] = drawTextureWithGr;\r\n        //glQuickMap[\"save;transform;drawNodes;restore;\"] = save_transform_drawNodes_restore;\r\n        //glQuickMap[\"save;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //map[SpriteConst.TEXTURE] = _drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_transform_drawLayaGL;\r\n        //map[ SpriteConst.GRAPHICS] = _drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.transform_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.CHILDS] = LayaGLQuickRunner.transform_drawNodes;\r\n\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.GRAPHICS | SpriteConst.CHILDS] = LayaGLQuickRunner.drawLayaGL_drawNodes;\r\n    }\r\n\r\n    static transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var tex: Texture = sprite.texture;\r\n\r\n\r\n        /*\r\n        var ctx:WebGLContext2D = context as WebGLContext2D;\r\n        var ctxm:Matrix = ctx._curMat;\r\n        ctxm.copyTo(curMat);\r\n        //context.saveTransform(curMat);\r\n        ctx.transformByMatrixNoSave(sprite.getTransform(), x, y);\r\n        ctx.drawTexture(tex, -style.pivotX, -style.pivotY, sprite._width || tex.width, sprite._height || tex.height);\r\n        curMat.copyTo(ctxm);\r\n        //ctx.restoreTransform(curMat);\r\n        */\r\n\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n        var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n        var wRate: number = width / tex.sourceWidth;\r\n        var hRate: number = height / tex.sourceHeight;\r\n        width = tex.width * wRate;\r\n        height = tex.height * hRate;\r\n        if (width <= 0 || height <= 0) return null;\r\n        var px: number = -sprite.pivotX + tex.offsetX * wRate;\r\n        var py: number = -sprite.pivotY + tex.offsetY * hRate;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            context.drawTexture(tex, px, py, width, height);\r\n\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n        /*\r\n        context.saveTransform(curMat);\r\n        var w:int = sprite._width || tex.width;\r\n        var h:int = sprite._height || tex.height;\r\n        var mat:Matrix = sprite.transform;// (sprite as Object)._tfChanged?(sprite as Object)._adjustTransform():(sprite as Object)._transform;\r\n        mat.tx += x; mat.ty += y;\r\n        //(context as WebGLContext2D).drawTextureWithTransform(tex, -style.pivotX, -style.pivotY, w, h,mat,x,y,1,null,null);\r\n    \t\r\n        var ctx:WebGLContext2D = context;\r\n        var curMat:Matrix = ctx._curMat;\r\n        var tmpMat:Matrix = ctx._tmpMatrix;\r\n        var transform = mat;\r\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\r\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + x; tmpMat.ty = transform.ty + y;\r\n        tmpMat._bTransform = transform._bTransform;\r\n        if (transform && curMat._bTransform) {\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        }else {\r\n            //如果curmat没有旋转。\r\n            transform = tmpMat;\r\n        }\r\n        ctx._drawTextureM(tex, x, y, w,h, mat, 1,null);\r\n    \t\r\n        //var st = __JS__(\"performance.now()\");\r\n        //Laya.stage.perfdt += (__JS__(\"performance.now()\")-st);\r\n        context.restoreTransform(curMat);\r\n        */\r\n    }\r\n\r\n    //static public function _drawTexture(sprite:Sprite, context:Context, x:Number, y:Number):void {\r\n    //var tex:Texture = sprite.texture;\r\n    //context.drawTexture(tex, x-sprite.pivotX, y-sprite.pivotY, sprite._width || tex.width, sprite._height || tex.height);\r\n    //}\r\n\r\n    static alpha_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        var tex: Texture = sprite.texture;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate: number = width / tex.sourceWidth;\r\n            var hRate: number = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px: number = x - style.pivotX + tex.offsetX * wRate;\r\n            var py: number = y - style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        var tex: Texture = sprite.texture;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.saveTransform(LayaGLQuickRunner.curMat);\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate: number = width / tex.sourceWidth;\r\n            var hRate: number = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px: number = -style.pivotX + tex.offsetX * wRate;\r\n            var py: number = -style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.saveTransform(LayaGLQuickRunner.curMat);\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n            context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    //static public function _drawLayaGL(sprite:Sprite, context:Context, x:Number, y:Number):void {\r\n    //sprite._graphics._render(sprite, context, x, y);\r\n    //}\t\t\r\n\r\n    static transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        //var transform:Matrix = sprite.transform;\r\n\r\n        //临时\r\n        //if (transform) {\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n        //}else {\r\n        //sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n        //}\t\t\t\r\n    }\r\n\r\n    static transform_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        //var transform:Matrix = sprite.transform;\r\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n\r\n        var style: SpriteStyle = sprite._style;\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        //x = x-style.pivotX;\r\n        //y = y - style.pivotY;\r\n\r\n        x = -style.pivotX;\r\n        y = -style.pivotY;\r\n\r\n        var childs: any[] = sprite._children, n: number = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n        }\r\n\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n\r\n    static drawLayaGL_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n\r\n        var style: SpriteStyle = sprite._style;\r\n        x = x - style.pivotX;\r\n        y = y - style.pivotY;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, x, y);\r\n\r\n        var childs: any[] = sprite._children, n: number = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n\r\n        }\r\n\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n}\r\n\r\n","import { IFilter } from \"./IFilter\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { ColorFilter } from \"./ColorFilter\";\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>Filter</code> 是滤镜基类。\r\n */\r\nexport class NativeFilter implements IFilter {\r\n    /**@private 模糊滤镜。*/\r\n    static BLUR: number = 0x10;\r\n    /**@private 颜色滤镜。*/\r\n    static COLOR: number = 0x20;\r\n    /**@private 发光滤镜。*/\r\n    static GLOW: number = 0x08;\r\n    /** @internal*/\r\n    _glRender: any;\r\n\r\n    /**\r\n     * 创建一个 <code>Filter</code> 实例。\r\n     * */\r\n    constructor() { }\r\n\r\n    /**@private 滤镜类型。*/\r\n    get type(): number { return -1 }\r\n\r\n    static _filter = function (this: RenderSprite, sprite: Sprite, context: any, x: number, y: number): void {\r\n        var webglctx: any = context;\r\n        var next: any = ((<RenderSprite>this))._next;\r\n        if (next) {\r\n            var filters: any[] = sprite.filters, len: number = filters.length;\r\n            //如果只有一个滤镜，那么还用原来的方式\r\n            if (len == 1 && (filters[0].type == NativeFilter.COLOR)) {\r\n                context.save();\r\n                context.setColorFilter(filters[0]);\r\n                next._fun.call(next, sprite, context, x, y);\r\n                context.restore();\r\n                return;\r\n            }\r\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\r\n            var svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\t//拷贝用shaderValue\r\n            var b: Rectangle;\r\n\r\n            var p: Point = Point.TEMP;\r\n            var tMatrix: Matrix = webglctx._curMat;\r\n            var mat: Matrix = Matrix.create();\r\n            tMatrix.copyTo(mat);\r\n            var tPadding: number = 0;\t//给glow用\r\n            var tHalfPadding: number = 0;\r\n            var tIsHaveGlowFilter: boolean = false;\r\n            //这里判断是否存储了out，如果存储了直接用;\r\n            var source: any = null;\r\n            var out: any = sprite._cacheStyle.filterCache || null;\r\n            if (!out || sprite.getRepaint() != 0) {\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\r\n                //glow需要扩展边缘\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = new Rectangle();\r\n                b.copyFrom(sprite.getSelfBounds());\r\n                b.x += sprite.x;\r\n                b.y += sprite.y;\r\n                b.x -= sprite.pivotX + 4;//blur \r\n                b.y -= sprite.pivotY + 4;//blur\r\n                var tSX: number = b.x;\r\n                var tSY: number = b.y;\r\n                //重新计算宽和高\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //out && WebGLRTMgr.releaseRT(out);// out.recycle();\r\n                out && out.destroy();// out.recycle();\r\n                //source = WebGLRTMgr.getRT(b.width, b.height);\r\n                source = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n                //var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\r\n                var outRT: any = out = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n                sprite._getCacheStyle().filterCache = out;\r\n                //使用RT\r\n                webglctx.pushRT();\r\n                webglctx.useRT(source);\r\n                var tX: number = sprite.x - tSX + tHalfPadding;\r\n                var tY: number = sprite.y - tSY + tHalfPadding;\r\n                //执行节点的渲染\r\n                next._fun.call(next, sprite, context, tX, tY);\r\n                webglctx.useRT(outRT);\r\n                for (var i: number = 0; i < len; i++) {\r\n                    if (i != 0) {\r\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\r\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\r\n                        webglctx.useRT(source);\r\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\r\n                        webglctx.useRT(outRT);\r\n                    }\r\n                    var fil: NativeFilter = filters[i];\r\n                    //把src往out上画\r\n                    switch (fil.type) {\r\n                        case NativeFilter.BLUR:\r\n                            //fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\r\n                            webglctx.drawTargetBlurFilter(source, 0, 0, b.width, b.height, (fil as BlurFilter).strength);\r\n                            break;\r\n                        case NativeFilter.GLOW:\r\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            break;\r\n                        case NativeFilter.COLOR:\r\n                            webglctx.setColorFilter((<ColorFilter>fil));\r\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(RenderSpriteData.Texture2D));\r\n                            webglctx.setColorFilter(null);\r\n                            break;\r\n                    }\r\n                }\r\n                webglctx.popRT();\r\n            } else {\r\n\r\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = sprite.getBounds();\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //edit\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                b.x -= sprite.pivotX + 4; //blur \r\n                b.y -= sprite.pivotY + 4;//blur \r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                //scope.addValue(\"out\", out);\r\n            }\r\n            x = x - tHalfPadding - sprite.x;\r\n            y = y - tHalfPadding - sprite.y;\r\n            p.setTo(x, y);\r\n            mat.transformPoint(p);\r\n            x = p.x + b.x;\r\n            y = p.y + b.y;\r\n            //把最后的out纹理画出来\r\n            //webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\r\n\r\n            //把对象放回池子中\r\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\r\n            /*if (source) {\r\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\r\n                    s.destroy();\r\n                }, this);\r\n                source = null;\r\n                context.addRenderObject(submit);\r\n            }*/\r\n            webglctx.drawFilter(out, source, x, y, b.width, b.height);\r\n            mat.destroy();\r\n        }\r\n    }\r\n}\r\n\r\n","import { NodeFlags } from \"../Const\";\r\nimport { CacheStyle } from \"../display/css/CacheStyle\";\r\nimport { SpriteStyle } from \"../display/css/SpriteStyle\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { SpriteConst } from \"../display/SpriteConst\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\r\nimport { LayaGLQuickRunner } from \"./LayaGLQuickRunner\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { NativeFilter } from \"../filters/NativeFilter\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\n\r\n/**\r\n * @private\r\n * \r\n */\r\nexport interface _RenderFunction {\r\n    (sp: Sprite, ctx: Context, x: number, y: number): void;\r\n}\r\n\r\nconst INIT = 0x11111;\r\n/**\r\n * @private\r\n * 精灵渲染器\r\n */\r\nexport class RenderSprite {\r\n    /** @private */\r\n    static renders: RenderSprite[] = [];\r\n    /** @private */\r\n    protected static NORENDER: RenderSprite = new RenderSprite(0, null);\r\n    /** @internal */\r\n    _next: RenderSprite;\r\n    /** @internal */\r\n    _fun: Function;\r\n\r\n    /** @internal */\r\n    static __init__(): void {\r\n        LayaGLQuickRunner.__init__();\r\n        var i: number, len: number;\r\n        var initRender: RenderSprite;\r\n        initRender = new RenderSprite(INIT, null);\r\n        len = RenderSprite.renders.length = SpriteConst.CHILDS * 2;\r\n        for (i = 0; i < len; i++)\r\n            RenderSprite.renders[i] = initRender;\r\n\r\n        RenderSprite.renders[0] = new RenderSprite(0, null);\r\n    }\r\n\r\n    private static _initRenderFun(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var type: number = sprite._renderType;\r\n        var r: RenderSprite = RenderSprite.renders[type] = RenderSprite._getTypeRender(type);\r\n        r._fun(sprite, context, x, y);\r\n    }\r\n\r\n    private static _getTypeRender(type: number): RenderSprite {\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) return new RenderSprite(type, null);\r\n        var rst: RenderSprite | null = null;\r\n        var tType: number = SpriteConst.CHILDS;\r\n        while (tType > 0) {\r\n            if (tType & type)\r\n                rst = new RenderSprite(tType, rst);\r\n            tType = tType >> 1;\r\n        }\r\n        return rst as RenderSprite;\r\n    }\r\n\r\n    constructor(type: number, next: RenderSprite | null) {\r\n\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) {\r\n            this._fun = LayaGLQuickRunner.map[type];\r\n            this._next = RenderSprite.NORENDER;\r\n            return;\r\n        }\r\n        this._next = next || RenderSprite.NORENDER;\r\n        switch (type) {\r\n            case 0:\r\n                this._fun = this._no;\r\n                return;\r\n            case SpriteConst.ALPHA:\r\n                this._fun = this._alpha;\r\n                return;\r\n            case SpriteConst.TRANSFORM:\r\n                this._fun = this._transform;\r\n                return;\r\n            case SpriteConst.BLEND:\r\n                this._fun = this._blend;\r\n                return;\r\n            case SpriteConst.CANVAS:\r\n                this._fun = this._canvas;\r\n                return;\r\n            case SpriteConst.MASK:\r\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\r\n                    this._fun = this._maskNative;\r\n                }\r\n                else {\r\n                    this._fun = this._mask;\r\n                }\r\n                return;\r\n            case SpriteConst.CLIP:\r\n                this._fun = this._clip;\r\n                return;\r\n            case SpriteConst.STYLE:\r\n                this._fun = this._style;\r\n                return;\r\n            case SpriteConst.GRAPHICS:\r\n                this._fun = this._graphics;\r\n                return;\r\n            case SpriteConst.CHILDS:\r\n                this._fun = this._children;\r\n                return;\r\n            case SpriteConst.CUSTOM:\r\n                this._fun = this._custom;\r\n                return;\r\n            case SpriteConst.TEXTURE:\r\n                this._fun = this._texture;\r\n                return;\r\n            case SpriteConst.FILTERS:\r\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\r\n                    this._fun = NativeFilter._filter;\r\n                }\r\n                else {\r\n                    this._fun = Filter._filter;\r\n                }\r\n                return;\r\n            case SpriteConst.HITAREA:\r\n                this._fun = this._hitarea;\r\n                return;\r\n            case INIT:\r\n                this._fun = RenderSprite._initRenderFun;\r\n                return;\r\n        }\r\n\r\n        this.onCreate(type);\r\n    }\r\n\r\n    protected onCreate(type: number): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _style(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        //这里的功能取消了，应该不会走进这里\r\n    }\r\n\r\n    /**@internal */\r\n    _no(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _custom(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        sprite.customRender(context, x, y);\r\n        this._next._fun.call(this._next, sprite, context, 0, 0);\r\n    }\r\n\r\n    /**@internal */\r\n    _clip(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let next: RenderSprite = this._next;\r\n        if (next == RenderSprite.NORENDER) return;\r\n\r\n        if (sprite._getBit(NodeFlags.DISABLE_INNER_CLIPPING) && !context._drawingToTexture) {\r\n            next._fun.call(next, sprite, context, x, y);\r\n            return;\r\n        }\r\n\r\n        let r = sprite._style.scrollRect;\r\n        let width = r.width;\r\n        let height = r.height;\r\n        if (width === 0)\r\n            width = 0.001;\r\n        if (height === 0)\r\n            height = 0.001;\r\n        context.save();\r\n        context.clipRect(x, y, width, height);\r\n        next._fun.call(next, sprite, context, x - r.x, y - r.y);\r\n        context.restore();\r\n    }\r\n\r\n    /**@internal */\r\n    _texture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            var tex: Texture = sprite.texture;\r\n            if (tex._getSource()) {\r\n                var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n                var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n                var wRate: number = width / tex.sourceWidth;\r\n                var hRate: number = height / tex.sourceHeight;\r\n                width = tex.width * wRate;\r\n                height = tex.height * hRate;\r\n                if (width > 0 && height > 0) {\r\n                    let px = x - sprite.pivotX + tex.offsetX * wRate;\r\n                    let py = y - sprite.pivotY + tex.offsetY * hRate;\r\n                    context.material = sprite.graphics.material;\r\n                    context.drawTexture(tex, px, py, width, height, 0xffffffff);\r\n                    context.material = null;\r\n                }\r\n            }\r\n        }\r\n        var next: RenderSprite = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    _graphics(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            var style = sprite._style;\r\n            var g = sprite._graphics;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n        }\r\n        var next = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal IDE only*/\r\n    _hitarea(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!context._drawingToTexture && sprite.hitArea) {\r\n            var style = sprite._style;\r\n            var g = (<HitArea>sprite.hitArea)._hit;\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= 0.5;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            g = (<HitArea>sprite.hitArea)._unHit;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n        var next = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _alpha(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            var next: RenderSprite = this._next;\r\n            next._fun.call(next, sprite, context, x, y);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _transform(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var transform: Matrix = sprite.transform, _next: RenderSprite = this._next;\r\n        if (transform && _next != RenderSprite.NORENDER) {\r\n            context.save();\r\n            context.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + x, transform.ty + y);\r\n            _next._fun.call(_next, sprite, context, 0, 0);\r\n            context.restore();\r\n        } else {\r\n            if (_next != RenderSprite.NORENDER)\r\n                _next._fun.call(_next, sprite, context, x, y);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _children(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let style: SpriteStyle = sprite._style;\r\n        let childs = <Sprite[]>sprite._children, n: number = childs.length;\r\n        x = x - sprite.pivotX;\r\n        y = y - sprite.pivotY;\r\n        let textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, x2: number, y2: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (visFlag) {\r\n                if (rect && ((x2 = ele._x) >= right || (x2 + ele.width) <= left || (y2 = ele._y) >= bottom || (y2 + ele.height) <= top))\r\n                    visFlag = false;\r\n                else if (sprite._cacheStyle.mask == ele && !ele._getBit(NodeFlags.DISABLE_VISIBILITY))\r\n                    visFlag = false;\r\n            }\r\n\r\n            if (visFlag) {\r\n                if (ele._getBit(NodeFlags.DISABLE_OUTER_CLIPPING))\r\n                    context.clipRect(0, 0, 1, 1, true);\r\n\r\n                ele.render(context, x, y);\r\n            }\r\n        }\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n\r\n        if (!_cacheStyle.enableCanvasRender || !context._drawingToTexture && _cacheStyle.mask && _cacheStyle.mask._getBit(NodeFlags.DISABLE_VISIBILITY)) {\r\n            _next._fun.call(_next, sprite, context, x, y);\r\n            return;\r\n        }\r\n        _cacheStyle.cacheAs === 'bitmap' ? (Stat.canvasBitmap++) : (Stat.canvasNormal++);\r\n\r\n        //检查保存的文字是否失效了\r\n        var cacheNeedRebuild: boolean = false;\r\n        var textNeedRestore: boolean = false;\r\n\r\n        if (_cacheStyle.canvas) {\r\n            // 检查文字是否被释放了，以及clip是否改变了，需要重新cache了\r\n            var canv: any = _cacheStyle.canvas;\r\n            textNeedRestore = canv.isTextNeedRestore && canv.isTextNeedRestore();\r\n            cacheNeedRebuild = canv.isCacheValid && !canv.isCacheValid();\r\n        }\r\n\r\n        if (sprite._needRepaint() || (!_cacheStyle.canvas) || textNeedRestore || cacheNeedRebuild || ILaya.stage.isGlobalRepaint()) {\r\n            if (_cacheStyle.cacheAs === 'normal') {\r\n                if (context._targets) {// 如果有target说明父节点已经是一个cacheas bitmap了，就不再走cacheas normal的流程了\r\n                    _next._fun.call(_next, sprite, context, x, y);\r\n                    return;\t//不再继续\r\n                } else {\r\n                    this._canvas_webgl_normal_repaint(sprite, context);\r\n                }\r\n            } else {\r\n                this._canvas_repaint(sprite, context, x, y);\r\n            }\r\n        }\r\n        var tRec: Rectangle = _cacheStyle.cacheRect;\r\n        //Stage._dbgSprite.graphics.drawRect(x, y, 30,30, null, 'red');\r\n        context.material = sprite.graphics.material;\r\n        context.drawCanvas(_cacheStyle.canvas, x + tRec.x, y + tRec.y, tRec.width, tRec.height);\r\n        context.material = null;\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas_repaint(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n        var tx: Context;\r\n        var canvas: HTMLCanvas = _cacheStyle.canvas;\r\n        var left: number;\r\n        var top: number;\r\n        var tRec: Rectangle;\r\n        var tCacheType: string = _cacheStyle.cacheAs;\r\n\r\n        var w: number, h: number;\r\n        var scaleX: number, scaleY: number;\r\n\r\n        var scaleInfo: Point;\r\n        scaleInfo = _cacheStyle._calculateCacheRect(sprite, tCacheType, x, y);\r\n        scaleX = scaleInfo.x;\r\n        scaleY = scaleInfo.y;\r\n\r\n        //显示对象实际的绘图区域\r\n        tRec = _cacheStyle.cacheRect;\r\n\r\n        //计算cache画布的大小\r\n        w = tRec.width * scaleX;\r\n        h = tRec.height * scaleY;\r\n        left = tRec.x;\r\n        top = tRec.y;\r\n\r\n        if (tCacheType === 'bitmap' && (w > 2048 || h > 2048)) {\r\n            console.warn(\"cache bitmap size larger than 2048, cache ignored\");\r\n            _cacheStyle.releaseContext();\r\n            _next._fun.call(_next, sprite, context, x, y);\r\n            return;\r\n        }\r\n        if (!canvas) {\r\n            _cacheStyle.createContext();\r\n            canvas = _cacheStyle.canvas;\r\n        }\r\n        tx = canvas.context as Context;\r\n\r\n        //WebGL用\r\n        tx.sprite = sprite;\r\n\r\n        (canvas.width != w || canvas.height != h) && canvas.size(w, h);//asbitmap需要合理的大小，所以size放到前面\r\n\r\n        if (tCacheType === 'bitmap') tx.asBitmap = true;\r\n        else if (tCacheType === 'normal') tx.asBitmap = false;\r\n\r\n        //清理画布。之前记录的submit会被全部清掉\r\n        tx.clear();\r\n\r\n        //TODO:测试webgl下是否有缓存模糊\r\n        if (scaleX != 1 || scaleY != 1) {\r\n            var ctx: any = tx;\r\n            ctx.save();\r\n            ctx.scale(scaleX, scaleY);\r\n            _next._fun.call(_next, sprite, tx, -left, -top);\r\n            ctx.restore();\r\n            sprite._applyFilters();\r\n        } else {\r\n            ctx = tx;\r\n            _next._fun.call(_next, sprite, tx, -left, -top);\r\n            sprite._applyFilters();\r\n        }\r\n\r\n        if (_cacheStyle.staticCache) _cacheStyle.reCache = false;\r\n        Stat.canvasReCache++;\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas_webgl_normal_repaint(sprite: Sprite, context: Context): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n        var canvas: WebGLCacheAsNormalCanvas = _cacheStyle.canvas as unknown as WebGLCacheAsNormalCanvas;\r\n\r\n        var tCacheType: string = _cacheStyle.cacheAs;\r\n        _cacheStyle._calculateCacheRect(sprite, tCacheType, 0, 0);\r\n\r\n        if (!canvas) {\r\n            canvas = new WebGLCacheAsNormalCanvas(context, sprite);\r\n            _cacheStyle.canvas = ((canvas as any) as HTMLCanvas);\r\n        }\r\n        var tx: Context = canvas.context as Context;\r\n\r\n\r\n        canvas.startRec();\r\n        _next._fun.call(_next, sprite, tx, sprite.pivotX, sprite.pivotY);\t// 由于后面的渲染会减去pivot，而cacheas normal并不希望这样，只希望创建一个原始的图像。所以在这里补偿。\r\n        sprite._applyFilters();\r\n\r\n        Stat.canvasReCache++;\r\n        canvas.endRec();\r\n\r\n        //context.drawCanvas(canvas, x , y , 1, 1); // 这种情况下宽高没用\r\n    }\r\n\r\n    /**@internal */\r\n    _blend(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var next: RenderSprite = this._next;\r\n        if (style.blendMode) {\r\n            context.save();\r\n            context.globalCompositeOperation = style.blendMode;\r\n            next._fun.call(next, sprite, context, x, y);\r\n            context.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, context, x, y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * mask的渲染。 sprite有mask属性的情况下，来渲染这个sprite\r\n     * @param\tsprite\r\n     * @param\tcontext\r\n     * @param\tx\r\n     * @param\ty\r\n     */\r\n    _mask(sprite: Sprite, ctx: Context, x: number, y: number): void {\r\n        let next = this._next;\r\n        let mask = sprite.mask;\r\n        if (mask && (!mask._getBit(NodeFlags.DISABLE_VISIBILITY) || ctx._drawingToTexture)) {\r\n            ctx.save();\r\n\r\n            let preBlendMode: string = ctx.globalCompositeOperation;\r\n            let tRect: Rectangle = new Rectangle();\r\n            //裁剪范围是根据mask来定的\r\n            tRect.copyFrom(mask.getBounds());\r\n            // 为什么round\r\n            let w = tRect.width = Math.round(tRect.width);\r\n            let h = tRect.height = Math.round(tRect.height);\r\n            tRect.x = Math.round(tRect.x);\r\n            tRect.y = Math.round(tRect.y);\r\n\r\n            if (w > 0 && h > 0) {\r\n                let tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\r\n\r\n                ctx.breakNextMerge();\r\n                //先把mask画到tmpTarget上\r\n                ctx.pushRT();\r\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));\r\n                mask.render(ctx, -tRect.x, -tRect.y);\r\n                ctx.breakNextMerge();\r\n                ctx.popRT();\r\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\r\n                ctx.save();\r\n\r\n                /**\r\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\r\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\r\n                 */\r\n                let shrink = 0.1;\r\n                ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n\r\n                //画出本节点的内容\r\n                next._fun.call(next, sprite, ctx, x, y);\r\n                ctx.restore();\r\n\r\n                //设置混合模式\r\n                preBlendMode = ctx.globalCompositeOperation;\r\n                ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\r\n\r\n                let shaderValue: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n                let uv = Texture.INV_UV;\r\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\r\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\r\n                //所以增加的限制。王亚伟\r\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\r\n\r\n                ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\r\n                ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\r\n            }\r\n\r\n            //恢复混合模式\r\n            ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\r\n\r\n            ctx.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, ctx, x, y);\r\n        }\r\n\r\n    }\r\n    _maskNative(sprite: Sprite, ctx: Context, x: number, y: number): void {\r\n        var next: RenderSprite = this._next;\r\n        var mask: Sprite = sprite.mask;\r\n        if (mask) {\r\n            ctx.save();\r\n            var preBlendMode: string = ctx.globalCompositeOperation;\r\n            var tRect: Rectangle = new Rectangle();\r\n            //裁剪范围是根据mask来定的\r\n            tRect.copyFrom(mask.getBounds());\r\n            // 为什么round\r\n            let w = tRect.width = Math.round(tRect.width);\r\n            let h = tRect.height = Math.round(tRect.height);\r\n            tRect.x = Math.round(tRect.x);\r\n            tRect.y = Math.round(tRect.y);\r\n\r\n            if (w > 0 && h > 0) {\r\n                let tmpRT: any = (ctx as any).drawMask(w, h);\r\n                /*var tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\r\n\r\n                ctx.breakNextMerge();\r\n                //先把mask画到tmpTarget上\r\n                ctx.pushRT();\r\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));*/\r\n                mask.render(ctx, -tRect.x, -tRect.y);\r\n                let shrink = 0.1;\r\n                (ctx as any).drawMasked(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\r\n                //ctx.breakNextMerge();\r\n                //ctx.popRT();\r\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\r\n                //ctx.save();\r\n\r\n                /**\r\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\r\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\r\n                 */\r\n                //let shrink = 0.1;\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w-shrink*2, h-shrink*2);\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n\r\n                //画出本节点的内容\r\n                next._fun.call(next, sprite, ctx, x, y);\r\n\r\n                (ctx as any).drawMaskComposite(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n                //ctx.restore();\r\n\r\n                //设置混合模式\r\n                //preBlendMode = ctx.globalCompositeOperation;\r\n                //ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\r\n\r\n                //var shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n                //var uv = Texture.INV_UV;\r\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\r\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\r\n                //所以增加的限制。王亚伟\r\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\r\n\r\n                //ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\r\n                //ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\r\n\r\n                //恢复混合模式\r\n                //ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\r\n            }\r\n            ctx.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, ctx, x, y);\r\n        }\r\n\r\n    }\r\n\r\n    //static tempUV: any[] = new Array(8);\r\n    static tmpTarget(ctx: Context, rt: RenderTexture2D, w: number, h: number): void {\r\n        rt.start();\r\n        rt.clear(0, 0, 0, 0);\r\n    }\r\n\r\n    static recycleTarget(rt: RenderTexture2D): void {\r\n        WebGLRTMgr.releaseRT(rt);\r\n    }\r\n\r\n    static setBlendMode(blendMode: string): void {\r\n        BlendMode.targetFns[BlendMode.TOINT[blendMode]]();\r\n    }\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\n\r\n/**\r\n * @private\r\n * 计算贝塞尔曲线的工具类。\r\n */\r\nexport class Bezier {\r\n\r\n    /**\r\n     * 工具类单例\r\n     */\r\n    static I: Bezier = new Bezier();\r\n    /** @private */\r\n    private _controlPoints: any[] = [new Point(), new Point(), new Point()];\r\n    /** @private */\r\n    private _calFun: Function = this.getPoint2;\r\n\r\n    /** @private */\r\n    private _switchPoint(x: number, y: number): void {\r\n        var tPoint: Point = this._controlPoints.shift();\r\n        tPoint.setTo(x, y);\r\n        this._controlPoints.push(tPoint);\r\n    }\r\n\r\n    /**\r\n     * 计算二次贝塞尔点。\r\n     */\r\n    getPoint2(t: number, rst: any[]): void {\r\n        //二次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var lineX: number = Math.pow((1 - t), 2) * p1.x + 2 * t * (1 - t) * p2.x + Math.pow(t, 2) * p3.x;\r\n        var lineY: number = Math.pow((1 - t), 2) * p1.y + 2 * t * (1 - t) * p2.y + Math.pow(t, 2) * p3.y;\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔点\r\n     */\r\n    getPoint3(t: number, rst: any[]): void {\r\n        //三次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var p4: Point = this._controlPoints[3];\r\n        var lineX: number = Math.pow((1 - t), 3) * p1.x + 3 * p2.x * t * (1 - t) * (1 - t) + 3 * p3.x * t * t * (1 - t) + p4.x * Math.pow(t, 3);\r\n        var lineY: number = Math.pow((1 - t), 3) * p1.y + 3 * p2.y * t * (1 - t) * (1 - t) + 3 * p3.y * t * t * (1 - t) + p4.y * Math.pow(t, 3);\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * 计算贝塞尔点序列\r\n     */\r\n    insertPoints(count: number, rst: any[]): void {\r\n        var i: number;\r\n        count = count > 0 ? count : 5;\r\n        var dLen: number;\r\n        dLen = 1 / count;\r\n        for (i = 0; i <= 1; i += dLen) {\r\n            this._calFun(i, rst);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取贝塞尔曲线上的点。\r\n     * @param pList 控制点[x0,y0,x1,y1...]\r\n     * @param inSertCount 每次曲线的插值数量\r\n     */\r\n    getBezierPoints(pList: any[], inSertCount: number = 5, count: number = 2): any[] {\r\n        var i: number, len: number;\r\n        len = pList.length;\r\n        if (len < (count + 1) * 2) return [];\r\n        var rst: any[] = [];\r\n        switch (count) {\r\n            case 2:\r\n                this._calFun = this.getPoint2;\r\n                break;\r\n            case 3:\r\n                this._calFun = this.getPoint3;\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        while (this._controlPoints.length <= count) {\r\n            this._controlPoints.push(Point.create());\r\n        }\r\n        for (i = 0; i < count * 2; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n        }\r\n        for (i = count * 2; i < len; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n            if ((i / 2) % count == 0) this.insertPoints(inSertCount, rst);\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\n","export enum RenderStateType{\r\n    DepthTest,\r\n    DepthMask,\r\n    DepthFunc,\r\n    StencilTest,\r\n    StencilMask,\r\n    StencilFunc,\r\n    StencilOp,\r\n    BlendType,\r\n    BlendEquation,\r\n    BlendEquationSeparate,\r\n    BlendFunc,\r\n    BlendFuncSeperate,\r\n    CullFace,\r\n    FrontFace,\r\n}","import { ColorUtils } from \"../../utils/ColorUtils\"\r\n\r\nexport class DrawStyle {\r\n    static DEFAULT: DrawStyle = new DrawStyle(\"#000000\")\r\n\r\n    _color: ColorUtils;\r\n\r\n    static create(value: any): DrawStyle {\r\n        if (value) {\r\n            var color: ColorUtils = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\r\n            return color._drawStyle || (color._drawStyle = new DrawStyle(value));\r\n        }\r\n        return DrawStyle.DEFAULT;\r\n    }\r\n\r\n    constructor(value: any) {\r\n        this.setValue(value);\r\n    }\r\n\r\n    setValue(value: any): void {\r\n        if (value) {\r\n            this._color = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\r\n        }\r\n        else this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    reset(): void {\r\n        this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    toInt(): number {\r\n        return this._color.numColor;\r\n    }\r\n\r\n    equal(value: any): boolean {\r\n        if (typeof (value) == 'string') return this._color.strColor === (<string>value);\r\n        if (value instanceof ColorUtils) return this._color.numColor === ((<ColorUtils>value)).numColor;\r\n        return false;\r\n    }\r\n\r\n    toColorStr(): string {\r\n        return this._color.strColor;\r\n    }\r\n}\r\n\r\n\r\n","\r\nexport class Path {\r\n\r\n    //public var _rect:Rectangle;\r\n    /**@internal */\r\n    _lastOriX: number = 0;\t//moveto等的原始位置。没有经过内部矩阵变换的\r\n    /**@internal */\r\n    _lastOriY: number = 0;\r\n    paths: any[] = [];\t//所有的路径。{@type renderPath[] }\r\n    private _curPath: renderPath = null;\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n    beginPath(convex: boolean): void {\r\n        this.paths.length = 1;\r\n        this._curPath = this.paths[0] = new renderPath();\r\n        this._curPath.convex = convex;\r\n        //_curPath.path = [];\r\n    }\r\n\r\n    closePath(): void {\r\n        this._curPath.loop = true;\r\n    }\r\n\r\n    newPath(): void {\r\n        this._curPath = new renderPath();\r\n        this.paths.push(this._curPath);\r\n    }\r\n\r\n    addPoint(pointX: number, pointY: number): void {\r\n        //tempArray.push(pointX, pointY);\r\n        this._curPath.path.push(pointX, pointY);\r\n    }\r\n\r\n    //直接添加一个完整的path\r\n    push(points: any[], convex: boolean): void {\r\n        if (!this._curPath) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        } else if (this._curPath.path.length > 0) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        }\r\n        var rp: renderPath = this._curPath;\r\n        rp.path = points.slice();//TODO 这个可能多次slice了\r\n        rp.convex = convex;\r\n    }\r\n\r\n    reset(): void {\r\n        this.paths.length = 0;//TODO 复用\r\n    }\r\n}\r\n\r\n\r\n\r\nclass renderPath {\r\n    path: any[] = []; //[x,y,x,y,....]的数组\r\n    loop: boolean = false;\r\n    convex: boolean = false;\r\n}\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { Context } from \"../../../resource/Context\"\r\nimport { SubmitBase } from \"../../submit/SubmitBase\"\r\n\r\nexport class SaveBase implements ISaveData {\r\n\r\n    /*[FILEINDEX:1]*/\r\n    /*[DISBALEOUTCONST-BEGIN]*/\r\n    static TYPE_ALPHA: number = 0x1;\r\n    static TYPE_FILESTYLE: number = 0x2;\r\n    static TYPE_FONT: number = 0x8;\r\n    static TYPE_LINEWIDTH: number = 0x100;\r\n    static TYPE_STROKESTYLE: number = 0x200;\r\n    static TYPE_MARK: number = 0x400;\r\n    static TYPE_TRANSFORM: number = 0x800;\r\n    static TYPE_TRANSLATE: number = 0x1000;\r\n    static TYPE_ENABLEMERGE: number = 0x2000;\r\n\r\n    static TYPE_TEXTBASELINE: number = 0x4000;\r\n    static TYPE_TEXTALIGN: number = 0x8000;\r\n    static TYPE_GLOBALCOMPOSITEOPERATION: number = 0x10000;\r\n    static TYPE_CLIPRECT: number = 0x20000;\r\n    static TYPE_CLIPRECT_STENCIL: number = 0x40000;\r\n    static TYPE_IBVB: number = 0x80000;\r\n    static TYPE_SHADER: number = 0x100000;\r\n    static TYPE_FILTERS: number = 0x200000;\r\n    static TYPE_FILTERS_TYPE: number = 0x400000;\r\n    static TYPE_COLORFILTER: number = 0x800000;\r\n    /*[DISBALEOUTCONST-END]*/\r\n    private static POOL: any = SaveBase._createArray();\r\n    private static _namemap: any = SaveBase._init();\r\n    /**@internal */\r\n    static _createArray(): any[] {\r\n        var value: any = [];\r\n        value._length = 0;\r\n        return value;\r\n    }\r\n    /**@internal */\r\n    static _init(): any {\r\n        var namemap: any = SaveBase._namemap = {};\r\n\r\n        namemap[SaveBase.TYPE_ALPHA] = \"ALPHA\";\r\n        namemap[SaveBase.TYPE_FILESTYLE] = \"fillStyle\";\r\n        namemap[SaveBase.TYPE_FONT] = \"font\";\r\n        namemap[SaveBase.TYPE_LINEWIDTH] = \"lineWidth\";\r\n        namemap[SaveBase.TYPE_STROKESTYLE] = \"strokeStyle\";\r\n\r\n        namemap[SaveBase.TYPE_ENABLEMERGE] = \"_mergeID\";\r\n\r\n        namemap[SaveBase.TYPE_MARK] = namemap[SaveBase.TYPE_TRANSFORM] = namemap[SaveBase.TYPE_TRANSLATE] = [];\r\n\r\n        namemap[SaveBase.TYPE_TEXTBASELINE] = \"textBaseline\";\r\n        namemap[SaveBase.TYPE_TEXTALIGN] = \"textAlign\";\r\n        namemap[SaveBase.TYPE_GLOBALCOMPOSITEOPERATION] = \"_nBlendType\";\r\n        namemap[SaveBase.TYPE_SHADER] = \"shader\";\r\n        namemap[SaveBase.TYPE_FILTERS] = \"filters\";\r\n        namemap[SaveBase.TYPE_COLORFILTER] = '_colorFiler';\r\n        return namemap;\r\n    }\r\n\r\n    private _valueName: string;\r\n    private _value: any;\r\n    private _dataObj: any;\r\n    private _newSubmit: boolean;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._dataObj[this._valueName] = this._value;\r\n        SaveBase.POOL[SaveBase.POOL._length++] = this;\r\n        this._newSubmit && (context._curSubmit = SubmitBase.RENDERBASE);\r\n    }\r\n\r\n    static save(context: Context, type: number, dataObj: any, newSubmit: boolean): void {\r\n        if ((context._saveMark._saveuse & type) !== type) {\r\n            context._saveMark._saveuse |= type;\r\n            var cache: any = SaveBase.POOL;\r\n            var o: any = cache._length > 0 ? cache[--cache._length] : (new SaveBase());\r\n            o._value = dataObj[o._valueName = SaveBase._namemap[type]];\r\n            o._dataObj = dataObj;\r\n            o._newSubmit = newSubmit;\r\n            var _save: any = context._save;\r\n            _save[_save._length++] = o;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Rectangle } from \"../../../maths/Rectangle\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveClipRect implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n\r\n    _globalClipMatrix: Matrix = new Matrix();\r\n    _clipInfoID: number = -1;\r\n    _clipRect: Rectangle = new Rectangle();\r\n    incache: boolean = false;\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._globalClipMatrix.copyTo(context._globalClipMatrix);\r\n        this._clipRect.clone(context._clipRect);\r\n        context._clipInfoID = this._clipInfoID;\r\n        SaveClipRect.POOL[SaveClipRect.POOL._length++] = this;\r\n        context._clipInCache = this.incache;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        if ((context._saveMark._saveuse & SaveBase.TYPE_CLIPRECT) == SaveBase.TYPE_CLIPRECT) return;\r\n        context._saveMark._saveuse |= SaveBase.TYPE_CLIPRECT;\r\n        var cache: any = SaveClipRect.POOL;\r\n        var o: SaveClipRect = cache._length > 0 ? cache[--cache._length] : (new SaveClipRect());\r\n        context._globalClipMatrix.copyTo(o._globalClipMatrix);\r\n        context._clipRect.clone(o._clipRect);\r\n        o._clipInfoID = context._clipInfoID;\r\n        o.incache = context._clipInCache;\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { Context } from \"../../../resource/Context\";\r\nimport { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\n\r\nexport class SaveMark implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _saveuse: number = 0;\r\n    /**@internal */\r\n    _preSaveMark: SaveMark;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean {\r\n        return true;\r\n    }\r\n\r\n    restore(context: Context): void {\r\n        context._saveMark = this._preSaveMark;\r\n        SaveMark.POOL[SaveMark.POOL._length++] = this;\r\n    }\r\n\r\n    static Create(context: Context): SaveMark {\r\n        var no: any = SaveMark.POOL;\r\n        var o: SaveMark = no._length > 0 ? no[--no._length] : (new SaveMark());\r\n        o._saveuse = 0;\r\n        o._preSaveMark = context._saveMark;\r\n        context._saveMark = o;\r\n        return o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveTransform implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _savematrix: Matrix;\r\n    /**@internal */\r\n    _matrix: Matrix = new Matrix();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        context._curMat = this._savematrix;\r\n        SaveTransform.POOL[SaveTransform.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var _saveMark: any = context._saveMark;\r\n        if ((_saveMark._saveuse & SaveBase.TYPE_TRANSFORM) === SaveBase.TYPE_TRANSFORM) return;\r\n        _saveMark._saveuse |= SaveBase.TYPE_TRANSFORM;\r\n        var no: any = SaveTransform.POOL;\r\n        var o: SaveTransform = no._length > 0 ? no[--no._length] : (new SaveTransform());\r\n        o._savematrix = context._curMat;\r\n        context._curMat = context._curMat.copyTo(o._matrix);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveTranslate implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _mat: Matrix = new Matrix();\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._mat.copyTo(context._curMat);\r\n        SaveTranslate.POOL[SaveTranslate.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var no: any = SaveTranslate.POOL;\r\n        var o: SaveTranslate = no._length > 0 ? no[--no._length] : (new SaveTranslate());\r\n        context._curMat.copyTo(o._mat);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { ShaderDefines2D } from \"./ShaderDefines2D\";\r\nimport { DrawStyle } from \"../../canvas/DrawStyle\"\r\n\r\nimport texture_vs from './files/texture.vs.glsl';\r\nimport texture_ps from './files/texture.ps.glsl';\r\nimport prime_vs from './files/primitive.vs.glsl';\r\nimport prime_ps from './files/primitive.ps.glsl';\r\n\r\n\r\nimport Sprite2DFrag from './NewShader/Sprite2DFrag.glsl';\r\nimport Sprite2DVertex from './NewShader/Sprite2DVertex.glsl';\r\nimport Sprite2DShaderInfo from './NewShader/Sprite2DShaderInfo.glsl';\r\n\r\nimport { Shader3D, ShaderFeatureType } from \"../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderCompile } from \"../../utils/ShaderCompile\";\r\nimport { ShaderDataType } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { SubShader } from \"../../../RenderEngine/RenderShader/SubShader\";\r\nimport { Material } from \"../../../resource/Material\";\r\n\r\nexport class Shader2D {\r\n    /**@internal */\r\n    static textureShader: Shader3D;\r\n    /**@internal */\r\n    static primitiveShader: Shader3D;\r\n\r\n    /**@internal */\r\n    ALPHA: number = 1;\r\n    /**@internal */\r\n    filters: any[];\r\n    /**@internal */\r\n    shaderType: number = 0;\r\n    /**@internal */\r\n    colorAdd: any[];\r\n    /**@internal */\r\n    fillStyle = DrawStyle.DEFAULT;\r\n    /**@internal */\r\n    strokeStyle = DrawStyle.DEFAULT;\r\n    /**@internal */\r\n    material: Material = null;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy(): void {\r\n        this.filters = null;\r\n    }\r\n\r\n    /**\r\n     * primitive Mesh Descript\r\n     */\r\n    public static readonly primitiveAttribute: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_position': [0, ShaderDataType.Vector4],\r\n        'a_attribColor': [1, ShaderDataType.Vector4],\r\n    }\r\n\r\n    /**\r\n     * TextureSV Mesh Descript\r\n     */\r\n    public static readonly textureAttribute: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_posuv': [0, ShaderDataType.Vector4],\r\n        'a_attribColor': [1, ShaderDataType.Vector4],\r\n        'a_attribFlags': [2, ShaderDataType.Vector4]\r\n    }\r\n\r\n    /**\r\n     * init 2D internal Shader\r\n     */\r\n    static __init__(): void {\r\n        Shader3D.addInclude(\"Sprite2DFrag.glsl\", Sprite2DFrag);\r\n        Shader3D.addInclude(\"Sprite2DVertex.glsl\", Sprite2DVertex);\r\n        Shader3D.addInclude(\"Sprite2DShaderInfo.glsl\", Sprite2DShaderInfo);\r\n\r\n        //textureShader\r\n        Shader2D.textureShader = Shader3D.add(\"Sprite2DTexture\", false, false);\r\n        Shader2D.textureShader.shaderType = ShaderFeatureType.D2;\r\n        let subShader = new SubShader(Shader2D.textureAttribute, {}, {});\r\n        Shader2D.textureShader.addSubShader(subShader);\r\n        subShader.addShaderPass(texture_vs, texture_ps);\r\n\r\n        //primitiveShader\r\n        Shader2D.primitiveShader = Shader3D.add(\"Sprite2DPrimitive\", false, false);\r\n        Shader2D.primitiveShader.shaderType = ShaderFeatureType.D2;\r\n        subShader = new SubShader(Shader2D.primitiveAttribute, {}, {});\r\n        Shader2D.primitiveShader.addSubShader(subShader);\r\n        subShader.addShaderPass(prime_vs, prime_ps);\r\n    }\r\n}\r\n\r\n","vec3 gammaToLinear(in vec3 value)\r\n{\r\n    return pow((value + 0.055) / 1.055, vec3(2.4));\r\n}\r\n\r\nvec4 gammaToLinear(in vec4 value)\r\n{\r\n    return vec4(gammaToLinear(value.rgb), value.a);\r\n}\r\n\r\nvec3 linearToGamma(in vec3 value)\r\n{\r\n    return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\r\n\r\n    // return pow(value, vec3(1.0 / 2.2));\r\n    // return pow(value, vec3(0.455));\r\n}\r\n\r\nvec4 linearToGamma(in vec4 value)\r\n{\r\n    return vec4(linearToGamma(value.rgb), value.a);\r\n}\r\n\r\nvec4 sampleTexture(sampler2D spriteTexture, vec2 uv)\r\n{\r\n    vec4 color = texture2D(spriteTexture, uv);\r\n#ifndef GAMMATEXTURE\r\n    //是linear数据\r\n    #ifdef GAMMASPACE\r\n        color.xyz = linearToGamma(color.xyz);    \r\n    #endif\r\n#else\r\n    //gamma数据\r\n    #ifndef GAMMASPACE\r\n        color.xyz = gammaToLinear(color.xyz);\r\n    #endif\r\n#endif\r\n    return color;\r\n}\r\n\r\n#if defined(PRIMITIVEMESH)\r\n    varying vec4 v_color;\r\n    varying vec2 v_cliped;\r\n  \r\n\r\n    vec4 getGlColor(vec4 color){\r\n        #ifdef GAMMASPACE\r\n            return color;\r\n        #else\r\n            return gammaToLinear(color);\r\n        #endif\r\n    }\r\n\r\n#elif defined(TEXTUREVS)\r\n    varying vec2 v_cliped;\r\n    varying vec4 v_texcoordAlpha;\r\n    varying vec4 v_color;\r\n    varying float v_useTex;\r\n    \r\n    //uniform\r\n    uniform sampler2D u_spriteTexture;\r\n\r\n    #ifdef BLUR_FILTER\r\n        uniform vec4 u_strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\r\n        uniform vec2 u_blurInfo;\r\n        #define PI 3.141593\r\n    #endif\r\n\r\n    #ifdef COLOR_FILTER\r\n        uniform vec4 u_colorAlpha;\r\n        uniform mat4 u_colorMat;\r\n    #endif\r\n\r\n    #ifdef GLOW_FILTER\r\n        uniform vec4 u_color;\r\n        uniform vec4 u_blurInfo1;\r\n        uniform vec4 u_blurInfo2;\r\n    #endif\r\n\r\n    #ifdef COLOR_ADD\r\n        uniform vec4 u_colorAdd;\r\n    #endif\r\n\r\n    #ifdef FILLTEXTURE\r\n        uniform vec4 u_TexRange; // startu,startv,urange, vrange\r\n    #endif\r\n\r\n\r\n    #ifdef BLUR_FILTER\r\n        float getGaussian(float x, float y)\r\n        {\r\n            return u_strength_sig2_2sig2_gauss1.w * exp(-(x * x + y * y) / u_strength_sig2_2sig2_gauss1.z);\r\n        }\r\n\r\n        vec4 blur()\r\n        {\r\n            const float blurw = 9.0;\r\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n            vec2 halfsz = vec2(blurw, blurw) / 2.0 / u_blurInfo;\r\n            vec2 startpos = v_texcoordAlpha.xy - halfsz;\r\n            vec2 ctexcoord = startpos;\r\n            vec2 step = 1.0 / u_blurInfo; //每个像素\r\n\r\n            for (float y = 0.0; y <= blurw; ++y)\r\n            {\r\n                ctexcoord.x = startpos.x;\r\n                for (float x = 0.0; x <= blurw; ++x)\r\n                {\r\n                    // TODO 纹理坐标的固定偏移应该在vs中处理\r\n                    vec4Color += sampleTexture(u_spriteTexture, ctexcoord) * getGaussian(x - blurw / 2.0, y - blurw / 2.0);\r\n                    ctexcoord.x += step.x;\r\n                }\r\n                ctexcoord.y += step.y;\r\n            }\r\n            // vec4Color.w=1.0;  这个会导致丢失alpha。以后有时间再找模糊会导致透明的问题\r\n            return vec4Color;\r\n        }\r\n    #endif\r\n\r\n    vec4 getSpriteTextureColor(){\r\n        #ifdef FILLTEXTURE\r\n            return sampleTexture(u_spriteTexture, fract(v_texcoordAlpha.xy) * u_TexRange.zw + u_TexRange.xy);\r\n        #else\r\n            return sampleTexture(u_spriteTexture, v_texcoordAlpha.xy);\r\n        #endif\r\n    }\r\n\r\n    void setglColor(in vec4 color){\r\n        if (v_useTex <= 0.)\r\n            color = vec4(1., 1., 1., 1.);\r\n\r\n        color.a *= v_color.w;\r\n        // color.rgb*=v_color.w;\r\n        vec4 transColor = v_color;\r\n        #ifndef GAMMASPACE\r\n            transColor = gammaToLinear(v_color);\r\n        #endif\r\n        color.rgb *= transColor.rgb;\r\n        gl_FragColor = color;\r\n\r\n        #ifdef COLOR_ADD\r\n            gl_FragColor = vec4(u_colorAdd.rgb, u_colorAdd.a * gl_FragColor.a);\r\n            gl_FragColor.xyz *= u_colorAdd.a;\r\n        #endif\r\n\r\n        #ifdef BLUR_FILTER\r\n            gl_FragColor = blur();\r\n            gl_FragColor.w *= v_color.w;\r\n        #endif\r\n\r\n        #ifdef COLOR_FILTER\r\n            mat4 alphaMat = u_colorMat;\r\n\r\n            alphaMat[0][3] *= gl_FragColor.a;\r\n            alphaMat[1][3] *= gl_FragColor.a;\r\n            alphaMat[2][3] *= gl_FragColor.a;\r\n\r\n            gl_FragColor = gl_FragColor * alphaMat;\r\n            gl_FragColor += u_colorAlpha / 255.0 * gl_FragColor.a;\r\n        #endif\r\n\r\n        #ifdef GLOW_FILTER\r\n            const float c_IterationTime = 10.0;\r\n            float floatIterationTotalTime = c_IterationTime * c_IterationTime;\r\n            vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n            vec2 vec2FilterDir = vec2(-(u_blurInfo1.z) / u_blurInfo2.x, -(u_blurInfo1.w) / u_blurInfo2.y);\r\n            vec2 vec2FilterOff = vec2(u_blurInfo1.x / u_blurInfo2.x / c_IterationTime * 2.0, u_blurInfo1.y / u_blurInfo2.y / c_IterationTime * 2.0);\r\n            float maxNum = u_blurInfo1.x * u_blurInfo1.y;\r\n            vec2 vec2Off = vec2(0.0, 0.0);\r\n            float floatOff = c_IterationTime / 2.0;\r\n            for (float i = 0.0; i <= c_IterationTime; ++i)\r\n            {\r\n                for (float j = 0.0; j <= c_IterationTime; ++j)\r\n                {\r\n                    vec2Off = vec2(vec2FilterOff.x * (i - floatOff), vec2FilterOff.y * (j - floatOff));\r\n                    vec4Color += sampleTexture(u_spriteTexture, v_texcoordAlpha.xy + vec2FilterDir + vec2Off) / floatIterationTotalTime;\r\n                }\r\n            }\r\n            gl_FragColor = vec4(u_color.rgb, vec4Color.a * u_blurInfo2.z);\r\n            gl_FragColor.rgb *= gl_FragColor.a;\r\n        #endif\r\n    }\r\n#endif\r\n\r\n\r\n\r\nvoid clip(){\r\n    if(v_cliped.x<0.) discard;\r\n    if(v_cliped.x>1.) discard;\r\n    if(v_cliped.y<0.) discard;\r\n    if(v_cliped.y>1.) discard;\r\n}","#include \"Sprite2DShaderInfo.glsl\";\r\n#if defined(PRIMITIVEMESH)\r\n    // attribute vec4 a_position;\r\n    // attribute vec4 a_attribColor;\r\n    #ifdef WORLDMAT\r\n        uniform mat4 u_mmat;\r\n    #endif//WORLDMAT\r\n\r\n    varying vec4 v_color;\r\n    varying vec2 v_cliped;\r\n\r\n    uniform vec4 u_clipMatDir;\r\n    uniform vec2 u_clipMatPos;\r\n    uniform vec2 u_size;\r\n\r\n    void getVertexInfo(inout vertexInfo info){\r\n        float clipw = length(u_clipMatDir.xy);\r\n        float cliph = length(u_clipMatDir.zw);\r\n        vec2 clippos = a_position.xy - u_clipMatPos.xy;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n        if(clipw>20000. && cliph>20000.)\r\n            info.cliped = vec2(0.5,0.5);\r\n        else {\r\n            //clipdir是带缩放的方向，由于上面clippos是在缩放后的空间计算的，所以需要把方向先normalize一下\r\n            info.cliped =vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\r\n        }\r\n        info.color = a_attribColor/255.;\r\n    }\r\n\r\n    void getPosition(inout vec4 pos){\r\n        #ifdef WORLDMAT\r\n            vec4 pos = u_mmat*vec4(a_position.xy,0.,1.);\r\n            pos = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,pos.z,1.0);\r\n        #else\r\n            pos = vec4((a_position.x/u_size.x-0.5)*2.0,(0.5-a_position.y/u_size.y)*2.0,a_position.z,1.0);\r\n        #endif\r\n    }\r\n\r\n#elif defined(TEXTUREVS)\r\n\t//texture和fillrect使用的。\r\n    // attribute vec4 a_posuv;\r\n    // attribute vec4 a_attribColor;\r\n    // attribute vec4 a_attribFlags;\r\n\r\n    uniform vec4 u_clipMatDir;\r\n    uniform vec2 u_clipMatPos;\t\t// 这个是全局的，不用再应用矩阵了。\r\n\r\n    uniform vec2 u_size;\r\n    uniform vec2 u_clipOff;\t\t\t// 使用要把clip偏移。cacheas normal用. 只用了[0]\r\n    #ifdef WORLDMAT\r\n        uniform mat4 u_mmat;\r\n    #endif\r\n\r\n    #ifdef MVP3D\r\n        uniform mat4 u_MvpMatrix;\r\n    #endif\r\n\r\n    varying vec2 v_cliped;\r\n    varying vec4 v_texcoordAlpha;\r\n    varying vec4 v_color;\r\n    varying float v_useTex;\r\n\r\n    void getVertexInfo(inout vertexInfo info){\r\n       \t//texcoordAlpha\r\n        info.texcoordAlpha.xy = a_posuv.zw;\r\n        //color\r\n        info.color = a_attribColor/255.0;\r\n\t    info.color.xyz*= info.color.w;//反正后面也要预乘\r\n        //useTex\r\n        info.useTex = a_attribFlags.r/255.0;\r\n\r\n        //clip\r\n    \tfloat clipw = length(u_clipMatDir.xy);\r\n    \tfloat cliph = length(u_clipMatDir.zw);\r\n\t    vec2 clpos = u_clipMatPos.xy;\r\n        #ifdef WORLDMAT\r\n            // 如果有mmat，需要修改clipMatPos,因为 这是cacheas normal （如果不是就错了）， clipMatPos被去掉了偏移\r\n            if(u_clipOff[0]>0.0){\r\n                clpos.x+=u_mmat[3].x;\t//tx\t最简单处理\r\n                clpos.y+=u_mmat[3].y;\t//ty\r\n            }\r\n        #endif\r\n        vec2 clippos = a_posuv.xy - clpos;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n        if(clipw>20000. && cliph>20000.)\r\n            info.cliped = vec2(0.5,0.5);\r\n        else {\r\n            //转成0到1之间。/clipw/clipw 表示clippos与normalize之后的clip朝向点积之后，再除以clipw\r\n            info.cliped = vec2( dot(clippos,u_clipMatDir.xy)/clipw/clipw, dot(clippos,u_clipMatDir.zw)/cliph/cliph);\r\n        }\r\n    }\r\n\r\n    void getPosition(inout vec4 glPosition){\r\n        vec4 pos = vec4(a_posuv.xy,0.,1.);\r\n        #ifdef WORLDMAT\r\n            pos= u_mmat * pos;\r\n        #endif\r\n            vec4 pos1 = vec4((pos.x/u_size.x-0.5)*2.0,(0.5-pos.y/u_size.y)*2.0,0.,1.0);\r\n        #ifdef MVP3D\r\n            glPosition = u_MvpMatrix * pos1;\r\n        #else\r\n            glPosition = pos1;\r\n        #endif\r\n        \r\n        #ifdef INVERTY\r\n            glPosition.y = -glPosition.y;\r\n        #endif\r\n    }\r\n\r\n#endif","\r\n#if defined(PRIMITIVEMESH)\r\n    struct vertexInfo {\r\n        vec4 color;\r\n        vec2 cliped;\r\n    };\r\n#elif defined(TEXTUREVS)\r\n   struct vertexInfo {\r\n        vec4 color;\r\n        vec2 cliped;\r\n        vec4 texcoordAlpha;\r\n        float useTex;\r\n    };\r\n#endif","#define SHADER_NAME TextureVS2D\r\n#include \"Sprite2DVertex.glsl\";\r\n\r\nvoid main() {\r\n\tvertexInfo info;\r\n\tgetVertexInfo(info);\r\n\r\n\tv_cliped = info.cliped;\r\n\tv_texcoordAlpha = info.texcoordAlpha;\r\n\tv_useTex = info.useTex;\r\n\tv_color = info.color;\r\n\r\n\tvec4 pos;\r\n\tgetPosition(pos);\r\n\tgl_Position = pos;\r\n\r\n}\r\n","#define SHADER_NAME TextureFS2D\r\n//texture和fillrect使用的。\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\r\nprecision highp float;\r\n#else\r\nprecision mediump float;\r\n#endif\r\n\r\n#include \"Sprite2DFrag.glsl\";\r\n\r\nvoid main()\r\n{\r\n    clip();\r\n    vec4 color = getSpriteTextureColor();\r\n    setglColor(color);\r\n}\r\n","#define SHADER_NAME PrimitiveVS2D\r\n#include \"Sprite2DVertex.glsl\";\r\n\r\n\r\n#ifdef WORLDMAT\r\n\tuniform mat4 mmat;\r\n#endif\r\n\r\nvoid main(){\r\n\tvertexInfo info;\r\n\tgetVertexInfo(info);\r\n\t\r\n\t//Update \r\n\tv_color = info.color;\r\n\tv_cliped = info.cliped;\r\n\t\r\n\tvec4 pos;\r\n\t\r\n\tgetPosition(pos);\r\n\tgl_Position = pos;\r\n}","#define SHADER_NAME PrimitiveFS2D\r\nprecision mediump float;\r\n\r\n#include \"Sprite2DFrag.glsl\";\r\n\r\nvoid main(){\r\n\tclip();\r\n\tgl_FragColor = getGlColor(v_color);\r\n\tgl_FragColor.rgb*=gl_FragColor.a;\r\n}","import { IndexBuffer2D } from \"../../../utils/IndexBuffer2D\"\r\nimport { VertexBuffer2D } from \"../../../utils/VertexBuffer2D\"\r\nimport { BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\r\n\r\nexport class SkinMeshBuffer {\r\n\r\n    ib: IndexBuffer2D;\r\n    vb: VertexBuffer2D;\r\n\r\n    static instance: SkinMeshBuffer;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        this.ib = IndexBuffer2D.create(BufferUsage.Dynamic);\r\n        this.vb = VertexBuffer2D.create(8);\r\n    }\r\n\r\n    //TODO:coverage\r\n    static getInstance(): SkinMeshBuffer {\r\n        return SkinMeshBuffer.instance = SkinMeshBuffer.instance || new SkinMeshBuffer();\r\n    }\r\n\r\n    //TODO:coverage\r\n    addSkinMesh(skinMesh: any): void {\r\n        //skinMesh.getData(vb, ib, vb.byteLength / 32);\r\n        skinMesh.getData2(this.vb, this.ib, this.vb._byteLength / 32);\r\n    }\r\n\r\n\r\n    reset(): void {\r\n        this.vb.buffer2D.clear();\r\n        this.ib.buffer2D.clear();\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Vector2 } from \"../../maths/Vector2\";\r\n// 引入角度阈值，用于判断是否为尖角\r\nconst minAngle = 15 * Math.PI / 180; // 15度的弧度值\r\n/**\r\n * 精度\r\n */\r\nconst precision = 1e-13;\r\nexport class BasePoly {\r\n\r\n    private static tempData: any[] = new Array(256);\r\n    private static vec2: Vector2;\r\n    private static tempIndexs: any[] = new Array(4);\r\n\r\n    private static _checkMinAngle(p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number): boolean {\r\n        // 计算相邻线段的方向向量\r\n        const v1x = p2x - p1x;\r\n        const v1y = p2y - p1y;\r\n        const v2x = p3x - p2x;\r\n        const v2y = p3y - p2y;\r\n\r\n        // 计算方向向量的点积\r\n        const dot = v1x * v2x + v1y * v2y;\r\n        // const cross = v1x * v2y - v1y * v2x;\r\n\r\n        // 计算方向向量的长度\r\n        const len1 = Math.sqrt(v1x * v1x + v1y * v1y);\r\n        const len2 = Math.sqrt(v2x * v2x + v2y * v2y);\r\n\r\n        // 计算夹角的余弦值\r\n        const cosAngle = dot / (len1 * len2);\r\n        const angle = Math.acos(Math.abs(cosAngle));\r\n        return Math.abs(angle) < minAngle;\r\n    }\r\n\r\n\r\n    /**\r\n     * 构造线的三角形数据。根据一个位置数组生成vb和ib\r\n     * @param\tp\r\n     * @param\tindices\r\n     * @param\tlineWidth\r\n     * @param\tindexBase\t\t\t\t顶点开始的值，ib中的索引会加上这个\r\n     * @param\toutVertex\r\n     * @return\r\n     */\r\n    static createLine2(p: any[], indices: any[], lineWidth: number, indexBase: number, outVertex: any[], loop: boolean): any[] {\r\n\r\n        if (p.length < 4) return null;\r\n\tlet offset = indexBase;\r\n        var points: any[] = BasePoly.tempData.length > (p.length + 2) ? BasePoly.tempData : new Array(p.length + 2);\t//可能有loop，所以+2\r\n        points[0] = p[0]; points[1] = p[1];\r\n        /*\r\n        var points:Array = p.concat();\r\n        if (loop) {\r\n            points.push(points[0], points[1]);\r\n        }\r\n        */\r\n        var newlen: number = 2;\t//points的下标，也是points的实际长度\r\n        var i: number = 0;\r\n        var length: number = p.length;\r\n        //先过滤一下太相近的点\r\n        for (i = 2; i < length; i += 2) {\r\n            if (Math.abs(p[i] - p[i - 2]) + Math.abs(p[i + 1] - p[i - 1]) > 0.01) {//只是判断是否重合，所以不用sqrt\r\n                points[newlen++] = p[i]; points[newlen++] = p[i + 1];\r\n            }\r\n        }\r\n        //如果终点和起点没有重合，且要求loop的情况的处理\r\n        let delta=Math.abs(p[0] - points[newlen - 2]) + Math.abs(p[1] - points[newlen - 1]);\r\n        if (loop && delta > 0) {\r\n            if(delta>precision){\r\n                points[newlen++] = p[0]; points[newlen++] = p[1];\r\n            }\r\n            else{\r\n                points[newlen-2] = p[0]; points[newlen-1] = p[1];\r\n            }\r\n        }\r\n\r\n        var result: any[] = outVertex;\r\n        length = newlen / 2;\t//points可能有多余的点，所以要用inew来表示\r\n        var w: number = lineWidth / 2;\r\n\r\n        var p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number;\r\n\r\n        p1x = points[0];\r\n        p1y = points[1];\r\n        p2x = points[2];\r\n        p2y = points[3];\r\n        // let startIndex = result.length;\r\n\r\n        this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\r\n        result.push(p1x - this.vec2.x, p1y - this.vec2.y, p1x + this.vec2.x, p1y + this.vec2.y);\r\n        for (i = 1; i < length - 1; i++) {\r\n            p1x = points[(i - 1) * 2];\r\n            p1y = points[(i - 1) * 2 + 1];\r\n            p2x = points[(i) * 2];\r\n            p2y = points[(i) * 2 + 1];\r\n            p3x = points[(i + 1) * 2];\r\n            p3y = points[(i + 1) * 2 + 1];\r\n\r\n\r\n            indices.push(indexBase + 0, indexBase + 1, indexBase + 3, indexBase + 3, indexBase + 2, indexBase + 0);\r\n            indexBase += 2;\r\n            // 夹角小于阈值,视为尖角,使用线段的中点作为拐角处的顶点\r\n            indexBase += this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2, indices, indexBase);\r\n        }\r\n\r\n        p1x = points[newlen - 4];\r\n        p1y = points[newlen - 3];\r\n        p2x = points[newlen - 2];\r\n        p2y = points[newlen - 1];\r\n\r\n        this.vec2 = this.getNormal(p1x, p1y, p2x, p2y, w, this.vec2);\r\n        result.push(p2x - this.vec2.x, p2y - this.vec2.y, p2x + this.vec2.x, p2y + this.vec2.y);\r\n        indices.push(indexBase + 0, indexBase + 1, indexBase + 3, indexBase + 3, indexBase + 2, indexBase + 0);\r\n        if (p2x == points[0] && p2y == points[1]) {\r\n            p3x = points[2];\r\n            p3y = points[3];\r\n            let last = result.length / 2;\r\n            indexBase += 4;\r\n            let tempIndexs = BasePoly.tempIndexs;\r\n            tempIndexs[0] = offset + last - 2;\r\n            tempIndexs[1] = offset + last - 1;\r\n            tempIndexs[2] = offset;\r\n            tempIndexs[3] = offset + 1;\r\n            this._setMiddleVertexs(p1x, p1y, p2x, p2y, p3x, p3y, w, result, this.vec2, indices, indexBase, tempIndexs);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static _setMiddleVertexs(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, w: number, vertexs: number[], out: Vector2, indices: number[], indexBase: number, edgeIndexArray: number[] = null): number {\r\n        this.getNormal(x1, y1, x2, y2, w, out);\r\n        let perpx = out.x;\r\n        let perpy = out.y;\r\n        this.getNormal(x2, y2, x3, y3, w, out);\r\n        let perp2x = out.x;\r\n        let perp2y = out.y;\r\n        if (this._checkMinAngle(x1, y1, x2, y2, x3, y3)) {\r\n            if (!edgeIndexArray) {\r\n                vertexs.push(x2 - perpx, y2 - perpy, x2 + perpx, y2 + perpy);\r\n                vertexs.push(x2 - perp2x, y2 - perp2y, x2 + perp2x, y2 + perp2y);\r\n                indices.push(indexBase + 0, indexBase + 1, indexBase + 3, indexBase + 3, indexBase + 2, indexBase + 0);\r\n            }\r\n            else {\r\n                indices.push(edgeIndexArray[0], edgeIndexArray[1], edgeIndexArray[3], edgeIndexArray[3], edgeIndexArray[2], edgeIndexArray[0]);\r\n            }\r\n            return 2;\r\n        }\r\n\r\n        let a1 = (-perpy + y1) - (-perpy + y2);\r\n        let b1 = (-perpx + x2) - (-perpx + x1);\r\n        let c1 = (-perpx + x1) * (-perpy + y2) - (-perpx + x2) * (-perpy + y1);\r\n        let a2 = (-perp2y + y3) - (-perp2y + y2);\r\n        let b2 = (-perp2x + x2) - (-perp2x + x3);\r\n        let c2 = (-perp2x + x3) * (-perp2y + y2) - (-perp2x + x2) * (-perp2y + y3);\r\n        let denom = a1 * b2 - a2 * b1;\r\n        denom = a1 * b2 - a2 * b1;\r\n        if (Math.abs(denom) < 0.1) {\r\n            denom += 10.1;\r\n            vertexs.push(x2 - perpx, y2 - perpy, x2 + perpx, y2 + perpy);\r\n            return 0;\r\n        }\r\n        let px = (b1 * c2 - b2 * c1) / denom;\r\n        let py = (a2 * c1 - a1 * c2) / denom;\r\n        if (!edgeIndexArray) {\r\n            vertexs.push(x2 - perpx, y2 - perpy, x2 + perpx, y2 + perpy);\r\n            if (denom > 0) {\r\n                vertexs.push(px, py, x2, y2);\r\n                indices.push(indexBase + 0, indexBase + 2, indexBase + 4);\r\n                indices.push(indexBase + 4, indexBase + 3, indexBase + 0);\r\n            }\r\n            else {\r\n                vertexs.push(x2 - (px - x2), y2 - (py - y2), x2, y2);\r\n                indices.push(indexBase + 1, indexBase + 2, indexBase + 5);\r\n                indices.push(indexBase + 5, indexBase + 3, indexBase + 1);\r\n            }\r\n            vertexs.push(x2 - perp2x, y2 - perp2y, x2 + perp2x, y2 + perp2y);\r\n        }\r\n        else {\r\n            if (denom > 0) {\r\n                vertexs.push(px, py, x2, y2);\r\n                indices.push(edgeIndexArray[0], indexBase + 0, edgeIndexArray[2]);\r\n                indices.push(edgeIndexArray[2], indexBase + 1, edgeIndexArray[0]);\r\n            }\r\n            else {\r\n                vertexs.push(x2 - (px - x2), y2 - (py - y2), x2, y2);\r\n                indices.push(edgeIndexArray[1], indexBase + 0, edgeIndexArray[3]);\r\n                indices.push(edgeIndexArray[3], indexBase + 1, edgeIndexArray[1]);\r\n            }\r\n        }\r\n        //vertexs.push(px, py, x2 - (px - x2), y2 - (py - y2));\r\n        return 4;\r\n    }\r\n\r\n    static getNormal(x1: number, y1: number, x2: number, y2: number, w: number, out?: Vector2) {\r\n        if (!out) {\r\n            out = new Vector2();\r\n        }\r\n\r\n        let perpx = y2 - y1;\r\n        let perpy = x1 - x2;\r\n        let dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n        out.x = perpx / dist * w;\r\n        out.y = perpy / dist * w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 相邻的两段线，边界会相交，这些交点可以作为三角形的顶点。有两种可选，一种是采用左左,右右交点，一种是采用 左右，左右交点。当两段线夹角很小的时候，如果采用\r\n     * 左左，右右会产生很长很长的交点，这时候就要采用左右左右交点，相当于把尖角截断。\r\n     * 当采用左左右右交点的时候，直接用切线的垂线。采用左右左右的时候，用切线\r\n     * 切线直接采用两个方向的平均值。不能用3-1的方式，那样垂线和下一段可能都在同一方向（例如都在右方）\r\n     * 注意把重合的点去掉\r\n     * @param\tpath\r\n     * @param\tcolor\r\n     * @param\twidth\r\n     * @param\tloop\r\n     * @param\toutvb\r\n     * @param\tvbstride  顶点占用几个float,(bytelength/4)\r\n     * @param\toutib\r\n     * test:\r\n     * 横线\r\n     * [100,100, 400,100]\r\n     * 竖线\r\n     * [100,100, 100,400]\r\n     * 直角\r\n     * [100,100, 400,100, 400,400]\r\n     * 重合点\r\n     * [100,100,100,100,400,100]\r\n     * 同一直线上的点\r\n     * [100,100,100,200,100,3000]\r\n     * 像老式电视的左边不封闭的图形\r\n     * [98,176,  163,178, 95,66, 175,177, 198,178, 252,56, 209,178,  248,175,  248,266,  209,266, 227,277, 203,280, 188,271,  150,271, 140,283, 122,283, 131,268, 99,268]\r\n     * \r\n     */\r\n    //TODO:coverage\r\n    static createLineTriangle(path: any[], color: number, width: number, loop: boolean, outvb: Float32Array, vbstride: number, outib: Uint16Array): void {\r\n\r\n        var points: any[] = path.slice();\r\n        var ptlen: number = points.length;\r\n        var p1x: number = points[0], p1y: number = points[1];\r\n        var p2x: number = points[2], p2y: number = points[2];\r\n        var len: number = 0;\r\n        var rp: number = 0;\r\n        var dx: number = 0, dy: number = 0;\r\n\r\n        //计算每一段的长度，取出有效数据。保存:长度，方向，拐角，切线\r\n        //x,y,len,dx,dy,tx,ty,dot\r\n        //数组中每个都表示当前点开始的长度，方向\r\n        //x,y,dx,dy\r\n\r\n        var pointnum: number = ptlen / 2;\r\n        if (pointnum <= 1) return;\r\n        if (pointnum == 2) {\r\n            //TODO\r\n            return;\r\n        }\r\n\r\n        var tmpData: any[] = new Array(pointnum * 4);//TODO 做到外面\r\n        var realPtNum: number = 0;\t//去掉重复点后的实际点个数。同一直线上的点不做优化\r\n        //var segNum:int = pointnum + (loop?1:0);\r\n        var ci: number = 0;\r\n        for (var i: number = 0; i < pointnum - 1; i++) {\r\n            p1x = points[ci++], p1y = points[ci++];\r\n            p2x = points[ci++], p2y = points[ci++];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        }\r\n        if (loop) {//loop的话，需要取第一个点来算\r\n            p1x = points[ptlen - 2], p1y = points[ptlen - 1];\r\n            p2x = points[0], p2y = points[1];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {//如果长度为零的话，最后这个点就不用加了，上一个点就是指向了第一个点。\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        } else {//不是loop的话，直接取当前段的朝向，记录在上一个点上\r\n            rp = realPtNum * 4;\r\n            tmpData[rp] = p1x;\r\n            tmpData[rp + 1] = p1y;\r\n            tmpData[rp + 2] = dx / len;\r\n            tmpData[rp + 3] = dy / len;\r\n            realPtNum++;\r\n        }\r\n        ci = 0;\r\n\r\n        /**\r\n         * 根据前后两段的方向，计算垂线的方向，根据这个方向和任意一边的dxdy的垂线的点积为w/2可以得到长度。就可以得到增加的点\r\n         */\r\n        //如果相邻两段朝向的dot值接近-1，则表示反向了，需要改成切\r\n\r\n        for (i = 0; i < pointnum; i++) {\r\n            p1x = points[ci], p1y = points[ci + 1];\r\n            p2x = points[ci + 2], p2y = points[ci + 3];\r\n            //var p3x: number = points[ci + 4], p3y: number = points[ci + 5];\r\n\r\n        }\r\n        if (loop) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","export class EarcutNode {\r\n    i: any;\r\n    x: any;\r\n    y: any;\r\n    prev: any;\r\n    next: any;\r\n    z: any;\r\n    prevZ: any;\r\n    nextZ: any;\r\n    steiner: any;\r\n    constructor(i: any, x: any, y: any) {\r\n        // vertice index in coordinates array\r\n        this.i = i;\r\n\r\n        // vertex coordinates\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        // previous and next vertice nodes in a polygon ring\r\n        this.prev = null;\r\n        this.next = null;\r\n\r\n        // z-order curve value\r\n        this.z = null;\r\n\r\n        // previous and next nodes in z-order\r\n        this.prevZ = null;\r\n        this.nextZ = null;\r\n\r\n        // indicates whether this is a steiner point\r\n        this.steiner = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { EarcutNode } from \"./EarcutNode\";\r\nexport class Earcut {\r\n    static earcut(data: any, holeIndices: any, dim: any): any {\r\n\r\n        dim = dim || 2;\r\n\r\n        var hasHoles: any = holeIndices && holeIndices.length,\r\n            outerLen: any = hasHoles ? holeIndices[0] * dim : data.length,\r\n            outerNode: any = Earcut.linkedList(data, 0, outerLen, dim, true),\r\n            triangles: any = [];\r\n\r\n        if (!outerNode) return triangles;\r\n\r\n        var minX: any, minY: any, maxX: any, maxY: any, x: any, y: any, invSize: any;\r\n\r\n        if (hasHoles) outerNode = Earcut.eliminateHoles(data, holeIndices, outerNode, dim);\r\n\r\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n        if (data.length > 80 * dim) {\r\n            minX = maxX = data[0];\r\n            minY = maxY = data[1];\r\n\r\n            for (var i: any = dim; i < outerLen; i += dim) {\r\n                x = data[i];\r\n                y = data[i + 1];\r\n                if (x < minX) minX = x;\r\n                if (y < minY) minY = y;\r\n                if (x > maxX) maxX = x;\r\n                if (y > maxY) maxY = y;\r\n            }\r\n\r\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n            invSize = Math.max(maxX - minX, maxY - minY);\r\n            invSize = invSize !== 0 ? 1 / invSize : 0;\r\n        }\r\n\r\n        Earcut.earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\r\n\r\n        return triangles;\r\n    }\r\n\r\n    // create a circular doubly linked list from polygon points in the specified winding order\r\n    static linkedList(data: any, start: any, end: any, dim: any, clockwise: any): any {\r\n        var i: any, last: any;\r\n\r\n        if (clockwise === (Earcut.signedArea(data, start, end, dim) > 0)) {\r\n            for (i = start; i < end; i += dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        } else {\r\n            for (i = end - dim; i >= start; i -= dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        }\r\n\r\n        if (last && Earcut.equals(last, last.next)) {\r\n            Earcut.removeNode(last);\r\n            last = last.next;\r\n        }\r\n\r\n        return last;\r\n    }\r\n\r\n    // eliminate colinear or duplicate points\r\n    static filterPoints(start: any, end: any): any {\r\n        if (!start) return start;\r\n        if (!end) end = start;\r\n\r\n        var p: any = start,\r\n            again: any;\r\n        do {\r\n            again = false;\r\n\r\n            if (!p.steiner && (Earcut.equals(p, p.next) || Earcut.area(p.prev, p, p.next) === 0)) {\r\n                Earcut.removeNode(p);\r\n                p = end = p.prev;\r\n                if (p === p.next) break;\r\n                again = true;\r\n\r\n            } else {\r\n                p = p.next;\r\n            }\r\n        } while (again || p !== end);\r\n\r\n        return end;\r\n    }\r\n\r\n    // main ear slicing loop which triangulates a polygon (given as a linked list)\r\n    static earcutLinked(ear: any, triangles: any, dim: any, minX: any, minY: any, invSize: any, pass: any = null): any {\r\n        if (!ear) return;\r\n\r\n        // interlink polygon nodes in z-order\r\n        if (!pass && invSize) Earcut.indexCurve(ear, minX, minY, invSize);\r\n\r\n        var stop: any = ear,\r\n            prev: any, next: any;\r\n\r\n        // iterate through ears, slicing them one by one\r\n        while (ear.prev !== ear.next) {\r\n            prev = ear.prev;\r\n            next = ear.next;\r\n\r\n            if (invSize ? Earcut.isEarHashed(ear, minX, minY, invSize) : Earcut.isEar(ear)) {\r\n                // cut off the triangle\r\n                triangles.push(prev.i / dim);\r\n                triangles.push(ear.i / dim);\r\n                triangles.push(next.i / dim);\r\n\r\n                Earcut.removeNode(ear);\r\n\r\n                // skipping the next vertice leads to less sliver triangles\r\n                ear = next.next;\r\n                stop = next.next;\r\n\r\n                continue;\r\n            }\r\n\r\n            ear = next;\r\n\r\n            // if we looped through the whole remaining polygon and can't find any more ears\r\n            if (ear === stop) {\r\n                // try filtering points and slicing again\r\n                if (!pass) {\r\n                    Earcut.earcutLinked(Earcut.filterPoints(ear, null), triangles, dim, minX, minY, invSize, 1);\r\n\r\n                    // if this didn't work, try curing all small self-intersections locally\r\n                } else if (pass === 1) {\r\n                    ear = Earcut.cureLocalIntersections(ear, triangles, dim);\r\n                    Earcut.earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\r\n\r\n                    // as a last resort, try splitting the remaining polygon into two\r\n                } else if (pass === 2) {\r\n                    Earcut.splitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // check whether a polygon node forms a valid ear with adjacent nodes\r\n    static isEar(ear: any): any {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // now make sure we don't have other points inside the potential ear\r\n        var p: any = ear.next.next;\r\n\r\n        while (p !== ear.prev) {\r\n            if (Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.next;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static isEarHashed(ear: any, minX: any, minY: any, invSize: any): boolean {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // triangle bbox; min & max are calculated like this for speed\r\n        var minTX: any = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\r\n            minTY: any = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\r\n            maxTX: any = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\r\n            maxTY: any = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\r\n\r\n        // z-order range for the current triangle bbox;\r\n        var minZ: any = Earcut.zOrder(minTX, minTY, minX, minY, invSize),\r\n            maxZ: any = Earcut.zOrder(maxTX, maxTY, minX, minY, invSize);\r\n\r\n        // first look for points inside the triangle in increasing z-order\r\n        var p: any = ear.nextZ;\r\n\r\n        while (p && p.z <= maxZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.nextZ;\r\n        }\r\n\r\n        // then look for points in decreasing z-order\r\n        p = ear.prevZ;\r\n\r\n        while (p && p.z >= minZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.prevZ;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // go through all polygon nodes and cure small local self-intersections\r\n    //TODO:coverage\r\n    static cureLocalIntersections(start: any, triangles: any, dim: any): any {\r\n        var p: any = start;\r\n        do {\r\n            var a: any = p.prev,\r\n                b: any = p.next.next;\r\n\r\n            if (!Earcut.equals(a, b) && Earcut.intersects(a, p, p.next, b) && Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a)) {\r\n\r\n                triangles.push(a.i / dim);\r\n                triangles.push(p.i / dim);\r\n                triangles.push(b.i / dim);\r\n\r\n                // remove two nodes involved\r\n                Earcut.removeNode(p);\r\n                Earcut.removeNode(p.next);\r\n\r\n                p = start = b;\r\n            }\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return p;\r\n    }\r\n\r\n    // try splitting polygon into two and triangulate them independently\r\n    //TODO:coverage\r\n    static splitEarcut(start: any, triangles: any, dim: any, minX: any, minY: any, invSize: any): void {\r\n        // look for a valid diagonal that divides the polygon into two\r\n        var a: any = start;\r\n        do {\r\n            var b: any = a.next.next;\r\n            while (b !== a.prev) {\r\n                if (a.i !== b.i && Earcut.isValidDiagonal(a, b)) {\r\n                    // split the polygon in two by the diagonal\r\n                    var c: any = Earcut.splitPolygon(a, b);\r\n\r\n                    // filter colinear points around the cuts\r\n                    a = Earcut.filterPoints(a, a.next);\r\n                    c = Earcut.filterPoints(c, c.next);\r\n\r\n                    // run earcut on each half\r\n                    Earcut.earcutLinked(a, triangles, dim, minX, minY, invSize);\r\n                    Earcut.earcutLinked(c, triangles, dim, minX, minY, invSize);\r\n                    return;\r\n                }\r\n                b = b.next;\r\n            }\r\n            a = a.next;\r\n        } while (a !== start);\r\n    }\r\n\r\n    // link every hole into the outer loop, producing a single-ring polygon without holes\r\n    //TODO:coverage\r\n    static eliminateHoles(data: any, holeIndices: any, outerNode: any, dim: any): any {\r\n        var queue: any = [],\r\n            i: any, len: any, start: any, end: any, list: any;\r\n\r\n        for (i = 0, len = holeIndices.length; i < len; i++) {\r\n            start = holeIndices[i] * dim;\r\n            end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n            list = Earcut.linkedList(data, start, end, dim, false);\r\n            if (list === list.next) list.steiner = true;\r\n            queue.push(Earcut.getLeftmost(list));\r\n        }\r\n\r\n        queue.sort(Earcut.compareX);\r\n\r\n        // process holes from left to right\r\n        for (i = 0; i < queue.length; i++) {\r\n            Earcut.eliminateHole(queue[i], outerNode);\r\n            outerNode = Earcut.filterPoints(outerNode, outerNode.next);\r\n        }\r\n\r\n        return outerNode;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static compareX(a: any, b: any): any {\r\n        return a.x - b.x;\r\n    }\r\n\r\n    // find a bridge between vertices that connects hole with an outer ring and and link it\r\n    //TODO:coverage\r\n    static eliminateHole(hole: any, outerNode: any): void {\r\n        outerNode = Earcut.findHoleBridge(hole, outerNode);\r\n        if (outerNode) {\r\n            var b: any = Earcut.splitPolygon(outerNode, hole);\r\n            Earcut.filterPoints(b, b.next);\r\n        }\r\n    }\r\n\r\n    // David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n    //TODO:coverage\r\n    static findHoleBridge(hole: any, outerNode: any): any {\r\n        var p: any = outerNode,\r\n            hx: any = hole.x,\r\n            hy: any = hole.y,\r\n            qx: any = -Infinity,\r\n            m: any;\r\n\r\n        // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n        // segment's endpoint with lesser x will be potential connection point\r\n        do {\r\n            if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n                var x: any = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n                if (x <= hx && x > qx) {\r\n                    qx = x;\r\n                    if (x === hx) {\r\n                        if (hy === p.y) return p;\r\n                        if (hy === p.next.y) return p.next;\r\n                    }\r\n                    m = p.x < p.next.x ? p : p.next;\r\n                }\r\n            }\r\n            p = p.next;\r\n        } while (p !== outerNode);\r\n\r\n        if (!m) return null;\r\n\r\n        if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\r\n\r\n        // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n        // if there are no points found, we have a valid connection;\r\n        // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n        var stop: any = m,\r\n            mx: any = m.x,\r\n            my: any = m.y,\r\n            tanMin: any = Infinity,\r\n            tan: any;\r\n\r\n        p = m.next;\r\n\r\n        while (p !== stop) {\r\n            if (hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                Earcut.pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\r\n                tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n                if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && Earcut.locallyInside(p, hole)) {\r\n                    m = p;\r\n                    tanMin = tan;\r\n                }\r\n            }\r\n\r\n            p = p.next;\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    // interlink polygon nodes in z-order\r\n    //TODO:coverage\r\n    static indexCurve(start: any, minX: any, minY: any, invSize: any): void {\r\n        var p: any = start;\r\n        do {\r\n            if (p.z === null) p.z = Earcut.zOrder(p.x, p.y, minX, minY, invSize);\r\n            p.prevZ = p.prev;\r\n            p.nextZ = p.next;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        p.prevZ.nextZ = null;\r\n        p.prevZ = null;\r\n\r\n        Earcut.sortLinked(p);\r\n    }\r\n\r\n    // Simon Tatham's linked list merge sort algorithm\r\n    // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n    //TODO:coverage\r\n    static sortLinked(list: any): any {\r\n        var i: any, p: any, q: any, e: any, tail: any, numMerges: any, pSize: any, qSize: any,\r\n            inSize: any = 1;\r\n\r\n        do {\r\n            p = list;\r\n            list = null;\r\n            tail = null;\r\n            numMerges = 0;\r\n\r\n            while (p) {\r\n                numMerges++;\r\n                q = p;\r\n                pSize = 0;\r\n                for (i = 0; i < inSize; i++) {\r\n                    pSize++;\r\n                    q = q.nextZ;\r\n                    if (!q) break;\r\n                }\r\n                qSize = inSize;\r\n\r\n                while (pSize > 0 || (qSize > 0 && q)) {\r\n\r\n                    if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n                        e = p;\r\n                        p = p.nextZ;\r\n                        pSize--;\r\n                    } else {\r\n                        e = q;\r\n                        q = q.nextZ;\r\n                        qSize--;\r\n                    }\r\n\r\n                    if (tail) tail.nextZ = e;\r\n                    else list = e;\r\n\r\n                    e.prevZ = tail;\r\n                    tail = e;\r\n                }\r\n\r\n                p = q;\r\n            }\r\n\r\n            tail.nextZ = null;\r\n            inSize *= 2;\r\n\r\n        } while (numMerges > 1);\r\n\r\n        return list;\r\n    }\r\n\r\n    // z-order of a point given coords and inverse of the longer side of data bbox\r\n    //TODO:coverage\r\n    static zOrder(x: any, y: any, minX: any, minY: any, invSize: any): any {\r\n        // coords are transformed into non-negative 15-bit integer range\r\n        x = 32767 * (x - minX) * invSize;\r\n        y = 32767 * (y - minY) * invSize;\r\n\r\n        x = (x | (x << 8)) & 0x00FF00FF;\r\n        x = (x | (x << 4)) & 0x0F0F0F0F;\r\n        x = (x | (x << 2)) & 0x33333333;\r\n        x = (x | (x << 1)) & 0x55555555;\r\n\r\n        y = (y | (y << 8)) & 0x00FF00FF;\r\n        y = (y | (y << 4)) & 0x0F0F0F0F;\r\n        y = (y | (y << 2)) & 0x33333333;\r\n        y = (y | (y << 1)) & 0x55555555;\r\n\r\n        return x | (y << 1);\r\n    }\r\n\r\n    // find the leftmost node of a polygon ring\r\n    //TODO:coverage\r\n    static getLeftmost(start: any): any {\r\n        var p: any = start,\r\n            leftmost: any = start;\r\n        do {\r\n            if (p.x < leftmost.x) leftmost = p;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return leftmost;\r\n    }\r\n\r\n    // check if a point lies within a convex triangle\r\n    static pointInTriangle(ax: any, ay: any, bx: any, by: any, cx: any, cy: any, px: any, py: any): boolean {\r\n        return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\r\n            (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\r\n            (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\r\n    }\r\n\r\n    // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n    //TODO:coverage\r\n    static isValidDiagonal(a: any, b: any): boolean {\r\n        return a.next.i !== b.i && a.prev.i !== b.i && !Earcut.intersectsPolygon(a, b) &&\r\n            Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a) && Earcut.middleInside(a, b);\r\n    }\r\n\r\n    // signed area of a triangle\r\n    static area(p: any, q: any, r: any): any {\r\n        return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n    }\r\n\r\n    // check if two points are equal\r\n    static equals(p1: any, p2: any): boolean {\r\n        return p1.x === p2.x && p1.y === p2.y;\r\n    }\r\n\r\n    // check if two segments intersect\r\n    //TODO:coverage\r\n    static intersects(p1: any, q1: any, p2: any, q2: any): boolean {\r\n        if ((Earcut.equals(p1, q1) && Earcut.equals(p2, q2)) ||\r\n            (Earcut.equals(p1, q2) && Earcut.equals(p2, q1))) return true;\r\n        return Earcut.area(p1, q1, p2) > 0 !== Earcut.area(p1, q1, q2) > 0 &&\r\n            Earcut.area(p2, q2, p1) > 0 !== Earcut.area(p2, q2, q1) > 0;\r\n    }\r\n\r\n    // check if a polygon diagonal intersects any polygon segments\r\n    //TODO:coverage\r\n    static intersectsPolygon(a: any, b: any): boolean {\r\n        var p: any = a;\r\n        do {\r\n            if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                Earcut.intersects(p, p.next, a, b)) return true;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return false;\r\n    }\r\n\r\n    // check if a polygon diagonal is locally inside the polygon\r\n    //TODO:coverage\r\n    static locallyInside(a: any, b: any): boolean {\r\n        return Earcut.area(a.prev, a, a.next) < 0 ?\r\n            Earcut.area(a, b, a.next) >= 0 && Earcut.area(a, a.prev, b) >= 0 :\r\n            Earcut.area(a, b, a.prev) < 0 || Earcut.area(a, a.next, b) < 0;\r\n    }\r\n\r\n    // check if the middle point of a polygon diagonal is inside the polygon\r\n    //TODO:coverage\r\n    static middleInside(a: any, b: any): boolean {\r\n        var p: any = a,\r\n            inside: any = false,\r\n            px: any = (a.x + b.x) / 2,\r\n            py: any = (a.y + b.y) / 2;\r\n        do {\r\n            if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\r\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\r\n                inside = !inside;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return inside;\r\n    }\r\n\r\n    // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n    // if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n    //TODO:coverage\r\n    static splitPolygon(a: any, b: any): any {\r\n        var a2: any = new EarcutNode(a.i, a.x, a.y),\r\n            b2: any = new EarcutNode(b.i, b.x, b.y),\r\n            an: any = a.next,\r\n            bp: any = b.prev;\r\n\r\n        a.next = b;\r\n        b.prev = a;\r\n\r\n        a2.next = an;\r\n        an.prev = a2;\r\n\r\n        b2.next = a2;\r\n        a2.prev = b2;\r\n\r\n        bp.next = b2;\r\n        b2.prev = bp;\r\n\r\n        return b2;\r\n    }\r\n\r\n    // create a node and optionally link it with previous one (in a circular doubly linked list)\r\n    static insertNode(i: any, x: any, y: any, last: any): any {\r\n        var p: any = new EarcutNode(i, x, y);\r\n\r\n        if (!last) {\r\n            p.prev = p;\r\n            p.next = p;\r\n\r\n        } else {\r\n            p.next = last.next;\r\n            p.prev = last;\r\n            last.next.prev = p;\r\n            last.next = p;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    static removeNode(p: any): void {\r\n        p.next.prev = p.prev;\r\n        p.prev.next = p.next;\r\n\r\n        if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n        if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n    }\r\n    // return a percentage difference between the polygon area and its triangulation area;\r\n    // used to verify correctness of triangulation\r\n    /*earcut.deviation = function (data, holeIndices, dim, triangles) {\r\n        var hasHoles = holeIndices && holeIndices.length;\r\n        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n    \r\n        var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\r\n        if (hasHoles) {\r\n            for (var i = 0, len = holeIndices.length; i < len; i++) {\r\n                var start = holeIndices[i] * dim;\r\n                var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n                polygonArea -= Math.abs(signedArea(data, start, end, dim));\r\n            }\r\n        }\r\n    \r\n        var trianglesArea = 0;\r\n        for (i = 0; i < triangles.length; i += 3) {\r\n            var a = triangles[i] * dim;\r\n            var b = triangles[i + 1] * dim;\r\n            var c = triangles[i + 2] * dim;\r\n            trianglesArea += Math.abs(\r\n                (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\r\n                (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\r\n        }\r\n    \r\n        return polygonArea === 0 && trianglesArea === 0 ? 0 :\r\n            Math.abs((trianglesArea - polygonArea) / polygonArea);\r\n    };*/\r\n\r\n    static signedArea(data: any, start: any, end: any, dim: any): any {\r\n        var sum: any = 0;\r\n        for (var i: any = start, j: any = end - dim; i < end; i += dim) {\r\n            sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n            j = i;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    // turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\r\n    /*earcut.flatten = function (data) {\r\n        var dim = data[0][0].length,\r\n            result = {vertices: [], holes: [], dimensions: dim},\r\n            holeIndex = 0;\r\n    \r\n        for (var i = 0; i < data.length; i++) {\r\n            for (var j = 0; j < data[i].length; j++) {\r\n                for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\r\n            }\r\n            if (i > 0) {\r\n                holeIndex += data[i - 1].length;\r\n                result.holes.push(holeIndex);\r\n            }\r\n        }\r\n        return result;\r\n    };*/\r\n}\r\n\r\n","/**\r\n * Mesh topology.\r\n */\r\n export enum MeshTopology {\r\n    /** Draws a single dot */\r\n    Points,\r\n    /** Draws a line between a pair of vertices */\r\n    Lines,\r\n    /** Draws a straight line to the next vertex, and connects the last vertex back to the first */\r\n    LineLoop,\r\n    /** Draws a straight line to the next vertex. */\r\n    LineStrip,\r\n    /** Draws a triangle for a group of three vertices */\r\n    Triangles,\r\n    /** Draws a triangle strip */\r\n    TriangleStrip,\r\n    /** Draws a triangle fan */\r\n    TriangleFan\r\n  }\r\n  ","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { Const } from \"../Const\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\r\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { NativeWebGLCacheAsNormalCanvas } from \"../webgl/canvas/NativeWebGLCacheAsNormalCanvas\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\r\nimport { HTMLCanvas } from \"./HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Texture } from \"./Texture\";\r\nimport { BufferState } from \"../webgl/utils/BufferState\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * @internal\r\n */\r\nenum CONTEXT2D_FUNCTION_ID {\r\n    SIZE = 0,\r\n    CLEAR,\r\n    SAVE,\r\n    TRANSFORM,\r\n    ALPHA,\r\n    RESTORE,\r\n    FILL_STYLE,\r\n    FILL_RECT,\r\n    STROKE_STYLE,\r\n    LINE_WIDTH,\r\n    STROKE_RECT,\r\n    FILL_WORD_TEXT,\r\n    DRAW_TEXTURE_SIZE_GRID,\r\n    DRAW_TEXTURE,\r\n    CLIP_RECT,\r\n    DRAW_LINE,\r\n    DRAW_LINES,\r\n    SCALE,\r\n    TRANSLATE,\r\n    ROTATE,\r\n    DRAW_CIRCLE,\r\n    DRAW_PIE,\r\n    DRAW_POLY,\r\n    DRAW_CURVES,\r\n    BEGIN_PATH,\r\n    MOVE_TO,\r\n    LINE_TO,\r\n    ARC_TO,\r\n    CLOSE_PATH,\r\n    FILL,\r\n    STROKE,\r\n    SET_AS_BITMAP,\r\n    DRAW_MASKED,\r\n    DRAW_TRANGLES,\r\n    SET_GLOBAL_COMPOSITE_OPERTAION,\r\n    FILL_WORDS,\r\n    FILL_TEXTURE,\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class NativeContext {\r\n    public static readonly ARRAY_BUFFER_TYPE_DATA = 0;          //创建ArrayBuffer时的类型为Data\r\n    public static readonly ARRAY_BUFFER_TYPE_CMD = 1;           //创建ArrayBuffer时的类型为Command\r\n    public static readonly ARRAY_BUFFER_REF_REFERENCE = 0;          //创建ArrayBuffer时的类型为引用\r\n    public static readonly ARRAY_BUFFER_REF_COPY = 1;               //创建ArrayBuffer时的类型为拷贝\r\n\r\n    public _idata: Int32Array;\r\n    public _fdata: Float32Array;\r\n    public _byteArray: Uint8Array;\r\n    public _buffer: ArrayBuffer;\r\n    private _byteLen: number = 0;\r\n\r\n\r\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\r\n    static ENUM_TEXTALIGN_CENTER: number = 1;\r\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\r\n    private _nativeObj: any;\r\n    private _tempRenderTexture2D: any;\r\n    sprite: any = null;\r\n    private _renderObject3DList: any[] = [];\r\n    /**@internal */\r\n    _tmpMatrix: Matrix = new Matrix();\r\n    static __init__(): void {\r\n    }\r\n    constructor() {\r\n        this._nativeObj = new (window as any)._conchContext((LayaGL.renderEngine as any)._nativeObj);\r\n        this._byteLen = 1024 * 512;\r\n        this._tempRenderTexture2D = new NativeRenderTexture2D(0, 0, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None, false);\r\n        this._init(false);\r\n    }\r\n    _init(isSyncToRenderThread: boolean): void {\r\n        this._buffer = new ArrayBuffer(this._byteLen);\r\n        this._idata = new Int32Array(this._buffer);\r\n        this._fdata = new Float32Array(this._buffer);\r\n        this._byteArray = new Uint8Array(this._buffer);\r\n\r\n        var bufferConchRef: any = (window as any).webglPlus.createArrayBufferRef(this._buffer, NativeContext.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread, NativeContext.ARRAY_BUFFER_REF_REFERENCE);\r\n        this._nativeObj.setSharedCommandBuffer(bufferConchRef);\r\n        //this._layagl.createArrayBufferRef(this._buffer, NativeCommandEncoder.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread);\r\n        this._idata[0] = 1;\r\n    }\r\n    _need(sz: number): void {\r\n        if ((this._byteLen - (this._idata[0] << 2)) >= sz) return;\r\n        this._nativeObj.flushCommand();\r\n        if (sz > this._byteLen) {\r\n            throw \"too big\";\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get lineJoin(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineJoin(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get lineCap(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineCap(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get miterLimit(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set miterLimit(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    clearRect(x: number, y: number, width: number, height: number): void {\r\n    }\r\n\r\n    set isMain(value: boolean) {\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.isMain = value;\r\n    }\r\n    get isMain() {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.isMain;\r\n    }\r\n    set _targets(target: RenderTexture2D) {\r\n        if (target) {\r\n            this._nativeObj.flushCommand();\r\n            this._nativeObj._target = (target as any)._nativeObj;\r\n        }\r\n    }\r\n    get _targets(): RenderTexture2D {\r\n        this._nativeObj.flushCommand();\r\n        let target = this._nativeObj._target;\r\n        //if (target && !this._tempRenderTexture2D._renderTarget) {\r\n        if (target) {\r\n            this._tempRenderTexture2D.width = this._nativeObj.width;\r\n            this._tempRenderTexture2D.height = this._nativeObj.height;\r\n            this._tempRenderTexture2D._nativeObj = target;\r\n            this._tempRenderTexture2D._renderTarget = target._renderTarget;\r\n            this._tempRenderTexture2D._texture = target._renderTarget._textures[0];\r\n            return this._tempRenderTexture2D;\r\n        }\r\n        return null;\r\n    }\r\n    alpha(value: number): void {\r\n        //this._nativeObj.globalAlpha *= value;\r\n        //this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\r\n        this.globalAlpha *= value;\r\n    }\r\n    flush(): void {\r\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n        //this._nativeObj.flush();\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.flush();\r\n\r\n    }\r\n    clear(): void {\r\n        //this._nativeObj.clear();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.CLEAR);\r\n        this._nativeObj.flushCommand();\r\n        this._renderObject3DList.length = 0;\r\n    }\r\n    /**\r\n     * 释放所有资源\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    destroy(keepRT: boolean = false): void {\r\n        this._nativeObj.flushCommand();\r\n        if (this._tempRenderTexture2D._nativeObj) {\r\n            this._tempRenderTexture2D._nativeObj._deleteRT = keepRT;\r\n        }\r\n        this._nativeObj.destroy(keepRT);\r\n    }\r\n\r\n    static const2DRenderCMD: RenderStateCommand;\r\n    static set2DRenderConfig(): void {\r\n\r\n        if (!NativeContext.const2DRenderCMD) {\r\n            const cmd = NativeContext.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\r\n            cmd.addCMD(RenderStateType.BlendType, true);\r\n            //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n            cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\r\n            BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n            //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\r\n            //WebGLContext.setDepthTest(gl, false);\r\n            cmd.addCMD(RenderStateType.DepthTest, false);\r\n            //WebGLContext.setDepthMask(gl, true);\r\n            cmd.addCMD(RenderStateType.DepthMask, true);\r\n            //WebGLContext.setCullFace(gl, false);\r\n            cmd.addCMD(RenderStateType.CullFace, false);\r\n            //WebGLContext.setFrontFace(gl, gl.CCW);\r\n            cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\r\n        }\r\n        NativeContext.const2DRenderCMD.applyCMD();\r\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\r\n        (window as any).set2DRenderConfig();\r\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n    }\r\n    set globalCompositeOperation(value: string) {\r\n        //this._nativeObj.globalCompositeOperation = value;\r\n        this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, value);\r\n    }\r\n\r\n    get globalCompositeOperation(): string {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.globalCompositeOperation;\r\n    }\r\n    set fillStyle(value: any) {\r\n        var c: ColorUtils = ColorUtils.create(value);\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\r\n    }\r\n\r\n    get fillStyle(): any {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.fillStyle;\r\n    }\r\n    set globalAlpha(value: number) {\r\n        this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\r\n    }\r\n\r\n    get globalAlpha(): number {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.globalAlpha;\r\n    }\r\n    save(): void {\r\n        //this._nativeObj.save();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n    }\r\n    restore(): void {\r\n        //this._nativeObj.restore();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n    saveTransform(matrix: Matrix): void {\r\n        //this._nativeObj.save();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n    }\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        //this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n    restoreTransform(matrix: Matrix): void {\r\n        //this._nativeObj.restore();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n    clipRect(x: number, y: number, width: number, height: number): void {\r\n        //this._nativeObj.clipRect(x, y, width, height);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.CLIP_RECT, x, y, width, height);\r\n    }\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n        //this._nativeObj.transform(a, b, c, d, tx, ty);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, a, b, c, d, tx, ty);\r\n    }\r\n    scale(scaleX: number, scaleY: number): void {\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\r\n    }\r\n\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        //this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width, height, (tex as any).uv);\r\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width, height\r\n            , (tex as any).uv[0]\r\n            , (tex as any).uv[1]\r\n            , (tex as any).uv[2]\r\n            , (tex as any).uv[3]\r\n            , (tex as any).uv[4]\r\n            , (tex as any).uv[5]\r\n            , (tex as any).uv[6]\r\n            , (tex as any).uv[7]\r\n            , color);\r\n    }\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        /*this._nativeObj.save();\r\n        this._nativeObj.globalAlpha = alpha;\r\n        if (transform) {\r\n            this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\r\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height|| tex.height, uv || (tex as any).uv);\r\n        }\r\n        else {\r\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height|| tex.height, uv || (tex as any).uv);\r\n        }\r\n        this._nativeObj.restore();*/\r\n        this.save();\r\n        this.alpha(alpha);\r\n        var uvs: any = uv || (tex as any).uv;\r\n        if (transform) {\r\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\r\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\r\n                , uvs[0]\r\n                , uvs[1]\r\n                , uvs[2]\r\n                , uvs[3]\r\n                , uvs[4]\r\n                , uvs[5]\r\n                , uvs[6]\r\n                , uvs[7]\r\n                , color);\r\n        }\r\n        else {\r\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height || tex.height\r\n                , uvs[0]\r\n                , uvs[1]\r\n                , uvs[2]\r\n                , uvs[3]\r\n                , uvs[4]\r\n                , uvs[5]\r\n                , uvs[6]\r\n                , uvs[7]\r\n                , color);\r\n        }\r\n        this.restore();\r\n    }\r\n\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n\r\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\r\n\r\n        var top: number = sizeGrid[0];\r\n        var left: number = sizeGrid[3];\r\n        var right: number = sizeGrid[1];\r\n        var bottom: number = sizeGrid[2];\r\n        var repeat: boolean = sizeGrid[4];\r\n\r\n        /*this._nativeObj.drawTextureWithSizeGrid((tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat, gx, gy, uv[0]\r\n            ,uv[1]\r\n            ,uv[2]\r\n            ,uv[3]\r\n            ,uv[4]\r\n            ,uv[5]\r\n            ,uv[6]\r\n            ,uv[7]);*/\r\n        this.add_iiffffffffiffffffffffi(\r\n            CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE_SIZE_GRID,\r\n            (tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat ? 1 : 0, gx, gy\r\n            , uv[0]\r\n            , uv[1]\r\n            , uv[2]\r\n            , uv[3]\r\n            , uv[4]\r\n            , uv[5]\r\n            , uv[6]\r\n            , uv[7]\r\n            , color);\r\n    }\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix, alpha: number, uv: any[] | null, color: number): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        /*this._nativeObj.save();\r\n        this._nativeObj.globalAlpha = alpha;\r\n        transform && this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n        this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height, uv || (tex as any).uv);\r\n        this._nativeObj.restore();*/\r\n\r\n        this.save();\r\n        this.alpha(alpha);\r\n        if (transform) {\r\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n        }\r\n        var uvs: any = uv || (tex as any).uv;\r\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\r\n            , uvs[0]\r\n            , uvs[1]\r\n            , uvs[2]\r\n            , uvs[3]\r\n            , uvs[4]\r\n            , uvs[5]\r\n            , uvs[6]\r\n            , uvs[7]\r\n            , color);\r\n        this.restore();\r\n\r\n    }\r\n    translate(x: number, y: number): void {\r\n        //this._nativeObj.translate(x, y);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, x, y);\r\n    }\r\n    _transform(mat: any/*Matrix*/, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.rotate(angle);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_if(CONTEXT2D_FUNCTION_ID.ROTATE, angle);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.scale(scaleX, scaleY);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawLine(x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\r\n        this.add_iffffffif(CONTEXT2D_FUNCTION_ID.DRAW_LINE, x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\r\n    }\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawLines(x, y, new Float32Array(points), c1.numColor, lineWidth);\r\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_LINES, x, y, c1.numColor, lineWidth, new Float32Array(points));\r\n    }\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawCircle(x, y, radius, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\r\n        this.add_ifffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_CIRCLE, x, y, radius, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\r\n    }\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawPie(x, y, radius, startAngle, endAngle, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\r\n        this.add_ifffffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_PIE, x, y, radius, startAngle, endAngle, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\r\n    }\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawPoly(x, y, new Float32Array(points), fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth, isConvexPolygon);\r\n        this.add_iffiiiifi_ab(CONTEXT2D_FUNCTION_ID.DRAW_POLY, x, y, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth, isConvexPolygon ? 1 : 0, new Float32Array(points));\r\n    }\r\n    fillRect(x: number, y: number, width: number, height: number, fillColor: any) {\r\n        if (fillColor != null) {\r\n            var c: ColorUtils = ColorUtils.create(fillColor);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\r\n        }\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\r\n        if (!this.checkTexture(texture)) {\r\n            return;\r\n        }\r\n        var typeValue: number = 0;\r\n        switch (type) {\r\n            case \"repeat\": typeValue = 0; break;\r\n            case \"repeat-x\": typeValue = 1; break;\r\n            case \"repeat-y\": typeValue = 2; break;\r\n            case \"no-repeat\": typeValue = 3; break;\r\n            default: break;\r\n        }\r\n\r\n        this.add_iiffffiffi(CONTEXT2D_FUNCTION_ID.FILL_TEXTURE, (texture as any).bitmap._texture.id, x, y, width, height, typeValue, offset.x, offset.y, color);\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\r\n\r\n        /*if (fillColor != null) {\r\n            var c1: ColorUtils = ColorUtils.create(fillColor);\r\n   \r\n            this._nativeObj.save(); \r\n            this._nativeObj.fillStyle = c1.numColor;\r\n            this._nativeObj.fillRect(x, y, width, height);\r\n            this._nativeObj.restore();\r\n        }\r\n        if (lineColor != null) {         \r\n            var c2: ColorUtils = ColorUtils.create(lineColor);\r\n            this._nativeObj.save(); \r\n            this._nativeObj.strokeStyle = c2.numColor;\r\n            this._nativeObj.lineWidth = lineWidth;//lineColor\r\n            this._nativeObj.strokeRect(x, y, width, height);\r\n            this._nativeObj.restore();\r\n        }*/\r\n\r\n        if (fillColor != null) {\r\n            var c1: ColorUtils = ColorUtils.create(fillColor);\r\n\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\r\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n        if (lineColor != null) {\r\n            var c2: ColorUtils = ColorUtils.create(lineColor);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\r\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, lineWidth);\r\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.STROKE_RECT, x, y, width, height);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n    }\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\r\n        //形成路径\r\n        /*this._nativeObj.beginPath(false);\r\n        //x += args[0], y += args[1];\r\n\r\n        //var paths:Array = args[2];\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this._nativeObj.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this._nativeObj.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this._nativeObj.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this._nativeObj.closePath();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\r\n            this._nativeObj.fillStyle = c1.numColor;\r\n            this._nativeObj.fill();\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\r\n            this._nativeObj.strokeStyle = c2.numColor;\r\n            this._nativeObj.lineWidth = pen.lineWidth || 1;\r\n            this._nativeObj.lineJoin = pen.lineJoin;\r\n            this._nativeObj.lineCap = pen.lineCap;\r\n            this._nativeObj.miterLimit = pen.miterLimit;\r\n            this._nativeObj.stroke();\r\n        }*/\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.BEGIN_PATH, 0);\r\n\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.MOVE_TO, x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.LINE_TO, x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.add_ifffff(CONTEXT2D_FUNCTION_ID.ARC_TO, x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.add_i(CONTEXT2D_FUNCTION_ID.CLOSE_PATH);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.FILL);\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\r\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, pen.lineWidth || 1);\r\n            //this._nativeObj.lineJoin = pen.lineJoin;\r\n            //this._nativeObj.lineCap = pen.lineCap;\r\n            //this._nativeObj.miterLimit = pen.miterLimit;\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.STROKE);\r\n        }\r\n    }\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n\r\n        /*this._nativeObj.beginPath(false);\r\n        this._nativeObj.strokeStyle = c1.numColor;\r\n        this._nativeObj.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        //x += args[0], y += args[1];\r\n        this._nativeObj.moveTo(x + points[0], y + points[1]);\r\n        var i: number = 2, n: number = points.length;\r\n        while (i < n) {\r\n            this._nativeObj.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this._nativeObj.stroke();*/\r\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_CURVES, x, y, c1.numColor, lineWidth, new Float32Array(points));\r\n    }\r\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\r\n        if (!canvas) return;\r\n        this._nativeObj.flushCommand();\r\n        if (canvas instanceof (NativeWebGLCacheAsNormalCanvas)) {\r\n            this._nativeObj.drawCanvasNormal(canvas._nativeObj, x, y, width, height);\r\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_NORMAL, canvas._nativeObj.id, x, y, width, height);\r\n        }\r\n        else {\r\n            this._nativeObj.drawCanvasBitmap((canvas.context as any)._nativeObj, x, y, width, height);\r\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_BITMAP, (canvas.context as any)._nativeObj.id, x, y, width, height);\r\n        }\r\n    }\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(borderColor);\r\n        if (typeof (txt) === 'string') {\r\n            //this._nativeObj.fillWords(txt, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, fontStr)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\r\n        }\r\n    }\r\n    // 与fillText的区别是没有border信息\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(null);\r\n        if (typeof (text) === 'string') {\r\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, 0, text, font)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, 0, nTextAlign, font);\r\n        }\r\n    }\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(null);\r\n        if (typeof (text) === 'string') {\r\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, text, font);\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\r\n        }\r\n    }\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(borderColor);\r\n        if (typeof (txt) === 'string') {\r\n            //this._nativeObj.fillWords(txt, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, font);\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\r\n        }\r\n    }\r\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\r\n        if (typeof (data) === 'string') {\r\n            //this._nativeObj.fillWords(data, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, data, fontStr)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((data as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: any, color: string, strokeColor: string | null, lineWidth: number, textAlign: number, underLine: number = 0): void {\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\r\n\r\n        if (typeof (data) === 'string') {\r\n            //this._nativeObj.fillWords(data, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, textAlign, x, y, lineWidth, data, (fontObj as any)._font)\r\n        }\r\n        else {\r\n\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, textAlign, (fontObj as any)._font);\r\n            //this._nativeObj.fillWordText(data._nativeObj.id, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\r\n        }\r\n    }\r\n    drawTriangles(tex: Texture,\r\n        x: number, y: number,\r\n        vertices: Float32Array,\r\n        uvs: Float32Array,\r\n        indices: Uint16Array,\r\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        var m: Matrix = matrix ? matrix : this._tmpMatrix;\r\n        if (blendMode != null) {\r\n\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            //to do ColorFilter \r\n            this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, blendMode);\r\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\r\n                , x\r\n                , y\r\n                , alpha\r\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\r\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\r\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\r\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\r\n            );\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n        else {\r\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\r\n                , x\r\n                , y\r\n                , alpha\r\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\r\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\r\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\r\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\r\n            );\r\n        }\r\n    }\r\n    drawMask(w: number, h: number): any {\r\n        //return this._nativeObj.drawMask(w, h);\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.drawMask(w, h);\r\n    }\r\n    drawMasked(x: number, y: number, w: number, h: number): void {\r\n        //this._nativeObj.drawMasked(x, y, w, h);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.DRAW_MASKED, x, y, w, h);\r\n    }\r\n    drawMaskComposite(rt: any, x: number, y: number, w: number, h: number): void {\r\n        //this._nativeObj.drawMaskComposite(rt, x, y, w, h);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawMaskComposite(rt, x, y, w, h);\r\n    }\r\n    set asBitmap(value: boolean) {\r\n        //this._nativeObj.setAsBitmap(value);\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.SET_AS_BITMAP, value ? 1 : 0);\r\n    }\r\n    size(w: number, h: number): void {\r\n        //this._nativeObj.size(w, h);\r\n        this.add_iii(CONTEXT2D_FUNCTION_ID.SIZE, w, h);\r\n    }\r\n    setColorFilter(filter: ColorFilter): void {\r\n        /*if (filter) {\r\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\r\n        }\r\n        else {\r\n            this._nativeObj.setColorFilter(false, null, null);\r\n        }*/\r\n        this._nativeObj.flushCommand();\r\n        if (filter) {\r\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\r\n        }\r\n        else {\r\n            this._nativeObj.setColorFilter(false, null, null);\r\n        }\r\n    }\r\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, matrix: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1): boolean {\r\n        //return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty, blend);\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty, blend);\r\n    }\r\n    drawTargetBlurFilter(rt: RenderTexture2D, x: number, y: number, width: number, height: number, strength: number): void {\r\n        //this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\r\n    }\r\n    get _curMat(): Matrix {\r\n        /*var data: any = this._nativeObj._curMat;\r\n        var mat: Matrix = Matrix.create();\r\n        mat.a = data[0];\r\n        mat.b = data[1];\r\n        mat.c = data[2];\r\n        mat.d = data[3];\r\n        mat.tx = data[4];\r\n        mat.ty = data[5];*/\r\n\r\n        this._nativeObj.flushCommand();\r\n\r\n        var data: any = this._nativeObj._curMat;\r\n        var mat: Matrix = Matrix.create();\r\n        mat.a = data[0];\r\n        mat.b = data[1];\r\n        mat.c = data[2];\r\n        mat.d = data[3];\r\n        mat.tx = data[4];\r\n        mat.ty = data[5];\r\n\r\n        return mat;\r\n    }\r\n    addRenderObject3D(scene3D: ISubmit): void {\r\n        //this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\r\n        this._renderObject3DList.push((scene3D as any)._nativeObj);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\r\n    }\r\n    pushRT(): void {\r\n        //this._nativeObj.pushRT();\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.pushRT();\r\n    }\r\n    popRT(): void {\r\n        //this._nativeObj.popRT();\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.popRT();\r\n    }\r\n    useRT(rt: RenderTexture2D): void {\r\n        //this._nativeObj.useRT(rt);\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.useRT(rt);\r\n    }\r\n    drawFilter(out: RenderTexture2D, src: RenderTexture2D, x: number, y: number, width: number, height: number): void {\r\n        //this._nativeObj.drawFilter(out, src, x, y, width, height);\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawFilter(out, src, x, y, width, height);\r\n    }\r\n    protected checkTexture(tex: Texture): boolean {\r\n        // 注意sprite要保存，因为后面会被冲掉\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function (): void {\r\n            if (cs) {\r\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\r\n            }\r\n        })) { //source内调用tex.active();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    add_i(i: number): void {\r\n        this._need(4);\r\n        this._idata[this._idata[0]++] = i;\r\n    }\r\n    add_ii(a: number, b: number): void {\r\n        this._need(8);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        this._idata[0] = i;\r\n    }\r\n    add_if(a: number, b: number): void {\r\n        this._need(8);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._fdata[i++] = b;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iff(a: number, b: number, c: number): void {\r\n        this._need(12);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._fdata[i++] = b;\r\n        this._fdata[i++] = c;\r\n        this._idata[0] = i;\r\n    }\r\n\r\n    add_iffif(a: number, b: number, c: number, d: number, e: number) {\r\n        this._need(20);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        this._idata[i++] = d;\r\n        fdata[i++] = e;\r\n        this._idata[0] = i;\r\n    }\r\n\r\n    add_iffff(a: number, b: number, c: number, d: number, e: number): void {\r\n        this._need(20);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iii(a: number, b: number, c: number): void {\r\n        this._need(12);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = this._idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        idata[i++] = c;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffff(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n        this._need(24);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        this._idata[0] = i;\r\n    }\r\n    add_ifffff(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n        this._need(24);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void {\r\n        this._need(28);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[0] = i;\r\n    }\r\n    add_ifffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\r\n        this._need(36);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        idata[i++] = e;\r\n        idata[i++] = f;\r\n        idata[i++] = g;\r\n        idata[i++] = h;\r\n        fdata[i++] = ii;\r\n        idata[0] = i;\r\n    }\r\n    add_ifffffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number): void {\r\n        this._need(44);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        idata[i++] = g;\r\n        idata[i++] = h;\r\n        idata[i++] = ii;\r\n        idata[i++] = j;\r\n        fdata[i++] = k;\r\n        idata[0] = i;\r\n    }\r\n    add_iffffffif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\r\n        this._need(36);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        idata[i++] = h;\r\n        fdata[i++] = ii;\r\n        idata[0] = i;\r\n    }\r\n    add_String(ab: ArrayBuffer): void {\r\n        var len: number = ab.byteLength;\r\n        this._need(len + 4);\r\n        this._idata[this._idata[0]++] = len;\r\n        if (len == 0) return;\r\n        var uint8array: Uint8Array = new Uint8Array(ab);\r\n        this._byteArray.set(uint8array, this._idata[0] * 4);\r\n        this._idata[0] += len / 4;\r\n    }\r\n    add_iffiiiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number) {\r\n        this._need(45);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        this._idata[i++] = d;\r\n        this._idata[i++] = e;\r\n        this._idata[i++] = f;\r\n        this._idata[i++] = g;\r\n        fdata[i++] = h;\r\n        this._idata[i++] = ii;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) {\r\n        this._need(32);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        this._idata[i++] = e;\r\n        this._idata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[i++] = h;\r\n        this._idata[0] = i;\r\n    }\r\n    add_i_String(a: number, str: string): void {\r\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\r\n        this._need(4 + ab.byteLength + 4);\r\n        this.add_i(a);\r\n        this.add_String(ab);\r\n    }\r\n    add_iiiifff(a: number, b: number, c: number, d: number, e: number, f: number, g: number) {\r\n        this._need(28);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        this._idata[i++] = c;\r\n        this._idata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffiifi_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, str: string): void {\r\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\r\n        this._need(32 + ab.byteLength + 4);\r\n        this.add_iiffiifi(a, b, c, d, e, f, g, h);\r\n        this.add_String(ab);\r\n    }\r\n    add_iiiifff_String_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, str0: string, str1: string): void {\r\n        var ab0: ArrayBuffer = (window as any).conch.strTobufer(str0);\r\n        var ab1: ArrayBuffer = (window as any).conch.strTobufer(str1);\r\n        this._need(28 + (ab0.byteLength + 4) + (ab1.byteLength + 4));\r\n\r\n        this.add_iiiifff(a, b, c, d, e, f, g);\r\n        this.add_String(ab0);\r\n        this.add_String(ab1);\r\n    }\r\n    add_iiffffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number, l: number, m: number, n: number, o: number) {\r\n        this._need(60);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        fdata[i++] = k;\r\n        fdata[i++] = l;\r\n        fdata[i++] = m;\r\n        fdata[i++] = n;\r\n        idata[i++] = o;\r\n        idata[0] = i;\r\n    }\r\n    add_iiffffffffiffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number\r\n        , u: number, v: number) {\r\n        this._need(88);\r\n        var idata: Int32Array = this._idata;\r\n        var fdata: Float32Array = this._fdata;\r\n        var i: number = idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        idata[i++] = k;\r\n        fdata[i++] = l;\r\n        fdata[i++] = m;\r\n        fdata[i++] = n;\r\n        fdata[i++] = o;\r\n        fdata[i++] = p;\r\n        fdata[i++] = q;\r\n        fdata[i++] = r;\r\n        fdata[i++] = s;\r\n        fdata[i++] = t;\r\n        fdata[i++] = u;\r\n        idata[i++] = v;\r\n        idata[0] = i;\r\n    }\r\n    add_iiifffffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number) {\r\n        this._need(48);\r\n        var idata: Int32Array = this._idata;\r\n        var fdata: Float32Array = this._fdata;\r\n        var i: number = idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        idata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        fdata[i++] = k;\r\n        fdata[i++] = l;\r\n        idata[0] = i;\r\n    }\r\n    add_iiffffiffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void {\r\n        this._need(40);\r\n        let idata: Int32Array = this._idata;\r\n        let fdata: Float32Array = this._fdata;\r\n        var idx: number = idata[0];\r\n        idata[idx++] = a;\r\n        idata[idx++] = b;\r\n        fdata[idx++] = c;\r\n        fdata[idx++] = d;\r\n        fdata[idx++] = e;\r\n        fdata[idx++] = f;\r\n        idata[idx++] = g;\r\n        fdata[idx++] = h;\r\n        fdata[idx++] = i;\r\n        idata[idx++] = j;\r\n        idata[0] = idx;\r\n    }\r\n\r\n    add_iiifffffffff_ab_ab_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number, arraybuffer0: any, arraybuffer1: any, arraybuffer2: any) {\r\n\r\n        var nAlignLength0 = this.getAlignLength(arraybuffer0);\r\n        var nAlignLength1 = this.getAlignLength(arraybuffer1);\r\n        var nAlignLength2 = this.getAlignLength(arraybuffer2);\r\n        d\r\n        this._need(48 + (nAlignLength0 + 4) + (nAlignLength1 + 4) + (nAlignLength2 + 4));\r\n\r\n        this.add_iiifffffffff(a, b, c, d, e, f, g, h, ii, j, k, l);\r\n        this.wab(arraybuffer0, arraybuffer0.byteLength, nAlignLength0, 0);\r\n        this.wab(arraybuffer1, arraybuffer1.byteLength, nAlignLength1, 0);\r\n        this.wab(arraybuffer2, arraybuffer2.byteLength, nAlignLength2, 0);\r\n\r\n    }\r\n    wab(arraybuffer: any, length: number, nAlignLength: number, offset?: number): void {\r\n        offset = offset ? offset : 0;\r\n        this._need(nAlignLength + 4);\r\n        //写入长度\r\n        this._idata[this._idata[0]++] = length;\r\n        //写入数据\r\n        var uint8array: Uint8Array = null;\r\n        if (arraybuffer instanceof Float32Array && offset == 0) {\r\n            this._fdata.set(arraybuffer, this._idata[0]);\r\n        }\r\n        else {\r\n            if (arraybuffer instanceof ArrayBuffer) {\r\n                uint8array = new Uint8Array(arraybuffer, offset, length);\r\n            }\r\n            else if (arraybuffer.buffer) {\r\n                uint8array = new Uint8Array(arraybuffer.buffer, offset + arraybuffer.byteOffset, length);\r\n            }\r\n            else {\r\n                console.log(\"not arraybuffer/dataview\");\r\n                return;\r\n            }\r\n            this._byteArray.set(uint8array, this._idata[0] * 4);\r\n        }\r\n        this._idata[0] += nAlignLength / 4;\r\n    }\r\n    getAlignLength(data: any): number {\r\n        var byteLength = data.byteLength;\r\n        return (byteLength + 3) & 0xfffffffc;\r\n    }\r\n    add_iif_ab(a: number, b: number, c: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(12 + nAlignLength + 4);\r\n        this.add_iff(a, b, c);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n    add_iffif_ab(a: number, b: number, c: number, d: number, e: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(20 + nAlignLength + 4);\r\n        this.add_iffif(a, b, c, d, e);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n    add_iffiiiifi_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(45 + nAlignLength + 4);\r\n        this.add_iffiiiifi(a, b, c, d, e, f, g, h, ii);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n} \r\n","import { Const } from \"../../Const\";\r\nimport { Material } from \"../../resource/Material\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { BlendMode } from \"../canvas/BlendMode\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { Mesh2D } from \"../utils/Mesh2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\n\r\nexport class Submit extends SubmitBase {\r\n\r\n    protected static _poolSize: number = 0;\r\n    protected static POOL: Submit[] = [];\r\n    material: Material;\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        super(renderType);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    renderSubmit(): number {\r\n        if (this._numEle === 0 || !this._mesh || this._numEle == 0) return 1;//怎么会有_numEle是0的情况?\r\n\r\n        var _tex = this.shaderValue.textureHost;\r\n        if (_tex) {\r\n            var source: any = _tex._getSource();\r\n            if (!source)\r\n                return 1;\r\n            this.shaderValue.texture = source;\r\n        }\r\n\r\n        this._mesh.useMesh();//bind 顶点\r\n        this.shaderValue.upload(this.material);//绑定shader，uploadMaterial\r\n\r\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\r\n            RenderStateContext.setBlend(true);\r\n            this._blendFn();\r\n            BlendMode.activeBlendFunction = this._blendFn;\r\n        }\r\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        // Stat.renderBatches++;\r\n        // Stat.trianglesFaces += this._numEle / 3;\r\n\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if (SubmitBase.RENDERBASE == this)\r\n            return;\r\n\r\n        if ((--this._ref) < 1) {\r\n            Submit.POOL[Submit._poolSize++] = this;\r\n            this.shaderValue.release();\r\n            this.shaderValue = null;\r\n            //_vb = null;\r\n            //_mesh.destroy();\r\n            this._mesh = null;\r\n            this._parent && (this._parent.releaseRender(), this._parent = null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * create方法只传对submit设置的值\r\n     */\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): Submit {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : new Submit();\r\n        o._ref = 1;\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        o.shaderValue = sv;\r\n        o.material = context.material;\r\n        var filters: any[] = context._shader2D.filters;\r\n        filters && o.shaderValue.setFilters(filters);\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * 创建一个矢量submit\r\n     * @param\tctx\r\n     * @param\tmesh\r\n     * @param\tnumEle\t\t对应drawElement的第二个参数:count\r\n     * @param\toffset\t\tdrawElement的时候的ib的偏移。\r\n     * @param\tsv\t\t\tValue2D\r\n     * @return\r\n     */\r\n    static createShape(ctx: Context, mesh: Mesh2D, numEle: number, sv: Value2D): Submit {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : (new Submit());\r\n        o._mesh = mesh;\r\n        o._numEle = numEle;\r\n        o._startIdx = mesh.indexNum * 2;\r\n        o._ref = 1;\r\n        o.shaderValue = sv;\r\n        var blendType = ctx._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o.material = ctx.material;\r\n        o._blendFn = ctx._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        return o;\r\n    }\r\n}\r\n\r\n\r\n","import { Matrix } from \"../../maths/Matrix\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { RenderState2D } from \"../utils/RenderState2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\n\r\n/**\r\n * cache as normal 模式下的生成的canvas的渲染。\r\n */\r\nexport class SubmitCanvas extends SubmitBase {\r\n    /**@internal */\r\n    _matrix: Matrix = new Matrix();\t\t// 用来计算当前的世界矩阵\r\n    canv: Context;\r\n    /**@internal */\r\n    _matrix4: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    static POOL: SubmitCanvas[] = [];\r\n\r\n    static create(canvas: any, alpha: number, filters: any[]): SubmitCanvas {\r\n        var o = (!(SubmitCanvas.POOL as any)._length) ? (new SubmitCanvas()) : SubmitCanvas.POOL[--(SubmitCanvas.POOL as any)._length];\r\n        o.canv = canvas;\r\n        o._ref = 1;\r\n        o._numEle = 0;\r\n        var v: Value2D = o.shaderValue;\r\n        v.alpha = alpha;\r\n        v.defines.clearDefine();\r\n        filters && filters.length && v.setFilters(filters);\r\n        return o;\r\n    }\r\n\r\n    constructor() {\r\n        super(SubmitBase.TYPE_2D);\r\n        this.shaderValue = new Value2D(RenderSpriteData.Zero);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    renderSubmit(): number {\r\n        // 下面主要是为了给canvas设置矩阵。因为canvas保存的是没有偏移的。\r\n        var preAlpha = RenderState2D.worldAlpha;\r\n        var preMatrix4 = RenderState2D.worldMatrix4;\r\n        var preMatrix = RenderState2D.worldMatrix;\r\n\r\n        var preFilters: any[] = RenderState2D.worldFilters;\r\n        var preWorldShaderDefines = RenderState2D.worldShaderDefines;\r\n\r\n        var v = this.shaderValue;\r\n        var m = this._matrix;\r\n        var m4 = this._matrix4;\r\n        var mout = Matrix.TEMP;\r\n        Matrix.mul(m, preMatrix, mout);\r\n        m4[0] = mout.a;\r\n        m4[1] = mout.b;\r\n        m4[4] = mout.c;\r\n        m4[5] = mout.d;\r\n        m4[12] = mout.tx;\r\n        m4[13] = mout.ty;\r\n\r\n        RenderState2D.worldMatrix = mout.clone();\r\n        RenderState2D.worldMatrix4 = m4;\r\n        RenderState2D.worldAlpha = RenderState2D.worldAlpha * v.alpha;\r\n        if (v.filters && v.filters.length) {\r\n            RenderState2D.worldFilters = v.filters;\r\n            RenderState2D.worldShaderDefines = v.defines;\r\n        }\r\n        (this.canv as any)['flushsubmit']();\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix.destroy();\r\n        RenderState2D.worldMatrix = preMatrix;\r\n\r\n        RenderState2D.worldFilters = preFilters;\r\n        RenderState2D.worldShaderDefines = preWorldShaderDefines;\r\n        return 1;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var cache = SubmitCanvas.POOL;\r\n            //_vb = null;\r\n            this._mesh = null;\r\n            cache[(cache as any)._length++] = this;\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    getRenderType(): number {\r\n        return SubmitBase.TYPE_CANVAS;\r\n    }\r\n\r\n}\r\n{ (SubmitCanvas.POOL as any)._length = 0 }\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nimport { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { RenderTexture2D } from \"../../resource/RenderTexture2D\"\r\nimport { BlendMode } from \"../canvas/BlendMode\"\r\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { Const } from \"../../Const\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\nexport class SubmitTarget implements ISubmit {\r\n    /**@internal */\r\n    _mesh: Mesh2D;\t\t\t//代替 _vb,_ib\r\n    /**@internal */\r\n    _startIdx: number;\r\n    /**@internal */\r\n    _numEle: number;\r\n    shaderValue: Value2D;\r\n    blendType: number = 0;\r\n    /**@internal */\r\n    _ref: number = 1;\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n    srcRT: RenderTexture2D;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static POOL: SubmitTarget[] = [];\r\n    renderSubmit(): number {\r\n        this._mesh.useMesh();\r\n\r\n        var target = this.srcRT;\r\n        if (target) {//??为什么会出现为空的情况\r\n            this.shaderValue.textureHost = target;\r\n            this.shaderValue.upload();\r\n            this.blend();\r\n            LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    blend(): void {\r\n        if (BlendMode.activeBlendFunction !== BlendMode.fns[this.blendType]) {\r\n            RenderStateContext.setBlend(true);\r\n            BlendMode.fns[this.blendType]();\r\n            BlendMode.activeBlendFunction = BlendMode.fns[this.blendType];\r\n        }\r\n    }\r\n\r\n    getRenderType(): number {\r\n        return 0;\r\n    }\r\n\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var pool: any = SubmitTarget.POOL;\r\n            pool[pool._length++] = this;\r\n        }\r\n    }\r\n\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D, rt: RenderTexture2D): SubmitTarget {\r\n        var o: SubmitTarget = (SubmitTarget.POOL as any)._length ? SubmitTarget.POOL[--(SubmitTarget.POOL as any)._length] : new SubmitTarget();\r\n        o._mesh = mesh;\r\n        o.srcRT = rt;\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._ref = 1;\r\n        o._key.clear();\r\n        o._numEle = 0;\r\n        o.blendType = context._nBlendType;\r\n        o._key.blendShader = o.blendType;\r\n        o.shaderValue = sv;\r\n        if (context._colorFiler) {\r\n            var ft: ColorFilter = context._colorFiler;\r\n            sv.defines.addDefine(ft.typeDefine);\r\n            Matrix4x4.TEMPMatrix0.cloneByArray(ft._mat);\r\n            (<TextureSV>sv).colorMat = Matrix4x4.TEMPMatrix0;\r\n            Vector4.tempVec4.setValue(ft._alpha[0], ft._alpha[1], ft._alpha[2], ft._alpha[3]);\r\n            (<TextureSV>sv).colorAlpha = Vector4.tempVec4;\r\n        }\r\n        return o;\r\n    }\r\n}\r\n\r\n{\r\n    (SubmitTarget.POOL as any)._length = 0;\r\n}\r\n\r\n\r\n","import { SubmitBase } from \"./SubmitBase\";\r\nimport { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { BlendMode } from \"../canvas/BlendMode\"\r\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { Const } from \"../../Const\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\nimport { Material } from \"../../resource/Material\";\r\nimport { Laya } from \"../../../Laya\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\nexport class SubmitTexture extends SubmitBase {\r\n    private static _poolSize: number = 0;\r\n    private static POOL: SubmitTexture[] = [];\r\n    material: Material;\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        super(renderType);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            SubmitTexture.POOL[SubmitTexture._poolSize++] = this;\r\n            this.shaderValue.release();\r\n            //_vb = null;\r\n            this._mesh = null;\t\t//下次create会重新赋值。既然会重新赋值，那还设置干嘛\r\n            this._parent && (this._parent.releaseRender(), this._parent = null);\r\n        }\r\n    }\r\n\r\n    renderSubmit(): number {\r\n        if (this._numEle === 0)\r\n            return 1;\r\n\r\n        var tex = this.shaderValue.textureHost;\r\n        if (tex) {//现在fillrect也用的这个submit，所以不必要求有texture\r\n            var source: any = tex ? tex._getSource() : null;\r\n            if (!source) return 1;\r\n        }\r\n\r\n        this._mesh.useMesh();//Mesh2D  ->    Geometry  Vao  Vb  ib\r\n\r\n        //bind Shader uploadData\r\n        this.shaderValue.updateShaderData();//Material   Shader   ShaderData\r\n\r\n        //如果shader参数都相同，只要提交texture就行了\r\n        var lastSubmit = <SubmitTexture>SubmitBase.preRender;\r\n        var prekey = ((<SubmitBase>SubmitBase.preRender))._key;\r\n        //         if (this._key.blendShader === 0 && (this._key.submitType === prekey.submitType && this._key.blendShader === prekey.blendShader) && BaseShader.activeShader &&\r\n        //             (<SubmitBase>SubmitBase.preRender).clipInfoID == this.clipInfoID &&\r\n        // //            lastSubmit.shaderValue.defines._value === this.shaderValue.defines._value && //shader define要相同. \r\n        //             (this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERGLOW) || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERBLUR)\r\n        //                 || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILTERCOLOR) || this.shaderValue.defines.hasDefine(ShaderDefines2D.FILLTEXTURE))  //只有基本类型的shader走这个，像blur，glow，filltexture等都不要这样优化\r\n        //         ) {\r\n        //             (<Shader>BaseShader.activeShader).uploadTexture2D(source);\r\n        //         }\r\n        //         else {\r\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\r\n            RenderStateContext.setBlend(true);\r\n            this._blendFn();\r\n            BlendMode.activeBlendFunction = this._blendFn;\r\n        }\r\n        this.shaderValue.texture = source;\r\n        this.shaderValue.upload(this.material);//Update Uniform\r\n        //}\r\n        //Draw\r\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        return 1;\r\n    }\r\n\r\n    /*\r\n       create方法只传对submit设置的值\r\n     */\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): SubmitTexture {\r\n        var o = SubmitTexture._poolSize ? SubmitTexture.POOL[--SubmitTexture._poolSize] : new SubmitTexture(SubmitBase.TYPE_TEXTURE);\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._key.submitType = SubmitBase.KEY_DRAWTEXTURE;\r\n        o._ref = 1;\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        o.shaderValue = sv;\r\n        o.material = context.material;\r\n        //sv.setValue(context._shader2D);\r\n        if (context._colorFiler) {\r\n            var ft: ColorFilter = context._colorFiler;\r\n            sv.defines.addDefine(ft.typeDefine);\r\n            Matrix4x4.TEMPMatrix0.cloneByArray(ft._mat);\r\n            (<TextureSV>sv).colorMat = Matrix4x4.TEMPMatrix0;\r\n            Vector4.tempVec4.setValue(ft._alpha[0], ft._alpha[1], ft._alpha[2], ft._alpha[3]);\r\n            (<TextureSV>sv).colorAlpha = Vector4.tempVec4;\r\n        }\r\n        return o;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { RenderSpriteData, Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { SubmitTexture } from \"../submit/SubmitTexture\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\";\r\n/**\r\n * ...\r\n * @author laoxie\r\n */\r\nexport class CharSubmitCache {\r\n    private static __posPool: any[] = [];\r\n    private static __nPosPool: number = 0;\r\n\r\n    private _data: any[] = [];\r\n    private _ndata: number = 0;\r\n    private _tex: Texture;\r\n    private _imgId: number;\r\n    private _clipid: number = -1;\r\n    private _clipMatrix: Matrix = new Matrix();\r\n    /**@internal */\r\n    _enable: boolean = false;\r\n    /**@internal */\r\n    _colorFiler: ColorFilter;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        this._tex = null;\r\n        this._imgId = -1;\r\n        this._ndata = 0;\r\n        this._enable = false;\r\n        this._colorFiler = null;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.clear();\r\n        this._data.length = 0;\r\n        this._data = null;\r\n    }\r\n\r\n    add(ctx: Context, tex: Texture, imgid: number, pos: any[], uv: ArrayLike<number>, color: number): void {\r\n        if (this._ndata > 0 && (this._tex != tex || this._imgId != imgid ||\r\n            (this._clipid >= 0 && this._clipid != ctx._clipInfoID))) {\r\n            this.submit(ctx);\r\n        }\r\n\r\n        this._clipid = ctx._clipInfoID;\r\n        ctx._globalClipMatrix.copyTo(this._clipMatrix);\r\n        this._tex = tex;\r\n        this._imgId = imgid;\r\n        this._colorFiler = ctx._colorFiler;\r\n\r\n        this._data[this._ndata] = pos;\r\n        this._data[this._ndata + 1] = uv;\r\n        this._data[this._ndata + 2] = color;\r\n        this._ndata += 3;\r\n    }\r\n\r\n    getPos(): any[] {\r\n        if (CharSubmitCache.__nPosPool == 0)\r\n            return new Array(8);\r\n        return CharSubmitCache.__posPool[--CharSubmitCache.__nPosPool];\r\n    }\r\n\r\n    enable(value: boolean, ctx: Context): void {\r\n        if (value === this._enable)\r\n            return;\r\n        this._enable = value;\r\n        this._enable || this.submit(ctx);\r\n    }\r\n\r\n    submit(ctx: Context): void {\r\n        var n: number = this._ndata;\r\n        if (!n)\r\n            return;\r\n\r\n        var _mesh: MeshQuadTexture = ctx._mesh;\r\n\r\n        var colorFiler: ColorFilter = ctx._colorFiler;\r\n        ctx._colorFiler = this._colorFiler;\r\n        var submit: SubmitTexture = SubmitTexture.create(ctx, _mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n        ctx._submits[ctx._submits._length++] = ctx._curSubmit = submit;\r\n        submit.shaderValue.textureHost = this._tex;\r\n        submit._key.other = this._imgId;\r\n        ctx._colorFiler = colorFiler;\r\n        ctx._copyClipInfo(submit, this._clipMatrix);\r\n        submit.clipInfoID = this._clipid;\r\n\r\n        for (var i: number = 0; i < n; i += 3) {\r\n            _mesh.addQuad(this._data[i], this._data[i + 1], this._data[i + 2], true);\r\n            CharSubmitCache.__posPool[CharSubmitCache.__nPosPool++] = this._data[i];\r\n        }\r\n\r\n        n /= 3;\r\n        submit._numEle += n * 6;\r\n        _mesh.indexNum += n * 6;\r\n        _mesh.vertNum += n * 4;\r\n        ctx._drawCount += n;\r\n        this._ndata = 0;\r\n\r\n        if (RenderInfo.loopCount % 100 == 0)\r\n            this._data.length = 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Config } from \"./Config\";\r\nimport { Vector3 } from \"./laya/maths/Vector3\";\r\n\r\n/**\r\n * <code>Config3D</code> 类用于创建3D初始化配置。\r\n */\r\nexport class Config3D {\r\n    /**\r\n     * 控制是否动态合并 \r\n     */\r\n    static enableDynamicBatch: boolean = true;\r\n    /**\r\n     * 是否静态合并 \r\n     */\r\n    static enableStaticBatch: boolean = true;\r\n    /** \r\n     * 是否开启UniformBuffer\r\n     */\r\n    static enableUniformBufferObject = true;\r\n    /**\r\n     * 设置3DRT分辨率倍数\r\n     */\r\n    static pixelRatio: number = 1;\r\n    /**\r\n     *  设置自定义分辨率\r\n     */\r\n    static customResolution: boolean = false;\r\n    /**\r\n     *  设置最大RendertexturePool缓存的值\r\n     */\r\n    static defaultCacheRTMemory: number = 256;\r\n    /**\r\n     * 默认物理功能初始化内存，单位为M。\r\n     */\r\n    static defaultPhysicsMemory: number = 16;\r\n    /**\r\n     *  是否开启多光源,如果场景不需要多光源，关闭后可提升性能。\r\n     */\r\n    static enableMultiLight: boolean = true;\r\n    /**\r\n     * 最大光源数量。\r\n     */\r\n    static maxLightCount: number = 32;\r\n    /**\r\n    * X、Y、Z轴的光照集群数量,Z值会影响Cluster接受区域光(点光、聚光)影响的数量,Math.floor(2048 / lightClusterCount.z - 1) * 4 为每个Cluster的最大平均接受区域光数量,如果每个Cluster所接受光源影响的平均数量大于该值，则较远的Cluster会忽略其中多余的光照影响。\r\n    */\r\n    static lightClusterCount: Vector3 = new Vector3(12, 12, 12);\r\n\r\n    /**\r\n     * 最大形变数量\r\n     */\r\n    static maxMorphTargetCount: number = 32;\r\n\r\n    /**\r\n    * 设置分辨率大小（并不是实际渲染分辨率）\r\n    * @param width \r\n    * @param height \r\n    */\r\n    static setResolution(width: number, height: number) {\r\n        Config3D.customResolution = true;\r\n        Config3D._resoluWidth = width;\r\n        Config3D._resoluHeight = height;\r\n    }\r\n\r\n    /**BVHRenderConfig */\r\n    /**是否使用BVH裁剪 */\r\n    static useBVHCull: boolean = false;\r\n    /**一个BVH节点最大的cell数，超过这个数会分离 */\r\n    static BVH_max_SpatialCount = 7;\r\n    /**最大BVH节点的大小 */\r\n    static BVH_limit_size = 32;\r\n    /**最小cellbuild数，如果小于这个数，不会BVH构建 */\r\n    static BVH_Min_Build_nums = 10\r\n\r\n\r\n    //----引擎内部使用,不暴露给开发者----\r\n    /**@internal */\r\n    static _uniformBlock: boolean;\r\n    /**@internal 设置分辨率宽度*/\r\n    static _resoluWidth: number = -1;\r\n    /**@internal 设置分辨率高度*/\r\n    static _resoluHeight: number = -1;\r\n    /**@internal*/\r\n    static _maxAreaLightCountPerClusterAverage: number;\r\n    /**@internal*/\r\n    static _multiLighting: boolean;\r\n    /** @internal是否开启视锥裁剪调试。\r\n     */\r\n    static debugFrustumCulling: boolean = false;\r\n}\r\n\r\nConfig.isStencil = true;","import { Config3D } from \"../../Config3D\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\nexport class RenderTexture extends BaseTexture implements IRenderTarget {\r\n\r\n    // todo 记录当前 绑定 rt  位置不放在这里\r\n    protected static _currentActive: RenderTexture = null;\r\n\r\n    static get currentActive(): RenderTexture {\r\n        return RenderTexture._currentActive;\r\n    }\r\n\r\n    protected static _configInstance: any = {};\r\n    static configRenderContextInstance(value: any) {\r\n        RenderTexture._configInstance = value;\r\n    }\r\n\r\n    private static _pool: RenderTexture[] = [];\r\n    private static _poolMemory: number = 0;\r\n\r\n    /**\r\n     * 创建一个RenderTexture\r\n     * @param width\r\n     * @param height\r\n     * @param colorFormat\r\n     * @param depthFormat\r\n     * @param mipmap \r\n     * @param multiSamples \r\n     * @param depthTexture \r\n     * @param sRGB \r\n     * @returns \r\n     */\r\n    static createFromPool(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, mipmap: boolean = false, multiSamples: number = 1, depthTexture: boolean = false, sRGB: boolean = false) {\r\n\r\n        // todo mipmap 判断\r\n        mipmap = mipmap && (width & (width - 1)) === 0 && (height & (height - 1)) === 0;\r\n\r\n        let n = RenderTexture._pool.length;\r\n        for (let index = 0; index < n; index++) {\r\n            let rt = RenderTexture._pool[index];\r\n\r\n            if (rt.width == width && rt.height == height && rt.colorFormat == colorFormat && rt.depthStencilFormat == depthFormat && rt._generateMipmap == mipmap && rt.multiSamples == multiSamples && rt.generateDepthTexture == depthTexture && rt._gammaSpace == sRGB) {\r\n                rt._inPool = false;\r\n                let end = RenderTexture._pool[n - 1];\r\n                RenderTexture._pool[index] = end;\r\n                RenderTexture._pool.length -= 1;\r\n                RenderTexture._poolMemory -= (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n                return rt;\r\n            }\r\n        }\r\n\r\n        let rt = new RenderTexture(width, height, colorFormat, depthFormat, mipmap, multiSamples, depthTexture, sRGB);\r\n        rt.lock = true;\r\n        return rt;\r\n    }\r\n\r\n    static recoverToPool(rt: RenderTexture): void {\r\n        if (rt._inPool || rt.destroyed)\r\n            return;\r\n        RenderTexture._pool.push(rt);\r\n        RenderTexture._poolMemory += (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n        rt._inPool = true;\r\n    }\r\n\r\n    static clearPool() {\r\n        if (RenderTexture._poolMemory < Config3D.defaultCacheRTMemory) {\r\n            return;\r\n        }\r\n        for (var i in RenderTexture._pool) {\r\n            RenderTexture._pool[i].destroy();\r\n        }\r\n        RenderTexture._pool = [];\r\n        RenderTexture._poolMemory = 0;\r\n    }\r\n\r\n    /** @internal 最后绑定到主画布上的结果 此值可能为null*/\r\n    private static _bindCanvasRender: RenderTexture;\r\n    /**\r\n     * 绑定到主画布上的RenderTexture\r\n     */\r\n    static get bindCanvasRender(): RenderTexture {\r\n        return RenderTexture._bindCanvasRender;\r\n    }\r\n\r\n    static set bindCanvasRender(value: RenderTexture) {\r\n        if (value != this._bindCanvasRender)\r\n            //(this._bindCanvasRender) && RenderTexture.recoverToPool(this._bindCanvasRender);\r\n            this._bindCanvasRender = value;\r\n    }\r\n\r\n\r\n    _inPool: boolean = false;\r\n\r\n    _isCameraTarget: boolean = false;\r\n\r\n    _renderTarget: InternalRenderTarget;\r\n\r\n    private _generateDepthTexture: boolean = false;\r\n    public get generateDepthTexture(): boolean {\r\n        return this._generateDepthTexture;\r\n    }\r\n    public set generateDepthTexture(value: boolean) {\r\n\r\n        // todo  重复 设置\r\n        if (value && !this._depthStencilTexture) {\r\n            // todo  base texture format 移出构造函数\r\n            this._depthStencilTexture = new BaseTexture(this.width, this.height, this.depthStencilFormat);\r\n            // @ts-ignore\r\n            this._depthStencilTexture._dimension = TextureDimension.Tex2D;\r\n\r\n\r\n            this._depthStencilTexture._texture = LayaGL.textureContext.createRenderTextureInternal(TextureDimension.Tex2D, this.width, this.height, this.depthStencilFormat, false, false);\r\n\r\n            LayaGL.textureContext.setupRendertargetTextureAttachment(this._renderTarget, this._depthStencilTexture._texture);\r\n\r\n        }\r\n\r\n        this._generateDepthTexture = value;\r\n    }\r\n\r\n    private _depthStencilTexture: BaseTexture;\r\n\r\n    get depthStencilTexture(): BaseTexture {\r\n        return this._depthStencilTexture;\r\n    }\r\n\r\n    _generateMipmap: boolean;\r\n\r\n    get colorFormat(): RenderTargetFormat {\r\n        return this._renderTarget.colorFormat;\r\n    }\r\n\r\n    protected _depthStencilFormat: RenderTargetFormat;\r\n    get depthStencilFormat(): RenderTargetFormat {\r\n        return this._renderTarget.depthStencilFormat;\r\n    }\r\n\r\n    protected _multiSamples: number;\r\n    public get multiSamples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @param width \r\n     * @param height \r\n     * @param colorFormat \r\n     * @param depthFormat \r\n     * @param generateMipmap \r\n     * @param multiSamples \r\n     * @param generateDepthTexture \r\n     * @param sRGB \r\n     */\r\n    constructor(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        super(width, height, colorFormat);\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    _createRenderTarget() {\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        // rt 格式 宽高可能不支持\r\n        this._generateMipmap = this._renderTarget._generateMipmap;\r\n        this._texture = this._renderTarget._textures[0];\r\n\r\n        this.generateDepthTexture = this._generateDepthTexture;\r\n    }\r\n\r\n    //@internal\r\n    recreate(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = <TextureFormat><any>colorFormat;\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        this._disposeResource();\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    _start() {\r\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\r\n        if (RenderTexture._currentActive != this) {\r\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\r\n            RenderTexture._currentActive = this;\r\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget);\r\n        }\r\n    }\r\n\r\n    _end() {\r\n        RenderTexture._currentActive = null;\r\n\r\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n        (this._isCameraTarget) && (RenderTexture._configInstance.invertY = false);\r\n    }\r\n\r\n    getData(xOffset: number, yOffset: number, width: number, height: number, out: Uint8Array | Float32Array): Uint8Array | Float32Array {\r\n        LayaGL.textureContext.readRenderTargetPixelData(this._renderTarget, xOffset, yOffset, width, height, out);\r\n        return out;\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n\r\n        if (RenderTexture._currentActive == this) {\r\n            this._end();\r\n        }\r\n\r\n        this._renderTarget.dispose();\r\n        this._renderTarget = null;\r\n        this._depthStencilTexture?.destroy();\r\n        this._depthStencilTexture = null;\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Bezier } from \"../maths/Bezier\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\r\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { FontInfo } from \"../utils/FontInfo\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { DrawStyle } from \"../webgl/canvas/DrawStyle\";\r\nimport { Path } from \"../webgl/canvas/Path\";\r\nimport { ISaveData } from \"../webgl/canvas/save/ISaveData\";\r\nimport { SaveBase } from \"../webgl/canvas/save/SaveBase\";\r\nimport { SaveClipRect } from \"../webgl/canvas/save/SaveClipRect\";\r\nimport { SaveMark } from \"../webgl/canvas/save/SaveMark\";\r\nimport { SaveTransform } from \"../webgl/canvas/save/SaveTransform\";\r\nimport { SaveTranslate } from \"../webgl/canvas/save/SaveTranslate\";\r\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { SkinMeshBuffer } from \"../webgl/shader/d2/skinAnishader/SkinMeshBuffer\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { BasePoly } from \"../webgl/shapes/BasePoly\";\r\nimport { Earcut } from \"../webgl/shapes/Earcut\";\r\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\r\nimport { Submit } from \"../webgl/submit/Submit\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { SubmitCanvas } from \"../webgl/submit/SubmitCanvas\";\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\r\nimport { SubmitKey } from \"../webgl/submit/SubmitKey\";\r\nimport { SubmitTarget } from \"../webgl/submit/SubmitTarget\";\r\nimport { SubmitTexture } from \"../webgl/submit/SubmitTexture\";\r\nimport { CharRenderInfo } from \"../webgl/text/CharRenderInfo\";\r\nimport { CharSubmitCache } from \"../webgl/text/CharSubmitCache\";\r\nimport { TextRender } from \"../webgl/text/TextRender\";\r\nimport { Mesh2D } from \"../webgl/utils/Mesh2D\";\r\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"../webgl/utils/MeshTexture\";\r\nimport { MeshVG } from \"../webgl/utils/MeshVG\";\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { HTMLCanvas } from \"./HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { NativeContext } from \"./NativeContext\";\r\nimport { Const } from \"../Const\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { Material } from \"./Material\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nconst defaultClipMatrix = new Matrix(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE, 0, 0);\r\n\r\n/**\r\n * @private\r\n * Context扩展类\r\n */\r\nexport class Context {\r\n\r\n    /**@internal */\r\n    static _rendercontex: Context;\r\n    /**@internal */\r\n    _canvas: HTMLCanvas;\r\n    /**@internal */\r\n    _drawingToTexture: boolean;\r\n\r\n    static _SUBMITVBSIZE: number = 32000;\r\n\r\n    private static _MAXVERTNUM: number = 65535;\r\n\r\n    static MAXCLIPRECT: Rectangle = null;\r\n\r\n    static _COUNT: number = 0;\r\n\r\n    /**@internal */\r\n    _tmpMatrix: Matrix = new Matrix();\t\t// chrome下静态的访问比从this访问要慢\r\n\r\n    private static SEGNUM: number = 32;\r\n\r\n    private static _contextcount: number = 0;\r\n\r\n    private _drawTexToDrawTri_Vert: Float32Array = new Float32Array(8);\t\t// 从速度考虑，不做成static了\r\n    private _drawTexToDrawTri_Index: Uint16Array = new Uint16Array([0, 1, 2, 0, 2, 3]);\r\n    private _tempUV: Float32Array = new Float32Array(8);\r\n    private _drawTriUseAbsMatrix: boolean = false;\t//drawTriange函数的矩阵是全局的，不用再乘以当前矩阵了。这是一个补丁。\r\n\r\n    static __init__(): void {\r\n        Context.MAXCLIPRECT = new Rectangle(0, 0, Const.MAX_CLIP_SIZE, Const.MAX_CLIP_SIZE);\r\n        ContextParams.DEFAULT = new ContextParams();\r\n        WebGLCacheAsNormalCanvas;\r\n    }\r\n\r\n    /**@private */\r\n    drawImage(...args: any[]): void {\r\n    }\r\n\r\n    /**@private */\r\n    getImageData(...args: any[]): any {\r\n    }\r\n\r\n    /**@private */\r\n    measureText(text: string): any {\r\n        return null;\r\n    }\r\n\r\n    /**@private */\r\n    setTransform(...args: any[]): void {\r\n    }\r\n\r\n\r\n    /**@private */\r\n    $transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n    }\r\n\r\n    set material(value: Material) {\r\n        this._shader2D.material = value;\r\n    }\r\n\r\n    get material() {\r\n        return this._shader2D.material;\r\n    }\r\n\r\n\r\n    /**@private */\r\n    get lineJoin(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineJoin(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get lineCap(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineCap(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get miterLimit(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set miterLimit(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    clearRect(x: number, y: number, width: number, height: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _drawRect(x: number, y: number, width: number, height: number, style: any): void {\r\n        style && (this.fillStyle = style);\r\n        this.fillRect(x, y, width, height, null);\r\n    }\r\n\r\n    ///**@private */\r\n    //public function transformByMatrix(value:Matrix):void {\r\n    //this.transform(value.a, value.b, value.c, value.d, value.tx, value.ty);\r\n    //}\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    //public function setTransformByMatrix(value:Matrix):void {\r\n    //\tthis.setTransform(value.a, value.b, value.c, value.d, value.tx, value.ty);\r\n    //}\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    drawTexture2(x: number, y: number, pivotX: number, pivotY: number, m: Matrix, args2: any[]): void {\r\n    }\r\n\r\n    //=============新增==================\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n\r\n    saveTransform(matrix: Matrix): void {\r\n        this.save();\r\n    }\r\n\r\n    restoreTransform(matrix: Matrix): void {\r\n        this.restore();\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\r\n        var ctx: any = this;\r\n\r\n        //填充矩形\r\n        if (fillColor != null) {\r\n            ctx.fillStyle = fillColor;\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n\r\n        //绘制矩形边框\r\n        if (lineColor != null) {\r\n            ctx.strokeStyle = lineColor;\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    alpha(value: number): void {\r\n        this.globalAlpha *= value;\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _transform(mat: Matrix, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.rotate(angle);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.scale(scaleX, scaleY);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        this.moveTo(x + fromX, y + fromY);\r\n        this.lineTo(x + toX, y + toY);\r\n        this.stroke();\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        this.addPath(points.slice(), false, false, x, y);\r\n        this.stroke();\r\n    }\r\n\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        //x += args[0], y += args[1];\r\n        this.moveTo(x + points[0], y + points[1]);\r\n        var i: number = 2, n: number = points.length;\r\n        while (i < n) {\r\n            this.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this.stroke();\r\n    }\r\n\r\n    private _fillAndStroke(fillColor: string, strokeColor: string, lineWidth: number, isConvexPolygon: boolean = false): void {\r\n        //绘制填充区域\r\n        if (fillColor != null) {\r\n            this.fillStyle = fillColor;\r\n            this.fill();\r\n        }\r\n\r\n        //绘制边框\r\n        if (strokeColor != null && lineWidth > 0) {\r\n            this.strokeStyle = strokeColor;\r\n            this.lineWidth = lineWidth;\r\n            this.stroke();\r\n        }\r\n    }\r\n    /**Math.PI*2的结果缓存 */\r\n    static PI2: number = 2 * Math.PI;\r\n    /**@internal */\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath(true);\r\n        this.arc(x, y, radius, radius, 0, Context.PI2, false, true, 40);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    /**@internal */\r\n    _drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number) {\r\n        this.beginPath(true);\r\n        this.arc(x, y, width, height, 0, Context.PI2, false, true, 40);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n    /**Math.PI*0.5的结果缓存 */\r\n    static HPI = Math.PI * 0.5;\r\n    /**@internal */\r\n    _drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number) {\r\n        this.beginPath(true);\r\n        var tPath = this._getPath();\r\n        if (0 >= lt) {\r\n            tPath.addPoint(x, y);\r\n        } else {\r\n            this.arc(x + lt, y + lt, lt, lt, Math.PI, Math.PI + Context.HPI);\r\n        }\r\n        let startX = x + width - rt;\r\n        if (0 >= rt) {\r\n            tPath.addPoint(startX, y);\r\n        } else {\r\n            this.arc(startX, y + rt, rt, rt, Math.PI + Context.HPI, Context.PI2);\r\n        }\r\n        startX = x + width - rb;\r\n        let startY = y + height - rb;\r\n        if (0 >= rb) {\r\n            tPath.addPoint(startX, startY);\r\n        } else {\r\n            this.arc(startX, startY, rb, rb, 0, Context.HPI);\r\n        }\r\n        startX = x + lb;\r\n        startY = y + height - lb;\r\n        if (0 >= lb) {\r\n            tPath.addPoint(startX, startY);\r\n        } else {\r\n            this.arc(startX, startY, lb, lb, Math.PI - Context.HPI, Math.PI);\r\n        }\r\n        tPath.addPoint(x, y + lt);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n\r\n    //矢量方法\t\r\n    /**@internal */\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        //移动中心点\r\n        //ctx.translate(x + args[0], y + args[1]);\r\n        //形成路径\r\n        this.beginPath();\r\n        this.moveTo(x, y);\r\n        this.arc(x, y, radius, radius, startAngle, endAngle);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n        //恢复中心点\r\n        //ctx.translate(-x - args[0], -y - args[1]);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\r\n        //var points:Array = args[2];\r\n        this.beginPath();\r\n        //poly一定是close的\r\n        this.addPath(points.slice(), true, isConvexPolygon, x, y);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth, isConvexPolygon);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\r\n        //形成路径\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n\r\n        //var paths:Array = args[2];\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            this.fillStyle = brush.fillStyle;\r\n            this.fill();\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            this.strokeStyle = pen.strokeStyle;\r\n            this.lineWidth = pen.lineWidth || 1;\r\n            this.lineJoin = pen.lineJoin;\r\n            this.lineCap = pen.lineCap;\r\n            this.miterLimit = pen.miterLimit;\r\n            this.stroke();\r\n        }\r\n    }\r\n\r\n    static const2DRenderCMD: RenderStateCommand;\r\n    static set2DRenderConfig(): void {\r\n\r\n        if (!Context.const2DRenderCMD) {\r\n            const cmd = Context.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\r\n            if (cmd) {\r\n                cmd.addCMD(RenderStateType.BlendType, true);\r\n                //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n                cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\r\n                BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n                //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n                cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\r\n                //WebGLContext.setDepthTest(gl, false);\r\n                cmd.addCMD(RenderStateType.DepthTest, false);\r\n                //WebGLContext.setDepthMask(gl, true);\r\n                cmd.addCMD(RenderStateType.DepthMask, true);\r\n                //WebGLContext.setCullFace(gl, false);\r\n                cmd.addCMD(RenderStateType.CullFace, false);\r\n                //WebGLContext.setFrontFace(gl, gl.CCW);\r\n                cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\r\n            }\r\n        }\r\n        Context.const2DRenderCMD && Context.const2DRenderCMD.applyCMD();\r\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\r\n        // WebGLContext.setBlend(gl, true);//还原2D设置\r\n        // WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n        // BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n        // WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        // WebGLContext.setDepthTest(gl, false);\r\n        // WebGLContext.setDepthMask(gl, true);\r\n        // WebGLContext.setCullFace(gl, false);\r\n        // WebGLContext.setFrontFace(gl, gl.CCW);\r\n        RenderTexture2D.currentActive && RenderTexture2D.currentActive.end();\r\n        LayaGL.renderEngine.viewport(0, 0, RenderState2D.width, RenderState2D.height);//还原2D视口\r\n        LayaGL.renderEngine.scissorTest(true);\r\n        LayaGL.renderEngine.scissor(0, 0, RenderState2D.width, RenderState2D.height);\r\n    }\r\n\r\n    /**@internal */\r\n    _id: number = ++Context._COUNT;\r\n\r\n    private _other: ContextParams | null = null;\r\n    private _renderNextSubmitIndex: number = 0;\r\n\r\n    private _path: Path | null = null;\r\n    /**@internal */\r\n    _drawCount: number = 1;\r\n    private _width: number = Const.MAX_CLIP_SIZE;\r\n    private _height: number = Const.MAX_CLIP_SIZE;\r\n    private _renderCount: number = 0;\r\n    /**@internal */\r\n    _submits: any = null;\r\n    /**@internal */\r\n    _curSubmit: any = null;\r\n    /**@internal */\r\n    _submitKey: SubmitKey = new SubmitKey();\t//当前将要使用的设置。用来跟上一次的_curSubmit比较\r\n\r\n    /**@internal */\r\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    /**@internal */\r\n    _pathMesh: MeshVG | null = null;\t\t\t//矢量专用mesh。\r\n    /**@internal */\r\n    _triangleMesh: MeshTexture | null = null;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\r\n\r\n    meshlist: any[] = [];\t//本context用到的mesh\r\n\r\n    //public var _vbs:Array = [];\t//双buffer管理。TODO 临时删掉，需要mesh中加上\r\n    private _transedPoints: any[] = new Array(8);\t//临时的数组，用来计算4个顶点的转换后的位置。\r\n    private _temp4Points: any[] = new Array(8);\t\t//临时数组。用来保存4个顶点的位置。\r\n\r\n    /**@internal */\r\n    _clipRect: Rectangle = Context.MAXCLIPRECT;\r\n    //public var _transedClipInfo:Array = [0, 0, Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\t//应用矩阵后的clip。ox,oy, xx,xy,yx,yy \txx,xy等是缩放*宽高\r\n    /**@internal */\r\n    _globalClipMatrix: Matrix = defaultClipMatrix.clone();\t//用矩阵描述的clip信息。最终的点投影到这个矩阵上，在0~1之间就可见。\r\n    /**@internal */\r\n    _clipInCache: boolean = false; \t// 当前记录的clipinfo是在cacheas normal后赋值的，因为cacheas normal会去掉当前矩阵的tx，ty，所以需要记录一下，以便在是shader中恢复\r\n    /**@internal */\r\n    _clipInfoID: number = 0;\t\t\t\t\t//用来区分是不是clipinfo已经改变了\r\n    private _clipID_Gen: number = 0;\t\t\t//生成clipid的，原来是  _clipInfoID=++_clipInfoID 这样会有问题，导致兄弟clip的id都相同\r\n    /**@internal */\r\n    _curMat: Matrix;\r\n\r\n    //计算矩阵缩放的缓存\r\n    /**@internal */\r\n    _lastMatScaleX: number = 1.0;\r\n    /**@internal */\r\n    _lastMatScaleY: number = 1.0;\r\n    private _lastMat_a: number = 1.0;\r\n    private _lastMat_b: number = 0.0;\r\n    private _lastMat_c: number = 0.0;\r\n    private _lastMat_d: number = 1.0;\r\n    /**@internal */\r\n    _nBlendType: number = 0;\r\n    /**@internal */\r\n    _save: ISaveData[] & { _length?: number } = null;\r\n    /**@internal */\r\n    _targets: RenderTexture2D | null = null;\r\n    /**@internal */\r\n    _charSubmitCache: CharSubmitCache | null = null;\r\n    /**@internal */\r\n    _saveMark: SaveMark | null = null;\r\n    /**@internal */\r\n    _shader2D: Shader2D = new Shader2D();\t//\r\n\r\n    /**\r\n     * 所cacheAs精灵\r\n     * 对于cacheas bitmap的情况，如果图片还没准备好，需要有机会重画，所以要保存sprite。例如在图片\r\n     * 加载完成后，调用repaint\r\n     */\r\n    sprite: Sprite | null = null;\r\n\r\n    /**@internal */\r\n    public static _textRender: TextRender | null = null;// new TextRender();\r\n    /**@internal */\r\n    _italicDeg: number = 0;//文字的倾斜角度\r\n    /**@internal */\r\n    _lastTex: Texture | null = null; //上次使用的texture。主要是给fillrect用，假装自己也是一个drawtexture\r\n\r\n    private _fillColor: number = 0;\r\n    private _flushCnt: number = 0;\r\n\r\n    private defTexture: Texture | null = null;\t//给fillrect用\r\n    /**@internal */\r\n    _colorFiler: ColorFilter | null = null;\r\n\r\n    drawTexAlign: boolean = false;\t\t// 按照像素对齐\r\n    /**@internal */\r\n    _incache: boolean = false;\t\t\t// 正处在cacheas normal过程中\r\n\r\n    isMain: boolean = false;\t\t\t\t// 是否是主context\r\n\r\n    clearColor: Color = new Color();\r\n\r\n    constructor() {\r\n        Context._contextcount++;\r\n        Context._textRender = Context._textRender || new TextRender();\r\n        //_ib = IndexBuffer2D.QuadrangleIB;\r\n        if (!this.defTexture) {\r\n            var defTex2d: Texture2D = new Texture2D(2, 2, TextureFormat.R8G8B8A8, true, false, false);\r\n            defTex2d.setPixelsData(new Uint8Array(16), false, false);\r\n            defTex2d.lock = true;\r\n            this.defTexture = new Texture(defTex2d);\r\n        }\r\n        this._lastTex = this.defTexture;\r\n        this.clear();\r\n    }\r\n\r\n    clearBG(r: number, g: number, b: number, a: number): void {\r\n        // var gl: WebGLRenderingContext = RenderStateContext.mainContext;\r\n        this.clearColor.r = r;\r\n        this.clearColor.g = g;\r\n        this.clearColor.b = b;\r\n        this.clearColor.a = a;\r\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color, this.clearColor, 1);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    _getSubmits(): any[] {\r\n        return this._submits;\r\n    }\r\n\r\n    /**\r\n     * 释放占用内存\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    private _releaseMem(keepRT: boolean = false): void {\r\n        if (!this._submits)\r\n            return;\r\n\r\n        this._curMat && this._curMat.destroy();\r\n        //@ts-ignore\r\n        this._curMat = null;\r\n        this._shader2D.destroy();\r\n        //@ts-ignore\r\n        this._shader2D = null;\r\n        //@ts-ignore\r\n        this._charSubmitCache.clear();\r\n\r\n        for (var i: number = 0, n: number = this._submits._length; i < n; i++) {\r\n            this._submits[i].releaseRender();\r\n        }\r\n        this._submits.length = 0;\r\n        this._submits._length = 0;\r\n        this._submits = null;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n\r\n        this._path = null;\r\n        //_other && (_other.font = null);\r\n        this._save = null;\r\n\r\n        var sz: number;\r\n        for (i = 0, sz = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.destroy();\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this.sprite = null;\r\n        if (!keepRT) {\r\n            this._targets && (this._targets.destroy());\r\n            this._targets = null;\r\n        }\r\n        //TODO mesh 暂时releaseMem了\r\n    }\r\n\r\n    /**\r\n     * 释放所有资源\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    destroy(keepRT: boolean = false): void {\r\n        --Context._contextcount;\r\n        this.sprite = null;\r\n        this._releaseMem(keepRT);\r\n        this._charSubmitCache && this._charSubmitCache.destroy();\r\n        //_ib && (_ib != IndexBuffer2D.QuadrangleIB) && _ib.releaseResource();\r\n        this._mesh.destroy();\r\n        if (!keepRT) {\r\n            this._targets && this._targets.destroy();//用回收么？可能没什么重复利用的价值\r\n            this._targets = null;\r\n        }\r\n        if (this.defTexture) {\r\n            this.defTexture.bitmap && this.defTexture.bitmap.destroy();\r\n            this.defTexture.destroy();\r\n        }\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        if (!this._submits) {//第一次\r\n            this._other = ContextParams.DEFAULT;\r\n            this._curMat = Matrix.create();\r\n            this._charSubmitCache = new CharSubmitCache();\r\n            //_vb = _vbs[0] = VertexBuffer2D.create( -1);\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n            this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n            this.meshlist.push(this._pathMesh);\r\n            this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._triangleMesh);\r\n            //if(Config.smartCache) _vbs[1] = VertexBuffer2D.create( -1);\r\n            this._submits = [];\r\n            this._save = [SaveMark.Create(this)];\r\n            this._save.length = 10;\r\n            this._shader2D = new Shader2D();\r\n        }\r\n\r\n        this._submitKey.clear();\r\n\r\n        //_vb = _vbs[_renderCount%2];\r\n        //_vb.clear();\r\n        this._mesh.clearVB();\r\n\r\n        //_targets && (_targets.repaint = true);\r\n\r\n        this._drawCount = 1;\r\n\r\n        this._other = ContextParams.DEFAULT;\r\n        this._other.lineWidth = this._shader2D.ALPHA = 1.0;\r\n\r\n        this._nBlendType = 0;\r\n\r\n        this._clipRect = Context.MAXCLIPRECT;\r\n\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        SubmitBase.RENDERBASE._ref = 0xFFFFFF;\r\n        SubmitBase.RENDERBASE._numEle = 0;\r\n\r\n        this._shader2D.fillStyle = this._shader2D.strokeStyle = DrawStyle.DEFAULT;\r\n\r\n        for (let i = 0, n = this._submits._length; i < n; i++)\r\n            this._submits[i].releaseRender();\r\n\r\n        this._submits._length = 0;\r\n\r\n        this._curMat.identity();\r\n        this._other.clear();\r\n\r\n        this._saveMark = <SaveMark>this._save[0];\r\n        this._save._length = 1;\r\n    }\r\n\r\n    /**\r\n     * 设置ctx的size，这个不允许直接设置，必须是canvas调过来的。所以这个函数里也不用考虑canvas相关的东西\r\n     * @param\tw\r\n     * @param\th\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h) {\r\n            this._width = w;\r\n            this._height = h;\r\n            //TODO 问题：如果是rendertarget 计算内存会有问题，即canvas算一次，rt又算一次,所以这里要修改\r\n            //这种情况下canvas应该不占内存\r\n            if (this._targets) {\r\n                this._targets.destroy();\r\n                this._targets = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, -1);\r\n            }\r\n            //如果是主画布，要记录窗口大小\r\n            //如果不是 TODO\r\n            if (this.isMain) {\r\n                LayaGL.renderEngine.viewport(0, 0, w, h);\r\n                LayaGL.renderEngine.scissor(0, 0, w, h);\r\n                RenderState2D.width = w;\r\n                RenderState2D.height = h;\r\n            }\r\n        }\r\n        if (w === 0 && h === 0) this._releaseMem();\r\n    }\r\n\r\n    /**\r\n     * 当前canvas请求保存渲染结果。\r\n     * 实现：\r\n     * 如果value==true，就要给_target赋值\r\n     * @param value {Boolean} \r\n     */\r\n    set asBitmap(value: boolean) {\r\n        if (value) {\r\n            //缺省的RGB没有a，不合理把。况且没必要自定义一个常量。\r\n            //深度格式为-1表示不用深度缓存。\r\n            let rt = this._targets;\r\n            if (!this._width || !this._height)\r\n                throw Error(\"asBitmap no size!\");\r\n            if (!rt || rt.width != this._width || rt.height != this._height) {\r\n                if (rt) {\r\n                    rt.destroy();\r\n                }\r\n                this._targets = new RenderTexture2D(this._width, this._height, RenderTargetFormat.R8G8B8A8);\r\n            }\r\n        } else {\r\n            this._targets && this._targets.destroy();\r\n            this._targets = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得当前矩阵的缩放值\r\n     * 避免每次都计算getScaleX\r\n     * @return\r\n     */\r\n    getMatScaleX(): number {\r\n        if (this._lastMat_a == this._curMat.a && this._lastMat_b == this._curMat.b)\r\n            return this._lastMatScaleX;\r\n        this._lastMatScaleX = this._curMat.getScaleX();\r\n        this._lastMat_a = this._curMat.a;\r\n        this._lastMat_b = this._curMat.b;\r\n        return this._lastMatScaleX;\r\n    }\r\n\r\n    getMatScaleY(): number {\r\n        if (this._lastMat_c == this._curMat.c && this._lastMat_d == this._curMat.d)\r\n            return this._lastMatScaleY;\r\n        this._lastMatScaleY = this._curMat.getScaleY();\r\n        this._lastMat_c = this._curMat.c;\r\n        this._lastMat_d = this._curMat.d;\r\n        return this._lastMatScaleY;\r\n    }\r\n\r\n    getFillColor(): number {\r\n        return this._fillColor;\r\n    }\r\n\r\n    set fillStyle(value: any) {\r\n        if (!this._shader2D.fillStyle.equal(value)) {\r\n            SaveBase.save(this, SaveBase.TYPE_FILESTYLE, this._shader2D, false);\r\n            this._shader2D.fillStyle = DrawStyle.create(value);\r\n            this._submitKey.other = -this._shader2D.fillStyle.toInt();\r\n        }\r\n    }\r\n\r\n    get fillStyle(): any {\r\n        return this._shader2D.fillStyle;\r\n    }\r\n\r\n    set globalAlpha(value: number) {\r\n        value = Math.floor(value * 1000) / 1000;\r\n        if (value != this._shader2D.ALPHA) {\r\n            SaveBase.save(this, SaveBase.TYPE_ALPHA, this._shader2D, false);\r\n            this._shader2D.ALPHA = value;\r\n        }\r\n    }\r\n\r\n    get globalAlpha(): number {\r\n        return this._shader2D.ALPHA;\r\n    }\r\n\r\n    set textAlign(value: string) {\r\n        (this._other.textAlign === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTALIGN, this._other, false), this._other.textAlign = value);\r\n    }\r\n\r\n    get textAlign(): string {\r\n        return this._other.textAlign;\r\n    }\r\n\r\n    set textBaseline(value: string) {\r\n        (this._other.textBaseline === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTBASELINE, this._other, false), this._other.textBaseline = value);\r\n    }\r\n\r\n    get textBaseline(): string {\r\n        return this._other.textBaseline;\r\n    }\r\n\r\n    set globalCompositeOperation(value: string) {\r\n        var n = BlendMode.TOINT[value];\r\n        n == null || (this._nBlendType === n) || (SaveBase.save(this, SaveBase.TYPE_GLOBALCOMPOSITEOPERATION, this, true), this._curSubmit = SubmitBase.RENDERBASE, this._nBlendType = n /*, _shader2D.ALPHA = 1*/);\r\n    }\r\n\r\n    get globalCompositeOperation(): string {\r\n        return BlendMode.NAMES[this._nBlendType];\r\n    }\r\n\r\n    set strokeStyle(value: any) {\r\n        this._shader2D.strokeStyle.equal(value) || (SaveBase.save(this, SaveBase.TYPE_STROKESTYLE, this._shader2D, false), this._shader2D.strokeStyle = DrawStyle.create(value), this._submitKey.other = -this._shader2D.strokeStyle.toInt());\r\n    }\r\n\r\n    get strokeStyle(): any {\r\n        return this._shader2D.strokeStyle;\r\n    }\r\n\r\n    translate(x: number, y: number): void {\r\n        if (x !== 0 || y !== 0) {\r\n            SaveTranslate.save(this);\r\n            if (this._curMat._bTransform) {\r\n                SaveTransform.save(this);\r\n                //_curMat.transformPointN(Point.TEMP.setTo(x, y));\r\n                //x = Point.TEMP.x;\r\n                //y = Point.TEMP.y;\r\n                //translate的话，相当于在当前坐标系下移动x,y，所以直接修改_curMat,然后x,y就消失了。\r\n                this._curMat.tx += (x * this._curMat.a + y * this._curMat.c);\r\n                this._curMat.ty += (x * this._curMat.b + y * this._curMat.d);\r\n            } else {\r\n                this._curMat.tx = x;\r\n                this._curMat.ty = y;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lineWidth(value: number) {\r\n        (this._other.lineWidth === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_LINEWIDTH, this._other, false), this._other.lineWidth = value);\r\n    }\r\n\r\n    get lineWidth(): number {\r\n        return this._other.lineWidth;\r\n    }\r\n\r\n    save(): void {\r\n        this._save[this._save._length++] = SaveMark.Create(this);\r\n    }\r\n\r\n    restore(): void {\r\n        var sz: number = this._save._length;\r\n        var lastBlend: number = this._nBlendType;\r\n        if (sz < 1)\r\n            return;\r\n        for (var i: number = sz - 1; i >= 0; i--) {\r\n            var o: ISaveData = this._save[i];\r\n            o.restore(this);\r\n            if (o.isSaveMark()) {\r\n                this._save._length = i;\r\n                return;\r\n            }\r\n        }\r\n        if (lastBlend != this._nBlendType) {\r\n            //阻止合并\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n\r\n    set font(str: string) {\r\n        //if (str == _other.font.toString())\r\n        //\treturn;\r\n        this._other = this._other.make();\r\n        SaveBase.save(this, SaveBase.TYPE_FONT, this._other, false);\r\n        //_other.font === FontInContext.EMPTY ? (_other.font = new FontInContext(str)) : (_other.font.setFont(str));\r\n    }\r\n\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\r\n        Context._textRender!.filltext(this, txt, x, y, fontStr, color, borderColor, lineWidth, align);\r\n    }\r\n    // 与fillText的区别是没有border信息\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, color, null, 0, textAlign);\r\n    }\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, null, color, lineWidth, textAlign);\r\n    }\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, txt, x, y, font, color, borderColor, lineWidth, textAlign);\r\n    }\r\n\r\n    /**@internal */\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        Context._textRender!._fast_filltext(this, data, x, y, fontObj, color, strokeColor, lineWidth, textAlign);\r\n    }\r\n\r\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, data, x, y, fontStr, color, strokeColor, lineWidth, textAlign);\r\n    }\r\n\r\n    private _fillRect(x: number, y: number, width: number, height: number, rgba: number): void {\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey = submit._key.submitType === SubmitBase.KEY_DRAWTEXTURE && \r\n                        submit._key.blendShader === this._nBlendType &&\r\n                        this.isSameClipInfo(submit) &&\r\n                        this._curSubmit.material==this.material\r\n                ;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n            sameKey = false;\r\n        }\r\n\r\n        this.transformQuad(x, y, width, height, 0, this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, Texture.NO_UV, rgba, false);\r\n            //if (GlUtils.fillRectImgVb(_mesh._vb, _clipRect, x, y, width, height, Texture.DEF_UV, _curMat, rgba,this)){\r\n            if (!sameKey) {\r\n                submit = this._curSubmit = SubmitTexture.create(this, this._mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n                this._submits[this._submits._length++] = submit;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n                if (!this._lastTex || this._lastTex.destroyed) {\r\n                    submit.shaderValue.textureHost = this.defTexture;\r\n                } else {\r\n                    submit.shaderValue.textureHost = this._lastTex;\r\n                }\r\n                //这里有一个问题。例如 clip1, drawTex(tex1), clip2, fillRect, drawTex(tex2)\t会被分成3个submit，\r\n                //submit._key.copyFrom2(_submitKey, SubmitBase.KEY_DRAWTEXTURE, (_lastTex && _lastTex.bitmap)?_lastTex.bitmap.id: -1);\r\n                submit._key.other = (this._lastTex && this._lastTex.bitmap) ? (this._lastTex.bitmap as Texture2D).id : -1\r\n                submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            }\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n\r\n    fillRect(x: number, y: number, width: number, height: number, fillStyle: any): void {\r\n        var drawstyle: DrawStyle = fillStyle ? DrawStyle.create(fillStyle) : this._shader2D.fillStyle;\r\n        //var rgb = drawstyle.toInt() ;\r\n        //由于显卡的格式是 rgba，所以需要处理一下\r\n        //var rgba:uint = ((rgb & 0xff0000) >> 16) | (rgb & 0x00ff00) | ((rgb & 0xff) << 16) | (_shader2D.ALPHA * 255) << 24;\r\n        var rgba: number = this.mixRGBandAlpha(drawstyle.toInt());\r\n        this._fillRect(x, y, width, height, rgba);\r\n    }\r\n\r\n    //TODO:coverage\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\r\n        //test\r\n        /*\r\n        var aa = 95 / 274, bb = 136 / 341, cc = (95 + 41) / 274, dd = (136 + 48) / 341;\r\n        texture.uv = [aa,bb, cc,bb, cc,dd, aa,dd];\r\n        texture.width = 41;\r\n        texture.height = 48;\r\n        */\r\n        //test\r\n\r\n        if (!texture._getSource()) {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n        this._fillTexture(texture, texture.width, texture.height, texture.uvrect, x, y, width, height, type, offset.x, offset.y, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _fillTexture(texture: Texture, texw: number, texh: number, texuvRect: number[], x: number, y: number, width: number, height: number, type: string, offsetx: number, offsety: number, color: number): void {\r\n        var submit: Submit = this._curSubmit;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n        }\r\n\r\n        //filltexture相关逻辑。计算rect大小以及对应的uv\r\n        var repeatx: boolean = true;\r\n        var repeaty: boolean = true;\r\n        switch (type) {\r\n            case \"repeat\": break;\r\n            case \"repeat-x\": repeaty = false; break;\r\n            case \"repeat-y\": repeatx = false; break;\r\n            case \"no-repeat\": repeatx = repeaty = false; break;\r\n            default: break;\r\n        }\r\n        //用 _temp4Points 来存计算出来的顶点的uv。这里的uv用0到1表示纹理的uv区域。这样便于计算，直到shader中才真的转成了实际uv\r\n        var uv: any[] = this._temp4Points;\r\n        var stu: number = 0; //uv起点\r\n        var stv: number = 0;\r\n        var stx: number = 0, sty: number = 0, edx: number = 0, edy: number = 0;\r\n        if (offsetx < 0) {\r\n            stx = x;\r\n            stu = (-offsetx % texw) / texw;//有偏移的情况下的u不是从头开始\r\n        } else {\r\n            stx = x + offsetx;\r\n        }\r\n        if (offsety < 0) {\r\n            sty = y;\r\n            stv = (-offsety % texh) / texh;//有偏移的情况下的v不是从头开始\r\n        } else {\r\n            sty = y + offsety;\r\n        }\r\n\r\n        edx = x + width;\r\n        edy = y + height;\r\n        (!repeatx) && (edx = Math.min(edx, x + offsetx + texw));//x不重复的话，最多只画一个\r\n        (!repeaty) && (edy = Math.min(edy, y + offsety + texh));//y不重复的话，最多只画一个\r\n        if (edx < x || edy < y)\r\n            return;\r\n        if (stx > edx || sty > edy)\r\n            return;\r\n\r\n        //计算最大uv\r\n        var edu: number = (edx - x - offsetx) / texw;\r\n        var edv: number = (edy - y - offsety) / texh;\r\n\r\n        this.transformQuad(stx, sty, edx - stx, edy - sty, 0, this._curMat, this._transedPoints);\r\n        //四个点对应的uv。必须在transformQuad后面，因为共用了_temp4Points\r\n        uv[0] = stu; uv[1] = stv; uv[2] = edu; uv[3] = stv; uv[4] = edu; uv[5] = edv; uv[6] = stu; uv[7] = edv;\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            //不依赖于wrapmode了，都走filltexture流程，自己修改纹理坐标\r\n            //tex2d.wrapModeU = BaseTexture.WRAPMODE_REPEAT;\t//这里会有重复判断\r\n            //tex2d.wrapModeV = BaseTexture.WRAPMODE_REPEAT;\r\n            //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n            //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n            var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA);\r\n\r\n            this._mesh.addQuad(this._transedPoints, uv, rgba, true);\r\n\r\n            var sv = Value2D.create(RenderSpriteData.Texture2D) as TextureSV;\r\n            //这个优化先不要了，因为没太弄明白wrapmode的设置，总是不起作用。\r\n            //if(texture.uvrect[2]<1.0||texture.uvrect[3]<1.0)//这表示是大图集中的一部分，只有这时候才用特殊shader\r\n            sv.defines.addDefine(ShaderDefines2D.FILLTEXTURE);\r\n            var arry = texuvRect.concat();\r\n            Vector4.tempVec4.setValue(arry[0], arry[1], arry[2], arry[3]);\r\n            sv.u_TexRange = Vector4.tempVec4;\r\n            submit = this._curSubmit = SubmitTexture.create(this, this._mesh, sv);\r\n            this._submits[this._submits._length++] = submit;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            submit.shaderValue.textureHost = texture;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n        this.breakNextMerge();\t//暂不合并\r\n    }\r\n\r\n\r\n    /**\r\n     * 反正只支持一种filter，就不要叫setFilter了，直接叫setColorFilter\r\n     * @param\tvalue\r\n     */\r\n    setColorFilter(filter: ColorFilter): void {\r\n        SaveBase.save(this, SaveBase.TYPE_COLORFILTER, this, true);\r\n        //_shader2D.filters = value;\r\n        this._colorFiler = filter;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        //_reCalculateBlendShader();\r\n    }\r\n\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\r\n        this._drawTextureM(tex, x, y, width, height, null, 1, null, color);\r\n    }\r\n\r\n    drawTextures(tex: Texture, pos: ArrayLike<number>, tx: number, ty: number, colors: number[]): void {\r\n        if (!tex._getSource()) //source内调用tex.active();\r\n        {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n\r\n        //TODO 还没实现\r\n        var n: number = pos.length / 2;\r\n        var ipos: number = 0;\r\n        var bmpid: number = (tex.bitmap as Texture2D).id;\r\n        for (var i: number = 0; i < n; i++) {\r\n            const color = typeof colors[i] === 'number' ? colors[i] : 0xffffffff;\r\n            this._inner_drawTexture(tex, bmpid, pos[ipos++] + tx, pos[ipos++] + ty, 0, 0, null, null, 1.0, false, color);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[] | null, color: number): boolean {\r\n        // 注意sprite要保存，因为后面会被冲掉\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function (): void {\r\n            if (cs) {\r\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\r\n            }\r\n        })) { //source内调用tex.active();\r\n            return false;\r\n        }\r\n        return this._inner_drawTexture(tex, (tex.bitmap as Texture2D).id, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawRenderTexture(tex: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[], color: number = 0xffffffff): boolean {\r\n        return this._inner_drawTexture((<Texture>(tex as any)), -1, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    //TODO:coverage\r\n    submitDebugger(): void {\r\n        this._submits[this._submits._length++] = SubmitCMD.create([], function (): void { debugger; }, this);\r\n    }\r\n\r\n    /*\r\n    private function copyClipInfo(submit:Submit, clipInfo:Array):void {\r\n        var cd:Array = submit.shaderValue.clipDir;\r\n        cd[0] = clipInfo[2]; cd[1] = clipInfo[3]; cd[2] = clipInfo[4]; cd[3] = clipInfo[5];\r\n        var cp:Array = submit.shaderValue.clipRect;\r\n        cp[0] = clipInfo[0]; cp[1] = clipInfo[1];\r\n        submit.clipInfoID = this._clipInfoID;\r\n    }\r\n    */\r\n    /**@internal */\r\n    _copyClipInfo(submit: SubmitBase, clipInfo: Matrix): void {\r\n        var cm: Vector4 = submit.shaderValue.clipMatDir;\r\n        cm.x = clipInfo.a; cm.y = clipInfo.b; cm.z = clipInfo.c; cm.w = clipInfo.d;\r\n        submit.shaderValue.clipMatDir = cm;\r\n        var cmp: Vector2 = submit.shaderValue.clipMatPos;\r\n        cmp.x = clipInfo.tx; cmp.y = clipInfo.ty;\r\n        submit.shaderValue.clipMatPos = cmp;\r\n        submit.clipInfoID = this._clipInfoID;\r\n\r\n        if (this._clipInCache) {\r\n            submit.shaderValue.clipOff.x = 1;\r\n            submit.shaderValue.clipOff = submit.shaderValue.clipOff;\r\n        }\r\n    }\r\n\r\n\r\n    private isSameClipInfo(submit: SubmitBase): boolean {\r\n        return (submit.clipInfoID === this._clipInfoID);\r\n        /*\r\n        var cd:Array = submit.shaderValue.clipDir;\r\n        var cp:Array = submit.shaderValue.clipRect;\r\n        \r\n        if (clipInfo[0] != cp[0] || clipInfo[1] != cp[1] || clipInfo[2] != cd[0] || clipInfo[3] != cd[1] || clipInfo[4] != cd[2] || clipInfo[5] != cd[3] ) \r\n            return false;\r\n        return true;\r\n        */\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 这个还是会检查是否合并\r\n     * @param\ttex\r\n     * @param\tminVertNum\r\n     */\r\n    _useNewTex2DSubmit(tex: Texture, minVertNum: number): void {\r\n        //var sameKey:Boolean = tex.bitmap.id >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === tex.bitmap.id ;\r\n\r\n        if (this._mesh.vertNum + minVertNum > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n            //sameKey = false;\r\n        }\r\n\r\n        var submit: SubmitTexture = SubmitTexture.create(this, this._mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n        this._submits[this._submits._length++] = this._curSubmit = submit;\r\n        submit.shaderValue.textureHost = tex;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用上面的设置（texture，submit，alpha，clip），画一个rect\r\n     */\r\n    _drawTexRect(x: number, y: number, w: number, h: number, uv: any[]): void {\r\n        this.transformQuad(x, y, w, h, this._italicDeg, this._curMat, this._transedPoints);\r\n        //这个是给文字用的，为了清晰，必须要按照屏幕像素对齐，并且四舍五入。\r\n        var ops: any[] = this._transedPoints;\r\n        ops[0] = (ops[0] + 0.5) | 0;\r\n        ops[1] = (ops[1] + 0.5) | 0;\r\n        ops[2] = (ops[2] + 0.5) | 0;\r\n        ops[3] = (ops[3] + 0.5) | 0;\r\n        ops[4] = (ops[4] + 0.5) | 0;\r\n        ops[5] = (ops[5] + 0.5) | 0;\r\n        ops[6] = (ops[6] + 0.5) | 0;\r\n        ops[7] = (ops[7] + 0.5) | 0;\r\n\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv, this._fillColor, true);\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n\r\n    drawCallOptimize(enable: boolean): boolean {\r\n        this._charSubmitCache.enable(enable, this);\r\n        return enable;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param\ttex {Texture | RenderTexture }\r\n     * @param  imgid 图片id用来比较合并的\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\tm\r\n     * @param\talpha\r\n     * @param\tuv\r\n     * @return\r\n     */\r\n    _inner_drawTexture(tex: Texture, imgid: number, x: number, y: number, width: number, height: number, m: Matrix, uv: ArrayLike<number> | null, alpha: number, lastRender: boolean, color: number): boolean {\r\n        if (width <= 0 || height <= 0) {\r\n            return false;\r\n        }\r\n        var preKey: SubmitKey = this._curSubmit._key;\r\n        uv = uv || tex._uv\r\n        //为了优化，如果上次是画三角形，并且贴图相同，会认为他们是一组的，把这个也转成三角形，以便合并。\r\n        //因为好多动画是drawTexture和drawTriangle混用的\r\n        if (preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === imgid) {\r\n            var tv: Float32Array = this._drawTexToDrawTri_Vert;\r\n            tv[0] = x; tv[1] = y; tv[2] = x + width, tv[3] = y, tv[4] = x + width, tv[5] = y + height, tv[6] = x, tv[7] = y + height;\r\n            this._drawTriUseAbsMatrix = true;\r\n            var tuv: Float32Array = this._tempUV;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3]; tuv[4] = uv[4]; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this.drawTriangles(tex, 0, 0, tv, tuv, this._drawTexToDrawTri_Index, m || this._curMat, alpha, null, null);//用tuv而不是uv会提高效率\r\n            this._drawTriUseAbsMatrix = false;\r\n            return true;\r\n        }\r\n\r\n        var mesh = this._mesh;\r\n        var submit: SubmitTexture = this._curSubmit;\r\n        var ops: any[] = lastRender ? this._charSubmitCache.getPos() : this._transedPoints;\r\n\r\n        //凡是这个都是在_mesh上操作，不用考虑samekey\r\n        this.transformQuad(x, y, width || tex.width, height || tex.height, this._italicDeg, m || this._curMat, ops);\r\n\r\n        if (this.drawTexAlign) {\r\n            var round: Function = Math.round;\r\n            ops[0] = round(ops[0]);//  (ops[0] + 0.5) | 0;\t// 这么计算负的时候会有问题\r\n            ops[1] = round(ops[1]);\r\n            ops[2] = round(ops[2]);\r\n            ops[3] = round(ops[3]);\r\n            ops[4] = round(ops[4]);\r\n            ops[5] = round(ops[5]);\r\n            ops[6] = round(ops[6]);\r\n            ops[7] = round(ops[7]);\r\n            this.drawTexAlign = false;\t//一次性的\r\n        }\r\n\r\n        var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA * alpha);\r\n\r\n        //lastRender = false;\r\n        if (lastRender) {\r\n            this._charSubmitCache.add(this, tex, imgid, ops, uv, rgba);\r\n            return true;\r\n        }\r\n\r\n        this._drawCount++;\r\n\r\n        var sameKey = imgid >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === imgid &&\r\n            this.isSameClipInfo(submit) && this._curSubmit.material==this.material;\r\n\r\n        this._lastTex = tex;\r\n\r\n        if (mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            mesh = this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(mesh);\r\n            sameKey = false;\t//新的mesh不能算samekey了\r\n        }\r\n\r\n        {\r\n            mesh.addQuad(ops, uv, rgba, true);\r\n            if (!sameKey) {\r\n                this._submits[this._submits._length++] = this._curSubmit = submit = SubmitTexture.create(this, mesh, Value2D.create(RenderSpriteData.Texture2D));\r\n                submit.shaderValue.textureHost = tex;\r\n                submit._key.other = imgid;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n            }\r\n            submit._numEle += 6;\r\n            mesh.indexNum += 6;\r\n            mesh.vertNum += 4;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 转换4个顶点。为了效率这个不做任何检查。需要调用者的配合。\r\n     * @param\ta\t\t输入。8个元素表示4个点\r\n     * @param\tout\t\t输出\r\n     */\r\n    transform4Points(a: any[], m: Matrix, out: any[]): void {\r\n        /*\r\n            out[0] = 846;\r\n            out[1] = 656;\r\n            out[2] = 881;\r\n            out[3] = 657;\r\n            out[4] = 880;\r\n            out[5] = 732;\r\n            out[6] = 844;\r\n            out[7] = 731;\r\n            return ;\r\n        */\r\n        //var m:Matrix = _curMat;\r\n        var tx: number = m.tx;\r\n        var ty: number = m.ty;\r\n        var ma: number = m.a;\r\n        var mb: number = m.b;\r\n        var mc: number = m.c;\r\n        var md: number = m.d;\r\n        var a0: number = a[0];\r\n        var a1: number = a[1];\r\n        var a2: number = a[2];\r\n        var a3: number = a[3];\r\n        var a4: number = a[4];\r\n        var a5: number = a[5];\r\n        var a6: number = a[6];\r\n        var a7: number = a[7];\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\r\n        } else {\r\n            out[0] = a0 + tx; out[1] = a1 + ty;\r\n            out[2] = a2 + tx; out[3] = a3 + ty;\r\n            out[4] = a4 + tx; out[5] = a5 + ty;\r\n            out[6] = a6 + tx; out[7] = a7 + ty;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * pt所描述的多边形完全在clip外边，整个被裁掉了\r\n     * @param\tpt\r\n     * @return\r\n     */\r\n    clipedOff(pt: any[]): boolean {\r\n        //TODO\r\n        if (this._clipRect.width <= 0 || this._clipRect.height <= 0)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 应用当前矩阵。把转换后的位置放到输出数组中。 \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     * @param\th\r\n     * @param   italicDeg 倾斜角度，单位是度。0度无，目前是下面不动。以后要做成可调的\r\n     */\r\n    transformQuad(x: number, y: number, w: number, h: number, italicDeg: number, m: Matrix, out: any[]): void {\r\n        /*\r\n        out[0] = 100.1; out[1] = 100.1;\r\n        out[2] = 101.1; out[3] = 100.1;\r\n        out[4] = 101.1; out[5] = 101.1;\r\n        out[6] = 100.1; out[7] = 101.1;\r\n        return;\r\n        */\r\n        var xoff: number = 0;\r\n        if (italicDeg != 0) {\r\n            xoff = Math.tan(italicDeg * Math.PI / 180) * h;\r\n        }\r\n        var maxx: number = x + w; var maxy: number = y + h;\r\n\r\n        var tx: number = m.tx;\r\n        var ty: number = m.ty;\r\n        var ma: number = m.a;\r\n        var mb: number = m.b;\r\n        var mc: number = m.c;\r\n        var md: number = m.d;\r\n        var a0: number = x + xoff;\r\n        var a1: number = y;\r\n        var a2: number = maxx + xoff;\r\n        var a3: number = y;\r\n        var a4: number = maxx;\r\n        var a5: number = maxy;\r\n        var a6: number = x;\r\n        var a7: number = maxy;\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\r\n            /* 旋转的情况下这个是错的。TODO\r\n            let dx = out[2] - out[0];\r\n            let minw = 1;\t// 限制最小宽度为1，防止细线在缩小的情况下消失。\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[2] += dx;\r\n            }\r\n            dx = out[4] - out[6];\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[4] += dx;\r\n            }\r\n            */\r\n        } else {\r\n            out[0] = a0 + tx; out[1] = a1 + ty;\r\n            out[2] = a2 + tx; out[3] = a3 + ty;\r\n            out[4] = a4 + tx; out[5] = a5 + ty;\r\n            out[6] = a6 + tx; out[7] = a7 + ty;\r\n        }\r\n    }\r\n\r\n    pushRT(): void {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.pushRT, this));\r\n    }\r\n    popRT(): void {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.popRT, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    //TODO:coverage\r\n    useRT(rt: RenderTexture2D): void {\r\n        //这里并没有做cliprect的保存恢复。因为认为调用这个函数的话，就是完全不走context流程了，完全自己控制。\r\n        function _use(rt: RenderTexture2D): void {\r\n            if (!rt) {\r\n                throw 'error useRT'\r\n            } else {\r\n                rt.start();\r\n                rt.clear(0, 0, 0, 0);\r\n            }\r\n        }\r\n\r\n        this.addRenderObject(SubmitCMD.create([rt], _use, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    /**\r\n     * 异步执行rt的restore函数\r\n     * @param\trt\r\n     */\r\n    //TODO:coverage\r\n    RTRestore(rt: RenderTexture2D): void {\r\n        function _restore(rt: RenderTexture2D): void {\r\n            rt.restore();\r\n        }\r\n        this.addRenderObject(SubmitCMD.create([rt], _restore, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    /**\r\n     * 强制拒绝submit合并\r\n     * 例如切换rt的时候\r\n     */\r\n    breakNextMerge(): void {\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _repaintSprite(): void {\r\n        this.sprite && this.sprite.repaint();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\ttex\r\n     * @param\tx\t\t\t\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\ttransform\t图片本身希望的矩阵\r\n     * @param\ttx\t\t\t节点的位置\r\n     * @param\tty\r\n     * @param\talpha\r\n     */\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color = 0xffffffff): void {\r\n        var oldcomp: string;\r\n        var curMat: Matrix = this._curMat;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n\r\n        if (!transform) {\r\n            this._drawTextureM(tex, x + tx, y + ty, width, height, curMat, alpha, uv, color);\r\n            if (blendMode) {\r\n                this.globalCompositeOperation = oldcomp;\r\n            }\r\n            return;\r\n        }\r\n        var tmpMat: Matrix = this._tmpMatrix;\r\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\r\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + tx; tmpMat.ty = transform.ty + ty;\r\n        tmpMat._bTransform = transform._bTransform;\r\n\r\n        if (transform && curMat._bTransform) {\r\n            // 如果当前矩阵不是只有平移，则只能用mul的方式\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        } else {\r\n            //如果curmat没有旋转。\r\n            tmpMat.tx += curMat.tx;\r\n            tmpMat.ty += curMat.ty;\r\n            transform = tmpMat;\r\n        }\r\n        this._drawTextureM(tex, x, y, width, height, transform, alpha, uv, color);\r\n        if (blendMode)\r\n            this.globalCompositeOperation = oldcomp;\r\n    }\r\n\r\n    /**\r\n     * * 把ctx中的submits提交。结果渲染到target上\r\n     * @param\tctx\r\n     * @param\ttarget\r\n     */\r\n    private _flushToTarget(context: Context, target: RenderTexture2D): void {\r\n        //if (target._destroy) return;\r\n        //var preworldClipRect:Rectangle = RenderState2D.worldClipRect;\r\n        //裁剪不用考虑，现在是在context内部自己维护，不会乱窜\r\n        RenderState2D.worldScissorTest = false;\r\n        LayaGL.renderEngine.scissorTest(false);\r\n\r\n        var preAlpha: number = RenderState2D.worldAlpha;\r\n        var preMatrix4: any[] = RenderState2D.worldMatrix4;\r\n        var preMatrix: Matrix = RenderState2D.worldMatrix;\r\n\r\n        var preShaderDefines: ShaderDefines2D = RenderState2D.worldShaderDefines;\r\n\r\n        RenderState2D.worldMatrix = Matrix.EMPTY;\r\n\r\n        RenderState2D.restoreTempArray();\r\n        RenderState2D.worldMatrix4 = RenderState2D.TEMPMAT4_ARRAY;\r\n        RenderState2D.worldAlpha = 1;\r\n        //RenderState2D.worldFilters = null;\r\n        //RenderState2D.worldShaderDefines = null;\r\n        BaseShader.activeShader = null;\r\n\r\n        target.start();\r\n        // 如果没有命令就不要clear。这么改是因为嵌套cacheas出问题了\r\n        // 如果一个sprite cacheas normal ，他的子节点有cacheas bitmap的（包括mask等）就会不断的执行 _flushToTarget和drawCamvase,从而把target上的内容清掉\r\n        // 由于cacheas normal 导致 RenderSprite没有机会执行 _cacheStyle.canvas 存在的分支。在\r\n        if (context._submits._length > 0)\r\n            target.clear(0, 0, 0, 0);\r\n\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        context.flush();\r\n        context.clear();\r\n        target.restore();\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        //context._canvas\r\n        BaseShader.activeShader = null;\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix = preMatrix;\r\n        //RenderState2D.worldFilters = preFilters;\r\n        //RenderState2D.worldShaderDefines = preShaderDefines;\r\n    }\r\n\r\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\r\n        if (!canvas) return;\r\n        var src: Context = canvas.context as Context;\r\n        var submit: ISubmit;\r\n        if (src._targets) {\r\n            //生成渲染结果到src._targets上\r\n            /*\r\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\r\n            _curSubmit = SubmitBase.RENDERBASE;\r\n            //画出src._targets\r\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\r\n            */\r\n            //应用并清空canvas中的指令。如果内容需要重画，RenderSprite会给他重新加入submit\r\n            if (src._submits._length > 0) {\r\n                submit = SubmitCMD.create([src, src._targets], this._flushToTarget, this);\r\n                this._submits[this._submits._length++] = submit;\r\n            }\r\n            //在这之前就已经渲染出结果了。\r\n            this._drawRenderTexture(src._targets, x, y, width, height, null, 1.0, RenderTexture2D.flipyuv);\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n            /*\r\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\r\n            //src._targets.flush(src);\r\n            _curSubmit = SubmitBase.RENDERBASE;\r\n            //src._targets.drawTo(this, x, y, width, height);\r\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\r\n            _drawRenderTexture(src._targets, x, y, width, height,null,1.0, RenderTexture.flipyuv);\r\n            */\r\n        } else {\r\n            var canv: WebGLCacheAsNormalCanvas = (<WebGLCacheAsNormalCanvas>(canvas as any));\r\n            if (canv.touches) {\r\n                ((<any[]>canv.touches)).forEach(function (v: CharRenderInfo): void { v.touch(); });\r\n            }\r\n\r\n            submit = SubmitCanvas.create(canvas, this._shader2D.ALPHA, this._shader2D.filters);\r\n            this._submits[this._submits._length++] = submit;\r\n            ((<SubmitCanvas>submit))._key.clear();\r\n            //var sx:Number = width / canvas.width;\r\n            //var sy:Number = height / canvas.height;\r\n            var mat: Matrix = ((<SubmitCanvas>submit))._matrix;\r\n            this._curMat.copyTo(mat);\r\n            //sx != 1 && sy != 1 && mat.scale(sx, sy);\r\n            // 先加上位置，最后再乘逆\r\n            var tx: number = mat.tx, ty: number = mat.ty;\r\n            mat.tx = mat.ty = 0;\r\n            mat.transformPoint(Point.TEMP.setTo(x, y));\t// 用当前矩阵变换 (x,y)\r\n            mat.translate(Point.TEMP.x + tx, Point.TEMP.y + ty);\t// 加上原来的 (tx,ty)\r\n\r\n            Matrix.mul(canv.invMat, mat, mat);\r\n\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n\r\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1, color: number = 0xffffffff): boolean {\r\n        this._drawCount++;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n        }\r\n\r\n        //凡是这个都是在_mesh上操作，不用考虑samekey\r\n        this.transformQuad(x, y, width, height, 0, m || this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv || Texture.DEF_UV, color, true);\r\n            //if (GlUtils.fillRectImgVb( _mesh._vb, _clipRect, x, y, width , height , uv || Texture.DEF_UV, m || _curMat, rgba, this)) {\r\n            var submit: SubmitTarget = this._curSubmit = SubmitTarget.create(this, this._mesh, shaderValue, rt);\r\n            submit.blendType = (blend == -1) ? this._nBlendType : blend;\r\n            this._copyClipInfo((<SubmitBase>(submit as any)), this._globalClipMatrix);\r\n            submit._numEle = 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n            this._submits[this._submits._length++] = submit;\r\n            //暂时drawTarget不合并\r\n            this._curSubmit = SubmitBase.RENDERBASE\r\n            return true;\r\n        }\r\n        //暂时drawTarget不合并\r\n        this._curSubmit = SubmitBase.RENDERBASE\r\n        return false;\r\n    }\r\n\r\n    drawTriangles(tex: Texture,\r\n        x: number, y: number,\r\n        vertices: Float32Array,\r\n        uvs: Float32Array,\r\n        indices: Uint16Array,\r\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\r\n\r\n        if (!tex._getSource()) { //source内调用tex.active();\r\n            if (this.sprite) {\r\n                ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            }\r\n            return;\r\n        }\r\n        var oldcomp: string | null = null;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n        this._drawCount++;\r\n\r\n        // 为了提高效率，把一些变量放到这里\r\n        var tmpMat = this._tmpMatrix;\r\n        var triMesh = this._triangleMesh!;\r\n\r\n        var webGLImg = tex.bitmap;\r\n        var preKey: SubmitKey = this._curSubmit._key;\r\n        var sameKey = preKey.submitType === SubmitBase.KEY_TRIANGLES && \r\n                        preKey.other === webGLImg.id && \r\n                        preKey.blendShader == this._nBlendType &&\r\n                        this._curSubmit.material==this.material;\r\n\r\n        //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n        //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n        if (triMesh.vertNum + vertices.length / 2 > Context._MAXVERTNUM) {\r\n            triMesh = this._triangleMesh = MeshTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(triMesh);\r\n            sameKey = false;\t//新的mesh不能算samekey了\r\n        }\r\n        if (!sameKey) {\r\n            //添加一个新的submit\r\n            var submit: SubmitTexture = this._curSubmit = SubmitTexture.create(this, triMesh, Value2D.create(RenderSpriteData.Texture2D));\r\n            submit.shaderValue.textureHost = tex;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            submit._key.submitType = SubmitBase.KEY_TRIANGLES;\r\n            submit._key.other = webGLImg.id;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            this._submits[this._submits._length++] = submit;\r\n        }\r\n\r\n        var rgba: number = this._mixRGBandAlpha(colorNum, this._shader2D.ALPHA * alpha);\r\n        if (!this._drawTriUseAbsMatrix) {\r\n            if (!matrix) {\r\n                tmpMat.a = 1; tmpMat.b = 0; tmpMat.c = 0; tmpMat.d = 1; tmpMat.tx = x; tmpMat.ty = y;\r\n            } else {\r\n                tmpMat.a = matrix.a; tmpMat.b = matrix.b; tmpMat.c = matrix.c; tmpMat.d = matrix.d; tmpMat.tx = matrix.tx + x; tmpMat.ty = matrix.ty + y;\r\n            }\r\n            Matrix.mul(tmpMat, this._curMat, tmpMat);\r\n            triMesh.addData(vertices, uvs, indices, tmpMat || this._curMat, rgba);\r\n        } else {\r\n            // 这种情况是drawtexture转成的drawTriangle，直接使用matrix就行，传入的xy都是0\r\n            triMesh.addData(vertices, uvs, indices, matrix, rgba);\r\n        }\r\n        this._curSubmit._numEle += indices.length;\r\n\r\n        if (blendMode) {\r\n            this.globalCompositeOperation = oldcomp!;\r\n        }\r\n        //return true;\r\n    }\r\n\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n        SaveTransform.save(this);\r\n        Matrix.mul(Matrix.TEMP.setTo(a, b, c, d, tx, ty), this._curMat, this._curMat);\t//TODO 这里会有效率问题。一堆的set\r\n        this._curMat._checkTransform();\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    _transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        matrix.setTranslate(tx, ty);\r\n        Matrix.mul(matrix, this._curMat, this._curMat);\r\n        matrix.setTranslate(0, 0);\r\n        this._curMat._bTransform = true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    setTransformByMatrix(value: Matrix): void {\r\n        value.copyTo(this._curMat);\r\n    }\r\n\r\n    rotate(angle: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.rotateEx(angle);\r\n    }\r\n\r\n    scale(scaleX: number, scaleY: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.scaleEx(scaleX, scaleY);\r\n    }\r\n\r\n    clipRect(x: number, y: number, width: number, height: number, escape?: boolean): void {\r\n        SaveClipRect.save(this);\r\n        if (this._clipRect == Context.MAXCLIPRECT) {\r\n            this._clipRect = new Rectangle(x, y, width, height);\r\n        } else {\r\n            this._clipRect.width = width;\r\n            this._clipRect.height = height;\r\n\r\n            //把xy转换到当前矩阵空间。宽高不用转换，这样在shader中计算的时候就不用把方向normalize了\r\n            this._clipRect.x = x;\r\n            this._clipRect.y = y;\r\n        }\r\n        this._clipID_Gen++;\r\n        this._clipID_Gen %= 10000;\r\n        this._clipInfoID = this._clipID_Gen;\r\n\r\n        if (escape) {\r\n            defaultClipMatrix.copyTo(this._globalClipMatrix);\r\n            return;\r\n        }\r\n\r\n        var cm: Matrix = this._globalClipMatrix;\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转，翻转\r\n        var minx: number = cm.tx;\r\n        var miny: number = cm.ty;\r\n        var maxx: number = minx + cm.a;\r\n        var maxy: number = miny + cm.d;\r\n        //TEMP end\r\n\r\n        if (this._clipRect.width >= Const.MAX_CLIP_SIZE) {\r\n            cm.a = cm.d = Const.MAX_CLIP_SIZE;\r\n            cm.b = cm.c = cm.tx = cm.ty = 0;\r\n        } else {\r\n            //其实就是矩阵相乘\r\n            if (this._curMat._bTransform) {\r\n                cm.tx = this._clipRect.x * this._curMat.a + this._clipRect.y * this._curMat.c + this._curMat.tx;\r\n                cm.ty = this._clipRect.x * this._curMat.b + this._clipRect.y * this._curMat.d + this._curMat.ty;\r\n                cm.a = this._clipRect.width * this._curMat.a;\r\n                cm.b = this._clipRect.width * this._curMat.b;\r\n                cm.c = this._clipRect.height * this._curMat.c;\r\n                cm.d = this._clipRect.height * this._curMat.d;\r\n            } else {\r\n                cm.tx = this._clipRect.x + this._curMat.tx;\r\n                cm.ty = this._clipRect.y + this._curMat.ty;\r\n                cm.a = this._clipRect.width;\r\n                cm.b = cm.c = 0;\r\n                cm.d = this._clipRect.height;\r\n            }\r\n            if (this._incache) {\r\n                this._clipInCache = true;\r\n            }\r\n        }\r\n\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转,翻转\r\n        if (cm.a > 0 && cm.d > 0) {\r\n            var cmaxx: number = cm.tx + cm.a;\r\n            var cmaxy: number = cm.ty + cm.d;\r\n            if (cmaxx <= minx || cmaxy <= miny || cm.tx >= maxx || cm.ty >= maxy) {\r\n                //超出范围了\r\n                cm.a = -0.1; cm.d = -0.1;\r\n            } else {\r\n                if (cm.tx < minx) {\r\n                    cm.a -= (minx - cm.tx);\r\n                    cm.tx = minx;\r\n                }\r\n                if (cmaxx > maxx) {\r\n                    cm.a -= (cmaxx - maxx);\r\n                }\r\n                if (cm.ty < miny) {\r\n                    cm.d -= (miny - cm.ty);\r\n                    cm.ty = miny;\r\n                }\r\n                if (cmaxy > maxy) {\r\n                    cm.d -= (cmaxy - maxy);\r\n                }\r\n                if (cm.a <= 0) cm.a = -0.1;\r\n                if (cm.d <= 0) cm.d = -0.1;\r\n            }\r\n        }\r\n        //TEMP end\r\n    }\r\n\r\n    addRenderObject(o: ISubmit): void {\r\n        this._submits[this._submits._length++] = o;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tstart\r\n     * @param\tend\r\n     */\r\n    submitElement(start: number, end: number): number {\r\n        var mainCtx: boolean = this.isMain;\r\n        var renderList: any[] = this._submits;\r\n        var ret: number = ((<any>renderList))._length;\r\n        end < 0 && (end = ((<any>renderList))._length);\r\n        var submit = SubmitBase.RENDERBASE;\r\n        while (start < end) {\r\n            this._renderNextSubmitIndex = start + 1;\r\n            if (renderList[start] === SubmitBase.RENDERBASE) {\r\n                start++;\r\n                continue;\r\n            }\r\n            SubmitBase.preRender = submit;\r\n            submit = renderList[start];\r\n            //只有submitscissor才会返回多个\r\n            start += submit.renderSubmit();\r\n            //本来做了个优化，如果是主画布，用完立即releaseRender. 但是实际没有什么效果，且由于submit需要用来对比，即使用完也不能修改，所以这个优化又去掉了\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    flush(): number {\r\n        this._clipID_Gen = 0;\r\n        var ret: number = this.submitElement(0, this._submits._length);\r\n        this._path && this._path.reset();\r\n        SkinMeshBuffer.instance && SkinMeshBuffer.getInstance().reset();\r\n\r\n        //Stat.mesh2DNum += meshlist.length;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n\r\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this._mesh = MeshQuadTexture.getAMesh(this.isMain);\t//TODO 不要这样。\r\n        this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n        this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n        this.meshlist.push(this._mesh, this._pathMesh, this._triangleMesh);\r\n\r\n        this._flushCnt++;\r\n        //charbook gc\r\n        if (this._flushCnt % 60 == 0 && this.isMain) {\r\n            if (TextRender.textRenderInst) {\r\n                TextRender.textRenderInst.GC();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*******************************************start矢量绘制***************************************************/\r\n\r\n    beginPath(convex: boolean = false): void {\r\n        var tPath: Path = this._getPath();\r\n        tPath.beginPath(convex);\r\n    }\r\n\r\n    closePath(): void {\r\n        //_path.closePath = true;\r\n        this._path.closePath();\r\n    }\r\n\r\n    /**\r\n     * 添加一个path。\r\n     * @param\tpoints [x,y,x,y....]\t这个会被保存下来，所以调用者需要注意复制。\r\n     * @param\tclose\t是否闭合\r\n     * @param   convex 是否是凸多边形。convex的优先级是这个最大。fill的时候的次之。其实fill的时候不应该指定convex，因为可以多个path\r\n     * @param\tdx  需要添加的平移。这个需要在应用矩阵之前应用。\r\n     * @param\tdy\r\n     */\r\n    addPath(points: any[], close: boolean, convex: boolean, dx: number, dy: number): void {\r\n        let sz = points.length;\r\n        for (let i = 0; i < sz - 1; i += 2) {\r\n            points[i] += dx;\r\n            points[i + 1] += dy;\r\n        }\r\n        if (close && sz > 5 && (points[sz - 2] != points[0] || points[sz - 1] != points[1])) {\r\n            points.push(points[0], points[1]);\r\n        }\r\n        this._getPath().push(points, convex);\r\n    }\r\n\r\n    fill(): void {\r\n        var m: Matrix = this._curMat;\r\n        var tPath: Path = this._getPath();\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey = submit._key.submitType === SubmitBase.KEY_VG && \r\n                    submit._key.blendShader === this._nBlendType &&\r\n                    this.isSameClipInfo(submit) &&\r\n                    this._curSubmit.material==this.material;\r\n\r\n        if (!sameKey) {\r\n            this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n        }\r\n        var rgba: number = this.mixRGBandAlpha(this.fillStyle.toInt());\r\n        var curEleNum: number = 0;\r\n        var idx: any[];\r\n        //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n        for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\r\n            var p: any = tPath.paths[i];\r\n            var vertNum: number = p.path.length / 2;\r\n            if (vertNum < 3 || (vertNum == 3 && !p.convex))\r\n                continue;\r\n            var cpath: any[] = p.path.concat();\r\n            // 应用矩阵转换顶点\r\n            var pi: number = 0;\r\n            var xp: number, yp: number;\r\n            var _x: number, _y: number;\r\n            if (m._bTransform) {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n\r\n                    cpath[xp] = m.a * _x + m.c * _y + m.tx;\r\n                    cpath[yp] = m.b * _x + m.d * _y + m.ty;\r\n                }\r\n            } else {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n                    cpath[xp] = _x + m.tx;\r\n                    cpath[yp] = _y + m.ty;\r\n                }\r\n            }\r\n\r\n            if (this._pathMesh.vertNum + vertNum > Context._MAXVERTNUM) {\r\n                //;\r\n                //顶点数超了，要先提交一次\r\n                this._curSubmit._numEle += curEleNum;\r\n                curEleNum = 0;\r\n                //然后用新的mesh，和新的submit。\r\n                this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n\r\n            var curvert: number = this._pathMesh.vertNum;\r\n            //生成 ib\r\n            if (p.convex) { //convex的ib比较容易\r\n                var faceNum: number = vertNum - 2;\r\n                idx = new Array(faceNum * 3);\r\n                var idxpos: number = 0;\r\n                for (var fi: number = 0; fi < faceNum; fi++) {\r\n                    idx[idxpos++] = curvert;\r\n                    idx[idxpos++] = fi + 1 + curvert;\r\n                    idx[idxpos++] = fi + 2 + curvert;\r\n                }\r\n            }\r\n            else {\r\n                idx = Earcut.earcut(cpath, null, 2);\t//返回索引\r\n                if (curvert > 0) {\r\n                    //修改ib\r\n                    for (var ii: number = 0; ii < idx.length; ii++) {\r\n                        idx[ii] += curvert;\r\n                    }\r\n                }\r\n            }\r\n            //填充mesh\r\n            this._pathMesh.addVertAndIBToMesh(this, cpath, rgba, idx);\r\n            curEleNum += idx.length;\r\n        }\r\n        this._curSubmit._numEle += curEleNum;\r\n    }\r\n\r\n    private addVGSubmit(mesh: Mesh2D): Submit {\r\n        //elenum设为0，后面再加\r\n        var submit: Submit = Submit.createShape(this, mesh, 0, Value2D.create(RenderSpriteData.Primitive));\r\n        //submit._key.clear();\r\n        //submit._key.blendShader = _submitKey.blendShader;\t//TODO 这个在哪里赋值的啊\r\n        submit._key.submitType = SubmitBase.KEY_VG;\r\n        this._submits[this._submits._length++] = submit;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n        return submit;\r\n    }\r\n\r\n    stroke(): void {\r\n        if (this.lineWidth > 0) {\r\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var tPath: Path = this._getPath();\r\n            var submit: Submit = this._curSubmit;\r\n            var sameKey = submit._key.submitType === SubmitBase.KEY_VG && \r\n                            submit._key.blendShader === this._nBlendType &&\r\n                            this.isSameClipInfo(submit) && \r\n                            this._curSubmit.material==this.material;\r\n\r\n            if (!sameKey) {\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n            var curEleNum: number = 0;\r\n            //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n            for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\r\n                var p: any = tPath.paths[i];\r\n                if (p.path.length <= 0)\r\n                    continue;\r\n                var idx: any[] = [];\r\n                var vertex: any[] = [];//x,y\r\n                //p.path.loop;\r\n                //填充vbib\r\n                var maxVertexNum: number = p.path.length * 2;\t//最大可能产生的顶点数。这个需要考虑考虑\r\n                if (maxVertexNum < 2)\r\n                    continue;\r\n                if (this._pathMesh.vertNum + maxVertexNum > Context._MAXVERTNUM) {\r\n                    //;\r\n                    //顶点数超了，要先提交一次\r\n                    this._curSubmit._numEle += curEleNum;\r\n                    curEleNum = 0;\r\n                    //然后用新的mesh，和新的submit。\r\n                    this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                    this.meshlist.push(this._pathMesh);\r\n                    this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n                }\r\n                //这个需要放在创建新的mesh的后面，因为需要mesh.vertNum,否则如果先调用这个，再创建mesh，那么ib就不对了\r\n                BasePoly.createLine2(p.path, idx, this.lineWidth, this._pathMesh.vertNum, vertex, p.loop);\t//_pathMesh.vertNum 是要加到生成的ib上的\r\n                // 变换所有的点\r\n                var ptnum: number = vertex.length / 2;\r\n                var m: Matrix = this._curMat;\r\n                var pi: number = 0;\r\n                var xp: number, yp: number;\r\n                var _x: number, _y: number;\r\n                if (m._bTransform) {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n\r\n                        vertex[xp] = m.a * _x + m.c * _y + m.tx;\r\n                        vertex[yp] = m.b * _x + m.d * _y + m.ty;\r\n                    }\r\n                } else {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n                        vertex[xp] = _x + m.tx;\r\n                        vertex[yp] = _y + m.ty;\r\n                    }\r\n                }\r\n\r\n                //this.drawPoly(0, 0, p.path, fillStyle._color.numColor, 0, 0, p.convex);\r\n                //填充mesh\r\n                this._pathMesh.addVertAndIBToMesh(this, vertex, rgba, idx);\r\n                curEleNum += idx.length;\r\n            }\r\n            this._curSubmit._numEle += curEleNum;\r\n        }\r\n    }\r\n\r\n    moveTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        tPath.newPath();\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tb 是否应用矩阵\r\n     */\r\n    lineTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        if (Math.abs(x - tPath._lastOriX) < 1e-3 && Math.abs(y - tPath._lastOriY) < 1e-3)//不判断的话，下面的画线算法受不了\r\n            return;\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n    /*\r\n    public function drawCurves(x:Number, y:Number,points:Array, lineColor:*, lineWidth:Number = 1):void {\r\n        //setPathId(-1);\r\n        beginPath();\r\n        strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        var points:Array = points;\r\n        //movePath(x, y); TODO 这个被去掉了\r\n        moveTo(points[0], points[1]);\r\n        var i:int = 2, n:int = points.length;\r\n        while (i < n) {\r\n            quadraticCurveTo(points[i++], points[i++], points[i++], points[i++]);\r\n        }\r\n        stroke();\r\n    }\r\n    */\r\n\r\n    arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\r\n        /*\r\n        if (mId != -1) {\r\n            if (mHaveKey) {\r\n                return;\r\n            }\r\n        }\r\n        */\r\n        var i: number = 0;\r\n        var x: number = 0, y: number = 0;\r\n        var dx: number = this._path._lastOriX - x1;\r\n        var dy: number = this._path._lastOriY - y1;\r\n        var len1: number = Math.sqrt(dx * dx + dy * dy);\r\n        if (len1 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx: number = dx / len1;\r\n        var ndy: number = dy / len1;\r\n        var dx2: number = x2 - x1;\r\n        var dy2: number = y2 - y1;\r\n        var len22: number = dx2 * dx2 + dy2 * dy2;\r\n        var len2: number = Math.sqrt(len22);\r\n        if (len2 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx2: number = dx2 / len2;\r\n        var ndy2: number = dy2 / len2;\r\n        var odx: number = ndx + ndx2;\r\n        var ody: number = ndy + ndy2;\r\n        var olen: number = Math.sqrt(odx * odx + ody * ody);\r\n        if (olen <= 0.000001) {\r\n            return;\r\n        }\r\n\r\n        var nOdx: number = odx / olen;\r\n        var nOdy: number = ody / olen;\r\n\r\n        var alpha: number = Math.acos(nOdx * ndx + nOdy * ndy);\r\n        var halfAng: number = Math.PI / 2 - alpha;\r\n\r\n        len1 = r * Math.tan(halfAng);\r\n        var ptx1: number = len1 * ndx + x1;\r\n        var pty1: number = len1 * ndy + y1;\r\n\r\n        var orilen: number = Math.sqrt(len1 * len1 + r * r);\r\n        //圆心\r\n        var orix: number = x1 + nOdx * orilen;\r\n        var oriy: number = y1 + nOdy * orilen;\r\n\r\n        var ptx2: number = len1 * ndx2 + x1;\r\n        var pty2: number = len1 * ndy2 + y1;\r\n\r\n        var dir: number = ndx * ndy2 - ndy * ndx2;\r\n\r\n        var fChgAng: number = 0;\r\n        var sinx: number = 0.0;\r\n        var cosx: number = 0.0;\r\n        if (dir >= 0) {\r\n            fChgAng = halfAng * 2;\r\n            var fda: number = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n        else {\r\n            fChgAng = -halfAng * 2;\r\n            fda = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n\r\n        //x = _curMat.a * ptx1 + _curMat.c * pty1 /*+ _curMat.tx*/;\r\n        //y = _curMat.b * ptx1 + _curMat.d * pty1 /*+ _curMat.ty*/;\r\n        var lastx: number = this._path._lastOriX, lasty: number = this._path._lastOriY;\t//没有矩阵转换的上一个点\r\n        var _x1: number = ptx1, _y1: number = pty1;\r\n        if (Math.abs(_x1 - this._path._lastOriX) > 0.1 || Math.abs(_y1 - this._path._lastOriY) > 0.1) {\r\n            x = _x1;// _curMat.a * _x1 + _curMat.c * _y1 + _curMat.tx;\r\n            y = _y1;//_curMat.b * _x1 + _curMat.d * _y1 + _curMat.ty;\r\n            lastx = _x1;\r\n            lasty = _y1;\r\n            this._path._lastOriX = x;\r\n            this._path._lastOriY = y;\r\n            this._path.addPoint(x, y);\r\n        }\r\n        var cvx: number = ptx1 - orix;\r\n        var cvy: number = pty1 - oriy;\r\n        var tx: number = 0.0;\r\n        var ty: number = 0.0;\r\n        for (i = 0; i < Context.SEGNUM; i++) {\r\n            var cx: number = cvx * cosx + cvy * sinx;\r\n            var cy: number = -cvx * sinx + cvy * cosx;\r\n            x = cx + orix;\r\n            y = cy + oriy;\r\n\r\n            //x1 = _curMat.a * x + _curMat.c * y /*+ _curMat.tx*/;\r\n            //y1 = _curMat.b * x + _curMat.d * y /*+ _curMat.ty*/;\r\n            //x = x1;\r\n            //y = y1;\r\n            if (Math.abs(lastx - x) > 0.1 || Math.abs(lasty - y) > 0.1) {\r\n                //var _tx1:Number = x, _ty1:Number = y;\r\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\r\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\r\n                this._path._lastOriX = x;\r\n                this._path._lastOriY = y;\r\n                this._path.addPoint(x, y);\r\n                lastx = x;\r\n                lasty = y;\r\n            }\r\n            cvx = cx;\r\n            cvy = cy;\r\n        }\r\n    }\r\n\r\n    arc(cx: number, cy: number, rx: number, ry: number, startAngle: number, endAngle: number, counterclockwise: boolean = false, b: boolean = true, minNum = 10): void {\r\n        /* TODO 缓存还没想好\r\n        if (mId != -1) {\r\n            var tShape:IShape = VectorGraphManager.getInstance().shapeDic[this.mId];\r\n            if (tShape) {\r\n                if (mHaveKey && !tShape.needUpdate(_curMat))\r\n                    return;\r\n            }\r\n            cx = 0;\r\n            cy = 0;\r\n        }\r\n        */\r\n        var a: number = 0, da: number = 0, hda: number = 0, kappa: number = 0;\r\n        var dx: number = 0, dy: number = 0, x: number = 0, y: number = 0, tanx: number = 0, tany: number = 0;\r\n        var i: number, ndivs: number, nvals: number;\r\n\r\n        // Clamp angles\r\n        da = endAngle - startAngle;\r\n        if (!counterclockwise) {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = Math.PI * 2;\r\n            } else {\r\n                while (da < 0.0) {\r\n                    da += Math.PI * 2;\r\n                }\r\n            }\r\n        } else {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = -Math.PI * 2;\r\n            } else {\r\n                while (da > 0.0) {\r\n                    da -= Math.PI * 2;\r\n                }\r\n            }\r\n        }\r\n        var sx: number = this.getMatScaleX();\r\n        var sy: number = this.getMatScaleY();\r\n        var sr: number = rx * (sx > sy ? sx : sy);\r\n        var cl: number = 2 * Math.PI * sr;\r\n        ndivs = (Math.max(cl / minNum, minNum)) | 0;\r\n\r\n        hda = (da / ndivs) / 2.0;\r\n        kappa = Math.abs(4 / 3 * (1 - Math.cos(hda)) / Math.sin(hda));\r\n        if (counterclockwise)\r\n            kappa = -kappa;\r\n\r\n        nvals = 0;\r\n        var tPath: Path = this._getPath();\r\n        for (i = 0; i <= ndivs; i++) {\r\n            a = startAngle + da * (i / ndivs);\r\n            dx = Math.cos(a);\r\n            dy = Math.sin(a);\r\n            x = cx + dx * rx;\r\n            y = cy + dy * ry;\r\n            if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n                //var _tx1:Number = x, _ty1:Number = y;\r\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\r\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\r\n                tPath.addPoint(x, y);\r\n            }\r\n        }\r\n        dx = Math.cos(endAngle);\r\n        dy = Math.sin(endAngle);\r\n        x = cx + dx * rx;\r\n        y = cy + dy * ry;\r\n        if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n            //var _x2:Number = x, _y2:Number = y;\r\n            //x = _curMat.a * _x2 + _curMat.c * _y2 + _curMat.tx;\r\n            //y = _curMat.b * _x2 + _curMat.d * _y2 + _curMat.ty;\r\n            tPath.addPoint(x, y);\r\n        }\r\n    }\r\n\r\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\r\n        var tBezier: Bezier = Bezier.I;\r\n        var tResultArray: any[] = [];\r\n        //var _x1:Number = x, _y1:Number = y;\r\n        //x = _curMat.a * _x1 + _curMat.c * _y1 ;// + _curMat.tx;\r\n        //y = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        //_x1 = cpx, _y1 = cpy;\r\n        //cpx = _curMat.a * _x1 + _curMat.c * _y1;// + _curMat.tx;\r\n        //cpy = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        var tArray: any[] = tBezier.getBezierPoints([this._path._lastOriX, this._path._lastOriY, cpx, cpy, x, y], 30, 2);\r\n        for (var i: number = 0, n: number = tArray.length / 2; i < n; i++) {\r\n            this.lineTo(tArray[i * 2], tArray[i * 2 + 1]);\r\n        }\r\n        this.lineTo(x, y);\r\n    }\r\n\r\n\r\n    /**\r\n     * 把颜色跟当前设置的alpha混合\r\n     * @return\r\n     */\r\n    mixRGBandAlpha(color: number): number {\r\n        return this._mixRGBandAlpha(color, this._shader2D.ALPHA);\r\n    }\r\n    /**@internal */\r\n    _mixRGBandAlpha(color: number, alpha: number): number {\r\n        if (alpha >= 1) {\r\n            return color;\r\n        }\r\n        var a: number = ((color & 0xff000000) >>> 24);\r\n        //TODO 这里容易出问题，例如颜色的alpha部分虽然为0，但是他的意义就是0，不能假设是没有设置alpha。例如级联多个alpha就会生成这种结果\r\n        if (a != 0) {\r\n            a *= alpha;\r\n        } else {\r\n            a = alpha * 255;\r\n        }\r\n        return (color & 0x00ffffff) | (a << 24);\r\n    }\r\n\r\n    strokeRect(x: number, y: number, width: number, height: number, parameterLineWidth: number): void {\r\n        var tW: number = parameterLineWidth * 0.5;\r\n        //line(x - tW, y, x + width + tW, y, parameterLineWidth, _curMat);\r\n        //line(x + width, y, x + width, y + height, parameterLineWidth, _curMat);\r\n        //line(x, y, x, y + height, parameterLineWidth, _curMat);\r\n        //line(x - tW, y + height, x + width + tW, y + height, parameterLineWidth, _curMat);\r\n        /**\r\n         * p1-------------------------------p2\r\n         * |  x,y                      x+w,y|\r\n         * |     p4--------------------p3   |\r\n         * |     |                     |    |\r\n         * |     p6--------------------p7   |\r\n         * |  x,y+h                  x+w,y+h|\r\n         * p5-------------------------------p8\r\n         * \r\n         * 不用了\r\n         * 这个其实用4个fillrect拼起来更好，能与fillrect合并。虽然多了几个点。\r\n         */\r\n        //TODO 这里能不能与下面的stroke合并一下\r\n        if (this.lineWidth > 0) {\r\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var hw: number = this.lineWidth / 2;\r\n            this._fillRect(x - hw, y - hw, width + this.lineWidth, this.lineWidth, rgba);\t\t\t\t//上\r\n            this._fillRect(x - hw, y - hw + height, width + this.lineWidth, this.lineWidth, rgba);\t\t//下\r\n            this._fillRect(x - hw, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t\t\t//左\r\n            this._fillRect(x - hw + width, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t//右\r\n        }\r\n    }\r\n\r\n    clip(): void {\r\n    }\r\n\r\n    /*******************************************end矢量绘制***************************************************/\r\n    //TODO:coverage\r\n    drawParticle(x: number, y: number, pt: any): void {\r\n        pt.x = x;\r\n        pt.y = y;\r\n        this._submits[this._submits._length++] = pt;\r\n    }\r\n\r\n    private _getPath(): Path {\r\n        return this._path || (this._path = new Path());\r\n    }\r\n\r\n    /**获取canvas*/\r\n    //注意这个是对外接口\r\n    get canvas(): HTMLCanvas {\r\n        return this._canvas;\r\n    }\r\n    //=============新增==================\t\r\n    /* 下面的方式是有bug的。canvas是直接save，restore，现在是为了优化，但是有bug，所以先不重载了\r\n    public function saveTransform(matrix:Matrix):void {\r\n        this._curMat.copyTo(matrix);\r\n    }\r\n    \r\n    public function restoreTransform(matrix:Matrix):void {\r\n        matrix.copyTo(this._curMat);\r\n    }\r\n    \r\n    public function transformByMatrix(matrix:Matrix,tx:Number,ty:Number):void {\r\n        var mat:Matrix = _curMat;\r\n        matrix.setTranslate(tx, ty);\r\n        Matrix.mul(matrix, mat, mat);\r\n        matrix.setTranslate(0, 0);\r\n        mat._bTransform = true;\r\n    }\r\n    */\r\n\r\n    /* 下面的是错误的。位置没有被缩放\r\n    public function transformByMatrix(matrix:Matrix, tx:Number, ty:Number):void {\r\n        SaveTransform.save(this);\t\t\t\r\n        Matrix.mul(matrix, _curMat, _curMat);\t\r\n        _curMat.tx += tx;\r\n        _curMat.ty += ty;\r\n        _curMat._checkTransform();\r\n    }\r\n            \r\n    public function transformByMatrixNoSave(matrix:Matrix, tx:Number, ty:Number):void {\r\n        Matrix.mul(matrix, _curMat, _curMat);\t\r\n        _curMat.tx += tx;\r\n        _curMat.ty += ty;\r\n        _curMat._checkTransform();\r\n    }\r\n    */\r\n\r\n    private static tmpuv1: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    /**\r\n     * 专用函数。通过循环创建来水平填充\r\n     * @param\ttex\r\n     * @param\tbmpid\r\n     * @param\tuv\t\t希望循环的部分的uv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     */\r\n    private _fillTexture_h(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, w: number, color: number): void {\r\n        if (oriw <= 0)\r\n            console.error('_fillTexture_h error: oriw must>0');\r\n\r\n        var stx: number = x;\r\n        var num: number = Math.floor(w / oriw);\r\n        var left: number = w % oriw;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, stx, y, oriw, orih, this._curMat, uv, 1, false, color);\r\n            stx += oriw;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var du: number = uv[2] - uv[0];\r\n            var uvr: number = uv[0] + du * (left / oriw);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uvr; tuv[3] = uv[3];\r\n            tuv[4] = uvr; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this._inner_drawTexture(tex, imgid, stx, y, left, orih, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 专用函数。通过循环创建来垂直填充\r\n     * @param\ttex\r\n     * @param\timgid\r\n     * @param\tuv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\th\r\n     */\r\n    private _fillTexture_v(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, h: number, color: number): void {\r\n        if (orih <= 0)\r\n            console.error('_fillTexture_v error: orih must>0');\r\n        var sty: number = y;\r\n        var num: number = Math.floor(h / orih);\r\n        var left: number = h % orih;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, orih, this._curMat, uv, 1, false, color);\r\n            sty += orih;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var dv: number = uv[7] - uv[1];\r\n            var uvb: number = uv[1] + dv * (left / orih);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3];\r\n            tuv[4] = uv[4]; tuv[5] = uvb; tuv[6] = uv[6]; tuv[7] = uvb;\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, left, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    private static tmpUV: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    private static tmpUVRect: any[] = [0, 0, 0, 0];\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\r\n        if (!tex._getSource())\r\n            return;\r\n        tx += gx;\r\n        ty += gy;\r\n\r\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\r\n\r\n        let ox = tex.offsetX;\r\n        let oy = tex.offsetY;\r\n\r\n        let sw = tex.sourceWidth;\r\n        let sh = tex.sourceHeight;\r\n\r\n        let ow = sw - tex.width - ox;\r\n        let oh = sh - tex.height - oy;\r\n\r\n        var top: number = sizeGrid[0];\r\n        top -= oy;\r\n        if (0 > top) {\r\n            oy += top;\r\n            top = 0;\r\n        }\r\n        ty += oy;\r\n\r\n        var left: number = sizeGrid[3];\r\n        left -= ox;\r\n        if (0 > left) {\r\n            ox += left;\r\n            left = 0;\r\n        }\r\n        tx += ox;\r\n\r\n        var right: number = sizeGrid[1];\r\n        right -= ow;\r\n        if (0 > right) {\r\n            ow += right;\r\n            right = 0;\r\n        }\r\n        var bottom: number = sizeGrid[2];\r\n        bottom -= oh;\r\n        if (0 > bottom) {\r\n            oh += bottom;\r\n            bottom = 0;\r\n        }\r\n        width -= ox + ow;\r\n        height -= oy + oh;\r\n\r\n        var repeat: boolean = sizeGrid[4];\r\n        var needClip: boolean = false;\r\n\r\n        if (width == tex.width) {\r\n            left = right = 0;\r\n        }\r\n        if (height == tex.height) {\r\n            top = bottom = 0;\r\n        }\r\n\r\n        var d_top: number = top / h;\r\n        var d_left: number = left / w;\r\n        var d_right: number = right / w;\r\n        var d_bottom: number = bottom / h;\r\n\r\n        //处理进度条不好看的问题\r\n        // if (left + right > width) {\r\n        // \tvar clipWidth: number = width;\r\n        // \tneedClip = true;\r\n        // \twidth = left + right;\r\n        // \tthis.save();\r\n        // \tthis.clipRect(0 + tx, 0 + ty, clipWidth, height);\r\n        // }\r\n\r\n        var imgid: number = (tex.bitmap as Texture2D).id;\r\n        var mat: Matrix = this._curMat;\r\n        var tuv = this._tempUV;\r\n\r\n        //解决九宫格设置left+right或top+bottom的累加值超过宽或高导致九宫格显示错乱的bug\r\n        var scale_x = 1;\r\n        var scale_y = 1;\r\n        if (left + right > width) scale_x = width / (left + right);\r\n        if (top + bottom > height) scale_y = height / (top + bottom);\r\n        left *= scale_x;\r\n        right *= scale_x;\r\n        top *= scale_y;\r\n        bottom *= scale_y;\r\n\r\n        // 整图的uv\r\n        // 一定是方的，所以uv只要左上右下就行\r\n        var uvl = uv[0];\r\n        var uvt = uv[1];\r\n        var uvr = uv[4];\r\n        var uvb = uv[5];\r\n\r\n        // 小图的uv\r\n        var uvl_ = uvl;\r\n        var uvt_ = uvt;\r\n        var uvr_ = uvr;\r\n        var uvb_ = uvb;\r\n\r\n        //绘制四个角\r\n        // 构造uv\r\n        if (left && top) {\r\n            uvr_ = uvl + d_left;\r\n            uvb_ = uvt + d_top;\r\n            tuv[0] = uvl, tuv[1] = uvt, tuv[2] = uvr_, tuv[3] = uvt,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, tx, ty, left, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && top) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt;\r\n            uvr_ = uvr; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, 0 + ty, right, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (left && bottom) {\r\n            uvl_ = uvl; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvl + d_left; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, 0 + tx, height - bottom + ty, left, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && bottom) {\r\n            uvl_ = uvr - d_right; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, height - bottom + ty, right, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        //绘制上下两个边\r\n        if (top) {\r\n            uvl_ = uvl + d_left; uvt_ = uvt;\r\n            uvr_ = uvr - d_right; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, top, left + tx, ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, ty, width - left - right, top, mat, tuv, 1, false, color);\r\n            }\r\n\r\n        }\r\n        if (bottom) {\r\n            uvl_ = uvl + d_left; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr - d_right; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, bottom, left + tx, height - bottom + ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, height - bottom + ty, width - left - right, bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制左右两边\r\n        if (left) {\r\n            uvl_ = uvl; uvt_ = uvt + d_top;\r\n            uvr_ = uvl + d_left; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, left, tex.height - top - bottom, tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, tx, top + ty, left, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        if (right) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt + d_top;\r\n            uvr_ = uvr; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, right, tex.height - top - bottom, width - right + tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, width - right + tx, top + ty, right, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制中间\r\n        uvl_ = uvl + d_left; uvt_ = uvt + d_top;\r\n        uvr_ = uvr - d_right; uvb_ = uvb - d_bottom;\r\n        tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n            tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n        if (repeat) {\r\n            var tuvr: any[] = Context.tmpUVRect;\r\n            tuvr[0] = uvl_; tuvr[1] = uvt_;\r\n            tuvr[2] = uvr_ - uvl_; tuvr[3] = uvb_ - uvt_;\r\n            // 这个如果用重复的可能比较多，所以采用filltexture的方法，注意这样会打断合并\r\n            this._fillTexture(tex, tex.width - left - right, tex.height - top - bottom, tuvr, left + tx, top + ty, width - left - right, height - top - bottom, 'repeat', 0, 0, color);\r\n        } else {\r\n            this._inner_drawTexture(tex, imgid, left + tx, top + ty, width - left - right, height - top - bottom, mat, tuv, 1, false, color);\r\n        }\r\n\r\n        if (needClip) this.restore();\r\n    }\r\n    addRenderObject3D(scene3D: ISubmit): void {\r\n        this._curSubmit = SubmitBase.RENDERBASE;//打断2D合并的renderKey\r\n        this.addRenderObject(scene3D);\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass ContextParams {\r\n    static DEFAULT: ContextParams;\r\n\r\n    lineWidth: number = 1;\r\n    textAlign: string;\r\n    textBaseline: string;\r\n\r\n    clear(): void {\r\n        this.lineWidth = 1;\r\n        this.textAlign = this.textBaseline = null;\r\n    }\r\n\r\n    make(): ContextParams {\r\n        return this === ContextParams.DEFAULT ? new ContextParams() : this;\r\n    }\r\n}\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n    //@ts-ignore\r\n    Context = NativeContext;\r\n}\r\n","import { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { Context } from \"./Context\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Resource } from \"./Resource\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>HTMLCanvas</code> 是 Html Canvas 的代理类，封装了 Canvas 的属性和方法。\r\n */\r\nexport class HTMLCanvas extends Resource {\r\n\r\n    private _ctx: any;\r\n    /**@internal */\r\n    _source: HTMLCanvasElement;\r\n    /**@internal */\r\n    _texture: Texture | RenderTexture2D;\r\n    /**@private */\r\n    protected _width: number;\r\n    /**@private */\r\n    protected _height: number;\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _getSource() {\r\n        return this._source;\r\n    }\r\n    /**\r\n     * 根据指定的类型，创建一个 <code>HTMLCanvas</code> 实例。\r\n     */\r\n    constructor(createCanvas: boolean = false) {\r\n        super();\r\n        if (createCanvas)\t//webgl模式下不建立。除非强制指，例如绘制文字部分\r\n            this._source = Browser.createElement(\"canvas\");\r\n        else {\r\n            this._source = this as unknown as HTMLCanvasElement;\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * 清空画布内容。\r\n     */\r\n    clear(): void {\r\n        if (this._ctx) {\r\n            if (this._ctx.clear) {\r\n                this._ctx.clear();\r\n            } else {\r\n                this._ctx.clearRect(0, 0, this._width, this._height);\r\n            }\r\n        }\r\n        if (this._texture) {\r\n            this._texture.destroy();\r\n            this._texture = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁。\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        super.destroy();\r\n        this._setCPUMemory(0);\r\n        this._ctx && this._ctx.destroy && this._ctx.destroy();\r\n        this._ctx = null;\r\n    }\r\n\r\n    /**\r\n     * 释放。\r\n     */\r\n    release(): void {\r\n    }\r\n\r\n    /**\r\n     * Canvas 渲染上下文。\r\n     */\r\n    get context(): Context {\r\n        if (this._ctx) return this._ctx;\r\n        //@ts-ignore\r\n        if (this._source == this) {\t//是webgl并且不是真的画布。如果是真的画布，可能真的想要2d context\r\n            // @ts-ignore\r\n            this._ctx = new Context();\r\n        } else {\r\n            //@ts-ignore\r\n            this._ctx = this._source.getContext(LayaEnv.isConch ? 'layagl' : '2d');\r\n        }\r\n        this._ctx._canvas = this;\r\n        return this._ctx;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 设置 Canvas 渲染上下文。是webgl用来替换_ctx用的\r\n     * @param\tcontext Canvas 渲染上下文。\r\n     */\r\n    _setContext(context: Context): void {\r\n        this._ctx = context;\r\n    }\r\n\r\n    /**\r\n     * 获取 Canvas 渲染上下文。\r\n     * @param\tcontextID 上下文ID.\r\n     * @param\tother\r\n     * @return  Canvas 渲染上下文 Context 对象。\r\n     */\r\n    getContext(contextID: string, other: any = null): Context {\r\n        return this.context;\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取内存大小。\r\n     * @return 内存大小。\r\n     */\r\n    //TODO:coverage\r\n    getMemSize(): number {\r\n        return 0;//TODO:待调整\r\n    }\r\n\r\n    /**\r\n     * 设置宽高。\r\n     * @param\tw 宽度。\r\n     * @param\th 高度。\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h || (this._source && (this._source.width != w || this._source.height != h))) {\r\n            this._width = w;\r\n            this._height = h;\r\n            this._setCPUMemory(w * h * 4);\r\n            this._ctx && this._ctx.size && this._ctx.size(w, h);\r\n            if (this._source) {// && this._source instanceof HTMLCanvasElement){\r\n                this._source.height = h;\r\n                this._source.width = w;\r\n            }\r\n            if (this._texture) {\r\n                this._texture.destroy();\r\n                this._texture = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取texture实例\r\n     */\r\n    getTexture(): Texture | null | RenderTexture2D {\r\n        if (!this._texture) {\r\n            var bitmap: Texture2D = new Texture2D(this.source.width, this.source.height, TextureFormat.R8G8B8A8, true, false, false);\r\n            bitmap.setImageData(this.source, false, false);\r\n            this._texture = new Texture(bitmap);\r\n        }\r\n        return this._texture;\r\n    }\r\n\r\n    /**\r\n     * 把图片转换为base64信息\r\n     * @param\ttype \"image/png\"\r\n     * @param\tencoderOptions\t质量参数，取值范围为0-1\r\n     */\r\n    toBase64(type: string, encoderOptions: number): string | null {\r\n        if (this._source) {\r\n            if (LayaEnv.isConch) {\r\n                var win: any = window as any;\r\n                var width: number = this._ctx._targets.sourceWidth;\r\n                var height: number = this._ctx._targets.sourceHeight;\r\n                var data: any = this._ctx._targets.getData(0, 0, width, height);\r\n                return win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\r\n            }\r\n            else {\r\n                return (this._source as HTMLCanvasElement).toDataURL(type, encoderOptions);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * native多线程转图片\r\n     * @param type \r\n     * @param encoderOptions \r\n     * @param callBack \r\n     */\r\n    toBase64Async(type: string, encoderOptions: number, callBack: Function): void {\r\n        var width: number = this._ctx._targets.sourceWidth;\r\n        var height: number = this._ctx._targets.sourceHeight;\r\n        this._ctx._targets.getDataAsync(0, 0, width, height, function (data: Uint8Array): void {\r\n            let win = window as any;\r\n            var base64 = win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\r\n            callBack(base64);\r\n        });\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @internal\r\n * Graphic bounds数据类\r\n */\r\nexport class BoundsStyle {\r\n    /**@private */\r\n    bounds: Rectangle|null;\r\n    /**用户设的bounds*/\r\n    userBounds: Rectangle|null;\r\n    /**缓存的bounds顶点,sprite计算bounds用*/\r\n    temBM: any[]|null;\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): BoundsStyle {\r\n        if (this.bounds) this.bounds.recover();\r\n        if (this.userBounds) this.userBounds.recover();\r\n        this.bounds = null;\r\n        this.userBounds = null;\r\n        this.temBM = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"BoundsStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): BoundsStyle {\r\n        return Pool.getItemByClass(\"BoundsStyle\", BoundsStyle);\r\n    }\r\n}\r\n\r\n","import { Sprite } from \"../Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { HTMLCanvas } from \"../../resource/HTMLCanvas\"\r\nimport { Pool } from \"../../utils/Pool\"\r\nimport { Filter } from \"../../filters/Filter\"\r\n\r\n/**\r\n * @internal\r\n * 存储cache相关\r\n */\r\nexport class CacheStyle {\r\n\r\n    static EMPTY: CacheStyle = new CacheStyle();\r\n    /**当前实际的cache状态*/\r\n    cacheAs: string;\r\n    /**是否开启canvas渲染*/\r\n    enableCanvasRender: boolean;\r\n    /**用户设的cacheAs类型*/\r\n    userSetCache: string;\r\n    /**是否需要为滤镜cache*/\r\n    cacheForFilters: boolean;\r\n    /**是否为静态缓存*/\r\n    staticCache: boolean;\r\n    /**是否需要刷新缓存*/\r\n    reCache: boolean;\r\n    /**mask对象*/\r\n    mask: Sprite;\r\n    /**作为mask时的父对象*/\r\n    maskParent: Sprite;\r\n    /**滤镜数据*/\r\n    filters: Filter[];\r\n    /**当前缓存区域*/\r\n    cacheRect: Rectangle;\r\n    /**当前使用的canvas*/\r\n    canvas: HTMLCanvas;\r\n    //TODO:webgl是否还需要\r\n    /**滤镜数据*/\r\n    filterCache: any;\r\n    //TODO:webgl是否还需要\r\n    /**是否有发光滤镜*/\r\n    hasGlowFilter: boolean;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 是否需要Bitmap缓存\r\n     * @return\r\n     */\r\n    needBitmapCache(): boolean {\r\n        return this.cacheForFilters || !!this.mask;\r\n    }\r\n\r\n    /**\r\n     * 是否需要开启canvas渲染\r\n     */\r\n    needEnableCanvasRender(): boolean {\r\n        return this.userSetCache != \"none\" || this.cacheForFilters || !!this.mask;\r\n    }\r\n\r\n    /**\r\n     * 释放cache的资源\r\n     */\r\n    releaseContext(): void {\r\n        if (this.canvas && ((<any>this.canvas)).size) {\r\n            //Pool.recover(\"CacheCanvas\", this.canvas);\r\n            Pool.recoverByClass(this.canvas);\r\n            this.canvas.size(0, 0);\r\n            // 微信在iphone8和mate20上个bug，size存在但是不起作用，可能是canvas对象不是我们的。\r\n            // 为了避免canvas不消失，再强制设置宽高为0 TODO 没有测试\r\n            try {\r\n                ((<any>this.canvas)).width = 0;\r\n                ((<any>this.canvas)).height = 0;\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n        this.canvas = null;\r\n    }\r\n\r\n    createContext(): void {\r\n        if (!this.canvas) {\r\n            //this.canvas = Pool.getItem(\"CacheCanvas\") || new HTMLCanvas(false);\r\n            this.canvas = Pool.createByClass(HTMLCanvas);\r\n            var tx: Context = this.canvas.context as Context;\r\n            if (!tx) {\r\n                tx = this.canvas.getContext('2d') as Context;\t//如果是webGL的话，这个会返回WebGLContext2D\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 释放滤镜资源\r\n     */\r\n    releaseFilterCache(): void {\r\n        var fc: any = this.filterCache;\r\n        if (fc) {\r\n            fc.destroy();\r\n            fc.recycle();\r\n            this.filterCache = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this === CacheStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteCache\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): CacheStyle {\r\n        this.releaseContext();\r\n        this.releaseFilterCache();\r\n        this.cacheAs = \"none\";\r\n        this.enableCanvasRender = false;\r\n        this.userSetCache = \"none\";\r\n        this.cacheForFilters = false;\r\n        this.staticCache = false;\r\n        this.reCache = true;\r\n        this.mask = null;\r\n        this.maskParent = null;\r\n        this.filterCache = null;\r\n        this.filters = null;\r\n        this.hasGlowFilter = false;\r\n        if (this.cacheRect) this.cacheRect.recover();\r\n        this.cacheRect = null;\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 创建一个SpriteCache\r\n     */\r\n    static create(): CacheStyle {\r\n        return Pool.getItemByClass(\"SpriteCache\", CacheStyle);\r\n    }\r\n\r\n    private static _scaleInfo: Point = new Point();\r\n    static CANVAS_EXTEND_EDGE: number = 16;\r\n    /**\r\n    * @internal\r\n    */\r\n    _calculateCacheRect(sprite: Sprite, tCacheType: string, x: number, y: number): Point {\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        if (!_cacheStyle.cacheRect)\r\n            _cacheStyle.cacheRect = Rectangle.create();\r\n        var tRec: Rectangle;\r\n\r\n        //计算显示对象的绘图区域\r\n        if (tCacheType === \"bitmap\") {\r\n            tRec = sprite.getSelfBounds();\r\n            tRec.width = tRec.width + CacheStyle.CANVAS_EXTEND_EDGE * 2;\r\n            tRec.height = tRec.height + CacheStyle.CANVAS_EXTEND_EDGE * 2;\r\n            tRec.x = tRec.x - sprite.pivotX;\r\n            tRec.y = tRec.y - sprite.pivotY;\r\n            tRec.x = tRec.x - CacheStyle.CANVAS_EXTEND_EDGE;\r\n            tRec.y = tRec.y - CacheStyle.CANVAS_EXTEND_EDGE;\r\n            tRec.x = Math.floor(tRec.x + x) - x;\r\n            tRec.y = Math.floor(tRec.y + y) - y;\r\n            tRec.width = Math.floor(tRec.width);\r\n            tRec.height = Math.floor(tRec.height);\r\n            _cacheStyle.cacheRect.copyFrom(tRec);\r\n        } else {\r\n            _cacheStyle.cacheRect.setTo(-sprite._style.pivotX, -sprite._style.pivotY, 1, 1);\r\n        }\r\n        tRec = _cacheStyle.cacheRect;\r\n\r\n\r\n        //处理显示对象的scrollRect偏移\r\n        if (sprite._style.scrollRect) {\r\n            var scrollRect: Rectangle = sprite._style.scrollRect;\r\n            tRec.x -= scrollRect.x;\r\n            tRec.y -= scrollRect.y;\r\n        }\r\n        CacheStyle._scaleInfo.setTo(1, 1);\r\n\r\n        return CacheStyle._scaleInfo;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Dragging } from \"../../utils/Dragging\"\r\nimport { IHitArea } from \"../../utils/IHitArea\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 元素样式\r\n */\r\nexport class SpriteStyle {\r\n\r\n    static readonly EMPTY: Readonly<SpriteStyle> = new SpriteStyle();\r\n\r\n    /**水平缩放 */\r\n    scaleX: number;\r\n    /**垂直缩放 */\r\n    scaleY: number;\r\n    /**水平倾斜角度 */\r\n    skewX: number;\r\n    /**垂直倾斜角度 */\r\n    skewY: number;\r\n    /**X轴心点 */\r\n    pivotX: number;\r\n    /**Y轴心点 */\r\n    pivotY: number;\r\n    /**旋转角度 */\r\n    rotation: number;\r\n    /**透明度 */\r\n    alpha: number;\r\n    /**滚动区域 */\r\n    scrollRect: Rectangle;\r\n    /**视口 */\r\n    viewport: Rectangle;\r\n    /**点击区域 */\r\n    hitArea: IHitArea;\r\n    /**滑动 */\r\n    dragging: Dragging;\r\n    /**混合模式 */\r\n    blendMode: string;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 重置，方便下次复用\r\n     */\r\n    reset(): SpriteStyle {\r\n        this.scaleX = this.scaleY = 1;\r\n        this.skewX = this.skewY = 0;\r\n        this.pivotX = this.pivotY = this.rotation = 0;\r\n        this.alpha = 1;\r\n        if (this.scrollRect) this.scrollRect.recover();\r\n        this.scrollRect = null;\r\n        if (this.viewport) this.viewport.recover();\r\n        this.viewport = null;\r\n        this.hitArea = null;\r\n        this.dragging = null;\r\n        this.blendMode = null;\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this === SpriteStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建\r\n     */\r\n    static create(): SpriteStyle {\r\n        return Pool.getItemByClass(\"SpriteStyle\", SpriteStyle);\r\n    }\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 透明命令\r\n */\r\nexport class AlphaCmd {\r\n    static ID: string = \"Alpha\";\r\n\r\n    /**\r\n     * 透明度\r\n     */\r\n    alpha: number;\r\n\r\n    /**@private */\r\n    static create(alpha: number): AlphaCmd {\r\n        var cmd: AlphaCmd = Pool.getItemByClass(\"AlphaCmd\", AlphaCmd);\r\n        cmd.alpha = alpha;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"AlphaCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.alpha(this.alpha);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return AlphaCmd.ID;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制圆形\r\n */\r\nexport class DrawCircleCmd {\r\n    static ID: string = \"DrawCircle\";\r\n\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 半径。\r\n     */\r\n    radius: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number): DrawCircleCmd {\r\n        var cmd: DrawCircleCmd = Pool.getItemByClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCircleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawCircle(this.x * w + gx, this.y * h + gy, this.radius * Math.min(w, h) - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawCircle(this.x + gx, this.y + gy, this.radius - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawCircleCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x - this.radius, this.y - this.radius, this.radius + this.radius, this.radius + this.radius, this.percent ? sp : null);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n","import { Bezier } from \"../../maths/Bezier\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制曲线\r\n */\r\nexport class DrawCurvesCmd {\r\n    static ID: string = \"DrawCurves\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 线段颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）线段宽度。\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawCurvesCmd {\r\n        var cmd: DrawCurvesCmd = Pool.getItemByClass(\"DrawCurvesCmd\", DrawCurvesCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCurvesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.points)\r\n            context.drawCurves(this.x + gx, this.y + gy, this.points, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawCurvesCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Bezier.I.getBezierPoints(this.points);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCurvesCmd\", DrawCurvesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制图片\r\n */\r\nexport class DrawImageCmd {\r\n    static ID: string = \"DrawImage\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n\r\n    /** （可选）绘图颜色 */\r\n    color: number = 0xffffffff;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, color: string): DrawImageCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawImageCmd = Pool.getItemByClass(\"DrawImageCmd\", DrawImageCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        Pool.recover(\"DrawImageCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            context.drawTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawImageCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制单条曲线\r\n */\r\nexport class DrawLineCmd {\r\n    static ID: string = \"DrawLine\";\r\n\r\n    /**\r\n     * X轴开始位置。\r\n     */\r\n    fromX: number;\r\n    /**\r\n     * Y轴开始位置。\r\n     */\r\n    fromY: number;\r\n    /**\r\n     * X轴结束位置。\r\n     */\r\n    toX: number;\r\n    /**\r\n     * Y轴结束位置。\r\n     */\r\n    toY: number;\r\n    /**\r\n     * 颜色。\r\n     */\r\n    lineColor: string;\r\n    /**\r\n     * （可选）线条宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number): DrawLineCmd {\r\n        var cmd: DrawLineCmd = Pool.getItemByClass(\"DrawLineCmd\", DrawLineCmd);\r\n        cmd.fromX = fromX;\r\n        cmd.fromY = fromY;\r\n        cmd.toX = toX;\r\n        cmd.toY = toY;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"DrawLineCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawLine(gx, gy, this.fromX * w + offset, this.fromY * h + offset, this.toX * w + offset, this.toY * h + offset, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawLine(gx, gy, this.fromX + offset, this.fromY + offset, this.toX + offset, this.toY + offset, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawLineCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        _tempPoints.length = 0;\r\n        let lineWidth: number;\r\n        lineWidth = this.lineWidth * 0.5;\r\n\r\n        let fromX = this.fromX, fromY = this.fromY, toX = this.toX, toY = this.toY;\r\n        if (this.percent) {\r\n            fromX *= sp.width;\r\n            fromY *= sp.height;\r\n            toX *= sp.width;\r\n            toY *= sp.height;\r\n        }\r\n\r\n        if (fromX == toX) {\r\n            _tempPoints.push(fromX + lineWidth, fromY, toX + lineWidth, toY, fromX - lineWidth, fromY, toX - lineWidth, toY);\r\n        } else if (fromY == toY) {\r\n            _tempPoints.push(fromX, fromY + lineWidth, toX, toY + lineWidth, fromX, fromY - lineWidth, toX, toY - lineWidth);\r\n        } else {\r\n            _tempPoints.push(fromX, fromY, toX, toY);\r\n        }\r\n\r\n        return _tempPoints;\r\n    }\r\n}\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawLineCmd\", DrawLineCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制连续曲线\r\n */\r\nexport class DrawLinesCmd {\r\n    static ID: string = \"DrawLines\";\r\n\r\n    /**\r\n     * 开始绘制的X轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的Y轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 线段颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）线段宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawLinesCmd {\r\n        var cmd: DrawLinesCmd = Pool.getItemByClass(\"DrawLinesCmd\", DrawLinesCmd);\r\n        //TODO 线段需要缓存\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawLinesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        this.points && context._drawLines(this.x + offset + gx, this.y + offset + gy, this.points, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawLinesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawLinesCmd\", DrawLinesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 根据路径绘制矢量图形\r\n */\r\nexport class DrawPathCmd {\r\n    static ID: string = \"DrawPath\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\r\n     */\r\n    paths: any[] | null;\r\n    /**\r\n     * （可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\r\n     */\r\n    brush: any;\r\n    /**\r\n     * （可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\r\n     */\r\n    pen: any;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, paths: any[], brush: any, pen: any): DrawPathCmd {\r\n        var cmd: DrawPathCmd = Pool.getItemByClass(\"DrawPathCmd\", DrawPathCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.paths = paths;\r\n        cmd.brush = brush;\r\n        cmd.pen = pen;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.paths = null;\r\n        this.brush = null;\r\n        this.pen = null;\r\n        Pool.recover(\"DrawPathCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.paths && context._drawPath(this.x + gx, this.y + gy, this.paths, this.brush, this.pen);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPathCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        rst.length = 0;\r\n        let paths = this.paths;\r\n        let len = paths.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let tCMD = paths[i];\r\n            if (tCMD.length > 1) {\r\n                rst.push(tCMD[1], tCMD[2]);\r\n                if (tCMD.length > 3) {\r\n                    rst.push(tCMD[3], tCMD[4]);\r\n                }\r\n            }\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPathCmd\", DrawPathCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制扇形\r\n */\r\nexport class DrawPieCmd {\r\n    static ID: string = \"DrawPie\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 扇形半径。\r\n     */\r\n    radius: number = 0;\r\n\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    private _startAngle: number;\r\n    private _endAngle: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number): DrawPieCmd {\r\n        var cmd: DrawPieCmd = Pool.getItemByClass(\"DrawPieCmd\", DrawPieCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd._startAngle = startAngle;\r\n        cmd._endAngle = endAngle;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPieCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        context._drawPie(this.x + offset + gx, this.y + offset + gy, this.radius - lineOffset, this._startAngle, this._endAngle, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPieCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * 开始角度。\r\n     */\r\n    get startAngle(): number {\r\n        return this._startAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set startAngle(value: number) {\r\n        this._startAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * 结束角度。\r\n     */\r\n    get endAngle(): number {\r\n        return this._endAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set endAngle(value: number) {\r\n        this._endAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        _tempPoints.length = 0;\r\n        let k: number = Math.PI / 180;\r\n        let d1: number = this.endAngle - this.startAngle;\r\n        let x = this.x, y = this.y, radius = this.radius;\r\n        if (d1 >= 360 || d1 <= -360) {\r\n            // 如果满了一圈了\r\n            rst.push(x - radius, y - radius);\r\n            rst.push(x + radius, y - radius);\r\n            rst.push(x + radius, y + radius);\r\n            rst.push(x - radius, y + radius);\r\n            return rst;\r\n        }\r\n        // \r\n        rst.push(x, y);\t// 中心\r\n\r\n        var delta: number = d1 % 360;\r\n        if (delta < 0) delta += 360;\r\n\r\n        // 一定增加，且在360以内的end\r\n        var end1: number = this.startAngle + delta;\r\n\r\n        // 转成弧度\r\n        var st: number = this.startAngle * k;\r\n        var ed: number = end1 * k;\r\n\r\n        // 起点\r\n        rst.push(x + radius * Math.cos(st), y + radius * Math.sin(st));\r\n        // 终点\r\n        rst.push(x + radius * Math.cos(ed), y + radius * Math.sin(ed));\r\n\r\n        // 圆形的四个边界点\r\n        // 按照90度对齐，看看会经历几个90度\r\n        var s1: number = Math.ceil(this.startAngle / 90) * 90;\t//开始的。start的下一个90度\r\n        var s2: number = Math.floor(end1 / 90) * 90;\t\t//结束。end的上一个90度\r\n        for (var cs: number = s1; cs <= s2; cs += 90) {\r\n            var csr: number = cs * k;\r\n            rst.push(x + radius * Math.cos(csr), y + radius * Math.sin(csr));\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPieCmd\", DrawPieCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制多边形\r\n */\r\nexport class DrawPolyCmd {\r\n    static ID: string = \"DrawPoly\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 多边形的点集合。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * 可选）边框宽度。\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number): DrawPolyCmd {\r\n        var cmd: DrawPolyCmd = Pool.getItemByClass(\"DrawPolyCmd\", DrawPolyCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPolyCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let isConvexPolygon = this.points.length <= 6;\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? (this.lineWidth % 2 === 0 ? 0 : 0.5) : 0;\r\n        this.points && context._drawPoly(this.x + offset + gx, this.y + offset + gy, this.points, this.fillColor, this.lineColor, this.lineWidth, isConvexPolygon, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPolyCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawPolyCmd\", DrawPolyCmd);","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制矩形\r\n */\r\nexport class DrawRectCmd {\r\n    static ID: string = \"DrawRect\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 矩形宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 矩形高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRectCmd {\r\n        var cmd: DrawRectCmd = Pool.getItemByClass(\"DrawRectCmd\", DrawRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawRectCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context.drawRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else\r\n            context.drawRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawRectCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null)\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawRectCmd\", DrawRectCmd);\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from '../../utils/ColorUtils';\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * 绘制单个贴图\r\n */\r\nexport class DrawTextureCmd {\r\n    static ID: string = \"DrawTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * （可选）矩阵信息。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * （可选）透明度。\r\n     */\r\n    alpha: number;\r\n    /**\r\n     * （可选）颜色滤镜。\r\n     */\r\n    color: number = 0xffffffff;\r\n    /**\r\n     * （可选）混合模式。\r\n     */\r\n    blendMode: string | null;\r\n\r\n    uv: number[] | null = null;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, matrix: Matrix | null, alpha: number, color: string | null, blendMode: string | null, uv?: number[]): DrawTextureCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawTextureCmd = Pool.getItemByClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.blendMode = blendMode;\r\n        cmd.uv = uv || null;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.texture && context.drawTextureWithTransform(this.texture, this.x, this.y, this.width, this.height, this.matrix, gx, gy, this.alpha, this.blendMode, this.uv, this.color);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTextureCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n","import { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * 填充贴图\r\n */\r\nexport class FillTextureCmd {\r\n    static ID: string = \"FillTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * （可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\r\n     */\r\n    type?: string;\r\n    /**\r\n     * （可选）贴图纹理偏移\r\n     */\r\n    offset?: Point;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /** （可选）绘图颜色 */\r\n    color: number = 0xffffffff;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: string): FillTextureCmd {\r\n        var cmd: FillTextureCmd = Pool.getItemByClass(\"FillTextureCmd\", FillTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.type = type;\r\n        cmd.offset = offset;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        this.offset = null;\r\n        Pool.recover(\"FillTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.fillTexture(this.texture, this.x * w + gx, this.y * h + gy, this.width * w, this.height * h, this.type, this.offset || Point.EMPTY, this.color);\r\n            }\r\n            else\r\n                context.fillTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.type, this.offset || Point.EMPTY, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return FillTextureCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        if (this.width && this.height)\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\r\n        else\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.texture.width, this.texture.height);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"FillTextureCmd\", FillTextureCmd);\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 恢复命令，和save配套使用\r\n */\r\nexport class RestoreCmd {\r\n    static ID: string = \"Restore\";\r\n\r\n\r\n\r\n    /**@private */\r\n    static create(): RestoreCmd {\r\n        var cmd: RestoreCmd = Pool.getItemByClass(\"RestoreCmd\", RestoreCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RestoreCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.restore();\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return RestoreCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 旋转命令\r\n */\r\nexport class RotateCmd {\r\n    static ID: string = \"Rotate\";\r\n\r\n    /**\r\n     * 旋转角度，以弧度计。\r\n     */\r\n    angle: number;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(angle: number, pivotX: number, pivotY: number): RotateCmd {\r\n        var cmd: RotateCmd = Pool.getItemByClass(\"RotateCmd\", RotateCmd);\r\n        cmd.angle = angle;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RotateCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._rotate(this.angle, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return RotateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * 缩放命令\r\n */\r\nexport class ScaleCmd {\r\n    static ID: string = \"Scale\";\r\n\r\n    /**\r\n     * 水平方向缩放值。\r\n     */\r\n    scaleX: number;\r\n    /**\r\n     * 垂直方向缩放值。\r\n     */\r\n    scaleY: number;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(scaleX: number, scaleY: number, pivotX: number, pivotY: number): ScaleCmd {\r\n        var cmd: ScaleCmd = Pool.getItemByClass(\"ScaleCmd\", ScaleCmd);\r\n        cmd.scaleX = scaleX;\r\n        cmd.scaleY = scaleY;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ScaleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._scale(this.scaleX, this.scaleY, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return ScaleCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 矩阵命令\r\n */\r\nexport class TransformCmd {\r\n    static ID: string = \"Transform\";\r\n\r\n    /**\r\n     * 矩阵。\r\n     */\r\n    matrix: Matrix;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(matrix: Matrix, pivotX: number, pivotY: number): TransformCmd {\r\n        var cmd: TransformCmd = Pool.getItemByClass(\"TransformCmd\", TransformCmd);\r\n        cmd.matrix = matrix;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.matrix = null;\r\n        Pool.recover(\"TransformCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._transform(this.matrix, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return TransformCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * 位移命令\r\n */\r\nexport class TranslateCmd {\r\n    static ID: string = \"Translate\";\r\n\r\n    /**\r\n     * 添加到水平坐标（x）上的值。\r\n     */\r\n    tx: number;\r\n    /**\r\n     * 添加到垂直坐标（y）上的值。\r\n     */\r\n    ty: number;\r\n\r\n    /**@private */\r\n    static create(tx: number, ty: number): TranslateCmd {\r\n        var cmd: TranslateCmd = Pool.getItemByClass(\"TranslateCmd\", TranslateCmd);\r\n        cmd.tx = tx;\r\n        cmd.ty = ty;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"TranslateCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.translate(this.tx, this.ty);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return TranslateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制三角形命令\r\n */\r\nexport class DrawTrianglesCmd {\r\n    static ID: string = \"DrawTriangles\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 顶点数组。\r\n     */\r\n    vertices: Float32Array;\r\n    /**\r\n     * UV数据。\r\n     */\r\n    uvs: Float32Array;\r\n    /**\r\n     * 顶点索引。\r\n     */\r\n    indices: Uint16Array;\r\n    /**\r\n     * 缩放矩阵。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * alpha\r\n     */\r\n    alpha: number;\r\n    //public var color:String;\r\n    /**\r\n     * blend模式\r\n     */\r\n    blendMode: string | null;\r\n    /**\r\n     * 颜色变换\r\n     */\r\n    color: number | null;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array,\r\n        matrix: Matrix | null, alpha: number, color: string | number, blendMode: string | null): DrawTrianglesCmd {\r\n        var cmd: DrawTrianglesCmd = Pool.getItemByClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);\r\n        cmd.texture = texture;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.vertices = vertices;\r\n        cmd.uvs = uvs;\r\n        cmd.indices = indices;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        cmd.blendMode = blendMode;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture = null;\r\n        this.vertices = null;\r\n        this.uvs = null;\r\n        this.indices = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTrianglesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTriangles(this.texture, this.x + gx, this.y + gy, this.vertices, this.uvs, this.indices, this.matrix, this.alpha, this.blendMode, this.color);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTrianglesCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let vert = this.vertices;\r\n        var vnum = vert.length;\r\n        if (vnum < 2) return [];\r\n        var minx = vert[0];\r\n        var miny = vert[1];\r\n        var maxx = minx;\r\n        var maxy = miny;\r\n        for (var i = 2; i < vnum;) {\r\n            var cx = vert[i++];\r\n            var cy = vert[i++];\r\n            if (minx > cx) minx = cx;\r\n            if (miny > cy) miny = cy;\r\n            if (maxx < cx) maxx = cx;\r\n            if (maxy < cy) maxy = cy;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制带九宫格信息的图片\r\n * @internal\r\n */\r\nexport class Draw9GridTextureCmd {\r\n    static ID: string = \"Draw9GridTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n\r\n    sizeGrid: number[];\r\n\r\n    color: number = 0xffffffff;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, sizeGrid: number[], percent: boolean = false, color: string | null = null): Draw9GridTextureCmd {\r\n        let cmd: Draw9GridTextureCmd = Pool.getItemByClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.sizeGrid = sizeGrid;\r\n        cmd.percent = percent;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        Pool.recover(\"Draw9GridTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            let sizeGrid = this.sizeGrid || this.texture._sizeGrid || EMPTY_SIZE_GRID;\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.drawTextureWithSizeGrid(this.texture, this.x * w, this.y * h, this.width * w, this.height * h, sizeGrid, gx, gy, this.color);\r\n            }\r\n            else\r\n                context.drawTextureWithSizeGrid(this.texture, this.x, this.y, this.width, this.height, sizeGrid, gx, gy, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return Draw9GridTextureCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let minx = this.x;\r\n        let miny = this.y;\r\n        let maxx = this.width;\r\n        let maxy = this.height;\r\n        if (this.percent) {\r\n            minx *= sp.width;\r\n            miny *= sp.height;\r\n            maxx *= sp.width;\r\n            maxy *= sp.height;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nconst EMPTY_SIZE_GRID = [0, 0, 0, 0, 0];\r\nClassUtils.regClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 存储命令，和restore配套使用\r\n */\r\nexport class SaveCmd {\r\n    static ID: string = \"Save\";\r\n\r\n\r\n\r\n    /**@private */\r\n    static create(): SaveCmd {\r\n        var cmd: SaveCmd = Pool.getItemByClass(\"SaveCmd\", SaveCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"SaveCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.save();\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return SaveCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\nexport class DrawEllipseCmd {\r\n    static ID: string = \"DrawEllipse\";\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 横向半径。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 纵向半径。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\r\n        var cmd = Pool.getItemByClass(\"DrawEllipseCmd\", DrawEllipseCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawEllipseCmd\", this);\r\n    }\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawEllipse(this.x * w + gx, this.y * h + gy, this.width * w - offset, this.height * h - offset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else {\r\n            context._drawEllipse(this.x + gx, this.y + gy, this.width - offset, this.height - offset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n    }\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawEllipseCmd.ID;\r\n    }\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x - this.width, this.y - this.height, this.width * 2, this.height * 2, this.percent ? sp : null);\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawEllipseCmd\", DrawEllipseCmd);","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\nexport class DrawRoundRectCmd {\r\n    static ID: string = \"DrawRoundRect\";\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 横向半径。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 纵向半径。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 左上圆角\r\n     */\r\n    lt: number;\r\n    /**\r\n     * 右上圆角\r\n     */\r\n    rt: number;\r\n    /**\r\n     * 左下圆角\r\n     */\r\n    lb: number;\r\n    /**\r\n     * 右下圆角\r\n     */\r\n    rb: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRoundRectCmd {\r\n        var cmd = Pool.getItemByClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.lt = lt;\r\n        cmd.rt = rt;\r\n        cmd.lb = lb;\r\n        cmd.rb = rb;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawRoundRectCmd\", this);\r\n    }\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawRoundRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else {\r\n            context._drawRoundRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.lt, this.rt, this.lb, this.rb, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n    }\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawRoundRectCmd.ID;\r\n    }\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawRoundRectCmd\", DrawRoundRectCmd);","import { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { GrahamScan } from \"../maths/GrahamScan\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { Graphics } from \"./Graphics\";\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\";\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\";\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\nimport { DrawEllipseCmd } from \"./cmd/DrawEllipseCmd\"\r\nimport { DrawRoundRectCmd } from \"./cmd/DrawRoundRectCmd\"\r\n\r\nconst _tempMatrix: Matrix = new Matrix();\r\nconst _initMatrix: Matrix = new Matrix();\r\nconst _tempMatrixArrays: any[] = [];\r\n\r\n/**\r\n * @private\r\n * Graphic bounds数据类\r\n */\r\nexport class GraphicsBounds {\r\n    /**@private */\r\n    private _temp: number[];\r\n    /**@private */\r\n    private _bounds: Rectangle;\r\n    /**@private */\r\n    private _rstBoundPoints: number[];\r\n    /**@private */\r\n    private _cacheBoundsType: boolean = false;\r\n    /**@internal */\r\n    _graphics: Graphics;\r\n    /**@internal */\r\n    _affectBySize: boolean;\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy(): void {\r\n        this._graphics = null;\r\n        this._cacheBoundsType = false;\r\n        if (this._temp) this._temp.length = 0;\r\n        if (this._rstBoundPoints) this._rstBoundPoints.length = 0;\r\n        if (this._bounds) this._bounds.recover();\r\n        this._bounds = null;\r\n        Pool.recover(\"GraphicsBounds\", this);\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): GraphicsBounds {\r\n        return Pool.getItemByClass(\"GraphicsBounds\", GraphicsBounds);\r\n    }\r\n\r\n    /**\r\n     * 重置数据\r\n     */\r\n    reset(): void {\r\n        this._temp && (this._temp.length = 0);\r\n    }\r\n\r\n    /**\r\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._bounds || !this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType) {\r\n            this._bounds = Rectangle._getWrapRec(this.getBoundPoints(realSize), this._bounds)\r\n        }\r\n        this._cacheBoundsType = realSize;\r\n        return this._bounds;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * 获取端点列表。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        if (!this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType)\r\n            this._temp = this._getCmdPoints(realSize);\r\n        this._cacheBoundsType = realSize;\r\n        return this._rstBoundPoints = Utils.copyArray(this._rstBoundPoints, this._temp);\r\n    }\r\n\r\n    private _getCmdPoints(realSize: boolean = false): any[] {\r\n        let cmds = this._graphics.cmds;\r\n        let sp = this._graphics._sp;\r\n        this._affectBySize = false;\r\n\r\n        let rst = this._temp || (this._temp = []);\r\n        rst.length = 0;\r\n        if (cmds.length == 0) return rst;\r\n\r\n        let matrixs: any[] = _tempMatrixArrays;\r\n        matrixs.length = 0;\r\n        let tMatrix: Matrix = _initMatrix;\r\n        tMatrix.identity();\r\n        let tempMatrix: Matrix = _tempMatrix;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            let cmd = cmds[i];\r\n            if (cmd.percent)\r\n                this._affectBySize = true;\r\n            switch (cmd.cmdID) {\r\n                case AlphaCmd.ID:\r\n                case SaveCmd.ID:\r\n                    matrixs.push(tMatrix);\r\n                    tMatrix = tMatrix.clone();\r\n                    break;\r\n                case RestoreCmd.ID: //restore\r\n                    tMatrix = matrixs.pop();\r\n                    break;\r\n                case ScaleCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.scale(cmd.scaleX, cmd.scaleY);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case RotateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.rotate(cmd.angle);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TranslateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(cmd.tx, cmd.ty);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TransformCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.concat(cmd.matrix);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case DrawImageCmd.ID:\r\n                case FillTextureCmd.ID:\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\r\n                    break;\r\n                case DrawTextureCmd.ID:\r\n                    tMatrix.copyTo(tempMatrix);\r\n                    if (cmd.matrix)\r\n                        tempMatrix.concat(cmd.matrix);\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tempMatrix);\r\n                    break;\r\n                case DrawRectCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawRectCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCircleCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCircleCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawEllipseCmd.ID:\r\n                    addPointArrToRst(rst,(<DrawEllipseCmd>cmd).getBoundPoints(sp),tMatrix);\r\n                    break;\r\n                case DrawRoundRectCmd.ID:\r\n                    addPointArrToRst(rst,(<DrawRoundRectCmd>cmd).getBoundPoints(sp),tMatrix);\r\n                    break;\r\n                case DrawLineCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawLineCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCurvesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCurvesCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawLinesCmd.ID:\r\n                case DrawPolyCmd.ID:\r\n                    addPointArrToRst(rst, cmd.points, tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPathCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPathCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPieCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPieCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawTrianglesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawTrianglesCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case Draw9GridTextureCmd.ID:\r\n                    addPointArrToRst(rst, (<Draw9GridTextureCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n            }\r\n        }\r\n        if (rst.length > 200) {\r\n            rst = Utils.copyArray(rst, Rectangle._getWrapRec(rst)._getBoundPoints());\r\n        } else if (rst.length > 8)\r\n            rst = GrahamScan.scanPList(rst);\r\n        return rst;\r\n    }\r\n\r\n    private _switchMatrix(tMatix: Matrix, tempMatrix: Matrix): void {\r\n        tempMatrix.concat(tMatix);\r\n        tempMatrix.copyTo(tMatix);\r\n    }\r\n}\r\n\r\nfunction addPointArrToRst(rst: any[], points: any[], matrix: Matrix, dx: number = 0, dy: number = 0): void {\r\n    let len = points.length;\r\n    for (let i = 0; i < len; i += 2) {\r\n        addPointToRst(rst, points[i] + dx, points[i + 1] + dy, matrix);\r\n    }\r\n}\r\n\r\nfunction addPointToRst(rst: any[], x: number, y: number, matrix: Matrix): void {\r\n    var _tempPoint: Point = Point.TEMP;\r\n    _tempPoint.setTo(x ? x : 0, y ? y : 0);\r\n    matrix.transformPoint(_tempPoint);\r\n    rst.push(_tempPoint.x, _tempPoint.y);\r\n}","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 裁剪命令\r\n */\r\nexport class ClipRectCmd {\r\n    static ID: string = \"ClipRect\";\r\n\r\n\r\n    /**\r\n     * X 轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y 轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 高度。\r\n     */\r\n    height: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        var cmd: ClipRectCmd = Pool.getItemByClass(\"ClipRectCmd\", ClipRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ClipRectCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.clipRect(this.x + gx, this.y + gy, this.width, this.height);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return ClipRectCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 根据坐标集合绘制多个贴图\r\n */\r\nexport class DrawTexturesCmd {\r\n    static ID: string = \"DrawTextures\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * 绘制次数和坐标。\r\n     */\r\n    pos: ArrayLike<number>;\r\n\r\n    /** 附加顶点色 */\r\n    colors: number[];\r\n\r\n    /**@private */\r\n    static create(texture: Texture, pos: any[], colors: number[]): DrawTexturesCmd {\r\n        var cmd: DrawTexturesCmd = Pool.getItemByClass(\"DrawTexturesCmd\", DrawTexturesCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.pos = pos;\r\n        cmd.colors = colors || [];\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        this.texture = null;\r\n        this.pos = null;\r\n        Pool.recover(\"DrawTexturesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTextures(this.texture, this.pos, gx, gy, this.colors);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTexturesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\";\r\nimport { FontInfo } from \"../../utils/FontInfo\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { WordText } from \"../../utils/WordText\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Const } from \"../../Const\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Config } from \"../../../Config\";\r\n\r\n/**\r\n * 绘制文字\r\n */\r\nexport class FillTextCmd {\r\n    static ID: string = \"FillText\";\r\n\r\n    /**\r\n     * 开始绘制文本的 x 坐标位置（相对于画布）。\r\n     */\r\n    x: number = 0;\r\n    /**\r\n     * 开始绘制文本的 y 坐标位置（相对于画布）。\r\n     */\r\n    y: number = 0;\r\n\r\n    private _text: string;\r\n    private _wordText: WordText;\r\n    private _font: string;\r\n    private _color: string;\r\n    private _strokeColor: string = '#000000';\r\n    private _stroke: number;\r\n    private _align: number;\r\n    private _fontObj: FontInfo;\r\n\r\n    \r\n    set text(value: string) {\r\n        this._text = value;\r\n    }\r\n    get text() {\r\n        return this._text;\r\n    }\r\n    set strokeColor(value: string) {\r\n        this._strokeColor = value;\r\n    }\r\n    get strokeColor() {\r\n        return this._strokeColor;\r\n    }\r\n    set stroke(value: number) {\r\n        this._stroke = value;\r\n    }\r\n    get stroke() {\r\n        return this._stroke;\r\n    }\r\n    set align(value: number) {\r\n        this._align = value;\r\n    }\r\n    get align() {\r\n        return this._align;\r\n    }\r\n\r\n\r\n    static create(text: string | WordText | null, x: number, y: number, font: string, color: string | null, align: string, stroke: number, strokeColor: string | null): FillTextCmd {\r\n        var cmd: FillTextCmd = Pool.getItemByClass(\"FillTextCmd\", FillTextCmd);\r\n        cmd._text = null;\r\n        cmd._wordText = null;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.font = font;\r\n        cmd.color = color;\r\n        cmd._stroke = stroke;\r\n        cmd._strokeColor = strokeColor;\r\n\r\n        switch (align) {\r\n            case 'center':\r\n                cmd._align = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                cmd._align = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n            default:\r\n                cmd._align = Const.ENUM_TEXTALIGN_DEFAULT;\r\n        }\r\n\r\n        if (text instanceof WordText) {\r\n            cmd._wordText = text;\r\n            text.cleanCache();\r\n        }\r\n        else\r\n            cmd._text = text;\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"FillTextCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (ILaya.stage.isGlobalRepaint()) {\r\n            this._wordText && this._wordText.cleanCache();\r\n        }\r\n        if (null == this._text) this._text = '';\r\n        if (null == this._fontObj) {\r\n            this.font = null;\r\n        }\r\n        if (null == this._color) {\r\n            this._color = '#ffffff';\r\n        }\r\n\r\n        context._fast_filltext(this._wordText || this._text, this.x + gx, this.y + gy, this._fontObj, this._color, this._strokeColor, this._stroke, this._align);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return FillTextCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * 定义字号和字体，比如\"20px Arial\"。\r\n     */\r\n    get font(): string {\r\n        return this._font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._font = value;\r\n        if (!value)\r\n            value = Config.defaultFontSize + \"px \" + Config.defaultFont;\r\n        this._fontObj = FontInfo.parse(value);\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n\r\n    /**\r\n     * 定义文本颜色，比如\"#ff0000\"。\r\n     */\r\n    get color(): string {\r\n        return this._color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._color = value;\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"FillTextCmd\", FillTextCmd);","import { ILaya } from \"./../../ILaya\";\r\n/**\r\n * @private\r\n * 对象缓存统一管理类\r\n */\r\nexport class CacheManger {\r\n    //TODO:\r\n    /**\r\n     * 单次清理检测允许执行的时间，单位ms。\r\n     */\r\n    static loopTimeLimit: number = 2;\r\n    /**\r\n     * @private\r\n     */\r\n    private static _cacheList: any[] = [];\r\n    /**\r\n     * @private\r\n     * 当前检测的索引\r\n     */\r\n    private static _index: number = 0;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注册cache管理函数\r\n     * @param disposeFunction 释放函数 fun(force:Boolean)\r\n     * @param getCacheListFunction 获取cache列表函数fun():Array\r\n     *\r\n     */\r\n    static regCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        CacheManger.unRegCacheByFunction(disposeFunction, getCacheListFunction);\r\n        var cache: any;\r\n        cache = { tryDispose: disposeFunction, getCacheList: getCacheListFunction };\r\n        CacheManger._cacheList.push(cache);\r\n    }\r\n\r\n    /**\r\n     * 移除cache管理函数\r\n     * @param disposeFunction 释放函数 fun(force:Boolean)\r\n     * @param getCacheListFunction 获取cache列表函数fun():Array\r\n     *\r\n     */\r\n    static unRegCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        var i: number, len: number;\r\n        len = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            if (CacheManger._cacheList[i].tryDispose == disposeFunction && CacheManger._cacheList[i].getCacheList == getCacheListFunction) {\r\n                CacheManger._cacheList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 强制清理所有管理器\r\n     *\r\n     */\r\n    //TODO:coverage\r\n    static forceDispose(): void {\r\n        var i: number, len: number = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            CacheManger._cacheList[i].tryDispose(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始检测循环\r\n     * @param waitTime 检测间隔时间\r\n     *\r\n     */\r\n    static beginCheck(waitTime: number = 15000): void {\r\n        ILaya.systemTimer.loop(waitTime, null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * 停止检测循环\r\n     *\r\n     */\r\n    //TODO:coverage\r\n    static stopCheck(): void {\r\n        ILaya.systemTimer.clear(null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 检测函数\r\n     */\r\n    private static _checkLoop(): void {\r\n        var cacheList: any[] = CacheManger._cacheList;\r\n        if (cacheList.length < 1) return;\r\n        var tTime: number = ILaya.Browser.now();\r\n        var count: number;\r\n        var len: number;\r\n        len = count = cacheList.length;\r\n        while (count > 0) {\r\n            CacheManger._index++;\r\n            CacheManger._index = CacheManger._index % len;\r\n            cacheList[CacheManger._index].tryDispose(false);\r\n            if (ILaya.Browser.now() - tTime > CacheManger.loopTimeLimit) break;\r\n            count--;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { CacheManger } from \"./CacheManger\"\r\n\r\n/**\r\n * @private\r\n * TODO:\r\n */\r\nexport class VectorGraphManager {\r\n    //TODO:\r\n    static instance: VectorGraphManager;\r\n\r\n    useDic: any = {};\r\n    shapeDic: any = {};\r\n    shapeLineDic: any = {};\r\n\r\n    private _id: number = 0;\r\n    private _checkKey: boolean = false;\r\n    private _freeIdArray: any[] = [];\r\n\r\n    constructor() {\r\n        CacheManger.regCacheByFunction(this.startDispose.bind(this), this.getCacheList.bind(this));\r\n    }\r\n\r\n    static getInstance(): VectorGraphManager {\r\n        return VectorGraphManager.instance = VectorGraphManager.instance || new VectorGraphManager();\r\n    }\r\n\r\n    /**\r\n     * 得到个空闲的ID\r\n     * @return\r\n     */\r\n    getId(): number {\r\n        //if (_freeIdArray.length > 0) {\r\n        //return _freeIdArray.pop();\r\n        //}\r\n        return this._id++;\r\n    }\r\n\r\n    /**\r\n     * 添加一个图形到列表中\r\n     * @param\tid\r\n     * @param\tshape\r\n     */\r\n    addShape(id: number, shape: any): void {\r\n        this.shapeDic[id] = shape;\r\n        if (!this.useDic[id]) {\r\n            this.useDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加一个线图形到列表中\r\n     * @param\tid\r\n     * @param\tLine\r\n     */\r\n    addLine(id: number, Line: any): void {\r\n        this.shapeLineDic[id] = Line;\r\n        if (!this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检测一个对象是否在使用中\r\n     * @param\tid\r\n     */\r\n    getShape(id: number): void {\r\n        if (this._checkKey) {\r\n            if (this.useDic[id] != null) {\r\n                this.useDic[id] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除一个图形对象\r\n     * @param\tid\r\n     */\r\n    deleteShape(id: number): void {\r\n        if (this.shapeDic[id]) {\r\n            this.shapeDic[id] = null;\r\n            delete this.shapeDic[id];\r\n        }\r\n        if (this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = null;\r\n            delete this.shapeLineDic[id];\r\n        }\r\n        if (this.useDic[id] != null) {\r\n            delete this.useDic[id];\r\n        }\r\n        //_freeIdArray.push(id);\r\n    }\r\n\r\n    /**\r\n     * 得到缓存列表\r\n     * @return\r\n     */\r\n    getCacheList(): any[] {\r\n        var str: any;\r\n        var list: any[] = [];\r\n        for (str in this.shapeDic) {\r\n            list.push(this.shapeDic[str]);\r\n        }\r\n        for (str in this.shapeLineDic) {\r\n            list.push(this.shapeLineDic[str]);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * 开始清理状态，准备销毁\r\n     */\r\n    startDispose(key: boolean): void {\r\n        var str: any;\r\n        for (str in this.useDic) {\r\n            this.useDic[str] = false;\r\n        }\r\n        this._checkKey = true;\r\n    }\r\n\r\n    /**\r\n     * 确认销毁\r\n     */\r\n    endDispose(): void {\r\n        if (this._checkKey) {\r\n            var str: any;\r\n            for (str in this.useDic) {\r\n                if (!this.useDic[str]) {\r\n                    this.deleteShape(str);\r\n                }\r\n            }\r\n            this._checkKey = false;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Sprite } from \"./Sprite\";\r\nimport { GraphicsBounds } from \"./GraphicsBounds\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { ClipRectCmd } from \"./cmd/ClipRectCmd\"\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { DrawTexturesCmd } from \"./cmd/DrawTexturesCmd\"\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\"\r\nimport { FillTextCmd } from \"./cmd/FillTextCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\nimport type { Material } from \"../resource/Material\";\r\nimport { CommandUniformMap } from \"../RenderEngine/CommandUniformMap\";\r\nimport { ShaderDataType } from \"../RenderEngine/RenderShader/ShaderData\";\r\nimport { DrawEllipseCmd } from \"./cmd/DrawEllipseCmd\";\r\nimport { DrawRoundRectCmd } from \"./cmd/DrawRoundRectCmd\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>Graphics</code> 类用于创建绘图显示对象。Graphics可以同时绘制多个位图或者矢量图，还可以结合save，restore，transform，scale，rotate，translate，alpha等指令对绘图效果进行变化。\r\n * Graphics以命令流方式存储，可以通过cmds属性访问所有命令流。Graphics是比Sprite更轻量级的对象，合理使用能提高应用性能(比如把大量的节点绘图改为一个节点的Graphics命令集合，能减少大量节点创建消耗)。\r\n * @see laya.display.Sprite#graphics\r\n */\r\nexport class Graphics {\r\n\r\n    /**\r\n     * add global Uniform Data Map\r\n     * @param propertyID \r\n     * @param propertyKey \r\n     * @param uniformtype \r\n     */\r\n    static add2DGlobalUniformData(propertyID: number, propertyKey: string, uniformtype: ShaderDataType) {\r\n        let sceneUniformMap: CommandUniformMap = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2DGlobal\");\r\n        sceneUniformMap.addShaderUniform(propertyID, propertyKey, uniformtype);\r\n    }\r\n\r\n    /**@internal */\r\n    _sp: Sprite | null = null;\r\n    /**@internal */\r\n    _render: (sprite: Sprite, context: Context, x: number, y: number) => void = this._renderEmpty;\r\n    /**@private */\r\n    private _cmds: any[] = [];\r\n    /**@private */\r\n    protected _vectorgraphArray: any[] | null = null;\r\n    /**@private */\r\n    private _graphicBounds: GraphicsBounds | null = null;\r\n\r\n    private _material: Material;\r\n\r\n    constructor() {\r\n        this._createData();\r\n    }\r\n\r\n    /**@internal */\r\n    _createData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _clearData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _destroyData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。</p>\r\n     */\r\n    destroy(): void {\r\n        this.clear(true);\r\n        if (this._graphicBounds) this._graphicBounds.destroy();\r\n        this._graphicBounds = null;\r\n        this._vectorgraphArray = null;\r\n        if (this._sp) {\r\n            this._sp._renderType = 0;\r\n            this._sp = null;\r\n        }\r\n        this._destroyData();\r\n    }\r\n\r\n    /**\r\n     * <p>清空绘制命令。</p>\r\n     * @param recoverCmds 是否回收绘图指令数组，设置为true，则对指令数组进行回收以节省内存开销，建议设置为true进行回收，但如果手动引用了数组，不建议回收\r\n     */\r\n    clear(recoverCmds: boolean = true): void {\r\n        //TODO:内存回收all\r\n        if (recoverCmds) {\r\n            for (let i = 0, len = this._cmds.length; i < len; i++) {\r\n                this._cmds[i].recover();\r\n            }\r\n        }\r\n\r\n        this._cmds.length = 0;\r\n        this._render = this._renderEmpty;\r\n        this._clearData();\r\n        if (this._sp) {\r\n            this._sp._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this._repaint();\r\n        if (this._vectorgraphArray) {\r\n            for (let i = 0, len = this._vectorgraphArray.length; i < len; i++) {\r\n                VectorGraphManager.getInstance().deleteShape(this._vectorgraphArray[i]);\r\n            }\r\n            this._vectorgraphArray.length = 0;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    _clearBoundsCache(onSizeChanged?: boolean): void {\r\n        if (this._graphicBounds) {\r\n            if (!onSizeChanged || this._graphicBounds._affectBySize)\r\n                this._graphicBounds.reset();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _initGraphicBounds(): void {\r\n        if (!this._graphicBounds) {\r\n            this._graphicBounds = GraphicsBounds.create();\r\n            this._graphicBounds._graphics = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 重绘此对象。\r\n     */\r\n    _repaint(): void {\r\n        this._clearBoundsCache();\r\n        this._sp && this._sp.repaint();\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _isOnlyOne(): boolean {\r\n        return this._cmds.length === 1;\r\n    }\r\n\r\n    /**\r\n     * 命令流。存储了所有绘制命令。\r\n     */\r\n    get cmds() {\r\n        return this._cmds;\r\n    }\r\n\r\n    set cmds(value) {\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n\r\n        this._cmds = value;\r\n\r\n        let len = value.length;\r\n        this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n        this._repaint();\r\n    }\r\n\r\n    /**\r\n     * 保存到命令流。\r\n     */\r\n    addCmd(cmd: any): any {\r\n        if (cmd == null) {\r\n            console.warn(\"null cmd\");\r\n            return;\r\n        }\r\n\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n        this._cmds.push(cmd);\r\n        this._render = this._cmds.length === 1 ? this._renderOne : this._renderAll;\r\n        this._repaint();\r\n        return cmd;\r\n    }\r\n\r\n    removeCmd(cmd: any) {\r\n        let i = this.cmds.indexOf(cmd);\r\n        if (i != -1) {\r\n            this._cmds.splice(i, 1);\r\n\r\n            let len = this._cmds.length;\r\n            this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n            this._repaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * 获取端点列表。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBoundPoints(realSize);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get material() {\r\n        return this._material;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set material(value: Material) {\r\n        if (this._material == value)\r\n            return;\r\n        this._material && this._material._removeReference();\r\n        this._material = value;\r\n        if (value != null)\r\n            value._addReference();\r\n    }\r\n\r\n    /**\r\n     * 绘制单独图片\r\n     * @param texture\t\t纹理。\r\n     * @param x \t\t（可选）X轴偏移量。\r\n     * @param y \t\t（可选）Y轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param color\t \t （可选）颜色\r\n     */\r\n    drawImage(texture: Texture, x: number = 0, y: number = 0, width: number = null, height: number = null, color: string = null): DrawImageCmd | null {\r\n        if (!texture) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawImageCmd.create(texture, x, y, width, height, color));\r\n    }\r\n\r\n    /**\r\n     * 绘制纹理，相比drawImage功能更强大，性能会差一些\r\n     * @param texture\t\t纹理。\r\n     * @param x \t\t（可选）X轴偏移量。\r\n     * @param y \t\t（可选）Y轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param matrix\t（可选）矩阵信息。\r\n     * @param alpha\t\t（可选）透明度。\r\n     * @param color\t\t（可选）颜色滤镜。\r\n     * @param blendMode （可选）混合模式。\r\n     */\r\n    drawTexture(texture: Texture | null, x: number = 0, y: number = 0, width: number = null, height: number = null, matrix: Matrix | null = null, alpha: number = 1, color: string | null = null, blendMode: string | null = null, uv?: number[]): DrawTextureCmd | null {\r\n        if (!texture || alpha < 0.01) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawTextureCmd.create(texture, x, y, width, height, matrix, alpha, color, blendMode, uv));\r\n    }\r\n\r\n    /**\r\n     * 批量绘制同样纹理。\r\n     * @param texture 纹理。\r\n     * @param pos 绘制次数和坐标。\r\n     * @param colors 图片颜色数组。\r\n     */\r\n    drawTextures(texture: Texture, pos: any[], colors?: number[]): DrawTexturesCmd | null {\r\n        if (!texture) return null;\r\n        return this.addCmd(DrawTexturesCmd.create(texture, pos, colors));\r\n    }\r\n\r\n    /**\r\n     * 绘制一组三角形\r\n     * @param texture\t纹理。\r\n     * @param x\t\t\tX轴偏移量。\r\n     * @param y\t\t\tY轴偏移量。\r\n     * @param vertices  顶点数组。\r\n     * @param indices\t顶点索引。\r\n     * @param uvData\tUV数据。\r\n     * @param matrix\t缩放矩阵。\r\n     * @param alpha\t\talpha\r\n     * @param color\t\t颜色变换\r\n     * @param blendMode\tblend模式\r\n     */\r\n    drawTriangles(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array, matrix: Matrix | null = null,\r\n        alpha: number = 1, color: string | number = null, blendMode: string | null = null): DrawTrianglesCmd {\r\n        return this.addCmd(DrawTrianglesCmd.create(texture, x, y, vertices, uvs, indices, matrix, alpha, color, blendMode));\r\n    }\r\n\r\n    /**\r\n     * 用 texture 填充。\r\n     * @param texture\t\t纹理。\r\n     * @param x\t\t\tX轴偏移量。\r\n     * @param y\t\t\tY轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param type\t\t（可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\r\n     * @param offset\t（可选）贴图纹理偏移\r\n     * @param color\t \t （可选）颜色\r\n     *\r\n     */\r\n    fillTexture(texture: Texture, x: number, y: number, width: number = 0, height: number = 0, type: string = \"repeat\", offset: Point | null = null, color: string = null): FillTextureCmd | null {\r\n        if (texture && texture.bitmap)\r\n            return this.addCmd(FillTextureCmd.create(texture, x, y, width, height, type, offset || Point.EMPTY, color));\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * 设置剪裁区域，超出剪裁区域的坐标不显示。\r\n     * @param x X 轴偏移量。\r\n     * @param y Y 轴偏移量。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     */\r\n    clipRect(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        return this.addCmd(ClipRectCmd.create(x, y, width, height));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制文本。\r\n     * @param text 在画布上输出的文本。\r\n     * @param x 开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y 开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font 定义字号和字体，比如\"20px Arial\"。\r\n     * @param color 定义文本颜色，比如\"#ff0000\"。\r\n     * @param textAlign 文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     */\r\n    fillText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, color, textAlign, 0, \"\"));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制“被填充且镶边的”文本。\r\n     * @param text\t\t\t在画布上输出的文本。\r\n     * @param x\t\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y\t\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font\t\t\t定义字体和字号，比如\"20px Arial\"。\r\n     * @param fillColor\t\t定义文本颜色，比如\"#ff0000\"。\r\n     * @param textAlign\t\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     * @param lineWidth\t\t镶边线条宽度。\r\n     * @param borderColor\t定义镶边文本颜色。\r\n     */\r\n    fillBorderText(text: string | WordText, x: number, y: number, font: string, fillColor: string, textAlign: string, lineWidth: number, borderColor: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, fillColor, textAlign, lineWidth, borderColor));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制文本（没有填色）。文本的默认颜色是黑色。\r\n     * @param text\t\t在画布上输出的文本。\r\n     * @param x\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font\t\t定义字体和字号，比如\"20px Arial\"。\r\n     * @param color\t\t定义文本颜色，比如\"#ff0000\"。\r\n     * @param lineWidth\t线条宽度。\r\n     * @param textAlign\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     */\r\n    strokeText(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, null, textAlign, lineWidth, color));\r\n    }\r\n\r\n    /**\r\n     * 设置透明度。\r\n     * @param value 透明度。\r\n     */\r\n    alpha(alpha: number): AlphaCmd {\r\n        return this.addCmd(AlphaCmd.create(alpha));\r\n    }\r\n\r\n    /**\r\n     * 替换绘图的当前转换矩阵。\r\n     * @param mat 矩阵。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    transform(matrix: Matrix, pivotX: number = 0, pivotY: number = 0): TransformCmd {\r\n        return this.addCmd(TransformCmd.create(matrix, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 旋转当前绘图。(推荐使用transform，性能更高)\r\n     * @param angle\t\t旋转角度，以弧度计。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    rotate(angle: number, pivotX: number = 0, pivotY: number = 0): RotateCmd {\r\n        return this.addCmd(RotateCmd.create(angle, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 缩放当前绘图至更大或更小。(推荐使用transform，性能更高)\r\n     * @param scaleX\t水平方向缩放值。\r\n     * @param scaleY\t垂直方向缩放值。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    scale(scaleX: number, scaleY: number, pivotX: number = 0, pivotY: number = 0): ScaleCmd {\r\n        return this.addCmd(ScaleCmd.create(scaleX, scaleY, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 重新映射画布上的 (0,0) 位置。\r\n     * @param x 添加到水平坐标（x）上的值。\r\n     * @param y 添加到垂直坐标（y）上的值。\r\n     */\r\n    translate(tx: number, ty: number): TranslateCmd {\r\n        return this.addCmd(TranslateCmd.create(tx, ty));\r\n    }\r\n\r\n    /**\r\n     * 保存当前环境的状态。\r\n     */\r\n    save(): SaveCmd {\r\n        return this.addCmd(SaveCmd.create());\r\n    }\r\n\r\n    /**\r\n     * 返回之前保存过的路径状态和属性。\r\n     */\r\n    restore(): RestoreCmd {\r\n        return this.addCmd(RestoreCmd.create());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 替换文本颜色。\r\n     * @param color 颜色。\r\n     */\r\n    replaceTextColor(color: string): void {\r\n        this._repaint();\r\n        let cmds = this._cmds;\r\n        for (let i = cmds.length - 1; i > -1; i--) {\r\n            let cmd = cmds[i];\r\n            var cmdID: string = cmd.cmdID;\r\n            switch (cmdID) {\r\n                case FillTextCmd.ID:\r\n                    (cmd as FillTextCmd).color = color;\r\n                    break;\r\n                case DrawImageCmd.ID: //bitmap font\r\n                    (cmd as DrawImageCmd).color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载并显示一个图片。\r\n     * @param url\t\t图片地址。\r\n     * @param x\t\t\t（可选）显示图片的x位置。\r\n     * @param y\t\t\t（可选）显示图片的y位置。\r\n     * @param width\t\t（可选）显示图片的宽度，设置为0表示使用图片默认宽度。\r\n     * @param height\t（可选）显示图片的高度，设置为0表示使用图片默认高度。\r\n     * @param complete\t（可选）加载完成回调。\r\n     */\r\n    loadImage(url: string, x: number = 0, y: number = 0, width: number = null, height: number = null, complete: Function | null = null): void {\r\n        let tex: Texture = ILaya.loader.getRes(url);\r\n        if (tex) {\r\n            this.drawImage(tex, x, y, width, height);\r\n            complete && complete.call(this._sp);\r\n        }\r\n        else {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.drawImage(tex, x, y, width, height);\r\n                complete && complete.call(this._sp);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderEmpty(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderAll(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        context.material = this._material;\r\n        var cmds = this._cmds!;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            cmds[i].run(context, x, y);\r\n        }\r\n        context.material = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderOne(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        context.material = this._material;\r\n        this._cmds[0].run(context, x, y);\r\n        context.material = null;\r\n    }\r\n\r\n    /**\r\n     * 绘制一条线。\r\n     * @param fromX\t\tX轴开始位置。\r\n     * @param fromY\t\tY轴开始位置。\r\n     * @param toX\t\tX轴结束位置。\r\n     * @param toY\t\tY轴结束位置。\r\n     * @param lineColor\t颜色。\r\n     * @param lineWidth\t（可选）线条宽度。\r\n     */\r\n    drawLine(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number = 1): DrawLineCmd {\r\n        return this.addCmd(DrawLineCmd.create(fromX, fromY, toX, toY, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制一系列线段。\r\n     * @param x\t\t\t开始绘制的X轴位置。\r\n     * @param y\t\t\t开始绘制的Y轴位置。\r\n     * @param points\t线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\r\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）线段宽度。\r\n     */\r\n    drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawLinesCmd | null {\r\n        if (!points || points.length < 4) return null;\r\n        return this.addCmd(DrawLinesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制一系列曲线。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param points\t线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\r\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）线段宽度。\r\n     */\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawCurvesCmd {\r\n        return this.addCmd(DrawCurvesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制矩形。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param width\t\t矩形宽度。\r\n     * @param height\t矩形高度。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     * @param percent 位置和大小是否是百分比值。\r\n     */\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean): DrawRectCmd {\r\n        return this.addCmd(DrawRectCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制圆角矩形\r\n     * @param x             开始绘制的 X 轴位置。\r\n     * @param y             开始绘制的 Y 轴位置。\r\n     * @param width         圆角矩形宽度。\r\n     * @param height        圆角矩形高度。\r\n     * @param lt            左上圆角\r\n     * @param rt            右上圆角\r\n     * @param lb            左下圆角\r\n     * @param rb            右下圆角\r\n     * @param fillColor     填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor     （可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth     （可选）边框宽度。\r\n     * @param percent       （可选）位置和大小是否是百分比值。\r\n     * @returns \r\n     */\r\n    drawRoundRect(x: number, y: number, width: number, height: number, lt: number, rt: number, lb: number, rb: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean) {\r\n        return this.addCmd(DrawRoundRectCmd.create(x, y, width, height, lt, rt, lb, rb, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制圆形。\r\n     * @param x\t\t\t圆点X 轴位置。\r\n     * @param y\t\t\t圆点Y 轴位置。\r\n     * @param radius\t半径。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     */\r\n    drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawCircleCmd {\r\n        return this.addCmd(DrawCircleCmd.create(x, y, radius, fillColor, lineColor, lineWidth));\r\n    }\r\n    /**\r\n     * 绘制椭圆形\r\n     * @param x         圆点X 轴位置。\r\n     * @param y         圆点Y 轴位置。\r\n     * @param width     横向半径。\r\n     * @param height    纵向半径。\r\n     * @param fillColor 填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor （可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth （可选）边框宽度。\r\n     * @param percent   （可选）位置和大小是否是百分比值。\r\n     */\r\n    drawEllipse(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawEllipseCmd {\r\n        return this.addCmd(DrawEllipseCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制扇形。\r\n     * @param x\t\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t\t开始绘制的 Y 轴位置。\r\n     * @param radius\t\t扇形半径。\r\n     * @param startAngle\t开始角度。\r\n     * @param endAngle\t\t结束角度。\r\n     * @param fillColor\t\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t\t（可选）边框宽度。\r\n     */\r\n    drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPieCmd {\r\n        return this.addCmd(DrawPieCmd.create(x, y, radius, Utils.toRadian(startAngle), Utils.toRadian(endAngle), fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制多边形。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param points\t多边形的点集合。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     */\r\n    drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPolyCmd {\r\n        return this.addCmd(DrawPolyCmd.create(x, y, points, fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制路径。\r\n     * @param x\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t开始绘制的 Y 轴位置。\r\n     * @param paths\t路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\r\n     * @param brush\t（可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\r\n     * @param pen\t（可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\r\n     */\r\n    drawPath(x: number, y: number, paths: any[], brush: any = null, pen: any = null): DrawPathCmd {\r\n        return this.addCmd(DrawPathCmd.create(x, y, paths, brush, pen));\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 绘制带九宫格的图片\r\n     * @param\ttexture\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\tsizeGrid\r\n     * @param\tcolor\r\n     */\r\n    draw9Grid(texture: Texture, x: number = 0, y: number = 0, width: number = 0, height: number = 0, sizeGrid: any[], color?: string): void {\r\n        this.addCmd(Draw9GridTextureCmd.create(texture, x, y, width, height, sizeGrid, false, color));\r\n    }\r\n}\r\n","import { NodeFlags } from \"../Const\"\r\nimport { Component } from \"../components/Component\"\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Stat } from \"../utils/Stat\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\n\r\nconst ARRAY_EMPTY: any[] = [];\r\n\r\n/**\r\n * 添加到父对象后调度。\r\n * @eventType Event.ADDED\r\n */\r\n/*[Event(name = \"added\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 被父对象移除后调度。\r\n * @eventType Event.REMOVED\r\n */\r\n/*[Event(name = \"removed\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 加入节点树时调度。\r\n * @eventType Event.DISPLAY\r\n */\r\n/*[Event(name = \"display\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 从节点树移除时调度。\r\n * @eventType Event.UNDISPLAY\r\n */\r\n/*[Event(name = \"undisplay\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n *  <code>Node</code> 类是可放在显示列表中的所有对象的基类。该显示列表管理 Laya 运行时中显示的所有对象。使用 Node 类排列显示列表中的显示对象。Node 对象可以有子显示对象。\r\n */\r\nexport class Node extends EventDispatcher {\r\n    static EVENT_SET_ACTIVESCENE: string = \"ActiveScene\";\r\n    static EVENT_SET_IN_ACTIVESCENE: string = \"InActiveScene\";\r\n    /**@private */\r\n    private _bits: number = 0;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n\r\n    /**@internal 子对象集合，请不要直接修改此对象。*/\r\n    _children: Node[] = ARRAY_EMPTY;\r\n    /**@internal 父节点对象*/\r\n    _parent: Node = null;\r\n    /**@internal */\r\n    _destroyed: boolean = false;\r\n    /**@internal */\r\n    _conchData: any;\r\n    /**@internal */\r\n    _componentDriver: ComponentDriver;\r\n    /**@internal */\r\n    _is3D: boolean;\r\n    _url: string;\r\n    _extra: INodeExtra;\r\n\r\n    /**节点名称。*/\r\n    name: string = \"\";\r\n\r\n    /** 节点标签 */\r\n    tag: string;\r\n\r\n    /**\r\n     * 如果节点从资源中创建，这里记录是他的url\r\n     */\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /**\r\n     * 设置资源的URL\r\n     */\r\n    set url(path: string) {\r\n        this._url = path;\r\n    }\r\n\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /** 是否3D节点，即Scene3D和Sprite3D及其衍生类 */\r\n    get is3D(): boolean {\r\n        return this._is3D;\r\n    }\r\n\r\n    /** 是否已经销毁。对象销毁后不能再使用。*/\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    //@internal\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    _setBit(type: number, value: boolean): void {\r\n        if (type === NodeFlags.DISPLAY) {\r\n            var preValue: boolean = this._getBit(type);\r\n            if (preValue != value) this._updateDisplayedInstage();\r\n        }\r\n        if (value) this._bits |= type;\r\n        else this._bits &= ~type;\r\n    }\r\n\r\n    _getBit(type: number): boolean {\r\n        return (this._bits & type) != 0;\r\n    }\r\n\r\n    /**@internal */\r\n    _setUpNoticeChain(): void {\r\n        if (this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**@internal */\r\n    _setBitUp(type: number): void {\r\n        var ele: Node = this;\r\n        ele._setBit(type, true);\r\n        ele = ele._parent;\r\n        while (ele) {\r\n            if (ele._getBit(type)) return;\r\n            ele._setBit(type, true);\r\n            ele = ele._parent;\r\n        }\r\n    }\r\n\r\n    protected onStartListeningToType(type: string) {\r\n        if (type === Event.DISPLAY || type === Event.UNDISPLAY) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n        }\r\n    }\r\n\r\n    bubbleEvent(type: string, data?: any) {\r\n        let arr: Array<Node> = _bubbleChainPool.length > 0 ? _bubbleChainPool.pop() : [];\r\n        arr.length = 0;\r\n\r\n        let obj: Node = this;\r\n        while (obj) {\r\n            if (obj.activeInHierarchy)\r\n                arr.push(obj);\r\n            obj = obj.parent;\r\n        }\r\n\r\n        if (data instanceof Event) {\r\n            data._stopped = false;\r\n            for (let obj of arr) {\r\n                data.setTo(type, obj, this);\r\n                obj.event(type, data);\r\n                if (data._stopped)\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            for (let obj of arr)\r\n                obj.event(type, data);\r\n        }\r\n\r\n        _bubbleChainPool.push(arr);\r\n    }\r\n\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。destroy对象默认会把自己从父节点移除，并且清理自身引用关系，等待js自动垃圾回收机制回收。destroy后不能再使用。</p>\r\n     * <p>destroy时会移除自身的事情监听，自身的timer监听，移除子对象及从父节点移除自己。</p>\r\n     * @param destroyChild\t（可选）是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._destroyed = true;\r\n        this.destroyAllComponent();\r\n        this._parent && this._parent.removeChild(this);\r\n\r\n        //销毁子节点\r\n        if (this._children) {\r\n            if (destroyChild) this.destroyChildren();\r\n            else this.removeChildren();\r\n        }\r\n        this.onDestroy();\r\n\r\n        this._children = null;\r\n\r\n        //移除所有事件监听\r\n        this.offAll();\r\n    }\r\n\r\n    /**\r\n     * 销毁时执行\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onDestroy(): void {\r\n        //trace(\"onDestroy node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * 销毁所有子对象，不销毁自己本身。\r\n     */\r\n    destroyChildren(): void {\r\n        //销毁子节点\r\n        if (this._children) {\r\n            //为了保持销毁顺序，所以需要正序销毁\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[0] && this._children[0].destroy(true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加子节点。\r\n     * @param\tnode 节点对象\r\n     * @return\t返回添加的节点\r\n     */\r\n    addChild<T extends Node>(node: T): T {\r\n        if (!node || this._destroyed || node as any === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (node._parent === this) {\r\n            var index: number = this.getChildIndex(node);\r\n            if (index !== this._children.length - 1) {\r\n                this._children.splice(index, 1);\r\n                this._children.push(node);\r\n                this._childChanged();\r\n            }\r\n        } else {\r\n            node._parent && node._parent.removeChild(node);\r\n            this._children === ARRAY_EMPTY && (this._children = []);\r\n            this._children.push(node);\r\n            node._setParent(this);\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 批量增加子节点\r\n     * @param\t...args 无数子节点。\r\n     */\r\n    addChildren(...args: any[]): void {\r\n        var i: number = 0, n: number = args.length;\r\n        while (i < n) {\r\n            this.addChild(args[i++]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加子节点到指定的索引位置。\r\n     * @param\tnode 节点对象。\r\n     * @param\tindex 索引位置。\r\n     * @return\t返回添加的节点。\r\n     */\r\n    addChildAt(node: Node, index: number): Node {\r\n        if (!node || this._destroyed || node === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (index >= 0 && index <= this._children.length) {\r\n            if (node._parent === this) {\r\n                var oldIndex: number = this.getChildIndex(node);\r\n                this._children.splice(oldIndex, 1);\r\n                this._children.splice(index, 0, node);\r\n                this._childChanged();\r\n            } else {\r\n                node._parent && node._parent.removeChild(node);\r\n                this._children === ARRAY_EMPTY && (this._children = []);\r\n                this._children.splice(index, 0, node);\r\n                node._setParent(this);\r\n            }\r\n            return node;\r\n        } else {\r\n            throw new Error(\"appendChildAt:The index is out of bounds\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据子节点对象，获取子节点的索引位置。\r\n     * @param\tnode 子节点。\r\n     * @return\t子节点所在的索引位置。\r\n     */\r\n    getChildIndex(node: Node): number {\r\n        return this._children.indexOf(node);\r\n    }\r\n\r\n    /**\r\n     * 根据子节点的名字，获取子节点对象。\r\n     * @param\tname 子节点的名字。\r\n     * @return\t节点对象。\r\n     */\r\n    getChildByName(name: string): Node {\r\n        for (let child of this._children) {\r\n            if (child && child.name === name)\r\n                return child;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点的索引位置，获取子节点对象。\r\n     * @param\tindex 索引位置\r\n     * @return\t子节点\r\n     */\r\n    getChildAt(index: number): Node {\r\n        return this._children[index] || null;\r\n    }\r\n\r\n    /**\r\n     * 设置子节点的索引位置。\r\n     * @param\tnode 子节点。\r\n     * @param\tindex 新的索引。\r\n     * @return\t返回子节点本身。\r\n     */\r\n    setChildIndex(node: Node, index: number): Node {\r\n        var childs: any[] = this._children;\r\n        if (index < 0 || index >= childs.length) {\r\n            throw new Error(\"setChildIndex:The index is out of bounds.\");\r\n        }\r\n\r\n        var oldIndex: number = this.getChildIndex(node);\r\n        if (oldIndex < 0) throw new Error(\"setChildIndex:node is must child of this object.\");\r\n        childs.splice(oldIndex, 1);\r\n        childs.splice(index, 0, node);\r\n        this._childChanged();\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 子节点发生改变。\r\n     * @private\r\n     * @param\tchild 子节点。\r\n     */\r\n    protected _childChanged(child: Node = null): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 删除子节点。\r\n     * @param\tnode 子节点\r\n     * @return\t被删除的节点\r\n     */\r\n    removeChild(node: Node): Node {\r\n        if (!this._children) return node;\r\n        var index: number = this._children.indexOf(node);\r\n        return this.removeChildAt(index);\r\n    }\r\n\r\n    /**\r\n     * 从父容器删除自己，如已经被删除不会抛出异常。\r\n     * @return 当前节点（ Node ）对象。\r\n     */\r\n    removeSelf(): Node {\r\n        this._parent && this._parent.removeChild(this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点名字删除对应的子节点对象，如果找不到不会抛出异常。\r\n     * @param\tname 对象名字。\r\n     * @return 查找到的节点（ Node ）对象。\r\n     */\r\n    removeChildByName(name: string): Node {\r\n        var node: Node = this.getChildByName(name);\r\n        node && this.removeChild(node);\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点索引位置，删除对应的子节点对象。\r\n     * @param\tindex 节点索引位置。\r\n     * @return\t被删除的节点。\r\n     */\r\n    removeChildAt(index: number): Node {\r\n        var node: Node = this.getChildAt(index);\r\n        if (node) {\r\n            this._children.splice(index, 1);\r\n            node._setParent(null);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 删除指定索引区间的所有子对象。\r\n     * @param\tbeginIndex 开始索引。\r\n     * @param\tendIndex 结束索引。\r\n     * @return 当前节点对象。\r\n     */\r\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\r\n        if (this._children && this._children.length > 0) {\r\n            var childs: any[] = this._children;\r\n            if (beginIndex === 0 && endIndex >= childs.length - 1) {\r\n                var arr: any[] = childs;\r\n                this._children = ARRAY_EMPTY;\r\n            } else {\r\n                arr = childs.splice(beginIndex, endIndex - beginIndex + 1);\r\n            }\r\n            for (var i: number = 0, n: number = arr.length; i < n; i++) {\r\n                arr[i]._setParent(null);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 替换子节点。\r\n     * 将传入的新节点对象替换到已有子节点索引位置处。\r\n     * @param\tnewNode 新节点。\r\n     * @param\toldNode 老节点。\r\n     * @return\t返回新节点。\r\n     */\r\n    replaceChild(newNode: Node, oldNode: Node): Node {\r\n        var index: number = this._children.indexOf(oldNode);\r\n        if (index > -1) {\r\n            this._children.splice(index, 1, newNode);\r\n            oldNode._setParent(null);\r\n            newNode._setParent(this);\r\n            return newNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 子对象数量。\r\n     */\r\n    get numChildren(): number {\r\n        return this._children ? this._children.length : 0;\r\n    }\r\n\r\n    /**父节点。*/\r\n    get parent(): Node {\r\n        return this._parent;\r\n    }\r\n\r\n    /**检查本节点是否是某个节点的上层节点\r\n     * @param node\r\n     * @return\r\n     */\r\n    isAncestorOf(node: Node): boolean {\r\n        let p = node.parent;\r\n        while (p) {\r\n            if (p == this)\r\n                return true;\r\n\r\n            p = p.parent;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**@private */\r\n    protected _setParent(value: Node): void {\r\n        if (this._parent !== value) {\r\n            if (value) {\r\n                this._parent = value;\r\n                //如果父对象可见，则设置子对象可见\r\n                this._onAdded();\r\n                this.event(Event.ADDED);\r\n                if (this._getBit(NodeFlags.DISPLAY)) {\r\n                    this._setUpNoticeChain();\r\n                    value.displayedInStage && this._displayChild(this, true);\r\n                }\r\n                value._childChanged(this);\r\n            } else {\r\n                //设置子对象不可见\r\n                this._onRemoved();\r\n                this.event(Event.REMOVED);\r\n                let p = this._parent;\r\n                if (this._getBit(NodeFlags.DISPLAY)) this._displayChild(this, false);\r\n                this._parent = value;\r\n                p._childChanged(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**表示是否在显示列表中显示。*/\r\n    get displayedInStage(): boolean {\r\n        if (this._getBit(NodeFlags.DISPLAY)) return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n        return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n    }\r\n\r\n    /**@private */\r\n    private _updateDisplayedInstage(): void {\r\n        var ele: Node;\r\n        ele = this;\r\n        var stage: Node = ILaya.stage;\r\n        var displayedInStage: boolean = false;\r\n        while (ele) {\r\n            if (ele._getBit(NodeFlags.DISPLAY)) {\r\n                displayedInStage = ele._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n                break;\r\n            }\r\n            if (ele === stage || ele._getBit(NodeFlags.DISPLAYED_INSTAGE)) {\r\n                displayedInStage = true;\r\n                break;\r\n            }\r\n            ele = ele._parent;\r\n        }\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, displayedInStage);\r\n    }\r\n\r\n    /**@internal */\r\n    _setDisplay(value: boolean): void {\r\n        if (this._getBit(NodeFlags.DISPLAYED_INSTAGE) !== value) {\r\n            this._setBit(NodeFlags.DISPLAYED_INSTAGE, value);\r\n            if (value) this.event(Event.DISPLAY);\r\n            else this.event(Event.UNDISPLAY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置指定节点对象是否可见(是否在渲染列表中)。\r\n     * @private\r\n     * @param\tnode 节点。\r\n     * @param\tdisplay 是否可见。\r\n     */\r\n    private _displayChild(node: Node, display: boolean): void {\r\n        var childs: any[] = node._children;\r\n        if (childs) {\r\n            for (var i: number = 0, n: number = childs.length; i < n; i++) {\r\n                var child: Node = childs[i];\r\n                if (!child) continue;\r\n                if (!child._getBit(NodeFlags.DISPLAY)) continue;\r\n                if (child._children.length > 0) {\r\n                    this._displayChild(child, display);\r\n                } else {\r\n                    child._setDisplay(display);\r\n                }\r\n            }\r\n        }\r\n        node._setDisplay(display);\r\n    }\r\n\r\n    /**\r\n     * 当前容器是否包含指定的 <code>Node</code> 节点对象 。\r\n     * @param\tnode  指定的 <code>Node</code> 节点对象 。\r\n     * @return\t一个布尔值表示是否包含指定的 <code>Node</code> 节点对象 。\r\n     */\r\n    contains(node: Node): boolean {\r\n        if (node === this) return true;\r\n        while (node) {\r\n            if (node._parent === this) return true;\r\n            node = node._parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行某函数。功能同Laya.timer.timerLoop()。\r\n     * @param\tdelay\t\t间隔时间(单位毫秒)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\r\n     */\r\n    timerLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        this.timer.loop(delay, caller, method, args, coverBefore, jumpFrame);\r\n    }\r\n\r\n    /**\r\n     * 定时执行某函数一次。功能同Laya.timer.timerOnce()。\r\n     * @param\tdelay\t\t延迟时间(单位毫秒)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     */\r\n    timerOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行某函数(基于帧率)。功能同Laya.timer.frameLoop()。\r\n     * @param\tdelay\t\t间隔几帧(单位为帧)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次某函数(基于帧率)。功能同Laya.timer.frameOnce()。\r\n     * @param\tdelay\t\t延迟几帧(单位为帧)。\r\n     * @param\tcaller\t\t执行域(this)\r\n     * @param\tmethod\t\t结束时的回调方法\r\n     * @param\targs\t\t（可选）回调参数\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 清理定时器。功能同Laya.timer.clearTimer()。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 结束时的回调方法。\r\n     */\r\n    clearTimer(caller: any, method: Function): void {\r\n        this.timer.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * <p>延迟运行指定的函数。</p>\r\n     * <p>在控件被显示在屏幕之前调用，一般用于延迟计算数据。</p>\r\n     * @param method 要执行的函数的名称。例如，functionName。\r\n     * @param args 传递给 <code>method</code> 函数的可选参数列表。\r\n     *\r\n     * @see #runCallLater()\r\n     */\r\n    callLater(method: Function, args: any[] = null): void {\r\n        this.timer.callLater(this, method, args);\r\n    }\r\n\r\n    /**\r\n     * <p>如果有需要延迟调用的函数（通过 <code>callLater</code> 函数设置），则立即执行延迟调用函数。</p>\r\n     * @param method 要执行的函数名称。例如，functionName。\r\n     * @see #callLater()\r\n     */\r\n    runCallLater(method: Function): void {\r\n        this.timer.runCallLater(this, method);\r\n    }\r\n\r\n    //============================组件化支持==============================\r\n    /** @private */\r\n    protected _components: Component[];\r\n    /**@private */\r\n    private _activeChangeScripts: Component[];\r\n\r\n\r\n    _scene: Node;\r\n\r\n    /**\r\n     * 获得所属场景。\r\n     * @return\t场景。\r\n     */\r\n    get scene(): any {\r\n        return this._scene;\r\n    }\r\n\r\n    /**\r\n     * 获取自身是否激活。\r\n     *   @return\t自身是否激活。\r\n     */\r\n    get active(): boolean {\r\n        return !this._getBit(NodeFlags.NOT_READY) && !this._getBit(NodeFlags.NOT_ACTIVE);\r\n    }\r\n\r\n    /**\r\n     * 设置是否激活。\r\n     * @param\tvalue 是否激活。\r\n     */\r\n    set active(value: boolean) {\r\n        value = !!value;\r\n        if (!this._getBit(NodeFlags.NOT_ACTIVE) !== value) {\r\n            if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n                if (value)\r\n                    throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n                else\r\n                    throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n            } else {\r\n                this._setBit(NodeFlags.NOT_ACTIVE, !value);\r\n                if (this._parent) {\r\n                    if (this._parent.activeInHierarchy) {\r\n                        this._processActive(value, true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取在场景中是否激活。\r\n     *   @return\t在场景中是否激活。\r\n     */\r\n    get activeInHierarchy(): boolean {\r\n        return this._getBit(NodeFlags.ACTIVE_INHIERARCHY);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onActive(): void {\r\n        Stat.spriteCount++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onInActive(): void {\r\n        Stat.spriteCount--;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onActiveInScene(): void {\r\n        this.event(Node.EVENT_SET_ACTIVESCENE, this._scene);\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onInActiveInScene(): void {\r\n        this.event(Node.EVENT_SET_IN_ACTIVESCENE, this._scene);\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n    * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\r\n    * 此方法为虚方法，使用时重写覆盖即可\r\n    */\r\n    onAwake(): void {\r\n        //this.name  && trace(\"onAwake node \", this.name);\r\n    }\r\n\r\n    /**\r\n     * 组件被启用后执行，比如节点被添加到舞台后\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onEnable(): void {\r\n        //this.name  && trace(\"onEnable node \", this.name);\r\n    }\r\n\r\n    /**\r\n     * 组件被禁用时执行，比如从节点从舞台移除后\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onDisable(): void {\r\n        //trace(\"onDisable node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, spriteMap: any): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setBelongScene(scene: Node): void {\r\n        if (!this._scene || this.scene != scene) {\r\n            this._scene = scene;\r\n            this._onActiveInScene();\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setBelongScene(scene);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setUnBelongScene(): void {\r\n        if (this._scene !== this) {//移除节点本身是scene不继续派发\r\n            this._onInActiveInScene();\r\n            this._scene = null;\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    _processActive(active: boolean, fromSetter?: boolean) {\r\n        (this._activeChangeScripts) || (this._activeChangeScripts = []);\r\n        let arr = this._activeChangeScripts;\r\n\r\n        if (active)\r\n            this._activeHierarchy(arr, fromSetter);\r\n        else\r\n            this._inActiveHierarchy(arr, fromSetter);\r\n\r\n        for (let i = 0, n = arr.length; i < n; i++) {\r\n            let comp = arr[i];\r\n            comp.owner && comp._setActive(active);\r\n        }\r\n\r\n        arr.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _activeHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    (comp._enabled) && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(true);\r\n            }\r\n        }\r\n\r\n        this._onActive();\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (!child._getBit(NodeFlags.NOT_ACTIVE) && !child._getBit(NodeFlags.NOT_READY)) && (child._activeHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        if (!this._getBit(NodeFlags.AWAKED)) {\r\n            this._setBit(NodeFlags.AWAKED, true);\r\n            this.onAwake();\r\n        }\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _inActiveHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._onInActive();\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    comp._enabled && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(false);\r\n            }\r\n        }\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, false);\r\n\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (child && !child._getBit(NodeFlags.NOT_ACTIVE)) && (child._inActiveHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onAdded(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n        } else {\r\n            let parentScene = this._parent.scene;\r\n            parentScene && this._setBelongScene(parentScene);\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onRemoved(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n        } else {\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(false);\r\n            this._parent.scene && this._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addComponentInstance(comp: Component): void {\r\n        if (!this._components)\r\n            this._components = [];\r\n        this._components.push(comp);\r\n\r\n        comp._setOwner(this);\r\n        if (this.activeInHierarchy)\r\n            comp._setActive(true);\r\n        this._componentsChanged?.(comp, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _destroyComponent(comp: Component) {\r\n        if (!this._components)\r\n            return;\r\n\r\n        let i = this._components.indexOf(comp);\r\n        if (i != -1) {\r\n            this._components.splice(i, 1);\r\n            comp._destroy();\r\n            this._componentsChanged?.(comp, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private destroyAllComponent(): void {\r\n        if (!this._components)\r\n            return;\r\n\r\n        for (let i = 0, n = this._components.length; i < n; i++) {\r\n            let item = this._components[i];\r\n            item && !item.destroyed && item._destroy();\r\n        }\r\n        this._components.length = 0;\r\n        this._componentsChanged?.(null, 2);\r\n    }\r\n\r\n    /**\r\n     * 组件列表发生改变。\r\n     * @private\r\n     */\r\n    protected _componentsChanged?(comp: Component, action: 0 | 1 | 2): void;\r\n\r\n    /**\r\n     * @internal 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    _cloneTo(destObject: any, srcRoot: Node, dstRoot: Node): void {\r\n        var destNode: Node = (<Node>destObject);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                var destComponent = destNode.addComponent((this._components[i] as any).constructor);\r\n                this._components[i]._cloneTo(destComponent);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加组件实例。\r\n     * @param\tcomponent 组建实例。\r\n     * @return\t组件。\r\n     */\r\n    addComponentInstance(component: Component): Component {\r\n        if (component.owner)\r\n            throw \"Node:the component has belong to other node.\";\r\n        if (component._singleton && this.getComponent(((<any>component)).constructor))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", component);\r\n        else\r\n            this._addComponentInstance(component);\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * 添加组件。\r\n     * @param\tcomponentType 组件类型。\r\n     * @return\t组件。\r\n     */\r\n    addComponent<T extends Component>(componentType: new () => T): T {\r\n        let comp: T = Pool.createByClass(componentType);\r\n        if (!comp) {\r\n            throw \"missing \" + componentType.toString();\r\n        }\r\n\r\n        if (comp._singleton && this.getComponent(componentType))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", comp);\r\n        else\r\n            this._addComponentInstance(comp);\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * 获得组件实例，如果没有则返回为null\r\n     * @param\tcomponentType 组建类型\r\n     * @return\t返回组件\r\n     */\r\n    getComponent<T extends Component>(componentType: new () => T): T {\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType)\r\n                    return comp;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 返回所有组件实例。\r\n     * @return 返回组件实例数组。\r\n     */\r\n    get components(): ReadonlyArray<Component> {\r\n        return this._components || ARRAY_EMPTY;\r\n    }\r\n\r\n    /**\r\n     * 获得组件实例，如果没有则返回为null\r\n     * @param\tcomponentType 组件类型\r\n     * @return\t返回组件数组\r\n     */\r\n    getComponents(componentType: typeof Component): Component[] {\r\n        var arr: any[];\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType) {\r\n                    arr = arr || [];\r\n                    arr.push(comp);\r\n                }\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 获取timer\r\n     */\r\n    get timer(): Timer {\r\n        return this._scene ? this._scene.timer : ILaya.timer;\r\n    }\r\n\r\n    /**\r\n     * 反序列化后会调用\r\n     */\r\n    onAfterDeserialize() { }\r\n}\r\n\r\nconst _bubbleChainPool: Array<Array<Node>> = [];\r\n\r\nexport interface INodeExtra { }\r\n","\r\nconst HALF_PI = Math.PI * 0.5;\r\nconst PI2 = Math.PI * 2;\r\n\r\n/**\r\n* <code>Ease</code> 类定义了缓动函数，以便实现 <code>Tween</code> 动画的缓动效果。\r\n*/\r\nexport class Ease {\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearIn(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearInOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceIn(t: number, b: number, c: number, d: number): number {\r\n        return c - Ease.bounceOut(d - t, 0, c, d) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t < d * 0.5) return Ease.bounceIn(t * 2, 0, c, d) * .5 + b;\r\n        else return Ease.bounceOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d) < (1 / 2.75)) return c * (7.5625 * t * t) + b;\r\n        else if (t < (2 / 2.75)) return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n        else if (t < (2.5 / 2.75)) return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n        else return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始时往后运动，然后反向朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backIn(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时是向后跟踪，再倒转方向并朝目标移动，稍微过冲目标，然后再次倒转方向，回来朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backInOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n        return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时是朝目标移动，稍微过冲，再倒转方向回来朝着目标。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticIn(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticInOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d * 0.5) == 2) return b + c;\r\n        if (!p) p = d * (.3 * 1.5);\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p) * .5 + c + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * PI2 / p) + c + b);\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineInOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * 0.5 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * Math.cos(t / d * HALF_PI) + c + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sin(t / d * HALF_PI) + b;\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t + b;\r\n        return -c * 0.5 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t + b;\r\n        return -c * 0.5 * ((--t) * (t - 2) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoIn(t: number, b: number, c: number, d: number): number {\r\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b - c * 0.001;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t == 0) return b;\r\n        if (t == d) return b + c;\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * Math.pow(2, 10 * (t - 1)) + b;\r\n        return c * 0.5 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoOut(t: number, b: number, c: number, d: number): number {\r\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return -c * 0.5 * (Math.sqrt(1 - t * t) - 1) + b;\r\n        return c * 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * <p><code>Handler</code> 是事件处理器类。</p>\r\n * <p>推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。</p>\r\n * <p><b>注意：</b>由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。</p>\r\n */\r\nexport class Handler {\r\n\r\n    /**@private handler对象池*/\r\n    protected static _pool: Handler[] = [];\r\n    /**@private */\r\n    private static _gid: number = 1;\r\n\r\n    /** 执行域(this)。*/\r\n    caller: Object | null;\r\n    /** 处理方法。*/\r\n    method: Function | null;\r\n    /** 参数。*/\r\n    args: any[] | null;\r\n    /** 表示是否只执行一次。如果为true，回调后执行recover()进行回收，回收后会被再利用，默认为false 。*/\r\n    once = false;\r\n\r\n    /**@private */\r\n    protected _id = 0;\r\n\r\n    /**\r\n     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。\r\n     * @param\tcaller 执行域。\r\n     * @param\tmethod 处理函数。\r\n     * @param\targs 函数参数。\r\n     * @param\tonce 是否只执行一次。\r\n     */\r\n    constructor(caller: Object | null = null, method: Function | null = null, args: any[] | null = null, once: boolean = false) {\r\n        this.setTo(caller, method, args, once);\r\n    }\r\n\r\n    /**\r\n     * 设置此对象的指定属性值。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 回调方法。\r\n     * @param\targs 携带的参数。\r\n     * @param\tonce 是否只执行一次，如果为true，执行后执行recover()进行回收。\r\n     * @return  返回 handler 本身。\r\n     */\r\n    setTo(caller: any, method: Function | null, args: any[] | null, once = false): Handler {\r\n        this._id = Handler._gid++;\r\n        this.caller = caller;\r\n        this.method = method;\r\n        this.args = args;\r\n        this.once = once;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 执行处理器。\r\n     */\r\n    run(): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        var result: any = this.method.apply(this.caller, this.args);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 执行处理器，并携带额外数据。\r\n     * @param\tdata 附加的回调数据，可以是单数据或者Array(作为多参)。\r\n     */\r\n    runWith(data: any): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        if (data == null)\r\n            var result: any = this.method.apply(this.caller, this.args);\r\n        else if (!this.args && !data.unshift) result = this.method.call(this.caller, data);\r\n        else if (this.args) result = this.method.apply(this.caller, this.args.concat(data));\r\n        else result = this.method.apply(this.caller, data);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 清理对象引用。\r\n     */\r\n    clear(): Handler {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 清理并回收到 Handler 对象池内。\r\n     */\r\n    recover(): void {\r\n        if (this._id > 0) {\r\n            this._id = 0;\r\n            Handler._pool.push(this.clear());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 回调方法。\r\n     * @param\targs 携带的参数。\r\n     * @param\tonce 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。\r\n     * @return  返回创建的handler实例。\r\n     */\r\n    static create(caller: any, method: Function | null, args: any[] | null = null, once: boolean = true): Handler {\r\n        if (Handler._pool.length)\r\n            return (Handler._pool.pop() as Handler).setTo(caller, method, args, once);\r\n        return new Handler(caller, method, args, once);\r\n    }\r\n}\r\n\r\n","import { Handler } from \"./Handler\";\r\nimport { Pool } from \"./Pool\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Utils } from \"./Utils\";\r\nimport { ILaya } from \"./../../ILaya\";\r\n\r\n/**\r\n * <code>Tween</code>  是一个缓动类。使用此类能够实现对目标对象属性的渐变。\r\n */\r\nexport class Tween {\r\n    /**@private */\r\n    private static tweenMap: any[] = [];\r\n    /**@private */\r\n    private _complete: Handler;\r\n    /**@private */\r\n    private _target: any;\r\n    /**@private */\r\n    private _ease: Function;\r\n    /**@private */\r\n    private _props: any[];\r\n    /**@private */\r\n    private _duration: number;\r\n    /**@private */\r\n    private _delay: number;\r\n    /**@private */\r\n    private _startTimer: number;\r\n    /**@private */\r\n    private _usedTimer: number;\r\n    /**@private */\r\n    private _usedPool: boolean;\r\n    /**@private */\r\n    private _delayParam: any[];\r\n    /**@private 唯一标识，TimeLintLite用到*/\r\n    gid: number = 0;\r\n    /**更新回调，缓动数值发生变化时，回调变化的值*/\r\n    update: Handler;\r\n    /**重播次数，如果repeat=0，则表示无限循环播放*/\r\n    repeat: number = 1;\r\n    /**当前播放次数*/\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, true, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, false, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, true, false, true);\r\n    }\r\n\r\n    /**\r\n     * 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, false, false, true);\r\n    }\r\n\r\n    /** @internal */\r\n    _create(target: any, props: any, duration: number, ease: Function|null, complete: Handler|null, delay: number, coverBefore: boolean, isTo: boolean, usePool: boolean, runNow: boolean): Tween {\r\n        if (!target) throw new Error(\"Tween:target is null\");\r\n        this._target = target;\r\n        this._duration = duration;\r\n        this._ease = ease || props.ease || Tween.easeNone;\r\n        this._complete = complete || props.complete;\r\n        this._delay = delay;\r\n        this._props = [];\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        this._usedPool = usePool;\r\n        this._delayParam = null;\r\n        this.update = props.update;\r\n\r\n        //判断是否覆盖\t\t\t\r\n        var gid: number = (target.$_GID || (target.$_GID = Utils.getGID()));\r\n        if (!Tween.tweenMap[gid]) {\r\n            Tween.tweenMap[gid] = [this];\r\n        } else {\r\n            if (coverBefore) Tween.clearTween(target);\r\n            Tween.tweenMap[gid].push(this);\r\n        }\r\n\r\n        if (runNow) {\r\n            if (delay <= 0) this.firstStart(target, props, isTo);\r\n            else {\r\n                this._delayParam = [target, props, isTo];\r\n                ILaya.timer.once(delay, this, this.firstStart, this._delayParam);\r\n            }\r\n        } else {\r\n            this._initProps(target, props, isTo);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private firstStart(target: any, props: any, isTo: boolean): void {\r\n        this._delayParam = null;\r\n        if (target.destroyed) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        this._initProps(target, props, isTo);\r\n        this._beginLoop();\r\n    }\r\n\r\n    private _initProps(target: any, props: any, isTo: boolean): void {\r\n        //初始化属性\r\n        for (var p in props) {\r\n            if (typeof (target[p]) == 'number') {\r\n                var start: number = isTo ? target[p] : props[p];\r\n                var end: number = isTo ? props[p] : target[p];\r\n                this._props.push([p, start, end - start]);\r\n                if (!isTo) target[p] = start;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _beginLoop(): void {\r\n        ILaya.timer.frameLoop(1, this, this._doEase);\r\n    }\r\n\r\n    /**执行缓动**/\r\n    private _doEase(): void {\r\n        this._updateEase(Browser.now());\r\n    }\r\n\r\n    /**@internal */\r\n    _updateEase(time: number): void {\r\n        var target: any = this._target;\r\n        if (!target) return;\r\n\r\n        //如果对象被销毁，则立即停止缓动\r\n        if (target.destroyed) return Tween.clearTween(target);\r\n\r\n        var usedTimer: number = this._usedTimer = time - this._startTimer - this._delay;\r\n        if (usedTimer < 0) return;\r\n        if (usedTimer >= this._duration) return this.complete();\r\n\r\n        var ratio: number = usedTimer > 0 ? this._ease(usedTimer, 0, 1, this._duration) : 0;\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + (ratio * prop[2]);\r\n        }\r\n        if (this.update) this.update.run();\r\n    }\r\n\r\n    /**设置当前执行比例**/\r\n    set progress(v: number) {\r\n        var uTime: number = v * this._duration;\r\n        this._startTimer = Browser.now() - this._delay - uTime;\r\n    }\r\n\r\n    /**\r\n     * 立即结束缓动并到终点。\r\n     */\r\n    complete(): void {\r\n        if (!this._target) return;\r\n\r\n        //立即执行初始化\r\n        ILaya.timer.runTimer(this, this.firstStart);\r\n\r\n        //缓存当前属性\r\n        var target: any = this._target;\r\n        var props: any = this._props;\r\n        var handler: Handler = this._complete;\r\n        //设置终点属性\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + prop[2];\r\n        }\r\n        if (this.update) this.update.run();\r\n\r\n        this._count++;\r\n        if (this.repeat != 0 && this._count >= this.repeat) {\r\n            //清理\r\n            this.clear();\r\n            //回调\r\n            handler && handler.run();\r\n        } else {\r\n            this.restart();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停缓动，可以通过resume或restart重新开始。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._beginLoop);\r\n        ILaya.timer.clear(this, this._doEase);\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        var time: number = Browser.now();\r\n        var dTime: number;\r\n        dTime = time - this._startTimer - this._delay;\r\n        if (dTime < 0) {\r\n            this._usedTimer = dTime;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置开始时间。\r\n     * @param\tstartTime 开始时间。\r\n     */\r\n    setStartTime(startTime: number): void {\r\n        this._startTimer = startTime;\r\n    }\r\n\r\n    /**\r\n     * 清理指定目标对象上的所有缓动。\r\n     * @param\ttarget 目标对象。\r\n     */\r\n    static clearAll(target: any): void {\r\n        if (!target || !target.$_GID) return;\r\n        var tweens: any[] = Tween.tweenMap[target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                tweens[i]._clear();\r\n            }\r\n            tweens.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理某个缓动。\r\n     * @param\ttween 缓动对象。\r\n     */\r\n    static clear(tween: Tween): void {\r\n        tween.clear();\r\n    }\r\n\r\n    /**@private 同clearAll，废弃掉，尽量别用。*/\r\n    static clearTween(target: any): void {\r\n        Tween.clearAll(target);\r\n    }\r\n\r\n    /**\r\n     * 停止并清理当前缓动。\r\n     */\r\n    clear(): void {\r\n        if (this._target) {\r\n            this._remove();\r\n            this._clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clear(): void {\r\n        this.pause();\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        this._complete = null;\r\n        this._target = null;\r\n        this._ease = null;\r\n        this._props = null;\r\n        this._delayParam = null;\r\n    this.repeat = 1;\r\n\r\n        if (this._usedPool) {\r\n            this.update = null;\r\n            Pool.recover(\"tween\", this);\r\n        }\r\n    }\r\n\r\n    /** 回收到对象池。*/\r\n    recover(): void {\r\n        this._usedPool = true;\r\n        this._clear();\r\n    }\r\n\r\n    private _remove(): void {\r\n        var tweens: any[] = Tween.tweenMap[this._target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                if (tweens[i] === this) {\r\n                    tweens.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重新开始暂停的缓动。\r\n     */\r\n    restart(): void {\r\n        this.pause();\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        if (this._delayParam) {\r\n            ILaya.timer.once(this._delay, this, this.firstStart, this._delayParam);\r\n            return;\r\n        }\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            this._target[prop[0]] = prop[1];\r\n        }\r\n        ILaya.timer.once(this._delay, this, this._beginLoop);\r\n    }\r\n\r\n    /**\r\n     * 恢复暂停的缓动。\r\n     */\r\n    resume(): void {\r\n        if (this._usedTimer >= this._duration) return;\r\n        this._startTimer = Browser.now() - this._usedTimer - this._delay;\r\n        if (this._delayParam) {\r\n            if (this._usedTimer < 0) {\r\n                ILaya.timer.once(-this._usedTimer, this, this.firstStart, this._delayParam);\r\n            } else {\r\n                this.firstStart.apply(this, <any>this._delayParam);\r\n            }\r\n        } else {\r\n            this._beginLoop();\r\n        }\r\n    }\r\n\r\n    private static easeNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { Ease } from \"./Ease\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Tween } from \"./Tween\";\r\n\r\n/**\r\n * @private\r\n * <code>Dragging</code> 类是触摸滑动控件。\r\n */\r\nexport class Dragging {\r\n    /** 被拖动的对象。*/\r\n    target: Sprite;\r\n    /** 缓动衰减系数。*/\r\n    ratio: number = 0.92;\r\n    /** 单帧最大偏移量。*/\r\n    maxOffset: number = 60;\r\n    /** 滑动范围。*/\r\n    area: Rectangle;\r\n    /** 表示拖动是否有惯性。*/\r\n    hasInertia: boolean;\r\n    /** 橡皮筋最大值。*/\r\n    elasticDistance: number;\r\n    /** 橡皮筋回弹时间，单位为毫秒。*/\r\n    elasticBackTime: number;\r\n    /** 事件携带数据。*/\r\n    data: any;\r\n\r\n    private _dragging: boolean = false;\r\n    private _clickOnly: boolean = true;\r\n    private _elasticRateX: number;\r\n    private _elasticRateY: number;\r\n    private _lastX: number;\r\n    private _lastY: number;\r\n    private _offsetX: number;\r\n    private _offsetY: number;\r\n    private _offsets: any[];\r\n    private _tween: Tween;\r\n    private _parent: Sprite;\r\n\r\n    /**\r\n     * 开始拖拽。\r\n     * @param\ttarget 待拖拽的 <code>Sprite</code> 对象。\r\n     * @param\tarea 滑动范围。\r\n     * @param\thasInertia 拖动是否有惯性。\r\n     * @param\telasticDistance 橡皮筋最大值。\r\n     * @param\telasticBackTime 橡皮筋回弹时间，单位为毫秒。\r\n     * @param\tdata 事件携带数据。\r\n     * @param\tratio 惯性阻尼系数\r\n     */\r\n    start(target: Sprite, area: Rectangle, hasInertia: boolean, elasticDistance: number, elasticBackTime: number, data: any, ratio: number = 0.92): void {\r\n        this.clearTimer();\r\n\r\n        this.target = target;\r\n        this.area = area;\r\n        this.hasInertia = hasInertia;\r\n        this.elasticDistance = area ? elasticDistance : 0;\r\n        this.elasticBackTime = elasticBackTime;\r\n        this.data = data;\r\n        this.ratio = ratio;\r\n\r\n        this._parent = (target.parent as Sprite);\r\n\r\n        this._clickOnly = true;\r\n        this._dragging = true;\r\n        this._elasticRateX = this._elasticRateY = 1;\r\n        this._lastX = this._parent.mouseX;\r\n        this._lastY = this._parent.mouseY;\r\n\r\n        ILaya.stage.on(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.on(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.on(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.frameLoop(1, this, this.loop);\r\n    }\r\n\r\n    /**\r\n     * 清除计时器。\r\n     */\r\n    private clearTimer(): void {\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n        ILaya.systemTimer.clear(this, this.tweenMove);\r\n        if (this._tween) {\r\n            this._tween.recover();\r\n            this._tween = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止拖拽。\r\n     */\r\n    stop(): void {\r\n        if (this._dragging) {\r\n            ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n            ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n            this._dragging = false;\r\n            this.target && this.area && this.backToArea();\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拖拽的循环处理函数。\r\n     */\r\n    private loop(): void {\r\n        var point: Point = this._parent.getMousePoint();\r\n        var mouseX: number = point.x;\r\n        var mouseY: number = point.y;\r\n        var offsetX: number = mouseX - this._lastX;\r\n        var offsetY: number = mouseY - this._lastY;\r\n\r\n        if (this._clickOnly) {\r\n            if (Math.abs(offsetX * ILaya.stage._canvasTransform.getScaleX()) > 1 || Math.abs(offsetY * ILaya.stage._canvasTransform.getScaleY()) > 1) {\r\n                this._clickOnly = false;\r\n                this._offsets || (this._offsets = []);\r\n                this._offsets.length = 0;\r\n                this.target.event(Event.DRAG_START, this.data);\r\n                //TODO:\r\n                //target._set$P(\"$_MOUSEDOWN\", false);\r\n            } else return;\r\n        } else {\r\n            this._offsets.push(offsetX, offsetY);\r\n        }\r\n        if (offsetX === 0 && offsetY === 0) return;\r\n\r\n        this._lastX = mouseX;\r\n        this._lastY = mouseY;\r\n        this.target.x += offsetX * this._elasticRateX;\r\n        this.target.y += offsetY * this._elasticRateY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n    }\r\n\r\n    /**\r\n     * 拖拽区域检测。\r\n     */\r\n    private checkArea(): void {\r\n        if (this.elasticDistance <= 0) {\r\n            this.backToArea();\r\n        } else {\r\n            if (this.target._x < this.area.x) {\r\n                var offsetX: number = this.area.x - this.target._x;\r\n            } else if (this.target._x > this.area.x + this.area.width) {\r\n                offsetX = this.target._x - this.area.x - this.area.width;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            this._elasticRateX = Math.max(0, 1 - (offsetX / this.elasticDistance));\r\n\r\n            if (this.target._y < this.area.y) {\r\n                var offsetY: number = this.area.y - this.target.y;\r\n            } else if (this.target._y > this.area.y + this.area.height) {\r\n                offsetY = this.target._y - this.area.y - this.area.height;\r\n            } else {\r\n                offsetY = 0;\r\n            }\r\n            this._elasticRateY = Math.max(0, 1 - (offsetY / this.elasticDistance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动至设定的拖拽区域。\r\n     */\r\n    private backToArea(): void {\r\n        this.target.x = Math.min(Math.max(this.target._x, this.area.x), this.area.x + this.area.width);\r\n        this.target.y = Math.min(Math.max(this.target._y, this.area.y), this.area.y + this.area.height);\r\n    }\r\n\r\n    /**\r\n     * 舞台的抬起事件侦听函数。\r\n     * @param\te Event 对象。\r\n     */\r\n    private onStageMouseUp(e: Event): void {\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.off(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n\r\n        if (this._clickOnly || !this.target) return;\r\n        //target.mouseEnabled = true;\r\n\r\n        if (this.hasInertia) {\r\n            //计算平均值\r\n            if (this._offsets.length < 1) {\r\n                this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY);\r\n            }\r\n\r\n            this._offsetX = this._offsetY = 0;\r\n            var len: number = this._offsets.length;\r\n            var n: number = Math.min(len, 6);\r\n            var m: number = this._offsets.length - n;\r\n            for (var i: number = len - 1; i > m; i--) {\r\n                this._offsetY += this._offsets[i--];\r\n                this._offsetX += this._offsets[i];\r\n            }\r\n\r\n            this._offsetX = this._offsetX / n * 2;\r\n            this._offsetY = this._offsetY / n * 2;\r\n\r\n            if (Math.abs(this._offsetX) > this.maxOffset) this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset;\r\n            if (Math.abs(this._offsetY) > this.maxOffset) this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset;\r\n            ILaya.systemTimer.frameLoop(1, this, this.tweenMove);\r\n        } else if (this.elasticDistance > 0) {\r\n            this.checkElastic();\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 橡皮筋效果检测。\r\n     */\r\n    private checkElastic(): void {\r\n        var tx: number = NaN;\r\n        var ty: number = NaN;\r\n        if (this.target.x < this.area.x) tx = this.area.x;\r\n        else if (this.target._x > this.area.x + this.area.width) tx = this.area.x + this.area.width;\r\n\r\n        if (this.target.y < this.area.y) ty = this.area.y;\r\n        else if (this.target._y > this.area.y + this.area.height) ty = this.area.y + this.area.height;\r\n\r\n        if (!isNaN(tx) || !isNaN(ty)) {\r\n            var obj: any = {};\r\n            if (!isNaN(tx)) obj.x = tx;\r\n            if (!isNaN(ty)) obj.y = ty;\r\n            this._tween = Tween.to(this.target, obj, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.clear), 0, false, false);\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动。\r\n     */\r\n    private tweenMove(): void {\r\n        this._offsetX *= this.ratio * this._elasticRateX;\r\n        this._offsetY *= this.ratio * this._elasticRateY;\r\n\r\n        this.target.x += this._offsetX;\r\n        this.target.y += this._offsetY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n\r\n        if ((Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1) || this._elasticRateX < 0.5 || this._elasticRateY < 0.5) {\r\n            ILaya.systemTimer.clear(this, this.tweenMove);\r\n            if (this.elasticDistance > 0) this.checkElastic();\r\n            else this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 结束拖拽。\r\n     */\r\n    private clear(): void {\r\n        if (this.target) {\r\n            this.clearTimer();\r\n            var sp = this.target;\r\n            this.target = null;\r\n            this._parent = null;\r\n            sp.event(Event.DRAG_END, this.data);\r\n        }\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Utils } from \"./Utils\";\r\n\r\nexport class SpriteUtils {\r\n    /**\r\n     * @private\r\n     * 根据传入的显示对象 <code>Sprite</code> 和此显示对象上的 两个点，返回此对象上的两个点在舞台坐标系上组成的最小的矩形区域对象。\r\n     * @param\tsprite 显示对象 <code>Sprite</code>。\r\n     * @param\tx0\t点一的 X 轴坐标点。\r\n     * @param\ty0\t点一的 Y 轴坐标点。\r\n     * @param\tx1\t点二的 X 轴坐标点。\r\n     * @param\ty1\t点二的 Y 轴坐标点。\r\n     * @return 两个点在舞台坐标系组成的矩形对象 <code>Rectangle</code>。\r\n     */\r\n    static getGlobalRecByPoints(sprite: Sprite, x0: number, y0: number, x1: number, y1: number): Rectangle {\r\n        var newLTPoint: Point;\r\n        newLTPoint = Point.create().setTo(x0, y0);\r\n        newLTPoint = sprite.localToGlobal(newLTPoint);\r\n        var newRBPoint: Point;\r\n        newRBPoint = Point.create().setTo(x1, y1);\r\n        newRBPoint = sprite.localToGlobal(newRBPoint);\r\n        var rst: Rectangle = Rectangle._getWrapRec([newLTPoint.x, newLTPoint.y, newRBPoint.x, newRBPoint.y]);\r\n        newLTPoint.recover();\r\n        newRBPoint.recover();\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 计算传入的显示对象 <code>Sprite</code> 的全局坐标系的坐标和缩放值，返回 <code>Rectangle</code> 对象存放计算出的坐标X值、Y值、ScaleX值、ScaleY值。\r\n     * @param\tsprite <code>Sprite</code> 对象。\r\n     * @return  矩形对象 <code>Rectangle</code>\r\n     */\r\n    static getGlobalPosAndScale(sprite: Sprite): Rectangle {\r\n        return SpriteUtils.getGlobalRecByPoints(sprite, 0, 0, 1, 1);\r\n    }\r\n\r\n    /**\r\n    * 获取指定区域内相对于窗口左上角的transform。\r\n    * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n    * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n    * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n    * @return\r\n    */\r\n    static getTransformRelativeToWindow(coordinateSpace: Sprite, x: number, y: number): any {\r\n        var stage = ILaya.stage;\r\n\r\n        // coordinateSpace的全局缩放、坐标\r\n        var globalTransform: Rectangle = SpriteUtils.getGlobalPosAndScale(coordinateSpace);\r\n        // canvas的transform矩阵\r\n        var canvasMatrix: Matrix = stage._canvasTransform.clone();\r\n        // 在矩阵变化前前记录的canvas的坐标\r\n        var canvasLeft: number = canvasMatrix.tx;\r\n        var canvasTop: number = canvasMatrix.ty;\r\n\r\n        // 把矩阵转回0度，得到正确的画布缩放比\r\n        canvasMatrix.rotate(-Math.PI / 180 * stage.canvasDegree);\r\n        // 组合画布缩放和舞台适配缩放\r\n        canvasMatrix.scale(stage.clientScaleX, stage.clientScaleY);\r\n        // 画布是否处于正常角度的垂直角度，-90或90度\r\n        var perpendicular: boolean = (stage.canvasDegree % 180 != 0);\r\n        var tx: number, ty: number;\r\n\r\n        if (perpendicular) {\r\n            // 在舞台上的坐标\r\n            tx = y + globalTransform.y;\r\n            ty = x + globalTransform.x;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.d;\r\n            ty *= canvasMatrix.a;\r\n\r\n            // 设置了screenMode = horizontal\r\n            if (stage.canvasDegree == 90) {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的right，画布的left是视觉上的top\r\n                tx = canvasLeft - tx;\r\n                ty += canvasTop;\r\n            }\r\n            // screenMode = vertical并且设备在横屏状态，画布旋转-90度\r\n            else {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的left，画布的top是视觉上的bottom\r\n                tx += canvasLeft;\r\n                ty = canvasTop - ty;\r\n            }\r\n        }\r\n        // 没有canvas旋转\r\n        else {\r\n            // 在舞台上的坐标\r\n            tx = x + globalTransform.x;\r\n            ty = y + globalTransform.y;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.a;\r\n            ty *= canvasMatrix.d;\r\n\r\n            // 在浏览器窗口上的坐标\r\n            tx += canvasLeft;\r\n            ty += canvasTop;\r\n        }\r\n\r\n        // Safari兼容\r\n        ty += stage['_safariOffsetY'];\r\n\r\n        // 组合画布缩放和舞台适配缩放以及显示对象缩放，得到DOM原因的缩放因子\r\n        var domScaleX: number, domScaleY: number;\r\n        if (perpendicular) {\r\n            domScaleX = canvasMatrix.d * globalTransform.height;\r\n            domScaleY = canvasMatrix.a * globalTransform.width;\r\n        } else {\r\n            domScaleX = canvasMatrix.a * globalTransform.width;\r\n            domScaleY = canvasMatrix.d * globalTransform.height;\r\n        }\r\n\r\n        return { x: tx, y: ty, scaleX: domScaleX, scaleY: domScaleY };\r\n    }\r\n\r\n    /**\r\n     * 使DOM元素使用舞台内的某块区域内。\r\n     * @param\tdom\t\t\t\tDOM元素引用\r\n     * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n     * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n     * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n     * @param\twidth\t\t\t宽度\r\n     * @param\theight\t\t\t高度\r\n     */\r\n    static fitDOMElementInArea(dom: any, coordinateSpace: Sprite, x: number, y: number, width: number, height: number): void {\r\n        if (!dom._fitLayaAirInitialized) {\r\n            dom._fitLayaAirInitialized = true;\r\n            dom.style.transformOrigin = dom.style.webKittransformOrigin = \"left top\";\r\n            dom.style.position = \"absolute\"\r\n        }\r\n\r\n        var transform: any = SpriteUtils.getTransformRelativeToWindow(coordinateSpace, x, y);\r\n\r\n        // 设置dom样式\r\n        dom.style.transform = dom.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n        dom.style.width = width + 'px';\r\n        dom.style.height = height + 'px';\r\n        dom.style.left = transform.x + 'px';\r\n        dom.style.top = transform.y + 'px';\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 对传入的数组列表，根据子项的属性 Z 值进行重新排序。返回是否已重新排序的 Boolean 值。\r\n     * @param\tarray 子对象数组。\r\n     * @return\tBoolean 值，表示是否已重新排序。\r\n     */\r\n    static updateOrder(array: any[]): boolean {\r\n        if (!array || array.length < 2) return false;\r\n        var i: number = 1, j: number, len: number = array.length, key: number, c: Sprite;\r\n        while (i < len) {\r\n            j = i;\r\n            c = array[j];\r\n            key = array[j]._zOrder;\r\n            while (--j > -1) {\r\n                if (array[j]._zOrder > key) array[j + 1] = array[j];\r\n                else break;\r\n            }\r\n            array[j + 1] = c;\r\n            i++;\r\n        }\r\n        return true;\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { GrahamScan } from \"../maths/GrahamScan\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { RenderSprite } from \"../renders/RenderSprite\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { BoundsStyle } from \"./css/BoundsStyle\";\r\nimport { CacheStyle } from \"./css/CacheStyle\";\r\nimport { SpriteStyle } from \"./css/SpriteStyle\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Node } from \"./Node\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { type Stage } from \"./Stage\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Dragging } from \"../utils/Dragging\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Scene } from \"./Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\nimport type { Material } from \"../resource/Material\";\r\n\r\n/**在显示对象上按下后调度。\r\n * @eventType Event.MOUSE_DOWN\r\n * */\r\n/*[Event(name = \"mousedown\", type = \"laya.events.Event\")]*/\r\n/**在显示对象抬起后调度。\r\n * @eventType Event.MOUSE_UP\r\n * */\r\n/*[Event(name = \"mouseup\", type = \"laya.events.Event\")]*/\r\n/**鼠标在对象身上进行移动后调度\r\n * @eventType Event.MOUSE_MOVE\r\n * */\r\n/*[Event(name = \"mousemove\", type = \"laya.events.Event\")]*/\r\n/**鼠标经过对象后调度。\r\n * @eventType Event.MOUSE_OVER\r\n * */\r\n/*[Event(name = \"mouseover\", type = \"laya.events.Event\")]*/\r\n/**鼠标离开对象后调度。\r\n * @eventType Event.MOUSE_OUT\r\n * */\r\n/*[Event(name = \"mouseout\", type = \"laya.events.Event\")]*/\r\n/**鼠标点击对象后调度。\r\n * @eventType Event.CLICK\r\n * */\r\n/*[Event(name = \"click\", type = \"laya.events.Event\")]*/\r\n/**开始拖动后调度。\r\n * @eventType Event.DRAG_START\r\n * */\r\n/*[Event(name = \"dragstart\", type = \"laya.events.Event\")]*/\r\n/**拖动中调度。\r\n * @eventType Event.DRAG_MOVE\r\n * */\r\n/*[Event(name = \"dragmove\", type = \"laya.events.Event\")]*/\r\n/**拖动结束后调度。\r\n * @eventType Event.DRAG_END\r\n * */\r\n/*[Event(name = \"dragend\", type = \"laya.events.Event\")]*/\r\nexport class Sprite extends Node {\r\n    /**@internal */\r\n    _x: number = 0;\r\n    /**@internal */\r\n    _y: number = 0;\r\n    /**@internal */\r\n    _width: number = 0;\r\n    /**@internal */\r\n    _height: number = 0;\r\n    /***@internal X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\r\n    _anchorX: number = 0;\r\n    /***@internal Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\r\n    _anchorY: number = 0;\r\n    /**@internal */\r\n    _visible: boolean = true;\r\n    /**@internal 鼠标状态，0:auto,1:mouseEnabled=false,2:mouseEnabled=true。*/\r\n    _mouseState: number = 0;\r\n    /**@internal z排序，数值越大越靠前。*/\r\n    _zOrder: number = 0;\r\n    /**@internal */\r\n    _renderType: number = 0;\r\n    /**@internal */\r\n    _transform: Matrix | null = null;\r\n    /**@internal */\r\n    protected _tfChanged: boolean = false;\r\n    /**@internal */\r\n    protected _repaint: number = SpriteConst.REPAINT_NONE;\r\n    /**@internal */\r\n    private _texture: Texture | null = null;\r\n    /**@internal */\r\n    private _sizeFlag: number = 0;\r\n\r\n    //以下变量为系统调用，请不要直接使用\r\n    /**@internal */\r\n    _style: SpriteStyle = SpriteStyle.EMPTY;\r\n    /**@internal */\r\n    _cacheStyle: CacheStyle = CacheStyle.EMPTY;\r\n    /**@internal */\r\n    _boundStyle: BoundsStyle | null = null;\r\n    /**@internal */\r\n    _graphics: Graphics | null = null;\r\n\r\n    _ownGraphics: boolean = false;\r\n\r\n    /**\r\n     * <p>鼠标事件与此对象的碰撞检测是否可穿透。碰撞检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\r\n     * <p>穿透表示鼠标事件发生的位置处于本对象绘图区域内时，才算命中，而与对象宽高和值为Rectangle对象的hitArea属性无关。如果sprite.hitArea值是HitArea对象，表示显式声明了此对象的鼠标事件响应区域，而忽略对象的宽高、mouseThrough属性。</p>\r\n     * <p>影响对象鼠标事件响应区域的属性为：width、height、hitArea，优先级顺序为：hitArea(type:HitArea)>hitArea(type:Rectangle)>width/height。</p>\r\n     * @default false\t不可穿透，此对象的鼠标响应区域由width、height、hitArea属性决定。</p>\r\n     */\r\n    mouseThrough: boolean = false;\r\n    /**\r\n     * <p>指定是否自动计算宽高数据。默认值为 false 。</p>\r\n     * <p>Sprite宽高默认为0，并且不会随着绘制内容的变化而变化，如果想根据绘制内容获取宽高，可以设置本属性为true，或者通过getBounds方法获取。设置为true，对性能有一定影响。</p>\r\n     */\r\n    autoSize: boolean = false;\r\n    /**\r\n     * <p>指定鼠标事件检测是优先检测自身，还是优先检测其子对象。鼠标事件检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\r\n     * <p>如果为false，优先检测子对象，当有子对象被命中时，中断检测，获得命中目标。如果未命中任何子对象，最后再检测此对象；如果为true，则优先检测本对象，如果本对象没有被命中，直接中断检测，表示没有命中目标；如果本对象被命中，则进一步递归检测其子对象，以确认最终的命中目标。</p>\r\n     * <p>合理使用本属性，能减少鼠标事件检测的节点，提高性能。可以设置为true的情况：开发者并不关心此节点的子节点的鼠标事件检测结果，也就是以此节点作为其子节点的鼠标事件检测依据。</p>\r\n     * <p>Stage对象和UI的View组件默认为true。</p>\r\n     * @default false\t优先检测此对象的子对象，当递归检测完所有子对象后，仍然没有找到目标对象，最后再检测此对象。\r\n     */\r\n    hitTestPrior: boolean = false;\r\n\r\n    /** 如果节点需要加载相关的皮肤，但放在不同域，这里可以设置 **/\r\n    _skinBaseUrl: string;\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._style && this._style.recover();\r\n        this._cacheStyle && this._cacheStyle.recover();\r\n        this._boundStyle && this._boundStyle.recover();\r\n        this._transform && this._transform.recover();\r\n        this._style = null;\r\n        this._cacheStyle = null;\r\n        this._boundStyle = null;\r\n        this._transform = null;\r\n        this._texture && this._texture._removeReference();\r\n        this._texture = null;\r\n        this._graphics && this._ownGraphics && this._graphics.destroy();\r\n        this._graphics = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get scene(): Scene {\r\n        return <Scene>this._scene;\r\n    }\r\n\r\n    /**根据zOrder进行重新排序。*/\r\n    updateZOrder(): void {\r\n        SpriteUtils.updateOrder(this._children) && this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getBoundsStyle(): BoundsStyle {\r\n        if (!this._boundStyle) this._boundStyle = BoundsStyle.create();\r\n        return this._boundStyle;\r\n    }\r\n\r\n    /**@internal */\r\n    _setCustomRender(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 设置是否开启自定义渲染，只有开启自定义渲染，才能使用customRender函数渲染。\r\n     */\r\n    set customRenderEnable(b: boolean) {\r\n        if (b) {\r\n            this._renderType |= SpriteConst.CUSTOM;\r\n            this._setCustomRender();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指定显示对象是否缓存为静态图像，cacheAs时，子对象发生变化，会自动重新缓存，同时也可以手动调用reCache方法更新缓存。\r\n     * 建议把不经常变化的“复杂内容”缓存为静态图像，能极大提高渲染性能。cacheAs有\"none\"，\"normal\"和\"bitmap\"三个值可选。\r\n     * 默认为\"none\"，不做任何缓存。\r\n     * 当值为\"normal\"时，canvas模式下进行画布缓存，webgl模式下进行命令缓存。\r\n     * 当值为\"bitmap\"时，canvas模式下进行依然是画布缓存，webgl模式下使用renderTarget缓存。\r\n     * webgl下renderTarget缓存模式缺点：会额外创建renderTarget对象，增加内存开销，缓存面积有最大2048限制，不断重绘时会增加CPU开销。优点：大幅减少drawcall，渲染性能最高。\r\n     * webgl下命令缓存模式缺点：只会减少节点遍历及命令组织，不会减少drawcall数，性能中等。优点：没有额外内存开销，无需renderTarget支持。\r\n     */\r\n    get cacheAs(): string {\r\n        return this._cacheStyle.userSetCache;\r\n    }\r\n\r\n    /**@internal */\r\n    _setCacheAs(value: string): void {\r\n        //_dataf32[SpriteConst.POSCACHE] = value == \"bitmap\"?2:(value == \"normal\"?1:0);\r\n    }\r\n\r\n    set cacheAs(value: string) {\r\n        if (value === this._cacheStyle.userSetCache) return;\r\n        if ('bitmap' == value && !(this._cacheStyle.canvas instanceof HTMLCanvas)) {\r\n            this._cacheStyle.canvas = null;\r\n        }\r\n\r\n        this._getCacheStyle().userSetCache = value;\r\n\r\n        if (this.mask && value === 'normal') return;\r\n        this._setCacheAs(value);\r\n        this._checkCanvasEnable();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * 更新_cnavas相关的状态\r\n     */\r\n    private _checkCanvasEnable(): void {\r\n        var tEnable: boolean = this._cacheStyle.needEnableCanvasRender();\r\n        this._getCacheStyle().enableCanvasRender = tEnable;\r\n        if (tEnable) {\r\n            if (this._cacheStyle.needBitmapCache()) {\r\n                this._cacheStyle.cacheAs = \"bitmap\";\r\n            } else {\r\n                this._cacheStyle.cacheAs = this._cacheStyle.userSetCache;\r\n            }\r\n            this._cacheStyle.reCache = true;\r\n            this._renderType |= SpriteConst.CANVAS;\r\n        } else {\r\n            this._cacheStyle.cacheAs = \"none\";\r\n            this._cacheStyle.releaseContext();\r\n            this._renderType &= ~SpriteConst.CANVAS;\r\n        }\r\n        this._setCacheAs(this._cacheStyle.cacheAs);\r\n    }\r\n\r\n    /**设置cacheAs为非空时此值才有效，staticCache=true时，子对象变化时不会自动更新缓存，只能通过调用reCache方法手动刷新。*/\r\n    get staticCache(): boolean {\r\n        return this._cacheStyle.staticCache;\r\n    }\r\n\r\n    set staticCache(value: boolean) {\r\n        this._getCacheStyle().staticCache = value;\r\n        if (!value) this.reCache();\r\n    }\r\n\r\n    /**在设置cacheAs的情况下，调用此方法会重新刷新缓存。*/\r\n    reCache(): void {\r\n        this._cacheStyle.reCache = true;\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n    }\r\n\r\n    getRepaint(): number {\r\n        return this._repaint;\r\n    }\r\n\r\n    /**@internal */\r\n    _setX(value: number): void {\r\n        this._x = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setY(value: number): void {\r\n        this._y = value;\r\n    }\r\n\r\n    /**表示显示对象相对于父容器的水平方向坐标值。*/\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._x !== value) {\r\n            this._setX(value);\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._cacheStyle.maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**表示显示对象相对于父容器的垂直方向坐标值。*/\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._y !== value) {\r\n            this._setY(value);\r\n\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._cacheStyle.maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的宽度，单位为像素，默认为0。</p>\r\n     * <p>此宽度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\r\n     * <p>可以通过getbounds获取显示对象图像的实际宽度。</p>\r\n     */\r\n    get width(): number {\r\n        return this.get_width();\r\n    }\r\n\r\n    set width(value: number) {\r\n        this.set_width(value);\r\n    }\r\n\r\n    set_width(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~1;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 1;\r\n        else\r\n            this._sizeFlag &= ~1;\r\n        if (this._width !== value || flag != this._sizeFlag) {\r\n            this._width = value;\r\n            this._setWidth(value);\r\n            this._setPivotX(this._anchorX * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n\r\n    get_width(): number {\r\n        if (!this.autoSize) return (this._width == 0 && (this._sizeFlag & 1) == 0 && this.texture) ? this.texture.width : this._width;\r\n        if (this.texture) return this.texture.width;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().width;\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的高度，单位为像素，默认为0。</p>\r\n     * <p>此高度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\r\n     * <p>可以通过getbounds获取显示对象图像的实际高度。</p>\r\n     */\r\n    get height(): number {\r\n        return this.get_height();\r\n    }\r\n\r\n    set height(value: number) {\r\n        this.set_height(value);\r\n    }\r\n\r\n    // for ts\r\n    set_height(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~2;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 2;\r\n        else\r\n            this._sizeFlag &= ~2;\r\n        if (this._height !== value || flag != this._sizeFlag) {\r\n            this._height = value;\r\n            this._setHeight(value);\r\n            this._setPivotY(this._anchorY * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_height(): number {\r\n        if (!this.autoSize) return (this._height == 0 && (this._sizeFlag & 2) == 0 && this.texture) ? this.texture.height : this._height;\r\n        if (this.texture) return this.texture.height;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().height;\r\n    }\r\n\r\n    get _isWidthSet() {\r\n        return this._width != 0 || (this._sizeFlag & 1) != 0;\r\n    }\r\n\r\n    get _isHeightSet() {\r\n        return this._height != 0 || (this._sizeFlag & 2) != 0;\r\n    }\r\n\r\n    /**@internal */\r\n    _setWidth(value: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _setHeight(value: number): void {\r\n    }\r\n\r\n    protected _shouldRefreshLayout() {\r\n    }\r\n\r\n    /**\r\n     * <p>对象的显示宽度（以像素为单位）。</p>\r\n     */\r\n    get displayWidth(): number {\r\n        return this.width * this.scaleX;\r\n    }\r\n\r\n    /**\r\n     * <p>对象的显示高度（以像素为单位）。</p>\r\n     */\r\n    get displayHeight(): number {\r\n        return this.height * this.scaleY;\r\n    }\r\n\r\n    /**\r\n     * 设置对象bounds大小，如果有设置，则不再通过getBounds计算，合理使用能提高性能。\r\n     * @param\tbound bounds矩形区域\r\n     */\r\n    setSelfBounds(bound: Rectangle): void {\r\n        this._getBoundsStyle().userBounds = bound;\r\n    }\r\n\r\n    /**\r\n     * <p>获取本对象在父容器坐标系的矩形显示区域。</p>\r\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\r\n     * @return 矩形区域。\r\n     */\r\n    getBounds(): Rectangle {\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._boundPointsToParent());\r\n    }\r\n\r\n    /**\r\n     * 获取本对象在自己坐标系的矩形显示区域。\r\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\r\n     * @return 矩形区域。\r\n     */\r\n    getSelfBounds(): Rectangle {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds;\r\n        if (!this._graphics && this._children.length === 0 && !this._texture)\r\n            return Rectangle.TEMP.setTo(0, 0, this.width, this.height); // 如果没有graphics则取对象指定的大小。原来是0000\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._getBoundPointsM(false));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取本对象在父容器坐标系的显示区域多边形顶点列表。\r\n     * 当显示对象链中有旋转时，返回多边形顶点列表，无旋转时返回矩形的四个顶点。\r\n     * @param ifRotate\t（可选）之前的对象链中是否有旋转。\r\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _boundPointsToParent(ifRotate: boolean = false): any[] {\r\n        let pX: number = 0, pY: number = 0;\r\n        if (this._style) {\r\n            pX = this.pivotX;\r\n            pY = this.pivotY;\r\n            ifRotate = ifRotate || (this._style.rotation !== 0);\r\n            if (this._style.scrollRect) {\r\n                pX += this._style.scrollRect.x;\r\n                pY += this._style.scrollRect.y;\r\n            }\r\n        }\r\n        let pList: any[] = this._getBoundPointsM(ifRotate);\r\n        if (!pList || pList.length < 1) return pList;\r\n\r\n        if (pList.length != 8) {\r\n            pList = ifRotate ? GrahamScan.scanPList(pList) : Rectangle._getWrapRec(pList, Rectangle.TEMP)._getBoundPoints();\r\n        }\r\n\r\n        if (!this.transform) {\r\n            Utils.transPointList(pList, this._x - pX, this._y - pY);\r\n            return pList;\r\n        }\r\n        let tPoint = Point.TEMP;\r\n        let len = pList.length;\r\n        for (let i = 0; i < len; i += 2) {\r\n            tPoint.x = pList[i];\r\n            tPoint.y = pList[i + 1];\r\n            this.toParentPoint(tPoint);\r\n            pList[i] = tPoint.x;\r\n            pList[i + 1] = tPoint.y;\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * 返回此实例中的绘图对象（ <code>Graphics</code> ）的显示区域，不包括子对象。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 一个 Rectangle 对象，表示获取到的显示区域。\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._graphics) return Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        return this._graphics.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取自己坐标系的显示区域多边形顶点列表\r\n     * @param ifRotate\t（可选）当前的显示对象链是否由旋转\r\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds._getBoundPoints();\r\n        if (!this._boundStyle) this._getBoundsStyle();\r\n        let rst = this._boundStyle.temBM;\r\n        if (!rst) rst = this._boundStyle.temBM = [];\r\n        if (this._style.scrollRect) {\r\n            rst.length = 0;\r\n            var rec: Rectangle = Rectangle.TEMP;\r\n            rec.copyFrom(this._style.scrollRect);\r\n            rst.push(...rec._getBoundPoints());\r\n            return rst;\r\n        }\r\n        let pList: any[];\r\n        if (this._graphics) {\r\n            pList = this._graphics.getBoundPoints();\r\n        } else {\r\n            rst.length = 0;\r\n            pList = rst;\r\n        }\r\n        if (this._texture) {\r\n            rec = Rectangle.TEMP;\r\n            rec.setTo(0, 0, this.width || this._texture.width, this.height || this._texture.height);\r\n            pList.push(...rec._getBoundPoints());\r\n        }\r\n        //处理子对象区域\r\n        let chidren = this._children;\r\n        for (let i = 0, n = chidren.length; i < n; i++) {\r\n            let child = <Sprite>chidren[i]; //_visible===true隐含了是Sprite\r\n            if (child._visible === true && child._cacheStyle.maskParent != this) {\r\n                let cList = child._boundPointsToParent(ifRotate);\r\n                if (cList) {\r\n                    if (pList)\r\n                        pList.push(...cList);\r\n                    else\r\n                        pList = cList;\r\n                }\r\n            }\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取cache数据。\r\n     * @return  cache数据 CacheStyle 。\r\n     */\r\n    _getCacheStyle(): CacheStyle {\r\n        this._cacheStyle === CacheStyle.EMPTY && (this._cacheStyle = CacheStyle.create());\r\n        return this._cacheStyle;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取样式。\r\n     * @return  样式 Style 。\r\n     */\r\n    getStyle(): SpriteStyle {\r\n        this._style === SpriteStyle.EMPTY && (this._style = SpriteStyle.create());\r\n        return this._style;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置样式。\r\n     * @param\tvalue 样式。\r\n     */\r\n    setStyle(value: SpriteStyle): void {\r\n        this._style = value;\r\n    }\r\n\r\n    /**X轴缩放值，默认值为1。设置为负数，可以实现水平反转效果，比如scaleX=-1。*/\r\n    get scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    set scaleX(value: number) {\r\n        this.set_scaleX(value);\r\n    }\r\n\r\n    /**Y轴缩放值，默认值为1。设置为负数，可以实现垂直反转效果，比如scaleX=-1。*/\r\n    get scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n    set scaleY(value: number) {\r\n        this.set_scaleY(value);\r\n    }\r\n\r\n    set_scaleX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setScaleX(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    set_scaleY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleY !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setScaleY(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n\r\n    /**@internal */\r\n    _setScaleX(value: number): void {\r\n        this._style.scaleX = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setScaleY(value: number): void {\r\n        this._style.scaleY = value;\r\n    }\r\n\r\n    /**旋转角度，默认值为0。以角度为单位。*/\r\n    get rotation(): number {\r\n        return this._style.rotation;\r\n    }\r\n\r\n    set rotation(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.rotation !== value) {\r\n            if (this.cacheGlobal) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true)\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            this._setRotation(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setRotation(value: number): void {\r\n        this.getStyle().rotation = value;\r\n    }\r\n\r\n    /**水平倾斜角度，默认值为0。以角度为单位。*/\r\n    get skewX(): number {\r\n        return this._style.skewX;\r\n    }\r\n\r\n    set skewX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewX !== value) {\r\n            this._setSkewX(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setSkewX(value: number): void {\r\n        this._style.skewX = value;\r\n    }\r\n\r\n    /**垂直倾斜角度，默认值为0。以角度为单位。*/\r\n    get skewY(): number {\r\n        return this._style.skewY;\r\n    }\r\n\r\n    set skewY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewY !== value) {\r\n            this._setSkewY(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setSkewY(value: number): void {\r\n        this._style.skewY = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _createTransform(): Matrix {\r\n        return Matrix.create();\r\n    }\r\n\r\n    /**@private */\r\n    protected _adjustTransform(): Matrix {\r\n        this._tfChanged = false;\r\n        var style: SpriteStyle = this._style;\r\n        var sx: number = style.scaleX, sy: number = style.scaleY;\r\n        var sskx: number = style.skewX;\r\n        var ssky: number = style.skewY;\r\n        var rot: number = style.rotation;\r\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\r\n        if (rot || sx !== 1 || sy !== 1 || sskx !== 0 || ssky !== 0) {\r\n            m._bTransform = true;\r\n            var skx: number = (rot - sskx) * 0.0174532922222222;//laya.CONST.PI180;\r\n            var sky: number = (rot + ssky) * 0.0174532922222222;\r\n            var cx: number = Math.cos(sky);\r\n            var ssx: number = Math.sin(sky);\r\n            var cy: number = Math.sin(skx);\r\n            var ssy: number = Math.cos(skx);\r\n            m.a = sx * cx;\r\n            m.b = sx * ssx;\r\n            m.c = -sy * cy;\r\n            m.d = sy * ssy;\r\n            m.tx = m.ty = 0;\r\n        } else {\r\n            m.identity();\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        return m;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTransform(value: Matrix): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>对象的矩阵信息。通过设置矩阵可以实现节点旋转，缩放，位移效果。</p>\r\n     * <p>矩阵更多信息请参考 <code>Matrix</code></p>\r\n     */\r\n    get transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    set transform(value: Matrix) {\r\n        this.set_transform(value);\r\n    }\r\n\r\n    get_transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    set_transform(value: Matrix): void {\r\n        this._tfChanged = false;\r\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\r\n        value.copyTo(m);\r\n        this._setTransform(m);\r\n        //设置transform时重置x,y\r\n        if (value) {\r\n            this._x = m.tx;\r\n            this._y = m.ty;\r\n            m.tx = m.ty = 0;\r\n        }\r\n        if (value) this._renderType |= SpriteConst.TRANSFORM;\r\n        else {\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        this.parentRepaint();\r\n    }\r\n\r\n    /**@internal */\r\n    _setPivotX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotX = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _getPivotX(): number {\r\n        return this._style.pivotX;\r\n    }\r\n\r\n    /**@internal */\r\n    _setPivotY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotY = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _getPivotY(): number {\r\n        return this._style.pivotY;\r\n    }\r\n\r\n    /**X轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\r\n    get pivotX(): number {\r\n        return this._getPivotX();\r\n    }\r\n\r\n    set pivotX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotX != value) {\r\n            this._setPivotX(value);\r\n            let t = this.width;\r\n            if (t != 0) this._anchorX = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**Y轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\r\n    get pivotY(): number {\r\n        return this._getPivotY();\r\n    }\r\n\r\n    set pivotY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotY != value) {\r\n            this._setPivotY(value);\r\n            let t = this.height;\r\n            if (t != 0) this._anchorY = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\r\n    get anchorX(): number {\r\n        return this.get_anchorX();\r\n    }\r\n\r\n    get_anchorX(): number {\r\n        return this._anchorX;\r\n    }\r\n\r\n    set anchorX(value: number) {\r\n        this.set_anchorX(value);\r\n    }\r\n\r\n    set_anchorX(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorX != value) {\r\n            this._anchorX = value;\r\n            if (value != null) {\r\n                this._setPivotX(value * this.width);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\r\n    get anchorY(): number {\r\n        return this.get_anchorY();\r\n    }\r\n\r\n    get_anchorY(): number {\r\n        return this._anchorY;\r\n    }\r\n\r\n    set anchorY(value: number) {\r\n        this.set_anchorY(value);\r\n    }\r\n\r\n    set_anchorY(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorY != value) {\r\n            this._anchorY = value;\r\n            if (value != null) {\r\n                this._setPivotY(value * this.height);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setAlpha(value: number): void {\r\n        if (this._style.alpha !== value) {\r\n            var style: SpriteStyle = this.getStyle();\r\n            style.alpha = value;\r\n            if (value !== 1) this._renderType |= SpriteConst.ALPHA;\r\n            else this._renderType &= ~SpriteConst.ALPHA;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _getAlpha(): number {\r\n        return this._style.alpha;\r\n    }\r\n\r\n    /**透明度，值为0-1，默认值为1，表示不透明。更改alpha值会影响drawcall。*/\r\n    get alpha(): number {\r\n        return this._getAlpha();\r\n    }\r\n\r\n    set alpha(value: number) {\r\n        value = value < 0 ? 0 : (value > 1 ? 1 : value);\r\n        this._setAlpha(value);\r\n    }\r\n\r\n    /**表示是否可见，默认为true。如果设置不可见，节点将不被渲染。*/\r\n    get visible(): boolean {\r\n        return this.get_visible();\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this.set_visible(value);\r\n    }\r\n\r\n    get_visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    set_visible(value: boolean): void {\r\n        if (this._visible !== value) {\r\n            this._visible = value;\r\n            this.parentRepaint(SpriteConst.REPAINT_ALL);\r\n        }\r\n    }\r\n\r\n    /**指定要使用的混合模式。目前只支持\"lighter\"。*/\r\n    get blendMode(): string {\r\n        return this._style.blendMode;\r\n    }\r\n\r\n    set blendMode(value: string) {\r\n        if (this.getStyle().blendMode != value) {\r\n            this.getStyle().blendMode = value;\r\n            if (value && value != \"source-over\")\r\n                this._renderType |= SpriteConst.BLEND;\r\n            else\r\n                this._renderType &= ~SpriteConst.BLEND;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**绘图对象。封装了绘制位图和矢量图的接口，Sprite所有的绘图操作都通过Graphics来实现的。*/\r\n    get graphics(): Graphics {\r\n        if (!this._graphics) {\r\n            this.graphics = new Graphics();\r\n            this._ownGraphics = true;\r\n        }\r\n        return this._graphics;\r\n    }\r\n\r\n    set graphics(value: Graphics) {\r\n        this.setGraphics(value, false);\r\n    }\r\n\r\n    setGraphics(value: Graphics, transferOwnership: boolean) {\r\n        if (this._graphics) {\r\n            this._graphics._sp = null;\r\n            if (this._ownGraphics)\r\n                this._graphics.destroy();\r\n        }\r\n        this._ownGraphics = transferOwnership;\r\n        this._graphics = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.GRAPHICS;\r\n            value._sp = this;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    get material() {\r\n        return this._graphics?.material;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set material(value: Material) {\r\n        if (this._graphics == null && value == null)\r\n            return;\r\n\r\n        this.graphics.material = value;\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的滚动矩形范围，具有裁剪效果(如果只想限制子对象渲染区域，请使用viewport)</p>\r\n     * <p> srollRect和viewport的区别：<br/>\r\n     * 1.srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\r\n     * 2.设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\r\n     */\r\n    get scrollRect(): Rectangle {\r\n        return this._style.scrollRect;\r\n    }\r\n\r\n    set scrollRect(value: Rectangle) {\r\n        if (this.getStyle().scrollRect == null && value == null)\r\n            return;\r\n\r\n        this.getStyle().scrollRect = value;\r\n        //viewport = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.CLIP;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.CLIP;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * <p>设置坐标位置。相当于分别设置x和y属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pos(...).scale(...);</p>\r\n     * @param\tx\t\t\tX轴坐标。\r\n     * @param\ty\t\t\tY轴坐标。\r\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.x=value进行赋值，极速模式直接调用内部函数处理，如果未重写x,y属性，建议设置为急速模式性能更高。\r\n     * @return\t返回对象本身。\r\n     */\r\n    pos(x: number, y: number, speedMode: boolean = false): Sprite {\r\n        if (this._x !== x || this._y !== y) {\r\n            if (this._destroyed) return this;\r\n            if (speedMode) {\r\n                this._setX(x);\r\n                this._setY(y);\r\n                this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n                var p: Sprite = this._cacheStyle.maskParent;\r\n                if (p) {\r\n                    p.repaint(SpriteConst.REPAINT_CACHE);\r\n                }\r\n\r\n                if (this.cacheGlobal) {\r\n                    let flag: number = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\r\n                    this._setGlobalCacheFlag(flag, true);\r\n                    this._syncGlobalFlag(flag, true);\r\n                }\r\n\r\n            } else {\r\n                this.x = x;\r\n                this.y = y;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置轴心点。相当于分别设置pivotX和pivotY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pivot(...).pos(50, 100);</p>\r\n     * @param\tx X轴心点。\r\n     * @param\ty Y轴心点。\r\n     * @return\t返回对象本身。\r\n     */\r\n    pivot(x: number, y: number): Sprite {\r\n        this.pivotX = x;\r\n        this.pivotY = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置宽高。相当于分别设置width和height属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.size(...).pos(50, 100);</p>\r\n     * @param\twidth 宽度值。\r\n     * @param\thegiht 高度值。\r\n     * @return\t返回对象本身。\r\n     */\r\n    size(width: number, height: number): Sprite {\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置缩放。相当于分别设置scaleX和scaleY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.scale(...).pos(50, 100);</p>\r\n     * @param\tscaleX\t\tX轴缩放比例。\r\n     * @param\tscaleY\t\tY轴缩放比例。\r\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.scaleX=value进行赋值，极速模式直接调用内部函数处理，如果未重写scaleX,scaleY属性，建议设置为急速模式性能更高。\r\n     * @return\t返回对象本身。\r\n     */\r\n    scale(scaleX: number, scaleY: number, speedMode?: boolean): Sprite {\r\n        if (this._destroyed) return this;\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX != scaleX || style.scaleY != scaleY) {\r\n            if (speedMode) {\r\n                this._setScaleX(scaleX);\r\n                this._setScaleY(scaleY);\r\n                this._setTranformChange();\r\n                this._shouldRefreshLayout();\r\n            } else {\r\n                this.scaleX = scaleX;\r\n                this.scaleY = scaleY;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置倾斜角度。相当于分别设置skewX和skewY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.skew(...).pos(50, 100);</p>\r\n     * @param\tskewX 水平倾斜角度。\r\n     * @param\tskewY 垂直倾斜角度。\r\n     * @return\t返回对象本身\r\n     */\r\n    skew(skewX: number, skewY: number): Sprite {\r\n        this.skewX = skewX;\r\n        this.skewY = skewY;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 更新、呈现显示对象。由系统调用。\r\n     * @param\tcontext 渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    render(ctx: Context, x: number, y: number): void {\r\n        RenderSprite.renders[this._renderType]._fun(this, ctx, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    /**\r\n     * <p>绘制 当前<code>Sprite</code> 到 <code>Canvas</code> 上，并返回一个HtmlCanvas。</p>\r\n     * <p>绘制的结果可以当作图片源，再次绘制到其他Sprite里面，示例：</p>\r\n     *\r\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\r\n     * var sp:Sprite = new Sprite();//创建精灵\r\n     * sp.graphics.drawTexture(htmlCanvas.getTexture());//把截图绘制到精灵上\r\n     * Laya.stage.addChild(sp);//把精灵显示到舞台\r\n     *\r\n     * <p>也可以获取原始图片数据，分享到网上，从而实现截图效果，示例：</p>\r\n     *\r\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\r\n     * htmlCanvas.toBase64(\"image/png\",0.9);//打印图片base64信息，可以发给服务器或者保存为图片\r\n     *\r\n     * @param\tcanvasWidth 画布宽度。\r\n     * @param\tcanvasHeight 画布高度。\r\n     * @param\tx 绘制的 X 轴偏移量。\r\n     * @param\ty 绘制的 Y 轴偏移量。\r\n     * @return  HTMLCanvas 对象。\r\n     */\r\n    drawToCanvas(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\r\n        //console.log('drawToCanvas is deprecated, please use drawToTexture');\r\n        return Sprite.drawToCanvas(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY);\r\n    }\r\n\r\n    /**\r\n     * 绘制到一个Texture对象\r\n     * @param canvasWidth \r\n     * @param canvasHeight \r\n     * @param offsetX \r\n     * @param offsetY \r\n     */\r\n    drawToTexture(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\r\n        let res = Sprite.drawToTexture(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY, rt);\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 把当前对象渲染到指定的贴图上。贴图由外部指定，避免每次都创建。\r\n     * @param offx \r\n     * @param offy \r\n     * @param tex 输出渲染结果\r\n     */\r\n    drawToTexture3D(offx: number, offy: number, tex: Texture2D) {\r\n        throw 'not implement'\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 绘制到画布。\r\n     */\r\n    static drawToCanvas(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\r\n        offsetX -= sprite.x;\r\n        offsetY -= sprite.y;\r\n        offsetX |= 0;\r\n        offsetY |= 0;\r\n        canvasWidth |= 0;\r\n        canvasHeight |= 0;\r\n        var ctx: Context = new Context();\r\n        ctx.size(canvasWidth, canvasHeight);\r\n        ctx.asBitmap = true;\r\n        ctx._targets.start();\r\n        ctx._targets.clear(0, 0, 0, 0);\r\n        RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n        ctx.flush();\r\n        ctx._targets.end();\r\n        ctx._targets.restore();\r\n        var dt: Uint8Array = ctx._targets.getData(0, 0, canvasWidth, canvasHeight) as Uint8Array;\r\n        ctx.destroy();\r\n        var imgdata: any = new ImageData(canvasWidth, canvasHeight);;\t//创建空的imagedata。因为下面要翻转，所以不直接设置内容\r\n        //翻转getData的结果。\r\n        var lineLen: number = canvasWidth * 4;\r\n        var temp: Uint8Array = new Uint8Array(lineLen);\r\n        var dst: Uint8Array = imgdata.data;\r\n        var y: number = canvasHeight - 1;\r\n        var off: number = y * lineLen;\r\n        var srcoff: number = 0;\r\n        for (; y >= 0; y--) {\r\n            dst.set(dt.subarray(srcoff, srcoff + lineLen), off);\r\n            off -= lineLen;\r\n            srcoff += lineLen;\r\n        }\r\n        //imgdata.data.set(dt);\r\n        //画到2d画布上\r\n        var canv: HTMLCanvas = new HTMLCanvas(true);\r\n        canv.size(canvasWidth, canvasHeight);\r\n        var ctx2d: CanvasRenderingContext2D = <CanvasRenderingContext2D>(canv.getContext('2d') as any);\r\n        ctx2d.putImageData(imgdata, 0, 0);;\r\n        return canv;\r\n    }\r\n\r\n    static drawtocanvCtx: Context;\r\n    /**\r\n     * @private \r\n     * \r\n     */\r\n    static drawToTexture(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\r\n        Context.set2DRenderConfig();\r\n        if (!Sprite.drawtocanvCtx) {\r\n            Sprite.drawtocanvCtx = new Context();\r\n        }\r\n        offsetX -= sprite.x;\r\n        offsetY -= sprite.y;\r\n        offsetX |= 0;\r\n        offsetY |= 0;\r\n        canvasWidth |= 0;\r\n        canvasHeight |= 0;\r\n        var ctx = rt ? Sprite.drawtocanvCtx : new Context();\r\n        ctx.clear();\r\n        ctx.size(canvasWidth, canvasHeight);\r\n        if (rt) {\r\n            ctx._targets = rt;\r\n        } else {\r\n            ctx.asBitmap = true;\r\n        }\r\n        let texRT;\r\n        if (ctx._targets) {\r\n            ctx._targets.start();\r\n            let color = RenderTexture2D._clearColor;\r\n            ctx._targets.clear(color.r, color.g, color.b, color.a);\r\n            ctx._drawingToTexture = true;\r\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n            ctx._drawingToTexture = false;\r\n            ctx.flush();\r\n            ctx._targets.end();\r\n            ctx._targets.restore();\r\n            if (!rt)\r\n                texRT = ctx._targets;\r\n            ctx._targets = null;//IDE闪\r\n        }\r\n        if (!rt) {\r\n            var rtex: Texture = new Texture(((<Texture2D>(ctx._targets as any))) ? ((<Texture2D>(ctx._targets as any))) : texRT, Texture.INV_UV);\r\n            ctx.destroy(true);// 保留 _targets\r\n            return rtex;\r\n        }\r\n        sprite._repaint = 0;\r\n        return rt;\r\n    }\r\n\r\n    /**\r\n     * <p>自定义更新、呈现显示对象。一般用来扩展渲染模式，请合理使用，可能会导致在加速器上无法渲染。</p>\r\n     * <p><b>注意</b>不要在此函数内增加或删除树节点，否则会对树节点遍历造成影响。</p>\r\n     * @param\tcontext  渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    customRender(context: Context, x: number, y: number): void {\r\n        //_renderType |= SpriteConst.CUSTOM;\r\n        this._repaint = SpriteConst.REPAINT_ALL;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 应用滤镜。\r\n     */\r\n    _applyFilters(): void {\r\n        // canvas 模式不支持\r\n    }\r\n\r\n    /**滤镜集合。可以设置多个滤镜组合。*/\r\n    get filters(): any[] {\r\n        return this._cacheStyle.filters;\r\n    }\r\n\r\n    set filters(value: any[]) {\r\n        value && value.length === 0 && (value = null);\r\n        //如果之前有filter了先去掉\r\n        let oldFilters = this._getCacheStyle().filters;\r\n        if(oldFilters){\r\n            for(let f of oldFilters){\r\n                f.off(Filter.EVENT_CHANGE,this,this.repaint);\r\n            }\r\n        }\r\n        this._getCacheStyle().filters = value ? value.slice() : null;\r\n        if(value){\r\n            for(let f of value){\r\n                f.on(Filter.EVENT_CHANGE,this,this.repaint);\r\n            }\r\n        }\r\n        if (value)\r\n            this._renderType |= SpriteConst.FILTERS;\r\n        else\r\n            this._renderType &= ~SpriteConst.FILTERS;\r\n\r\n        if (value && value.length > 0) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n            if (!(value.length == 1 && (value[0] instanceof ColorFilter))) {\r\n                this._getCacheStyle().cacheForFilters = true;\r\n                this._checkCanvasEnable();\r\n            }\r\n        } else {\r\n            if (this._cacheStyle.cacheForFilters) {\r\n                this._cacheStyle.cacheForFilters = false;\r\n                this._checkCanvasEnable();\r\n            }\r\n        }\r\n        this._getCacheStyle().hasGlowFilter = this._isHaveGlowFilter();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 查看当前原件中是否包含发光滤镜。\r\n     * @return 一个 Boolean 值，表示当前原件中是否包含发光滤镜。\r\n     */\r\n    _isHaveGlowFilter(): boolean {\r\n        var i: number, len: number;\r\n        if (this.filters) {\r\n            for (i = 0; i < this.filters.length; i++) {\r\n                if (this.filters[i].type == Filter.GLOW) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        for (i = 0, len = this._children.length; i < len; i++) {\r\n            if ((<Sprite>this._children[i])._isHaveGlowFilter()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 把本地坐标转换为相对stage的全局坐标。\r\n     * @param point\t\t\t\t本地坐标点。\r\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\r\n     * @return 转换后的坐标的点。\r\n     */\r\n    localToGlobal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint === true) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            point = ele.toParentPoint(point);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 把stage的全局坐标转换为本地坐标。\r\n     * @param point\t\t\t\t全局坐标点。\r\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\r\n     * @return 转换后的坐标的点。\r\n     */\r\n    globalToLocal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        var list: any[] = [];\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            list.push(ele);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n        var i: number = list.length - 1;\r\n        while (i >= 0) {\r\n            ele = list[i];\r\n            point = ele.fromParentPoint(point);\r\n            i--;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 将本地坐标系坐标转转换到父容器坐标系。\r\n     * @param point 本地坐标点。\r\n     * @return  转换后的点。\r\n     */\r\n    toParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this.pivotX;\r\n        point.y -= this.pivotY;\r\n        if (this.transform) {\r\n            this._transform.transformPoint(point);\r\n        }\r\n        point.x += this._x;\r\n        point.y += this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x -= scroll.x;\r\n            point.y -= scroll.y;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 将父容器坐标系坐标转换到本地坐标系。\r\n     * @param point 父容器坐标点。\r\n     * @return  转换后的点。\r\n     */\r\n    fromParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this._x;\r\n        point.y -= this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x += scroll.x;\r\n            point.y += scroll.y;\r\n        }\r\n        if (this.transform) {\r\n            //_transform.setTranslate(0,0);\r\n            this._transform.invertTransformPoint(point);\r\n        }\r\n        point.x += this.pivotX;\r\n        point.y += this.pivotY;\r\n        return point;\r\n    }\r\n\r\n    protected onStartListeningToType(type: string) {\r\n        super.onStartListeningToType(type);\r\n\r\n        //如果是鼠标事件，则设置自己和父对象为可接受鼠标交互事件\r\n        if (this._mouseState !== 1 && Event.isMouseEvent(type)) {\r\n            this.mouseEnabled = true;\r\n            this._setBit(NodeFlags.HAS_MOUSE, true);\r\n            if (this._parent) {\r\n                this._onDisplay();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    protected _onDisplay(v?: boolean): void {\r\n        if (this._mouseState !== 1) {\r\n            var ele: Sprite = this;\r\n            ele = (<Sprite>ele.parent);\r\n            while (ele && ele._mouseState !== 1) {\r\n                if (ele._getBit(NodeFlags.HAS_MOUSE)) break;\r\n                ele.mouseEnabled = true;\r\n                ele._setBit(NodeFlags.HAS_MOUSE, true);\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    protected _setParent(value: Node): void {\r\n        super._setParent(value);\r\n        if (value && this._getBit(NodeFlags.HAS_MOUSE)) {\r\n            this._onDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>加载并显示一个图片。相当于加载图片后，设置texture属性</p>\r\n     * <p>注意：2.0改动：多次调用，只会显示一个图片（1.0会显示多个图片）,x,y,width,height参数取消。</p>\r\n     * @param url\t\t图片地址。\r\n     * @param complete\t（可选）加载完成回调。\r\n     * @return\t返回精灵对象本身。\r\n     */\r\n    loadImage(url: string, complete: Handler = null): Sprite {\r\n        if (!url) {\r\n            this.texture = null;\r\n            this.repaint(SpriteConst.REPAINT_ALL);\r\n            complete && complete.run();\r\n        } else {\r\n            let tex = ILaya.loader.getRes(url);\r\n            if (tex) {\r\n                this.texture = tex;\r\n                this.repaint(SpriteConst.REPAINT_ALL);\r\n                complete && complete.run();\r\n            }\r\n            else {\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n                ILaya.loader.load(url).then((tex: Texture) => {\r\n                    this.texture = tex;\r\n                    this.repaint(SpriteConst.REPAINT_ALL);\r\n                    complete && complete.run();\r\n                });\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 根据图片地址创建一个新的 <code>Sprite</code> 对象用于加载并显示此图片。\r\n     * @param\turl 图片地址。\r\n     * @return\t返回新的 <code>Sprite</code> 对象。\r\n     */\r\n    static fromImage(url: string): Sprite {\r\n        return new Sprite().loadImage(url);\r\n    }\r\n\r\n    /**cacheAs后，设置自己和父对象缓存失效。*/\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        if (!(this._repaint & type)) {\r\n            this._repaint |= type;\r\n            this.parentRepaint(type);\r\n        }\r\n        if (this._cacheStyle && this._cacheStyle.maskParent) {\r\n            this._cacheStyle.maskParent.repaint(type);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 获取是否重新缓存。\r\n     * @return 如果重新缓存值为 true，否则值为 false。\r\n     */\r\n    _needRepaint(): boolean {\r\n        return (this._repaint & SpriteConst.REPAINT_CACHE) && this._cacheStyle.enableCanvasRender && this._cacheStyle.reCache;\r\n    }\r\n\r\n    /**@private\t\r\n     * @override\r\n    */\r\n    protected _childChanged(child: Node = null): void {\r\n        super._childChanged(child);\r\n\r\n        if (this._children.length) this._renderType |= SpriteConst.CHILDS;\r\n        else this._renderType &= ~SpriteConst.CHILDS;\r\n        if (child && this._getBit(NodeFlags.HAS_ZORDER)) ILaya.systemTimer.callLater(this, this.updateZOrder);\r\n        this.repaint(SpriteConst.REPAINT_ALL);\r\n    }\r\n\r\n    /**cacheAs时，设置所有父对象缓存失效。 */\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        var p: Sprite = (<Sprite>this._parent);\r\n        if (p && !(p._repaint & type)) {\r\n            p._repaint |= type;\r\n            p.parentRepaint(type);\r\n        }\r\n    }\r\n\r\n    /**对舞台 <code>stage</code> 的引用。*/\r\n    get stage(): Stage {\r\n        return ILaya.stage;\r\n    }\r\n\r\n    /**\r\n     * <p>可以设置一个Rectangle区域作为点击区域，或者设置一个<code>HitArea</code>实例作为点击区域，HitArea内可以设置可点击和不可点击区域。</p>\r\n     * <p>如果不设置hitArea，则根据宽高形成的区域进行碰撞。</p>\r\n     */\r\n    get hitArea(): IHitArea {\r\n        return this._style.hitArea;\r\n    }\r\n\r\n    set hitArea(value: IHitArea) {\r\n        this.getStyle().hitArea = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setMask(value: Sprite): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>遮罩，可以设置一个对象(支持位图和矢量图)，根据对象形状进行遮罩显示。</p>\r\n     * <p>【注意】遮罩对象坐标系是相对遮罩对象本身的，和Flash机制不同</p>\r\n     */\r\n    get mask(): Sprite {\r\n        return this._cacheStyle.mask;\r\n    }\r\n\r\n    set mask(value: Sprite) {\r\n        if (value == this || (value && this.mask == value && value._cacheStyle.maskParent == this))\r\n            return;\r\n\r\n        if (this.mask)\r\n            this.mask._getCacheStyle().maskParent = null;\r\n\r\n        this._getCacheStyle().mask = value;\r\n        this._setMask(value);\r\n        this._checkCanvasEnable();\r\n\r\n        if (value) {\r\n            value._getCacheStyle().maskParent = this;\r\n            this._renderType |= SpriteConst.MASK;\r\n        }\r\n        else\r\n            this._renderType &= ~SpriteConst.MASK;\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * 是否接受鼠标事件。\r\n     * 默认为false，如果监听鼠标事件，则会自动设置本对象及父节点的属性 mouseEnable 的值都为 true（如果父节点手动设置为false，则不会更改）。\r\n     * */\r\n    get mouseEnabled(): boolean {\r\n        return this._mouseState > 1;\r\n    }\r\n\r\n    set mouseEnabled(value: boolean) {\r\n        this._mouseState = value ? 2 : 1;\r\n    }\r\n\r\n    /**\r\n     * 开始拖动此对象。\r\n     * @param area\t\t\t\t（可选）拖动区域，此区域为当前对象注册点活动区域（不包括对象宽高），可选。\r\n     * @param hasInertia\t\t（可选）鼠标松开后，是否还惯性滑动，默认为false，可选。\r\n     * @param elasticDistance\t（可选）橡皮筋效果的距离值，0为无橡皮筋效果，默认为0，可选。\r\n     * @param elasticBackTime\t（可选）橡皮筋回弹时间，单位为毫秒，默认为300毫秒，可选。\r\n     * @param data\t\t\t\t（可选）拖动事件携带的数据，可选。\r\n     * @param ratio\t\t\t\t（可选）惯性阻尼系数，影响惯性力度和时长。\r\n     */\r\n    startDrag(area: Rectangle = null, hasInertia: boolean = false, elasticDistance: number = 0, elasticBackTime: number = 300, data: any = null, ratio: number = 0.92): void {\r\n        this._style.dragging || (this.getStyle().dragging = new Dragging());\r\n        this._style.dragging.start(this, area, hasInertia, elasticDistance, elasticBackTime, data, ratio);\r\n    }\r\n\r\n    /**停止拖动此对象。*/\r\n    stopDrag(): void {\r\n        this._style.dragging && this._style.dragging.stop();\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * @override\r\n    */\r\n    _setDisplay(value: boolean): void {\r\n        if (!value) {\r\n            if (this._cacheStyle) {\r\n                this._cacheStyle.releaseContext();\r\n                this._cacheStyle.releaseFilterCache();\r\n                if (this._cacheStyle.hasGlowFilter) {\r\n                    this._cacheStyle.hasGlowFilter = false;\r\n                }\r\n            }\r\n        }\r\n        super._setDisplay(value);\r\n    }\r\n\r\n    /**\r\n     * 检测某个点是否在此对象内。\r\n     * @param\tx 全局x坐标。\r\n     * @param\ty 全局y坐标。\r\n     * @return  表示是否在对象内。\r\n     */\r\n    hitTestPoint(x: number, y: number): boolean {\r\n        var point: Point = this.globalToLocal(Point.TEMP.setTo(x, y));\r\n        x = point.x;\r\n        y = point.y;\r\n        var rect: IHitArea = this._style.hitArea ? this._style.hitArea : (this._isWidthSet && this._isHeightSet) ? Rectangle.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds();\r\n        return rect.contains(x, y, this);\r\n    }\r\n\r\n    /**获得相对于本对象上的鼠标坐标信息。*/\r\n    getMousePoint(): Point {\r\n        return this.globalToLocal(Point.TEMP.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY));\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 返回鼠标在此对象坐标系上的 X 轴坐标信息。\r\n     */\r\n    get mouseX(): number {\r\n        return this.getMousePoint().x;\r\n    }\r\n\r\n    /**\r\n     * 返回鼠标在此对象坐标系上的 Y 轴坐标信息。\r\n     */\r\n    get mouseY(): number {\r\n        return this.getMousePoint().y;\r\n    }\r\n\r\n    /**z排序，更改此值，则会按照值的大小对同一容器的所有对象重新排序。值越大，越靠上。默认为0，则根据添加顺序排序。*/\r\n    get zOrder(): number {\r\n        return this._zOrder;\r\n    }\r\n\r\n    set zOrder(value: number) {\r\n        if (this._zOrder != value) {\r\n            this._zOrder = value;\r\n            if (this._parent) {\r\n                value && this._parent._setBit(NodeFlags.HAS_ZORDER, true);\r\n                ILaya.systemTimer.callLater(this._parent, this.updateZOrder);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置一个Texture实例，并显示此图片（如果之前有其他绘制，则会被清除掉）。\r\n     * 等同于graphics.clear();graphics.drawImage()，但性能更高\r\n     * 还可以赋值一个图片地址，则会自动加载图片，然后显示\r\n     */\r\n    get texture(): Texture {\r\n        return this._texture;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTexture(value: Texture | string): void {\r\n\r\n    }\r\n\r\n    set texture(value: Texture) {\r\n        if (typeof (value) == 'string') {\r\n            this.loadImage((<string>((<any>value))));\r\n        } else if (this._texture != value) {\r\n            this._texture && this._texture._removeReference();\r\n            this._texture = value;\r\n            value && value._addReference();\r\n            this._setTexture(value);\r\n            this._setWidth(this.width);\r\n            this._setHeight(this.height);\r\n            if (value) this._renderType |= SpriteConst.TEXTURE;\r\n            else this._renderType &= ~SpriteConst.TEXTURE;\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * <p>视口大小，视口外的子对象，将不被渲染(如果想实现裁剪效果，请使用srollRect)，合理使用能提高渲染性能。比如由一个个小图片拼成的地图块，viewport外面的小图片将不渲染</p>\r\n     * <p>srollRect和viewport的区别：<br/>\r\n     * 1. srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\r\n     * 2. 设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\r\n     * @default null\r\n     */\r\n    get viewport(): Rectangle {\r\n        return this._style.viewport;\r\n    }\r\n\r\n    set viewport(value: Rectangle) {\r\n        if (typeof (value) == 'string') {\r\n            let recArr = (<any>value).split(\",\");\r\n            if (recArr.length > 3) {\r\n                value = new Rectangle(parseFloat(recArr[0]), parseFloat(recArr[1]), parseFloat(recArr[2]), parseFloat(recArr[3]));\r\n            }\r\n        }\r\n        this.getStyle().viewport = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTranformChange(): void {\r\n        this._tfChanged = true;\r\n        this._renderType |= SpriteConst.TRANSFORM;\r\n        this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n    }\r\n\r\n    set drawCallOptimize(value: boolean) {\r\n        this._setBit(NodeFlags.DRAWCALL_OPTIMIZE, value);\r\n    }\r\n\r\n    get drawCallOptimize(): boolean {\r\n        return this._getBit(NodeFlags.DRAWCALL_OPTIMIZE);\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._gcmds) {\r\n                this.graphics.cmds = (<any>this)._gcmds;\r\n                delete (<any>this)._gcmds;\r\n            }\r\n\r\n            if ((<any>this)._filters) {\r\n                this.filters = (<any>this)._filters;\r\n                delete (<any>this)._filters;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //miner 为了不破坏之前的local性能架构，采用标致开启的方式来增加GlobalMode的更新系统，优化需要高频调用Global数据的\r\n    //因为此块功能比较集中，顾单独写在下方\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Position_X: number = 0x01;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Position_Y: number = 0x02;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Rotation: number = 0x04;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Scale_X: number = 0x08;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Scale_Y: number = 0x10;\r\n    /**@internal */\r\n    static Sprite_GlobalDeltaFlage_Matrix: number = 0x20;\r\n    /**@internal */\r\n    private _globalDeltaFlages: number = 0;\r\n    /**@internal */\r\n    private _cacheGlobal: boolean = false;\r\n    /**@internal */\r\n    private _globalPosx: number = 0.0;\r\n    /**@internal */\r\n    private _globalPosy: number = 0.0;\r\n    /**@internal */\r\n    private _globalRotate: number = 0.0;\r\n    /**@internal */\r\n    private _globalScalex: number = 1.0;\r\n    /**@internal */\r\n    private _globalScaley: number = 1.0;\r\n    /**@internal */\r\n    private _globalMatrix: Matrix;\r\n\r\n    get cacheGlobal(): boolean {\r\n        return this._cacheGlobal;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 设置cacheGlobal模式\r\n     * 此模式会获得更高的getGlobal属性性能\r\n     * 如果此节点为cacheGlobaltrue，那所有父节点直到根节点都会强制改为true\r\n     * 如果此节点改为false，将强制所有子节点的cacheGlobal改为false\r\n     */\r\n    set cacheGlobal(value: boolean) {\r\n        if (this._cacheGlobal == value)\r\n            return;\r\n        this._cacheGlobal = value;\r\n        if (value) {\r\n            //缓存全局变量\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, true);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            //更新父节点\r\n            if (this._parent == ILaya.stage || !this._parent) {\r\n                return;\r\n            } else {\r\n                (this._parent as Sprite).cacheGlobal = value;\r\n            }\r\n        } else {\r\n            //更新子节点\r\n            this._children.forEach(element => {\r\n                (element as Sprite).cacheGlobal = value;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    getGlobalMatrix() {\r\n        if (this._globalMatrix == null) this._globalMatrix = Matrix.create()\r\n        if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix)) {\r\n            this._globalMatrix.identity();\r\n            this._globalMatrix.translate(-this.pivotX, -this.pivotY);\r\n            this._globalMatrix.scale(this.globalScaleX, this.globalScaleY);\r\n            this._globalMatrix.rotate(Utils.toRadian(this.globalRotation));\r\n            this._globalMatrix.translate(this.globalPosX, this.globalPosY);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, false);\r\n        }\r\n        return this._globalMatrix;\r\n    }\r\n\r\n    CustomMaterial() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set globalPosX(value: number) {\r\n        this.setGlobalPos(value, this._globalPosy);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    set globalPosY(value: number) {\r\n        this.setGlobalPos(this._globalPosx, value);\r\n    }\r\n\r\n    /**\r\n     * 设置图元锚点世界位置\r\n     * @internal\r\n     */\r\n    setGlobalPos(globalx: number, globaly: number) {\r\n        if (globalx == this.globalPosX && globaly == this.globalPosY) {\r\n            return;\r\n        }\r\n        if (!this._cacheGlobal) {\r\n            Point.TEMP.setTo(globalx, globaly);\r\n            let point = this.globalToLocal(Point.TEMP, false, null);\r\n            point = this.toParentPoint(point);\r\n            this.x = point.x;\r\n            this.y = point.y;\r\n        } else {\r\n\r\n            let point = (<Sprite>this.parent).getGlobalMatrix().invertTransformPoint(Point.TEMP.setTo(globalx, globaly));\r\n            this._setX(point.x);\r\n            this._setY(point.y);\r\n            this._globalPosx = globalx;\r\n            this._globalPosy = globaly;\r\n            let flag = Sprite.Sprite_GlobalDeltaFlage_Position_X | Sprite.Sprite_GlobalDeltaFlage_Position_Y;\r\n            this._setGlobalCacheFlag(flag, false);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            this._syncGlobalFlag(flag | Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获得图元锚点世界位置\r\n     * @internal\r\n     */\r\n    get globalPosX(): number {\r\n        if (!this._cacheGlobal) {\r\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\r\n            return point.x;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_X)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_X, false);\r\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\r\n                let point = this.toParentPoint(Point.TEMP.setTo(this.pivotX, this.pivotY));\r\n                point = mat.transformPoint(point);\r\n                this._globalPosx = point.x;\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalPosx;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获得图元锚点世界位置\r\n     * @internal\r\n     */\r\n    get globalPosY(): number {\r\n        if (!this._cacheGlobal) {\r\n            let point = this.localToGlobal(Point.TEMP.setTo(0, 0), false, null);\r\n            return point.y;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix | Sprite.Sprite_GlobalDeltaFlage_Position_Y)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Position_Y, false);\r\n                let mat = (<Sprite>this.parent).getGlobalMatrix();\r\n                let point = this.toParentPoint(Point.TEMP.setTo(this.pivotX, this.pivotY));\r\n                point = mat.transformPoint(point);\r\n                this._globalPosy = point.y;\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalPosy;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获得相对于stage的全局旋转值（会叠加父亲节点的旋转值）。\r\n     */\r\n    get globalRotation(): number {\r\n        if (!this._cacheGlobal) {\r\n            //循环算法\r\n            var angle: number = 0;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                angle += ele.rotation;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return angle;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalRotate = this.rotation;\r\n                else {\r\n                    this._globalRotate = this.rotation + (this.parent as Sprite).globalRotation;\r\n                }\r\n            }\r\n            return this._globalRotate;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    set globalRotation(value: number) {\r\n        if (value == this.globalRotation) {\r\n            return;\r\n        }\r\n        //set local\r\n        if (this._parent == ILaya.stage || !this._parent) {\r\n            this._setRotation(value);\r\n            this._setTranformChange();\r\n        } else {\r\n            this._setRotation(value - (this.parent as Sprite).globalRotation);\r\n            this._setTranformChange();\r\n        }\r\n        if (this._cacheGlobal) {\r\n            this._globalRotate = value;\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Rotation, false);\r\n            this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得相对于stage的全局X轴缩放值（会叠加父亲节点的缩放值）。\r\n     */\r\n    get globalScaleX(): number {\r\n        if (!this._cacheGlobal) {\r\n            var scale: number = 1;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                scale *= ele.scaleX;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return scale;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_X, false);\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalScalex = this.scaleX;\r\n                else {\r\n                    this._globalScalex = this.scaleX * (this.parent as Sprite).globalScaleX;\r\n                }\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalScalex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得相对于stage的全局Y轴缩放值（会叠加父亲节点的缩放值）。\r\n     */\r\n    get globalScaleY(): number {\r\n        if (!this._cacheGlobal) {\r\n            var scale: number = 1;\r\n            var ele: Sprite = this;\r\n            while (ele) {\r\n                if (ele === ILaya.stage) break;\r\n                scale *= ele.scaleY;\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n            return scale;\r\n        } else {\r\n            if (this._getGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y)) {\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Scale_Y, false);\r\n                this._setGlobalCacheFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n                if (this._parent == ILaya.stage || !this._parent)\r\n                    this._globalScaley = this.scaleY;\r\n                else {\r\n                    this._globalScaley = this.scaleY * (this.parent as Sprite).globalScaleY;\r\n                }\r\n                this._syncGlobalFlag(Sprite.Sprite_GlobalDeltaFlage_Matrix, true);\r\n            }\r\n            return this._globalScaley;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getGlobalCacheFlag(type: number): boolean {\r\n        return (this._globalDeltaFlages & type) != 0;\r\n    }\r\n\r\n    \r\n    /**\r\n     * @internal \r\n     */\r\n    _getGlobalCacheLocalToGlobal(x:number,y:number):Point{\r\n        if (this._cacheGlobal) {\r\n            return this.getGlobalMatrix().transformPoint(Point.TEMP.setTo(this.pivotX+x, this.pivotY+y));\r\n        } else {\r\n            return this.localToGlobal(Point.TEMP.setTo(x, y), false, null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    _getGlobalCacheGlobalToLocal(x:number,y:number):Point{\r\n        if (this._cacheGlobal) {\r\n            let point = this.getGlobalMatrix().invertTransformPoint(Point.TEMP.setTo(x, y));\r\n            point.x -= this.pivotX;\r\n            point.y -= this.pivotY;\r\n            return point;\r\n        } else {\r\n            return this.globalToLocal(Point.TEMP.setTo(x, y), false, null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    private _setGlobalCacheFlag(type: number, value: boolean): void {\r\n        if (value)\r\n            this._globalDeltaFlages |= type;\r\n        else\r\n            this._globalDeltaFlages &= ~type;\r\n        if (value) {\r\n            this.event(\"GlobaChange\", type)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal \r\n    */\r\n    get globalDeltaFlages(): number {\r\n        return this._globalDeltaFlages;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param flag \r\n     * @param value \r\n     */\r\n    _syncGlobalFlag(flag: number, value: boolean) {\r\n        if (this.cacheGlobal) {\r\n            this._children.forEach(element => {\r\n                (element as Sprite)._setGlobalCacheFlag(flag, value);\r\n                (element as Sprite)._syncGlobalFlag(flag, value);\r\n            });\r\n        }\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Config } from \"./../../Config\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p>动画基类，提供了基础的动画播放控制方法和帧标签事件相关功能。</p>\r\n * <p>可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。</p>\r\n */\r\nexport class AnimationBase extends Sprite {\r\n    /**动画播放顺序类型：正序播放。 */\r\n    static WRAP_POSITIVE: number = 0;\r\n    /**动画播放顺序类型：逆序播放。 */\r\n    static WRAP_REVERSE: number = 1;\r\n    /**动画播放顺序类型：pingpong播放(当按指定顺序播放完结尾后，如果继续播放，则会改变播放顺序)。 */\r\n    static WRAP_PINGPONG: number = 2;\r\n\r\n    /**是否循环播放，调用play(...)方法时，会将此值设置为指定的参数值。*/\r\n    loop: boolean;\r\n    /**播放顺序类型：AnimationBase.WRAP_POSITIVE为正序播放(默认值)，AnimationBase.WRAP_REVERSE为倒序播放，AnimationBase.WRAP_PINGPONG为pingpong播放(当按指定顺序播放完结尾后，如果继续播发，则会改变播放顺序)。*/\r\n    wrapMode: number = 0;\r\n    /**@private 播放间隔(单位：毫秒)。*/\r\n    protected _interval: number = Config.animationInterval;\r\n    /**@private */\r\n    protected _index: number;\r\n    /**@private */\r\n    protected _count: number;\r\n    /**@private */\r\n    protected _isPlaying: boolean;\r\n    /**@private */\r\n    protected _labels: any;\r\n    /**是否是逆序播放*/\r\n    protected _isReverse: boolean = false;\r\n    /**@private */\r\n    protected _frameRateChanged: boolean = false;\r\n    /**@private */\r\n    protected _actionName: string;\r\n    /**@private */\r\n    private _controlNode: Sprite;\r\n\r\n    /**\r\n     * 可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**\r\n     * <p>开始播放动画。play(...)方法被设计为在创建实例后的任何时候都可以被调用，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否正在播放中，如果是，则进行播放。</p>\r\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\r\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param\tloop\t（可选）是否循环播放。\r\n     * @param\tname\t（可选）动画名称。\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        this._isPlaying = true;\r\n        this._actionName = name;\r\n        this.index = (typeof (start) == 'string') ? this._getFrameByLabel(<string>start) : start;\r\n        this.loop = loop;\r\n        this._isReverse = this.wrapMode === AnimationBase.WRAP_REVERSE;\r\n        if (this.index == 0 && this._isReverse) {\r\n            this.index = this.count - 1;\r\n        }\r\n        if (this.interval > 0) this.timerLoop(this.interval, this, this._frameLoop, null, true, true);\r\n    }\r\n\r\n    /**\r\n     * <p>动画播放的帧间隔时间(单位：毫秒)。默认值依赖于Config.animationInterval=50，通过Config.animationInterval可以修改默认帧间隔时间。</p>\r\n     * <p>要想为某动画设置独立的帧间隔时间，可以使用set interval，注意：如果动画正在播放，设置后会重置帧循环定时器的起始时间为当前时间，也就是说，如果频繁设置interval，会导致动画帧更新的时间间隔会比预想的要慢，甚至不更新。</p>\r\n     */\r\n    get interval(): number {\r\n        return this._interval;\r\n    }\r\n\r\n    set interval(value: number) {\r\n        if (this._interval != value) {\r\n            this._frameRateChanged = true;\r\n            this._interval = value;\r\n            if (this._isPlaying && value > 0) {\r\n                this.timerLoop(value, this, this._frameLoop, null, true, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _getFrameByLabel(label: string): number {\r\n        for (var i: number = 0; i < this._count; i++) {\r\n            var item: any = this._labels[i];\r\n            if (item && ((<any[]>item)).indexOf(label) > -1) return i;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**@private */\r\n    protected _frameLoop(): void {\r\n        if (!this._controlNode || this._controlNode._destroyed) {\r\n            this.clearTimer(this, this._frameLoop);\r\n            return;\r\n        }\r\n        if (this._isReverse) {\r\n            this._index--;\r\n            if (this._index < 0) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count > 0 ? 1 : 0;\r\n                        this._isReverse = false;\r\n                    } else {\r\n                        this._index = this._count - 1;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index = 0;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            this._index++;\r\n            if (this._index >= this._count) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count - 2 >= 0 ? this._count - 2 : 0;\r\n                        this._isReverse = true;\r\n                    } else {\r\n                        this._index = 0;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index--;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.index = this._index;\r\n    }\r\n\r\n    /**@internal */\r\n    _setControlNode(node: Sprite): void {\r\n        if (this._controlNode) {\r\n            this._controlNode.off(Event.DISPLAY, this, this._resumePlay);\r\n            this._controlNode.off(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n        this._controlNode = node;\r\n        if (node && node != this) {\r\n            node.on(Event.DISPLAY, this, this._resumePlay);\r\n            node.on(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _setDisplay(value: boolean): void {\r\n        super._setDisplay(value);\r\n        this._resumePlay();\r\n    }\r\n\r\n    /**@private */\r\n    protected _resumePlay(): void {\r\n        if (this._isPlaying) {\r\n            if (this._controlNode.displayedInStage) this.play(this._index, this.loop, this._actionName);\r\n            else this.clearTimer(this, this._frameLoop);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放。\r\n     */\r\n    stop(): void {\r\n        this._isPlaying = false;\r\n        this.clearTimer(this, this._frameLoop);\r\n    }\r\n\r\n    /**\r\n     * 是否正在播放中。\r\n     */\r\n    get isPlaying(): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * 增加一个帧标签到指定索引的帧上。当动画播放到此索引的帧时会派发Event.LABEL事件，派发事件是在完成当前帧画面更新之后。\r\n     * @param\tlabel\t帧标签名称\r\n     * @param\tindex\t帧索引\r\n     */\r\n    addLabel(label: string, index: number): void {\r\n        if (!this._labels) this._labels = {};\r\n        if (!this._labels[index]) this._labels[index] = [];\r\n        this._labels[index].push(label);\r\n    }\r\n\r\n    /**\r\n     * 删除指定的帧标签。\r\n     * @param\tlabel 帧标签名称。注意：如果为空，则删除所有帧标签！\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (!label) this._labels = null;\r\n        else if (this._labels) {\r\n            for (var name in this._labels) {\r\n                this._removeLabelFromList(this._labels[name], label);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _removeLabelFromList(list: any[], label: string): void {\r\n        if (!list) return;\r\n        for (var i: number = list.length - 1; i >= 0; i--) {\r\n            if (list[i] == label) {\r\n                list.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将动画切换到指定帧并停在那里。\r\n     * @param\tposition 帧索引或帧标签\r\n     */\r\n    gotoAndStop(position: any): void {\r\n        this.index = (typeof (position) == 'string') ? this._getFrameByLabel(<string>position) : position;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * 动画当前帧的索引。\r\n     */\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n        this._displayToIndex(value);\r\n        if (this._labels && this._labels[value]) {\r\n            var tArr: any[] = this._labels[value];\r\n            for (var i: number = 0, len: number = tArr.length; i < len; i++) {\r\n                this.event(Event.LABEL, tArr[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 显示到某帧\r\n     * @param value 帧索引\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n    }\r\n\r\n    /**\r\n     * 当前动画中帧的总数。\r\n     */\r\n    get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @return 返回对象本身\r\n     */\r\n    clear(): AnimationBase {\r\n        this.stop();\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n}","import { Handler } from \"../utils/Handler\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { URL } from \"./URL\";\r\n\r\n/**\r\n * 自动图集管理类\r\n * @private\r\n */\r\nexport class AtlasInfoManager {\r\n\r\n    static _fileLoadDic: Record<string, { url: string, baseUrl?: string }> = {};\r\n\r\n    static enable(infoFile: string, callback: Handler | null = null): void {\r\n        ILaya.loader.fetch(infoFile, \"json\").then(data => {\r\n            if (!data)\r\n                return;\r\n\r\n            AtlasInfoManager.addAtlases(data);\r\n            callback && callback.run();\r\n        });\r\n    }\r\n\r\n    static addAtlases(data: Record<string, [string, string[]]>) {\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        for (let key in data) {\r\n            let arr = data[key];\r\n            let prefix = URL.formatURL(arr[0]);\r\n            let frames = arr[1];\r\n            let len = frames.length;\r\n            let entry = { url: key };\r\n            for (let i = 0; i < len; i++) {\r\n                dic[prefix + frames[i]] = entry;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addAtlas(atlasUrl: string, prefix: string, frames: Array<string>) {\r\n        prefix = URL.formatURL(prefix);\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        let entry = { url: atlasUrl };\r\n        for (let i of frames) {\r\n            dic[prefix + i] = entry;\r\n        }\r\n    }\r\n\r\n    static getFileLoadPath(file: string): { url: string, baseUrl?: string } {\r\n        return AtlasInfoManager._fileLoadDic[file];\r\n    }\r\n}\r\n\r\n\r\n","import { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * Worker Image加载器\r\n */\r\nexport class WorkerLoader {\r\n\r\n    /**worker.js的路径 */\r\n    static workerPath: string = \"libs/laya.workerloader.js\";\r\n\r\n    private static _worker: Worker;\r\n    private static _dispatcher: EventDispatcher;\r\n    private static _enable: boolean = false;\r\n\r\n    /**\r\n     * 是否支持worker\r\n     * @return 是否支持worker\r\n     */\r\n    static workerSupported(): boolean {\r\n        return Worker ? true : false;\r\n    }\r\n\r\n    /**\r\n     * 是否启用。\r\n     */\r\n    static set enable(value: boolean) {\r\n        if (WorkerLoader._enable != value) {\r\n            if (value) {\r\n                if (!Worker)\r\n                    return;\r\n\r\n                if (!WorkerLoader._worker) {\r\n                    WorkerLoader._worker = new Worker(WorkerLoader.workerPath);\r\n                    WorkerLoader._worker.onmessage = WorkerLoader.workerMessage;\r\n                    WorkerLoader._dispatcher = new EventDispatcher();\r\n                }\r\n            }\r\n            WorkerLoader._enable = value;\r\n        }\r\n    }\r\n\r\n    static get enable(): boolean {\r\n        return WorkerLoader._enable;\r\n    }\r\n\r\n    static load(url: string, options: any): Promise<any> {\r\n        return new Promise(resolve => {\r\n            WorkerLoader._worker.postMessage({ url, options });\r\n            WorkerLoader._dispatcher.once(url, resolve);\r\n        });\r\n    }\r\n\r\n    private static workerMessage(evt: any): void {\r\n        let data = evt.data;\r\n        if (data) {\r\n            switch (data.type) {\r\n                case \"Image\":\r\n                    WorkerLoader._dispatcher.event(data.url, data.imageBitmap);\r\n                    break;\r\n                case \"Disable\":\r\n                    WorkerLoader.enable = false;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Resource } from \"./Resource\";\r\nimport { Texture } from \"./Texture\";\r\n/**\r\n * 大图合集资源\r\n */\r\nexport class AtlasResource extends Resource {\r\n    readonly dir: string;\r\n    readonly textures: Array<Texture>;\r\n    readonly frames: Array<Texture>;\r\n\r\n    /**\r\n     * 实例化体格大图合集资源\r\n     * @param dir \r\n     * @param textures \r\n     * @param frames \r\n     */\r\n    constructor(dir: string, textures: Array<Texture>, frames: Array<Texture>) {\r\n        super();\r\n\r\n        this.dir = dir;\r\n        this.textures = textures;\r\n        this.frames = frames;\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _disposeResource(): void {\r\n        for (let tex of this.textures) {\r\n            if (tex)\r\n                tex.destroy();\r\n        }\r\n\r\n        for (let tex of this.frames)\r\n            tex.destroy();\r\n\r\n        this.frames.length = 0;\r\n        this.textures.length = 0;\r\n    }\r\n}","export type ProgressCallback = (progress: number) => void;\r\n\r\nexport interface IBatchProgress {\r\n    readonly itemCount: number;\r\n    createCallback(weight?: number): ProgressCallback;\r\n    update(index: number, progress: number): void;\r\n}\r\n\r\nexport class BatchProgress implements IBatchProgress {\r\n    private _callback: ProgressCallback;\r\n    private _items: Array<number>;\r\n    private _weights: Array<number>;\r\n    private _progress: number;\r\n\r\n    constructor(callback: ProgressCallback) {\r\n        this._callback = callback;\r\n        this._items = [];\r\n        this._weights = [];\r\n        this._progress = 0;\r\n    }\r\n\r\n    get itemCount() {\r\n        return this._items.length;\r\n    }\r\n\r\n    reset() {\r\n        this._items.length = 0;\r\n        this._weights.length = 0;\r\n        this._progress = 0;\r\n    }\r\n\r\n    createCallback(weight?: number): ProgressCallback {\r\n        let index = this._items.length;\r\n        this._items.push(0);\r\n        if (weight == null)\r\n            this._weights.push(null);\r\n        else\r\n            this._weights.push(Math.max(0, Math.min(weight, 1)));\r\n\r\n        return (progress: number) => this.update(index, progress);\r\n    }\r\n\r\n    update(index: number, value: number) {\r\n        if (index != -1) {\r\n            this._items[index] = Math.max(0, Math.min(value, 1));\r\n\r\n            let np = 0;\r\n            let col = this._items;\r\n            let ws = this._weights;\r\n            let perc = 1 / col.length;\r\n            for (let i = 0; i < col.length; i++) {\r\n                let p = col[i];\r\n                let w = ws[i];\r\n                if (p != null)\r\n                    np += p * (w != null ? w : perc);\r\n            }\r\n            value = np;\r\n            if (value > 1) value = 1;\r\n        }\r\n\r\n        if (value > this._progress) {\r\n            this._progress = value;\r\n            this._callback(value);\r\n        }\r\n    }\r\n}","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n* 图片二进制处理类\r\n* @ author:xs\r\n* @ data: 2021-11-03 10:54\r\n*/\r\nexport class ImgUtils {\r\n\r\n    /**存储数据池*/\r\n    static data: any = {};\r\n    /**是否保存使用的数据*/\r\n    static isSavaData: boolean = false;\r\n\r\n    /**\r\n     * 比较版本内容\r\n     * @param curVersion 当前版本\r\n     * @param needVersion 要求的版本\r\n     * @returns \r\n     */\r\n    private static compareVersion(curVersion: string, needVersion: string) {\r\n        let curVersionArr = curVersion.split('.');\r\n        let needVersionArr = needVersion.split('.');\r\n        const len = Math.max(curVersionArr.length, needVersionArr.length);\r\n        while (curVersionArr.length < len) {\r\n            curVersionArr.push('0');\r\n        }\r\n        while (needVersionArr.length < len) {\r\n            needVersionArr.push('0');\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const num1 = parseInt(curVersionArr[i]);\r\n            const num2 = parseInt(needVersionArr[i]);\r\n            if (num1 > num2) {\r\n                return true;\r\n            } else if (num1 < num2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否支持数据预处理\r\n     */\r\n    static get isSupport(): boolean {\r\n        if (Browser._isMiniGame) {\r\n            var version: string = Browser.window.wx.getSystemInfoSync().SDKVersion;\r\n            return ImgUtils.compareVersion(version, '2.14.0');\r\n        }\r\n        else if (Browser.onLayaRuntime) {\r\n            return true;\r\n        } else if (Browser.window.Blob)\r\n            return Browser.window.Blob ? true : false;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过二进制获取URL对象\r\n     * @param url \r\n     * @param arrayBuffer \r\n     * @returns \r\n     */\r\n    static arrayBufferToURL(url: string, arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return url;\r\n        if (ImgUtils.data[url])\r\n            return ImgUtils.data[url];\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        if (ImgUtils.isSavaData)\r\n            ImgUtils.data[url] = newurl;\r\n        return newurl;\r\n    }\r\n\r\n    static _arrayBufferToURL(arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return null;\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        return newurl;\r\n    }\r\n\r\n    /**\r\n     * 销毁指定URL的二进制内存数据\r\n     * @param url \r\n     */\r\n    static destroy(url: string) {\r\n        if (!ImgUtils.isSupport) return;\r\n        var newurl: string = ImgUtils.data[url];\r\n        if (newurl) {\r\n            if (Browser._isMiniGame || Browser.onLayaRuntime)\r\n                Browser.window.wx.revokeBufferURL(newurl);\r\n            else if (Browser.window.Blob)\r\n                Browser.window.URL.revokeObjectURL(newurl);\r\n            delete ImgUtils.data[url];\r\n        }\r\n    }\r\n}","export class XMLUtils {\r\n    public static decodeString(aSource: string): string {\r\n        let len = aSource.length;\r\n        let sb: string = \"\";\r\n        let pos1 = 0, pos2 = 0;\r\n\r\n        while (true) {\r\n            pos2 = aSource.indexOf('&', pos1);\r\n            if (pos2 == -1) {\r\n                sb += aSource.substring(pos1);\r\n                break;\r\n            }\r\n            sb += aSource.substring(pos1, pos2);\r\n\r\n            pos1 = pos2 + 1;\r\n            pos2 = pos1;\r\n            let end = Math.min(len, pos2 + 10);\r\n            for (; pos2 < end; pos2++) {\r\n                if (aSource[pos2] == ';')\r\n                    break;\r\n            }\r\n            if (pos2 < end && pos2 > pos1) {\r\n                let entity: string = aSource.substring(pos1, pos2);\r\n                let u = 0;\r\n                if (entity[0] == '#') {\r\n                    if (entity.length > 1) {\r\n                        if (entity[1] == 'x')\r\n                            u = parseInt(entity.substring(2), 16);\r\n                        else\r\n                            u = parseInt(entity.substring(1));\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n                else {\r\n                    switch (entity) {\r\n                        case \"amp\":\r\n                            u = 38;\r\n                            break;\r\n\r\n                        case \"apos\":\r\n                            u = 39;\r\n                            break;\r\n\r\n                        case \"gt\":\r\n                            u = 62;\r\n                            break;\r\n\r\n                        case \"lt\":\r\n                            u = 60;\r\n                            break;\r\n\r\n                        case \"nbsp\":\r\n                            u = 32;\r\n                            break;\r\n\r\n                        case \"quot\":\r\n                            u = 34;\r\n                            break;\r\n                    }\r\n                    if (u > 0) {\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n            }\r\n            else {\r\n                sb += '&';\r\n            }\r\n        }\r\n\r\n        return sb;\r\n    }\r\n\r\n    public static encodeString(str: string): string {\r\n        return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\").replace(/'/g, \"&apos;\").replace(/\"/g, \"&quot;\");\r\n    }\r\n\r\n    public static getString(attrs: any, attrName: string, defValue?: string): string {\r\n        if (attrs == null)\r\n            return defValue == null ? null : defValue;\r\n\r\n        let ret = attrs[attrName];\r\n        if (ret != null)\r\n            return \"\" + ret;\r\n        else\r\n            return defValue == null ? null : defValue;\r\n    }\r\n\r\n    public static getInt(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value != null && value.length > 0) {\r\n            if (value[value.length - 1] == '%') {\r\n                let ret = parseInt(value.substring(0, value.length - 1));\r\n                if (!isNaN(ret))\r\n                    return Math.ceil(ret / 100.0 * defValue);\r\n            }\r\n            else {\r\n                let ret = parseInt(value);\r\n                if (!isNaN(ret))\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        return defValue == null ? 0 : defValue;\r\n    }\r\n\r\n    public static getFloat(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? 0 : defValue;\r\n\r\n        let ret = parseFloat(value);\r\n        if (isNaN(ret))\r\n            return defValue == null ? 0 : defValue;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    public static getBool(attrs: any, attrName: string, defValue?: boolean): boolean {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? false : defValue;\r\n\r\n        if (value == \"true\" || value == \"1\")\r\n            return true;\r\n        else if (value == \"false\" || value == \"0\")\r\n            return false;\r\n        else\r\n            return defValue == null ? false : defValue;\r\n    }\r\n}","import { XMLUtils } from \"./XMLUtils\";\r\n\r\nexport enum XMLTagType {\r\n    Start,\r\n    End,\r\n    Void,\r\n    CDATA,\r\n    Comment,\r\n    Instruction\r\n};\r\n\r\nconst CDATA_START = \"<![CDATA[\";\r\nconst CDATA_END = \"]]>\";\r\nconst COMMENT_START = \"<!--\";\r\nconst COMMENT_END = \"-->\";\r\n\r\nexport class XMLIterator {\r\n    public static tagName: string;\r\n    public static tagType: XMLTagType;\r\n    public static lastTagName: string;\r\n\r\n    static source: string;\r\n    static sourceLen: number;\r\n    static parsePos: number;\r\n    static tagPos: number;\r\n    static tagLength: number;\r\n    static lastTagEnd: number;\r\n    static attrParsed: boolean;\r\n    static lowerCaseName: boolean;\r\n\r\n    private static _attrs: any = {};\r\n\r\n    public static begin(source: string, lowerCaseName?: boolean) {\r\n        XMLIterator.source = source;\r\n        XMLIterator.lowerCaseName = lowerCaseName;\r\n        this.sourceLen = source.length;\r\n        this.parsePos = 0;\r\n        this.lastTagEnd = 0;\r\n        this.tagPos = 0;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n    }\r\n\r\n    public static nextTag(): boolean {\r\n        let pos: number;\r\n        let c: string;\r\n        let buffer = \"\";\r\n\r\n        this.tagType = XMLTagType.Start;\r\n        this.lastTagEnd = this.parsePos;\r\n        this.attrParsed = false;\r\n        this.lastTagName = this.tagName;\r\n\r\n        while ((pos = this.source.indexOf('<', this.parsePos)) != -1) {\r\n            this.parsePos = pos;\r\n            pos++;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            c = this.source[pos];\r\n            if (c == '!') {\r\n                if (this.sourceLen > pos + 7 && this.source.substring(pos - 1, pos + 8) == CDATA_START) {\r\n                    pos = this.source.indexOf(CDATA_END, pos);\r\n                    this.tagType = XMLTagType.CDATA;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else if (this.sourceLen > pos + 2 && this.source.substring(pos - 1, pos + 3) == COMMENT_START) {\r\n                    pos = this.source.indexOf(COMMENT_END, pos);\r\n                    this.tagType = XMLTagType.Comment;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else {\r\n                    pos++;\r\n                    this.tagType = XMLTagType.Instruction;\r\n                }\r\n            }\r\n            else if (c == '/') {\r\n                pos++;\r\n                this.tagType = XMLTagType.End;\r\n            }\r\n            else if (c == '?') {\r\n                pos++;\r\n                this.tagType = XMLTagType.Instruction;\r\n            }\r\n\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            buffer += this.source.substring(this.parsePos + 1, pos);\r\n            if (buffer.length > 0 && buffer[0] == '/')\r\n                buffer = buffer.substring(1);\r\n\r\n            let singleQuoted: boolean = false, doubleQuoted: boolean = false;\r\n            let possibleEnd: number = -1;\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (c == '\"') {\r\n                    if (!singleQuoted)\r\n                        doubleQuoted = !doubleQuoted;\r\n                }\r\n                else if (c == '\\'') {\r\n                    if (!doubleQuoted)\r\n                        singleQuoted = !singleQuoted;\r\n                }\r\n\r\n                if (c == '>') {\r\n                    if (!(singleQuoted || doubleQuoted)) {\r\n                        possibleEnd = -1;\r\n                        break;\r\n                    }\r\n\r\n                    possibleEnd = pos;\r\n                }\r\n                else if (c == '<')\r\n                    break;\r\n            }\r\n            if (possibleEnd != -1)\r\n                pos = possibleEnd;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            if (this.source[pos - 1] == '/')\r\n                this.tagType = XMLTagType.Void;\r\n\r\n            this.tagName = buffer;\r\n            if (this.lowerCaseName)\r\n                this.tagName = this.tagName.toLowerCase();\r\n            this.tagPos = this.parsePos;\r\n            this.tagLength = pos + 1 - this.parsePos;\r\n            this.parsePos += this.tagLength;\r\n\r\n            return true;\r\n        }\r\n\r\n        this.tagPos = this.sourceLen;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n        return false;\r\n    }\r\n\r\n    public static getTagSource(): string {\r\n        return this.source.substring(this.tagPos, this.tagPos + this.tagLength);\r\n    }\r\n\r\n    public static getRawText(trim?: boolean) {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return this.source.substring(i, this.tagPos).trim();\r\n        }\r\n        else\r\n            return this.source.substring(this.lastTagEnd, this.tagPos);\r\n    }\r\n\r\n    public static getText(trim?: boolean): string {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return XMLUtils.decodeString(this.source.substring(i, this.tagPos)).trimEnd();\r\n        }\r\n        else\r\n            return XMLUtils.decodeString(this.source.substring(this.lastTagEnd, this.tagPos));\r\n    }\r\n\r\n    public static get attributes() {\r\n        if (!this.attrParsed) {\r\n            for (let key in this._attrs) {\r\n                delete this._attrs[key];\r\n            }\r\n            this.parseAttributes(this._attrs);\r\n            this.attrParsed = true;\r\n        }\r\n\r\n        return this._attrs;\r\n    }\r\n\r\n    public static getAttribute(attrName: string): string {\r\n        return this.attributes[attrName];\r\n    }\r\n\r\n    static parseAttributes(attrs: any) {\r\n        let attrName: string;\r\n        let valueStart: number = 0;\r\n        let valueEnd: number = 0;\r\n        let waitValue: boolean = false;\r\n        let quoted: number = 0;\r\n        let buffer: string = \"\";\r\n        let i = this.tagPos;\r\n        let attrEnd = this.tagPos + this.tagLength;\r\n\r\n        if (i < attrEnd && this.source[i] == '<') {\r\n            for (; i < attrEnd; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (; i < attrEnd; i++) {\r\n            let c: string = this.source[i];\r\n            if (c == '=') {\r\n                valueStart = -1;\r\n                valueEnd = -1;\r\n                quoted = 0;\r\n                for (let j = i + 1; j < attrEnd; j++) {\r\n                    let c2 = this.source[j];\r\n                    if (' \\t\\n\\r\\v'.indexOf(c2) != -1) {\r\n                        if (valueStart != -1 && quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '>') {\r\n                        if (quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\"') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 1) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 2;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\\'') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 2) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 1;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (valueStart == -1) {\r\n                        valueStart = j;\r\n                    }\r\n                }\r\n\r\n                if (valueStart != -1 && valueEnd != -1) {\r\n                    attrName = buffer;\r\n                    if (this.lowerCaseName)\r\n                        attrName = attrName.toLowerCase();\r\n                    buffer = \"\";\r\n                    attrs[attrName] = XMLUtils.decodeString(this.source.substring(valueStart, valueEnd + 1));\r\n                    i = valueEnd + 1;\r\n                }\r\n                else\r\n                    break;\r\n            }\r\n            else if (' \\t\\n\\r\\v'.indexOf(c) == -1) {\r\n                if (waitValue || c == '/' || c == '>') {\r\n                    if (buffer.length > 0) {\r\n                        attrName = buffer;\r\n                        if (this.lowerCaseName)\r\n                            attrName = attrName.toLowerCase();\r\n                        attrs[attrName] = \"\";\r\n                        buffer = \"\";\r\n                    }\r\n\r\n                    waitValue = false;\r\n                }\r\n\r\n                if (c != '/' && c != '>')\r\n                    buffer += c;\r\n            }\r\n            else {\r\n                if (buffer.length > 0)\r\n                    waitValue = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nif (!String.prototype.trimEnd) {\r\n    String.prototype.trimEnd = function (this: string) {\r\n        return this.replace(/\\s+$/g, \"\");\r\n    }\r\n}","import { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\nexport class XML {\r\n    public name: string;\r\n    public text: string;\r\n\r\n    private _attrs: Record<string, string>;\r\n    private _children: Array<XML>;\r\n\r\n    public constructor(XmlString?: string) {\r\n        if (XmlString)\r\n            this.parse(XmlString);\r\n    }\r\n\r\n    public get attributes(): Record<string, string> {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n        return this._attrs;\r\n    }\r\n\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public setAttribute(attrName: string, attrValue: string) {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    public getNode(selector: string): XML {\r\n        if (!this._children)\r\n            return null;\r\n        else\r\n            return this._children.find(value => {\r\n                return value.name == selector;\r\n            });\r\n    }\r\n\r\n    public elements(selector?: string): Array<XML> {\r\n        if (!this._children)\r\n            this._children = new Array<XML>();\r\n        if (selector)\r\n            return this._children.filter(value => {\r\n                return value.name == selector;\r\n            });\r\n        else\r\n            return this._children;\r\n    }\r\n\r\n    public parse(aSource: string) {\r\n        this.reset();\r\n\r\n        let lastOpenNode: XML;\r\n        let nodeStack: Array<XML> = new Array<XML>();\r\n\r\n        XMLIterator.begin(aSource);\r\n        while (XMLIterator.nextTag()) {\r\n            if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                let childNode: XML;\r\n                if (lastOpenNode)\r\n                    childNode = new XML();\r\n                else {\r\n                    if (this.name != null) {\r\n                        this.reset();\r\n                        throw new Error(\"Invalid xml format - no root node.\");\r\n                    }\r\n                    childNode = this;\r\n                }\r\n\r\n                childNode.name = XMLIterator.tagName;\r\n                childNode._attrs = Object.assign({}, XMLIterator.attributes);\r\n\r\n                if (lastOpenNode) {\r\n                    if (XMLIterator.tagType != XMLTagType.Void)\r\n                        nodeStack.push(lastOpenNode);\r\n                    if (lastOpenNode._children == null)\r\n                        lastOpenNode._children = new Array<XML>();\r\n                    lastOpenNode._children.push(childNode);\r\n                }\r\n                if (XMLIterator.tagType != XMLTagType.Void)\r\n                    lastOpenNode = childNode;\r\n            }\r\n            else if (XMLIterator.tagType == XMLTagType.End) {\r\n                if (lastOpenNode == null || lastOpenNode.name != XMLIterator.tagName) {\r\n                    this.reset();\r\n                    throw new Error(\"Invalid xml format - <\" + XMLIterator.tagName + \"> dismatched.\");\r\n                }\r\n\r\n                if (lastOpenNode._children == null || lastOpenNode._children.length == 0) {\r\n                    lastOpenNode.text = XMLIterator.getText();\r\n                }\r\n\r\n                if (nodeStack.length > 0)\r\n                    lastOpenNode = nodeStack.pop();\r\n                else\r\n                    lastOpenNode = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this._attrs = null;\r\n        if (this._children != null)\r\n            this._children.length == 0;\r\n        this.text = null;\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * 请求进度改变时调度。\r\n * @eventType Event.PROGRESS\r\n * */\r\n/*[Event(name = \"progress\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求结束后调度。\r\n * @eventType Event.COMPLETE\r\n * */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求出错时调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>HttpRequest</code> 通过封装 HTML <code>XMLHttpRequest</code> 对象提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。 <code>HttpRequest</code> 只提供以异步的形式返回 Web 服务器的响应，并且能够以文本或者二进制的形式返回内容。</p>\r\n * <p><b>注意：</b>建议每次请求都使用新的 <code>HttpRequest</code> 对象，因为每次调用该对象的send方法时，都会清空之前设置的数据，并重置 HTTP 请求的状态，这会导致之前还未返回响应的请求被重置，从而得不到之前请求的响应结果。</p>\r\n */\r\nexport class HttpRequest extends EventDispatcher {\r\n    /**@private */\r\n    protected _http = new XMLHttpRequest();\r\n    /**@private */\r\n    private static _urlEncode: Function = encodeURI;\r\n    /**@private */\r\n    protected _responseType: string;\r\n    /**@private */\r\n    protected _data: any;\r\n    /**@private */\r\n    protected _url: string;\r\n\r\n    /**\r\n     * 发送 HTTP 请求。\r\n     * @param\turl\t\t\t\t请求的地址。大多数浏览器实施了一个同源安全策略，并且要求这个 URL 与包含脚本的文本具有相同的主机名和端口。\r\n     * @param\tdata\t\t\t(default = null)发送的数据。\r\n     * @param\tmethod\t\t\t(default = \"get\")用于请求的 HTTP 方法。值包括 \"get\"、\"post\"、\"head\"。\r\n     * @param\tresponseType\t(default = \"text\")Web 服务器的响应类型，可设置为 \"text\"、\"json\"、\"xml\"、\"arraybuffer\"。\r\n     * @param\theaders\t\t\t(default = null) HTTP 请求的头部信息。参数形如key-value数组：key是头部的名称，不应该包括空白、冒号或换行；value是头部的值，不应该包括换行。比如[\"Content-Type\", \"application/json\"]。\r\n     */\r\n    send(url: string, data: any = null,\r\n        method: \"get\" | \"post\" | \"head\" = \"get\",\r\n        responseType: \"text\" | \"json\" | \"xml\" | \"arraybuffer\" = \"text\",\r\n        headers?: string[]): void {\r\n        this._responseType = responseType;\r\n        this._data = null;\r\n\r\n        if (Browser.onVVMiniGame || Browser.onQGMiniGame || Browser.onQQMiniGame || Browser.onAlipayMiniGame || Browser.onBLMiniGame || Browser.onHWMiniGame || Browser.onTTMiniGame || Browser.onTBMiniGame) {\r\n            url = HttpRequest._urlEncode(url);\r\n        }\r\n        this._url = url;\r\n\r\n        let http = this._http;\r\n        http.open(method, url, true);\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                http.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n            }\r\n            else {\r\n                http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                if (!(data instanceof ArrayBuffer))\r\n                    data = JSON.stringify(data);\r\n            }\r\n        }\r\n        else if (Browser.onBLMiniGame && Browser.onAndroid)\r\n            data = {};\r\n\r\n        if (headers) {\r\n            for (let i = 0; i < headers.length; i++) {\r\n                http.setRequestHeader(headers[i++], headers[i]);\r\n            }\r\n        }\r\n\r\n        let restype: XMLHttpRequestResponseType = responseType !== \"arraybuffer\" ? \"text\" : \"arraybuffer\";\r\n        http.responseType = restype;\r\n        if ((http as any).dataType) {//for Ali\r\n            (http as any).dataType = restype;\r\n        }\r\n        http.onerror = (e: any) => {\r\n            this._onError(e);\r\n        }\r\n        http.onabort = (e: any) => {\r\n            this._onAbort(e);\r\n        }\r\n        http.onprogress = (e: any) => {\r\n            this._onProgress(e);\r\n        }\r\n        http.onload = (e: any) => {\r\n            this._onLoad(e);\r\n        }\r\n\r\n        http.send(data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求进度的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onProgress(e: any): void {\r\n        if (e && e.lengthComputable) this.event(Event.PROGRESS, e.loaded / e.total);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求中断的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onAbort(e: any): void {\r\n        this.error(\"Request was aborted by user\");\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求出错侦的听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.error(\"Request failed Status:\" + this._http.status + \" text:\" + this._http.statusText);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求消息返回的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onLoad(e: any): void {\r\n        var http: any = this._http;\r\n        var status: number = http.status !== undefined ? http.status : 200;\r\n\r\n        if (status === 200 || status === 204 || status === 0) {\r\n            this.complete();\r\n        } else {\r\n            this.error(\"[\" + http.status + \"]\" + http.statusText + \":\" + http.responseURL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求错误的处理函数。\r\n     * @param\tmessage 错误信息。\r\n     */\r\n    protected error(message: string): void {\r\n        this.clear();\r\n        //console.warn(this.url, message);\r\n        this.event(Event.ERROR, message);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求成功完成的处理函数。\r\n     */\r\n    protected complete(): void {\r\n        this.clear();\r\n        var flag: boolean = true;\r\n        try {\r\n            if (this._responseType === \"json\") {\r\n                this._data = JSON.parse(this._http.responseText);\r\n            } else if (this._responseType === \"xml\") {\r\n                this._data = new XML(this._http.responseText);\r\n            } else {\r\n                this._data = this._http.response || this._http.responseText;\r\n            }\r\n        } catch (e: any) {\r\n            flag = false;\r\n            this.error(e.message);\r\n        }\r\n        flag && this.event(Event.COMPLETE, this._data instanceof Array ? [this._data] : this._data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清除当前请求。\r\n     */\r\n    protected clear(): void {\r\n        var http: any = this._http;\r\n        http.onerror = http.onabort = http.onprogress = http.onload = null;\r\n    }\r\n\r\n    /** 请求的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /** 返回的数据。*/\r\n    get data(): any {\r\n        return this._data;\r\n    }\r\n\r\n    /**\r\n     * 本对象所封装的原生 XMLHttpRequest 引用。\r\n     */\r\n    get http(): any {\r\n        return this._http;\r\n    }\r\n\r\n    reset() {\r\n        this.offAll();\r\n        this._data = null;\r\n    }\r\n}\r\n\r\n","import { Event } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { ImgUtils } from \"../utils/ImgUtils\";\r\nimport { HttpRequest } from \"./HttpRequest\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\n\r\nexport class Downloader {\r\n    common(owner: any, url: string, originalUrl: string, contentType: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let http = this.getRequestInst();\r\n        http.on(Event.COMPLETE, () => {\r\n            let data = http.data;\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(data);\r\n        });\r\n        http.on(Event.ERROR, null, (error: string) => {\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(null, error);\r\n        });\r\n        if (onProgress)\r\n            http.on(Event.PROGRESS, onProgress);\r\n        http.send(url, null, \"get\", <any>contentType);\r\n        owner.$ref = http; //保持引用避免gc掉\r\n    }\r\n\r\n    image(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let image: HTMLImageElement = new Browser.window.Image();\r\n        image.crossOrigin = \"\";\r\n        image.onload = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(image);\r\n        };\r\n        image.onerror = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        image.src = url;\r\n        owner.$ref = image; //保持引用避免gc掉\r\n    }\r\n\r\n    imageWithBlob(owner: any, blob: ArrayBuffer, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let url = ImgUtils.arrayBufferToURL(originalUrl, blob);\r\n        this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    imageWithWorker(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        WorkerLoader.enable = true;\r\n        if (WorkerLoader.enable) {\r\n            WorkerLoader.load(url, owner.workerLoaderOptions).then(ret => {\r\n                if (ret)\r\n                    onComplete(ret);\r\n                else\r\n                    onComplete(null, \"workerloader failed!\");\r\n            });\r\n        }\r\n        else\r\n            this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    audio(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void) {\r\n        let audio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        audio.crossOrigin = \"\";\r\n        audio.oncanplaythrough = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(audio);\r\n        };\r\n        audio.onerror = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        audio.src = url;\r\n        owner.$ref = audio; //保持引用避免gc掉\r\n    }\r\n\r\n    httpRequestPool: Array<HttpRequest> = [];\r\n    protected getRequestInst() {\r\n        if (this.httpRequestPool.length == 0\r\n            || Browser.onVVMiniGame || Browser.onHWMiniGame /*临时修复vivo复用xmlhttprequest的bug*/) {\r\n            return new HttpRequest();\r\n        } else {\r\n            return this.httpRequestPool.pop();\r\n        }\r\n    }\r\n\r\n    protected returnRequestInst(inst: HttpRequest) {\r\n        inst.reset();\r\n        if (this.httpRequestPool.length < 10)\r\n            this.httpRequestPool.push(inst);\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Event } from \"../events/Event\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Delegate } from \"../utils/Delegate\";\r\nimport { AtlasInfoManager } from \"./AtlasInfoManager\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { IBatchProgress, ProgressCallback, BatchProgress } from \"./BatchProgress\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Downloader } from \"./Downloader\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { XML } from \"../html/XML\";\r\n\r\nexport interface ILoadTask {\r\n    readonly type: string;\r\n    readonly url: string;\r\n    readonly uuid: string;\r\n    readonly ext: string;\r\n    readonly loader: Loader;\r\n    readonly obsoluteInst: Resource;\r\n    readonly options: Readonly<ILoadOptions>;\r\n    readonly progress: IBatchProgress;\r\n}\r\n\r\nexport interface IResourceLoader {\r\n    load(task: ILoadTask): Promise<any>;\r\n}\r\n\r\nexport interface ILoadOptions {\r\n    type?: string;\r\n    priority?: number;\r\n    group?: string;\r\n    cache?: boolean;\r\n    ignoreCache?: boolean;\r\n    noRetry?: boolean;\r\n    silent?: boolean;\r\n    useWorkerLoader?: boolean;\r\n    constructParams?: TextureConstructParams;\r\n    propertyParams?: TexturePropertyParams;\r\n    blob?: ArrayBuffer;\r\n    initiator?: ILoadTask;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface ILoadURL extends ILoadOptions {\r\n    url: string;\r\n}\r\n\r\ninterface ContentTypeMap {\r\n    \"text\": string,\r\n    \"json\": any,\r\n    \"xml\": XML,\r\n    \"arraybuffer\": ArrayBuffer,\r\n    \"image\": HTMLImageElement | ImageBitmap,\r\n    \"sound\": HTMLAudioElement\r\n}\r\n\r\nvar typeIdCounter = 0;\r\ntype TypeMapEntry = { typeId: number, loaderType: new () => IResourceLoader };\r\n\r\ninterface URLInfo {\r\n    ext: string,\r\n    typeId: number,\r\n    main: boolean,\r\n    loaderType: new () => IResourceLoader,\r\n}\r\nconst NullURLInfo: Readonly<URLInfo> = { ext: null, typeId: null, main: false, loaderType: null };\r\n\r\n/**\r\n * <code>Loader</code> 类可用来加载文本、JSON、XML、二进制、图像等资源。\r\n */\r\nexport class Loader extends EventDispatcher {\r\n    /**文本类型，加载完成后返回包含string的TextResource对象。*/\r\n    static TEXT = \"text\";\r\n    /**JSON 类型，加载完成后返回包含json数据的TextResource对象。*/\r\n    static JSON = \"json\";\r\n    /**XML 类型，加载完成后返回包含domXML的TextResource对象。*/\r\n    static XML = \"xml\";\r\n    /**二进制类型，加载完成后返回包含arraybuffer的TextResource对象。*/\r\n    static BUFFER = \"arraybuffer\";\r\n    /**纹理类型，加载完成后返回Texture。*/\r\n    static IMAGE = \"image\";\r\n    /**声音类型，加载完成后返回Sound。*/\r\n    static SOUND = \"sound\";\r\n    /**视频类型，加载完成后返回VideoTexture。*/\r\n    static VIDEO = \"video\";\r\n    /**图集类型，加载完成后返回图集json信息(并创建图集内小图Texture)。*/\r\n    static ATLAS = \"atlas\";\r\n    /**位图字体类型，加载完成后返回BitmapFont，加载后，会根据文件名自动注册为位图字体。*/\r\n    static FONT = \"font\";\r\n    /** TTF字体类型，加载完成后返回一个对象。*/\r\n    static TTF = \"ttf\";\r\n    /**Hierarchy资源。*/\r\n    static HIERARCHY = \"HIERARCHY\";\r\n    /**Mesh资源。*/\r\n    static MESH = \"MESH\";\r\n    /**Material资源。*/\r\n    static MATERIAL = \"MATERIAL\";\r\n    /**Texture2D资源。*/\r\n    static TEXTURE2D = \"TEXTURE2D\"; //这里是为了兼容，实际应该是BaseTexture\r\n    /**TextureCube资源。*/\r\n    static TEXTURECUBE = \"TEXTURE2D\"; //兼容处理，现在TEXTURE2D类型可以载入Texture或者TextureCube\r\n    static TEXTURE2DARRAY = \"TEXTURE2D\";\r\n    /**AnimationClip资源。*/\r\n    static ANIMATIONCLIP = \"ANIMATIONCLIP\";\r\n    /**Terrain资源。*/\r\n    static TERRAINHEIGHTDATA = \"TERRAINHEIGHTDATA\";\r\n    /**Terrain资源。*/\r\n    static TERRAINRES = \"TERRAIN\";\r\n    /** Spine 资源 */\r\n    static SPINE = \"SPINE\";\r\n\r\n    /** 加载出错后的重试次数，默认重试一次*/\r\n    retryNum: number = 1;\r\n    /** 延迟时间多久再进行错误重试，默认立即重试*/\r\n    retryDelay: number = 0;\r\n    /** 最大下载线程，默认为5个*/\r\n    maxLoader: number = 5;\r\n\r\n    static readonly extMap: { [ext: string]: Array<TypeMapEntry> } = {};\r\n    static readonly typeMap: { [type: string]: TypeMapEntry } = {};\r\n\r\n    static downloader = new Downloader();\r\n\r\n    /**\r\n     * 注册一种资源装载器。\r\n     * @param exts 扩展名\r\n     * @param cls\r\n     * @param type 类型标识。如果这种资源需要支持识别没有扩展名的情况，或者一个扩展名对应了多种资源类型的情况，那么指定type参数是个最优实践。\r\n     */\r\n    static registerLoader(exts: string[], cls: new () => IResourceLoader, type?: string) {\r\n        let typeEntry: TypeMapEntry;\r\n        if (type) {\r\n            typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                Loader.typeMap[type] = typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n            else if (typeEntry.loaderType != cls)\r\n                typeEntry = { typeId: typeEntry.typeId, loaderType: cls };\r\n        }\r\n        else\r\n            typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n\r\n        for (let ext of exts) {\r\n            let entry = Loader.extMap[ext];\r\n            if (entry && type) { //这个扩展名已经被注册为其他资源类型\r\n                let i = entry.findIndex(e => e.typeId == typeEntry.typeId);\r\n                if (i == -1) //注册为次类型\r\n                    entry.push(typeEntry);\r\n                else //覆盖旧的设置\r\n                    entry[i].loaderType = cls;\r\n            }\r\n            else {\r\n                Loader.extMap[ext] = [typeEntry];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**资源分组对应表。*/\r\n    static groupMap: { [name: string]: Set<string> } = {};\r\n    /**已加载的资源池。*/\r\n    static loadedMap: { [url: string]: Array<any> } = {};\r\n    /** 预加载的数据文件。如果一个url在这里有记录，则请求时直接使用这里的数据，放弃网络加载。*/\r\n    static preLoadedMap: { [url: string]: any } = {};\r\n\r\n    /**@private */\r\n    private _loadings: Map<string, LoadTask>;\r\n    /**@private */\r\n    private _queue: Array<DownloadItem>;\r\n    /**@private */\r\n    private _downloadings: Set<DownloadItem>;\r\n\r\n    /**\r\n     * <p>创建一个新的 <code>Loader</code> 实例。</p>\r\n     * <p><b>注意：</b>请使用Laya.loader加载资源，这是一个单例，不要手动实例化此类，否则会导致不可预料的问题。</p>\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._loadings = new Map();\r\n        this._queue = [];\r\n        this._downloadings = new Set();\r\n    }\r\n\r\n    /**\r\n     * 是否有任何的加载任务在进行\r\n     */\r\n    public get loading(): boolean {\r\n        return this._loadings.size > 0;\r\n    }\r\n\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param type 资源类型。比如：Loader.IMAGE。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], type?: string, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param options 加载选项。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], options?: Readonly<ILoadOptions>, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>这是兼容2.0引擎的加载接口</p>\r\n     * <p>加载资源。</p>\r\n     * @param url\t\t要加载的单个资源地址或资源信息数组。比如：简单数组：[\"a.png\",\"b.png\"]；复杂数组[{url:\"a.png\",type:Loader.IMAGE,size:100,priority:1},{url:\"b.json\",type:Loader.JSON,size:50,priority:1}]。\r\n     * @param complete\t加载结束回调。根据url类型不同分为2种情况：1. url为String类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     * @param progress\t加载进度回调。回调参数值为当前资源的加载进度信息(0-1)。\r\n     * @param type\t\t资源类型。比如：Loader.IMAGE。\r\n     * @param priority\t(default = 0)加载的优先级，数字越大优先级越高，优先级高的优先加载。\r\n     * @param cache\t\t是否缓存。\r\n     * @param group\t\t分组，方便对资源进行管理。\r\n     * @param ignoreCache\t是否忽略缓存。\r\n     * @param useWorkerLoader(default = false)是否使用worker加载（只针对IMAGE类型和ATLAS类型，并且浏览器支持的情况下生效）\r\n     * @return Promise对象\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], complete?: Handler, progress?: Handler, type?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any>;\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], arg1?: string | Readonly<ILoadOptions> | Handler, arg2?: ProgressCallback | Handler, arg3?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any> {\r\n        let complete: Handler;\r\n        let type: string;\r\n        let options: ILoadOptions = dummyOptions;\r\n        if (arg1 instanceof Handler) {\r\n            complete = arg1;\r\n            type = arg3;\r\n        }\r\n        else if (typeof (arg1) === \"string\")\r\n            type = arg1;\r\n        else if (arg1 != null) {\r\n            type = arg1.type;\r\n            options = arg1;\r\n        }\r\n\r\n        if (priority != null || cache != null || ignoreCache != null || group != null || useWorkerLoader != null) {\r\n            if (options === dummyOptions)\r\n                options = { priority, cache, ignoreCache, group, useWorkerLoader };\r\n            else\r\n                options = Object.assign(options, { priority, cache, ignoreCache, group, useWorkerLoader });\r\n        }\r\n        if (options.cache === false)\r\n            options.ignoreCache = true;\r\n\r\n        let onProgress: ProgressCallback;\r\n        if (arg2 instanceof Handler)\r\n            onProgress = (value: number) => arg2.runWith(value);\r\n        else\r\n            onProgress = arg2;\r\n\r\n        let promise: Promise<any>;\r\n        if (Array.isArray(url)) {\r\n            let pd: BatchProgress;\r\n            if (onProgress)\r\n                pd = new BatchProgress(onProgress);\r\n\r\n            let promises: Array<Promise<any>> = [];\r\n            for (let i = 0; i < url.length; i++) {\r\n                let url2 = url[i];\r\n                if (!url2)\r\n                    continue;\r\n\r\n                if (typeof (url2) === \"string\") {\r\n                    promises.push(this._load1(url2, type, options, pd?.createCallback()));\r\n                }\r\n                else {\r\n                    promises.push(this._load1(url2.url, url2.type || type,\r\n                        options !== dummyOptions ? Object.assign({}, options, url2) : url2, pd?.createCallback()));\r\n                }\r\n            }\r\n\r\n            promise = Promise.all(promises);\r\n        }\r\n        else if (typeof (url) === \"string\")\r\n            promise = this._load1(url, type, options, onProgress);\r\n        else\r\n            promise = this._load1(url.url, url.type || type,\r\n                options !== dummyOptions ? Object.assign({}, options, url) : url, onProgress);\r\n\r\n        if (complete)\r\n            return promise.then(result => {\r\n                complete.runWith(result);\r\n                return result;\r\n            });\r\n        else\r\n            return promise;\r\n    }\r\n\r\n    /** @internal */\r\n    _load1(url: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        if (LayaEnv.isPreview) {\r\n            if (url.startsWith(\"res://\")) {\r\n                let uuid = url.substring(6);\r\n                return AssetDb.inst.UUID_to_URL_async(uuid).then(url2 => {\r\n                    if (url2)\r\n                        return this._load2(url2, uuid, type, options, onProgress);\r\n                    else {\r\n                        !options.silent && Loader.warnFailed(url, undefined, options.initiator?.url);\r\n                        return Promise.resolve(null);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return AssetDb.inst.URL_to_UUID_async(url).then(uuid => {\r\n                    return this._load2(url, uuid, type, options, onProgress);\r\n                });\r\n            }\r\n        }\r\n        else\r\n            return this._load2(url, null, type, options, onProgress);\r\n    }\r\n\r\n    /** @internal */\r\n    _load2(url: string, uuid: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        let { ext, typeId, main, loaderType } = Loader.getURLInfo(url, type);\r\n        if (!loaderType) {\r\n            !options.silent && Loader.warnFailed(url, undefined, options.initiator?.url);\r\n            return Promise.resolve(null);\r\n        }\r\n        let formattedUrl = URL.formatURL(url);\r\n\r\n        if (options.group) {\r\n            let set = Loader.groupMap[options.group];\r\n            if (!set)\r\n                set = Loader.groupMap[options.group] = new Set();\r\n            set.add(formattedUrl);\r\n        }\r\n\r\n        let obsoluteRes: Resource;\r\n        if (!options.ignoreCache) {\r\n            let cacheRes = Loader._getRes(formattedUrl, type);\r\n            if (cacheRes !== undefined) {\r\n                if (cacheRes == null)\r\n                    return Promise.resolve(null);\r\n                else {\r\n                    if (!(cacheRes instanceof Resource))\r\n                        return Promise.resolve(cacheRes);\r\n\r\n                    if (cacheRes.obsolute)\r\n                        obsoluteRes = cacheRes;\r\n\r\n                    if (!obsoluteRes && (!cacheRes.uuid || !uuid || uuid == cacheRes.uuid))\r\n                        return Promise.resolve(cacheRes);\r\n                }\r\n            }\r\n        }\r\n\r\n        let loadingKey = formattedUrl;\r\n        if (!main)\r\n            loadingKey += \"@\" + typeId;\r\n        let task = this._loadings.get(loadingKey);\r\n        if (task) {\r\n            //fix recursive dependency\r\n            let p = options.initiator;\r\n            while (p) {\r\n                if (p === task)\r\n                    return Promise.resolve();\r\n                p = p.options.initiator;\r\n            }\r\n            if (onProgress)\r\n                task.onProgress.add(onProgress);\r\n            return new Promise((resolve) => task.onComplete.add(resolve));\r\n        }\r\n\r\n        //判断是否在自动图集里\r\n        let atlasInfo = AtlasInfoManager.getFileLoadPath(formattedUrl);\r\n        if (atlasInfo) {\r\n            return this.load(atlasInfo.url, { type: Loader.ATLAS, baseUrl: atlasInfo.baseUrl }).then(() => {\r\n                return Loader.getRes(url, type);\r\n            });\r\n        }\r\n\r\n        if (loadTaskPool.length > 0)\r\n            task = loadTaskPool.pop();\r\n        else\r\n            task = new LoadTask();\r\n        task.type = type;\r\n        task.url = url;\r\n        task.uuid = uuid;\r\n        task.ext = ext;\r\n        options = Object.assign(task.options, options);\r\n        delete options.type;\r\n        if (options.priority == null)\r\n            options.priority = 0;\r\n        if (options.useWorkerLoader == null)\r\n            options.useWorkerLoader = WorkerLoader.enable;\r\n        if (onProgress)\r\n            task.onProgress.add(onProgress);\r\n        task.loader = this;\r\n        task.obsoluteInst = obsoluteRes;\r\n\r\n        let assetLoader = new loaderType();\r\n        this._loadings.set(loadingKey, task);\r\n\r\n        let promise: Promise<any>;\r\n        try {\r\n            promise = assetLoader.load(task);\r\n        }\r\n        catch (err: any) {\r\n            !options.silent && Loader.warnFailed(url, err, options.initiator?.url);\r\n\r\n            promise = Promise.resolve(null);\r\n        }\r\n\r\n        return promise.then(content => {\r\n            if (content instanceof Resource) {\r\n                content._setCreateURL(url, uuid);\r\n            }\r\n\r\n            if (task.options.cache !== false)\r\n                Loader._cacheRes(formattedUrl, content, typeId, main);\r\n\r\n            task.progress.update(-1, 1);\r\n\r\n            //console.log(\"Loaded \" + url);\r\n            task.onComplete.invoke(content);\r\n            return content;\r\n        }).catch(error => {\r\n            !options.silent && Loader.warnFailed(url, error, options.initiator?.url);\r\n\r\n            if (task.options.cache !== false)\r\n                Loader._cacheRes(formattedUrl, null, typeId, main);\r\n\r\n            task.onComplete.invoke(null);\r\n            return null;\r\n        }).then((result: any) => {\r\n            this._loadings.delete(loadingKey);\r\n            task.reset();\r\n            loadTaskPool.push(task);\r\n            if (this._loadings.size == 0)\r\n                this.event(Event.COMPLETE);\r\n            return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 从指定URL下载。这是较为底层的下载资源的方法，它和load方法不同，不对返回的数据进行解析，也不会缓存下载的内容。\r\n     * 成功则返回下载的数据，失败返回null。\r\n     */\r\n    fetch<K extends keyof ContentTypeMap>(url: string, contentType: K, onProgress?: ProgressCallback, options?: Readonly<ILoadOptions>): Promise<ContentTypeMap[K]> {\r\n        options = options || dummyOptions;\r\n        let task: DownloadItem = {\r\n            originalUrl: url,\r\n            url: url,\r\n            contentType: contentType,\r\n            priority: options.priority ?? 1,\r\n            retryCnt: 0,\r\n            onProgress: onProgress,\r\n            onComplete: null,\r\n        };\r\n        if (options.useWorkerLoader) {\r\n            task.useWorkerLoader = true;\r\n            task.workerLoaderOptions = options.workerLoaderOptions;\r\n        }\r\n        if (options.blob)\r\n            task.blob = options.blob;\r\n        if (options.noRetry)\r\n            task.retryCnt = -1;\r\n        if (options.silent)\r\n            task.silent = true;\r\n\r\n        return AssetDb.inst.resolveURL(url).then(url => {\r\n            if (url)\r\n                return new Promise((resolve) => {\r\n                    task.url = URL.formatURL(url);\r\n                    task.onComplete = resolve;\r\n                    this.queueToDownload(task);\r\n                });\r\n            else\r\n                return null;\r\n        });\r\n    }\r\n\r\n    private queueToDownload(item: DownloadItem) {\r\n        if (this._downloadings.size < this.maxLoader) {\r\n            this.download(item);\r\n            return;\r\n        }\r\n\r\n        let priority = item.priority;\r\n        if (priority == 0)\r\n            this._queue.push(item);\r\n        else {\r\n            let i = this._queue.findIndex(e => e.priority < priority);\r\n            if (i != -1)\r\n                this._queue.splice(i, 0, item);\r\n            else\r\n                this._queue.push(item);\r\n        }\r\n    }\r\n\r\n    private download(item: DownloadItem) {\r\n        this._downloadings.add(item);\r\n        let url = URL.postFormatURL(item.url);\r\n\r\n        if (item.contentType == \"image\") {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                if (!(preloadedContent instanceof ArrayBuffer)) {\r\n                    this.completeItem(item, preloadedContent);\r\n                    return;\r\n                }\r\n\r\n                //cache as arraybuffer\r\n                item.blob = preloadedContent;\r\n            }\r\n\r\n            if (item.blob) {\r\n                Loader.downloader.imageWithBlob(item, item.blob, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.retryCnt = -1; //失败无需重试\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else if (item.useWorkerLoader) {\r\n                Loader.downloader.imageWithWorker(item, url, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.useWorkerLoader = false; //重试不用worker\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else {\r\n                Loader.downloader.image(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                    this.completeItem(item, data, error));\r\n            }\r\n        }\r\n        else if (item.contentType == \"sound\") {\r\n            Loader.downloader.audio(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n        else {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                this.completeItem(item, preloadedContent);\r\n                return;\r\n            }\r\n\r\n            Loader.downloader.common(item, url, item.originalUrl, item.contentType, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n    }\r\n\r\n    private completeItem(item: DownloadItem, content: any, error?: string) {\r\n        this._downloadings.delete(item);\r\n        if (content) {\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            item.onComplete(content);\r\n        }\r\n        else if (item.retryCnt != -1 && item.retryCnt < this.retryNum) {\r\n            item.retryCnt++;\r\n            if (!item.silent)\r\n                console.debug(`Retry to load ${item.url} (${item.retryCnt})`);\r\n            ILaya.systemTimer.once(this.retryDelay, this, this.queueToDownload, [item], false);\r\n        }\r\n        else {\r\n            !item.silent && Loader.warnFailed(item.url);\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    public static getURLInfo(url: string, type?: string): URLInfo {\r\n        //先根据扩展名获得注册信息A\r\n        let ext = url.startsWith(\"data:\") ? \"png\" : Utils.getFileExtension(url);\r\n        let extEntry: Array<TypeMapEntry>;\r\n        if (ext.length > 0)\r\n            extEntry = Loader.extMap[ext];\r\n\r\n        let typeId: number;\r\n        let main: boolean;\r\n        let loaderType: new () => IResourceLoader;\r\n\r\n        if (type) { //指定了类型\r\n            let typeEntry = Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                return NullURLInfo;\r\n\r\n            typeId = typeEntry.typeId;\r\n\r\n            let i: number = 0;\r\n            if (extEntry) {\r\n                if (extEntry[0].typeId === typeId //优化，大部分情况均为如此\r\n                    || (i = extEntry.findIndex(e => e.typeId === typeId)) != -1) {\r\n                    main = i == 0;\r\n                    loaderType = extEntry[i].loaderType;\r\n                }\r\n                else {\r\n                    //未与扩展名匹配的情况，例如a.lh试图以Loader.JSON类型加载，这种组合没有注册，但仍然允许加载为副资源\r\n                    main = false;\r\n                    loaderType = typeEntry.loaderType;\r\n                }\r\n            }\r\n            else { //扩展名没有注册的情况\r\n                main = type != Loader.TEXTURE2D;\r\n                loaderType = typeEntry.loaderType;\r\n            }\r\n        }\r\n        else {\r\n            if (!extEntry)\r\n                return NullURLInfo;\r\n\r\n            //没有自定类型，则认为是主资源\r\n            main = true;\r\n            typeId = extEntry[0].typeId;\r\n            loaderType = extEntry[0].loaderType;\r\n        }\r\n\r\n        return { ext, main, typeId, loaderType };\r\n    }\r\n\r\n    public static warnFailed(url: string, err?: any, initiatorUrl?: string) {\r\n        if (initiatorUrl)\r\n            this.warn(`Failed to load '${url}' (in '${initiatorUrl}')`, err);\r\n        else\r\n            this.warn(`Failed to load '${url}'`, err);\r\n    }\r\n\r\n    public static warn(msg: string, err?: any) {\r\n        if (err)\r\n            console.warn(msg, err);\r\n        else\r\n            console.warn(msg);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的资源。\r\n     * @param url 资源地址。\r\n     * @return 返回资源。\r\n     */\r\n    static getRes(url: string, type?: string): any {\r\n        url = URL.formatURL(url);\r\n        let ret = Loader._getRes(url, type);\r\n        return ret || null;\r\n    }\r\n\r\n    /** @internal */\r\n    static _getRes(url: string, type?: string): any {\r\n        let resArr = Loader.loadedMap[url];\r\n        if (!resArr)\r\n            return undefined;\r\n\r\n        let ret: any;\r\n        if (type) {\r\n            let typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                return undefined;\r\n\r\n            if (resArr.length == 2) { //优化，大部分情况都是只有主资源，也就是两个元素\r\n                if (resArr[0] == typeEntry.typeId)\r\n                    ret = resArr[1];\r\n            }\r\n            else {\r\n                let i = resArr.indexOf(typeEntry.typeId);\r\n                if (i != -1)\r\n                    ret = resArr[i + 1];\r\n            }\r\n        }\r\n        else\r\n            ret = resArr[1]; //主资源\r\n\r\n        if ((ret instanceof Resource) && ret.destroyed)\r\n            return undefined;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getTexture2D(url: string): Texture2D {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getBaseTexture<T extends BaseTexture>(url: string): T {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的图集地址列表。\r\n     * @param url 图集地址。\r\n     * @return 返回地址集合。\r\n     */\r\n    static getAtlas(url: string): AtlasResource {\r\n        return Loader.getRes(url, Loader.ATLAS);\r\n    }\r\n\r\n    getRes(url: string, type?: string): any {\r\n        return Loader.getRes(url, type);\r\n    }\r\n\r\n    static createNodes<T extends Node>(url: string): T {\r\n        return <T>(<Prefab>Loader.getRes(url))?.create();\r\n    }\r\n\r\n    /**\r\n     * 缓存资源。\r\n     * @param url 资源地址。\r\n     * @param data 要缓存的内容。\r\n     */\r\n    static cacheRes(url: string, data: any, type?: string): void {\r\n        url = URL.formatURL(url);\r\n        let urlInfo = Loader.getURLInfo(url, type);\r\n        if (urlInfo.typeId != null)\r\n            Loader._cacheRes(url, data, urlInfo.typeId, urlInfo.main);\r\n    }\r\n\r\n    /** @internal */\r\n    static _cacheRes(url: string, data: any, typeId: number, main: boolean) {\r\n        let entry: Array<any> = Loader.loadedMap[url];\r\n        if (main) {\r\n            if (entry) {\r\n                entry[0] = typeId;\r\n                entry[1] = data;\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [typeId, data];\r\n        }\r\n        else {\r\n            if (entry) {\r\n                let i = entry.findIndex(e => e === typeId);\r\n                if (i != -1)\r\n                    entry[i + 1] = data;\r\n                else\r\n                    entry.push(typeId, data);\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [null, undefined, typeId, data];\r\n        }\r\n    }\r\n\r\n    cacheRes(url: string, data: any, type?: string): void {\r\n        Loader.cacheRes(url, data, type);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    static clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _clearRes(url: string, checkObj?: any) {\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n\r\n        if (checkObj) {\r\n            if (entry[1] == checkObj) {\r\n                if (entry.length == 2)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry[1] = undefined;\r\n            }\r\n            else {\r\n                let i = entry.indexOf(checkObj);\r\n                if (i == -1)\r\n                    return;\r\n\r\n                if (entry.length == 4 && entry[0] == null)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry.splice(i - 1, 2);\r\n            }\r\n\r\n            if ((checkObj instanceof Resource) && !checkObj.destroyed) {\r\n                checkObj.destroy();\r\n            }\r\n        }\r\n        else {\r\n            delete Loader.loadedMap[url];\r\n\r\n            if (entry.length > 2) {\r\n                for (let i = 1; i < entry.length; i += 2) {\r\n                    let obj = entry[i];\r\n                    if ((obj instanceof Resource) && !obj.destroyed) {\r\n                        obj.destroy();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let obj = entry[1];\r\n                if ((obj instanceof Resource) && !obj.destroyed) {\r\n                    obj.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁Texture使用的图片资源，保留texture壳，如果下次渲染的时候，发现texture使用的图片资源不存在，则会自动恢复\r\n     * 相比clearRes，clearTextureRes只是清理texture里面使用的图片资源，并不销毁texture，再次使用到的时候会自动恢复图片资源\r\n     * 而clearRes会彻底销毁texture，导致不能再使用；clearTextureRes能确保立即销毁图片资源，并且不用担心销毁错误\r\n     * @param url 图集地址或者texture地址，比如 \"res/atlas/comp.atlas\"或\"hall/bg.jpg\"\r\n     */\r\n    clearTextureRes(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n        let res = entry[1];\r\n        if (res instanceof Texture) {\r\n            res.disposeBitmap();\r\n        }\r\n        else if (res instanceof AtlasResource) {\r\n            for (let tex of res.textures)\r\n                tex.disposeBitmap();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置资源分组。\r\n     * @param url 资源地址。\r\n     * @param group 分组名。\r\n     */\r\n    static setGroup(url: string, group: string): void {\r\n        url = URL.formatURL(url);\r\n        let set = Loader.groupMap[group];\r\n        if (!set)\r\n            set = Loader.groupMap[group] = new Set();\r\n        set.add(url);\r\n    }\r\n\r\n    /**\r\n     * 根据分组清理资源。\r\n     * @param group 分组名\r\n     */\r\n    static clearResByGroup(group: string): void {\r\n        let set = Loader.groupMap[group];\r\n        if (set) {\r\n            for (let k of set)\r\n                Loader._clearRes(k);\r\n        }\r\n    }\r\n\r\n    /** 清理当前未完成的加载，所有未加载的内容全部停止加载。*/\r\n    clearUnLoaded(): void {\r\n        if (this._queue.length == 0)\r\n            return;\r\n\r\n        let arr = this._queue.concat();\r\n        this._queue.length = 0;\r\n        for (let item of arr)\r\n            item.onComplete(null);\r\n    }\r\n\r\n    /**\r\n     * 根据地址集合清理掉未加载的内容\r\n     * @param urls 资源地址集合\r\n     */\r\n    cancelLoadByUrls(urls: any[]): void {\r\n        if (!urls) return;\r\n        for (var i: number = 0, n: number = urls.length; i < n; i++) {\r\n            this.cancelLoadByUrl(urls[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据地址清理掉未加载的内容\r\n     * @param url 资源地址\r\n     */\r\n    cancelLoadByUrl(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let i = this._queue.findIndex(item => item.url == url);\r\n        if (i != -1) {\r\n            let item = this._queue[i];\r\n            this._queue.splice(i, 1);\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 载入一个分包\r\n     * @path 小游戏的分包路径\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, onProgress?: ProgressCallback): Promise<void>;\r\n    /**\r\n     * 载入一个分包。\r\n     * @path 分包路径\r\n     * @remoteUrl 如果分包是一个远程包，那需要提供远程资源服务器的地址，例如\"http://cdn.com/\"\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, remoteUrl?: string, onProgress?: ProgressCallback): Promise<void>;\r\n    loadPackage(path: string, arg2?: string | ProgressCallback, arg3?: ProgressCallback): Promise<void> {\r\n        let progress: ProgressCallback;\r\n        let remoteUrl: string;\r\n\r\n        if (typeof (arg2) === \"string\") {\r\n            remoteUrl = arg2;\r\n            progress = arg3;\r\n        } else {\r\n            progress = arg2;\r\n        }\r\n\r\n        if (remoteUrl) {\r\n            if (!remoteUrl.endsWith(\"/\"))\r\n                remoteUrl += \"/\";\r\n            let tmpPath: string = path + \"/\";\r\n            URL.basePaths[tmpPath] = remoteUrl;\r\n            return this._loadSubFileConfig(path, null, progress);\r\n        } else {\r\n            if (LayaEnv.isPreview)\r\n                return Promise.resolve();\r\n\r\n            let mini = ILaya.Browser.miniGameContext;\r\n\r\n            if (mini == null) {\r\n                return this._loadSubFileConfig(path, null, progress);\r\n            }\r\n            else {\r\n                return this._loadMiniPackage(mini, path, progress).then(() =>\r\n                    this._loadSubFileConfig(path, mini, progress)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private _loadMiniPackage(mini: any, packName: string, progress?: ProgressCallback): Promise<any> {\r\n        if (mini.subPkgNameSeperator)\r\n            packName = packName.replace(/\\//g, mini.subPkgNameSeperator);\r\n        if (!(packName.length > 0)) return Promise.resolve();\r\n        return new Promise((resolve: (value: any) => void, reject: (reason?: any) => void) => {\r\n            let loadTask: any = mini.loadSubpackage({\r\n                name: packName,\r\n                success: (res: any) => {\r\n                    resolve(res);\r\n                },\r\n                fail: (res: any) => {\r\n                    reject(res);\r\n                }\r\n            });\r\n\r\n            loadTask.onProgressUpdate && loadTask.onProgressUpdate((res: any) => {\r\n                progress && progress(res);\r\n            });\r\n        })\r\n    }\r\n\r\n    private _loadSubFileConfig(path: string, mini: any, onProgress: ProgressCallback): Promise<any> {\r\n        if (mini && mini.subPkgPathSeperator)\r\n            path = path.replace(/\\//g, mini.subPkgPathSeperator);\r\n        if (path.length > 0)\r\n            path += \"/\";\r\n\r\n        return this.fetch(path + \"fileconfig.json\", \"json\", onProgress).then(fileConfig => {\r\n            let files: Array<string> = [];\r\n            let col = fileConfig.files;\r\n            for (let k in col) {\r\n                if (k.length > 0) {\r\n                    for (let file of col[k])\r\n                        files.push(k + \"/\" + file);\r\n                }\r\n                else {\r\n                    for (let file of col[k])\r\n                        files.push(file);\r\n                }\r\n            }\r\n\r\n            if (fileConfig.hash) {\r\n                let i = 0;\r\n                let version = URL.version;\r\n                for (let k of fileConfig.hash) {\r\n                    if (k != null)\r\n                        version[files[i]] = k;\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            let configs: Array<any> = fileConfig.config;\r\n            let len = configs.length;\r\n            let i = 0, j = 0, m = 0, k = 0, n = 0;\r\n            let indice: Array<number>;\r\n            let c: any;\r\n            let metaMap = AssetDb.inst.metaMap;\r\n            while (true) {\r\n                if (indice == null) {\r\n                    if (i >= len)\r\n                        break;\r\n                    c = configs[i];\r\n                    indice = c.i;\r\n                    if (Array.isArray(indice))\r\n                        n = indice.length;\r\n                    else {\r\n                        m = indice;\r\n                        n = 0;\r\n                        k = 1;\r\n                    }\r\n                    j = 0;\r\n                }\r\n                if (k == 0) {\r\n                    if (j >= n) {\r\n                        i++;\r\n                        indice = null;\r\n                        continue;\r\n                    }\r\n                    k = indice[j++];\r\n                    if (k > 0) {\r\n                        m = k;\r\n                        k = 0;\r\n                    }\r\n                    else\r\n                        k = -k;\r\n                }\r\n                else\r\n                    k--;\r\n\r\n                let file = files[m + k];\r\n                switch (c.t) {\r\n                    case 0: //图片\r\n                        metaMap[file] = c;\r\n                        break;\r\n                    case 1: //自动图集\r\n                        AtlasInfoManager.addAtlas(file, c.prefix, c.frames);\r\n                        break;\r\n                    case 2: //Shader\r\n                        AssetDb.inst.shaderNameMap[c.shaderName] = file;\r\n                        break;\r\n                    case 3: //render texture\r\n                        Loader.preLoadedMap[URL.formatURL(file)] = c;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (!mini && fileConfig.entry)\r\n                return ILaya.Browser.loadLib(URL.formatURL(path + fileConfig.entry));\r\n            else\r\n                return Promise.resolve();\r\n        });\r\n    }\r\n}\r\n\r\nclass LoadTask implements ILoadTask {\r\n    type: string;\r\n    url: string;\r\n    uuid: string;\r\n    ext: string;\r\n    options: ILoadOptions;\r\n    loader: Loader;\r\n    progress: BatchProgress;\r\n    obsoluteInst: Resource;\r\n\r\n    onProgress: Delegate;\r\n    onComplete: Delegate;\r\n\r\n    constructor() {\r\n        this.options = {};\r\n        this.onProgress = new Delegate();\r\n        this.onComplete = new Delegate();\r\n        this.progress = new BatchProgress((progress: number) => this.onProgress.invoke(progress));\r\n    }\r\n\r\n    public reset() {\r\n        for (let k in this.options)\r\n            delete this.options[k];\r\n        this.onProgress.clear();\r\n        this.onComplete.clear();\r\n        this.progress.reset();\r\n        this.obsoluteInst = null;\r\n    }\r\n}\r\n\r\nconst loadTaskPool: Array<LoadTask> = [];\r\nconst dummyOptions: ILoadOptions = {};\r\n\r\ninterface DownloadItem {\r\n    url: string;\r\n    originalUrl: string;\r\n    contentType: string;\r\n    priority: number;\r\n    useWorkerLoader?: boolean;\r\n    workerLoaderOptions?: Record<string, any>;\r\n    blob?: ArrayBuffer;\r\n    retryCnt?: number;\r\n    silent?: boolean;\r\n    onComplete: (content: any) => void;\r\n    onProgress: ProgressCallback;\r\n}","/**\r\n\t * @private\r\n\t * <code>MathUtil</code> 是一个数据处理工具类。\r\n\t */\r\nexport class MathUtil {\r\n\r\n    static subtractVector3(l: Float32Array, r: Float32Array, o: Float32Array): void {\r\n        o[0] = l[0] - r[0];\r\n        o[1] = l[1] - r[1];\r\n        o[2] = l[2] - r[2];\r\n    }\r\n\r\n    static lerp(left: number, right: number, amount: number): number {\r\n        return left * (1 - amount) + right * amount;\r\n    }\r\n\r\n    static scaleVector3(f: Float32Array, b: number, e: Float32Array): void {\r\n        e[0] = f[0] * b;\r\n        e[1] = f[1] * b;\r\n        e[2] = f[2] * b;\r\n    }\r\n\r\n    static lerpVector3(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n    }\r\n\r\n    static lerpVector4(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2], aw: number = l[3];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n        o[3] = aw + t * (r[3] - aw);\r\n    }\r\n\r\n    static slerpQuaternionArray(a: Float32Array, Offset1: number, b: Float32Array, Offset2: number, t: number, out: Float32Array, Offset3: number): Float32Array {\r\n\r\n        var ax: number = a[Offset1 + 0], ay: number = a[Offset1 + 1], az: number = a[Offset1 + 2], aw: number = a[Offset1 + 3], bx: number = b[Offset2 + 0], by: number = b[Offset2 + 1], bz: number = b[Offset2 + 2], bw: number = b[Offset2 + 3];\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out[Offset3 + 0] = scale0 * ax + scale1 * bx;\r\n        out[Offset3 + 1] = scale0 * ay + scale1 * by;\r\n        out[Offset3 + 2] = scale0 * az + scale1 * bz;\r\n        out[Offset3 + 3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取指定的两个点组成的线段的角度值。\r\n     * @param\tx0 点一的 X 轴坐标值。\r\n     * @param\ty0 点一的 Y 轴坐标值。\r\n     * @param\tx1 点二的 X 轴坐标值。\r\n     * @param\ty1 点二的 Y 轴坐标值。\r\n     * @return 角度值。\r\n     */\r\n    static getRotation(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.atan2(y1 - y0, x1 - x0) / Math.PI * 180;\r\n    }\r\n\r\n    /**\r\n     * 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param\ta 待比较数字。\r\n     * @param\tb 待比较数字。\r\n     * @return 如果a等于b 则值为0；如果b>a则值为1；如果b<则值为-1。\r\n     */\r\n    static sortBigFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? 1 : -1;\r\n    }\r\n\r\n    /**\r\n     * 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param\ta 待比较数字。\r\n     * @param\tb 待比较数字。\r\n     * @return 如果a等于b 则值为0；如果b>a则值为-1；如果b<则值为1。\r\n     */\r\n    static sortSmallFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * 将指定的元素转为数字进行比较。\r\n     * @param\ta 待比较元素。\r\n     * @param\tb 待比较元素。\r\n     * @return b、a转化成数字的差值 (b-a)。\r\n     */\r\n    static sortNumBigFirst(a: any, b: any): number {\r\n        return parseFloat(b) - parseFloat(a);\r\n    }\r\n\r\n    /**\r\n     * 将指定的元素转为数字进行比较。\r\n     * @param\ta 待比较元素。\r\n     * @param\tb 待比较元素。\r\n     * @return a、b转化成数字的差值 (a-b)。\r\n     */\r\n    static sortNumSmallFirst(a: any, b: any): number {\r\n        return parseFloat(a) - parseFloat(b);\r\n    }\r\n\r\n    /**\r\n     * 返回根据对象指定的属性进行排序的比较函数。\r\n     * @param\tkey 排序要依据的元素属性名。\r\n     * @param\tbigFirst 如果值为true，则按照由大到小的顺序进行排序，否则按照由小到大的顺序进行排序。\r\n     * @param\tforceNum 如果值为true，则将排序的元素转为数字进行比较。\r\n     * @return 排序函数。\r\n     */\r\n    static sortByKey(key: string, bigFirst: boolean = false, forceNum: boolean = true): (a: any, b: any) => number {\r\n        var _sortFun: Function;\r\n        if (bigFirst) {\r\n            _sortFun = forceNum ? MathUtil.sortNumBigFirst : MathUtil.sortBigFirst;\r\n        } else {\r\n            _sortFun = forceNum ? MathUtil.sortNumSmallFirst : MathUtil.sortSmallFirst;\r\n        }\r\n        return function (a: any, b: any): number {\r\n            return _sortFun(a[key], b[key]);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { MathUtil } from \"../maths/MathUtil\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 节点关键帧动画播放类。解析播放IDE内制作的节点动画。\r\n */\r\nexport class FrameAnimation extends AnimationBase {\r\n\r\n    /**@private */\r\n    private static _sortIndexFun(objpre: any, objnext: any) {\r\n        return objpre.index - objnext.index\r\n    }\r\n\r\n    /**@internal id对象表*/\r\n    _targetDic: any;\r\n    /**@internal 动画数据*/\r\n    _animationData: any;\r\n    /**@private */\r\n    protected _usedFrames: any[];\r\n\r\n    constructor() {\r\n        super();\r\n        if (FrameAnimation._sortIndexFun === undefined) {\r\n            FrameAnimation._sortIndexFun = MathUtil.sortByKey(\"index\", false, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 初始化动画数据\r\n     * @param targetDic 节点ID索引\r\n     * @param animationData 动画数据\r\n     */\r\n    _setUp(targetDic: any, animationData: any): void {\r\n        this._targetDic = targetDic;\r\n        this._animationData = animationData;\r\n        this.interval = 1000 / animationData.frameRate;\r\n        if (animationData.parsed) {\r\n            this._count = animationData.count;\r\n            this._labels = animationData.labels;\r\n            this._usedFrames = animationData.animationNewFrames;\r\n        } else {\r\n            this._usedFrames = [];\r\n            this._calculateDatas();\r\n\r\n            animationData.parsed = true;\r\n            animationData.labels = this._labels;\r\n            animationData.count = this._count;\r\n            animationData.animationNewFrames = this._usedFrames;\r\n        }\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this._targetDic = null;\r\n        this._animationData = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 将节点设置到某一帧的状态\r\n     * @param node 节点ID\r\n     * @param frame\r\n     * @param targetDic 节点表\r\n     */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!targetDic) targetDic = this._targetDic;\r\n        var target: any = targetDic[node.target];\r\n        if (!target) {\r\n            //trace(\"loseTarget:\",node.target);\r\n            return;\r\n        }\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            if (propFrames.length > frame) {\r\n                value = propFrames[frame];\r\n            } else {\r\n                value = propFrames[propFrames.length - 1];\r\n            }\r\n            target[key] = value;\r\n        }\r\n        var funkeys: any[] = node.funkeys;\r\n        len = funkeys.length;\r\n        var funFrames: any;\r\n        if (len == 0) return;\r\n        for (i = 0; i < len; i++) {\r\n            key = funkeys[i];\r\n            funFrames = frames[key];\r\n            if (funFrames[frame] !== undefined) {\r\n                target[key] && target[key].apply(target, funFrames[frame]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算帧数据\r\n     */\r\n    private _calculateDatas(): void {\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length, tNode: any;\r\n        this._count = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            this._calculateKeyFrames(tNode);\r\n        }\r\n        this._count += 1;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算某个节点的帧数据\r\n     */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n        if (!node.frames) node.frames = {};\r\n        if (!node.keys) node.keys = [];\r\n        else node.keys.length = 0;\r\n\r\n        if (!node.funkeys) node.funkeys = [];\r\n        else node.funkeys.length = 0;\r\n\r\n        if (!node.initValues) node.initValues = {};\r\n        for (key in keyFrames) {\r\n            var isFun: boolean = key.indexOf(\"()\") != -1;\r\n            tKeyFrames = keyFrames[key];\r\n            if (isFun) key = key.substr(0, key.length - 2);\r\n            if (!node.frames[key]) {\r\n                node.frames[key] = [];\r\n            }\r\n            if (!isFun) {\r\n                if (this._targetDic && this._targetDic[target]) {\r\n                    node.initValues[key] = this._targetDic[target][key];\r\n                }\r\n\r\n                tKeyFrames.sort(FrameAnimation._sortIndexFun);\r\n                node.keys.push(key);\r\n                this._calculateNodePropFrames(tKeyFrames, node.frames[key], key, target);\r\n            }\r\n            else {\r\n                node.funkeys.push(key);\r\n                var map: any[] = node.frames[key];\r\n                for (var i: number = 0; i < tKeyFrames.length; i++) {\r\n                    var temp: any = tKeyFrames[i];\r\n                    map[temp.index] = temp.value;\r\n                    if (temp.index > this._count) this._count = temp.index;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置节点，使节点恢复到动画之前的状态，方便其他动画控制\r\n     */\r\n    resetNodes(): void {\r\n        if (!this._targetDic) return;\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        var tNode: any;\r\n        var initValues: any;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            initValues = tNode.initValues;\r\n            if (!initValues) continue;\r\n            var target: any = this._targetDic[tNode.target];\r\n            if (!target) continue;\r\n            var key: string;\r\n            for (key in initValues) {\r\n                target[key] = initValues[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算节点某个属性的帧数据\r\n     */\r\n    private _calculateNodePropFrames(keyframes: any[], frames: any[], key: string, target: number): void {\r\n        var i: number, len: number = keyframes.length - 1;\r\n        frames.length = keyframes[len].index + 1;\r\n        for (i = 0; i < len; i++) {\r\n            this._dealKeyFrame(keyframes[i]);\r\n            this._calculateFrameValues(keyframes[i], keyframes[i + 1], frames);\r\n        }\r\n        if (len == 0) {\r\n            frames[0] = keyframes[0].value;\r\n            if (this._usedFrames) this._usedFrames[keyframes[0].index] = true;\r\n        }\r\n        this._dealKeyFrame(keyframes[i]);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _dealKeyFrame(keyFrame: any): void {\r\n        if (keyFrame.label && keyFrame.label != \"\") this.addLabel(keyFrame.label, keyFrame.index);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算两个关键帧直接的帧数据\r\n     */\r\n    private _calculateFrameValues(startFrame: any, endFrame: any, result: any[]): void {\r\n        var i: number, easeFun: Function;\r\n        var start: number = startFrame.index, end: number = endFrame.index;\r\n        var startValue: number = startFrame.value;\r\n        var dValue: number = endFrame.value - startFrame.value;\r\n        var dLen: number = end - start;\r\n        var frames: any[] = this._usedFrames;\r\n        if (end > this._count) this._count = end;\r\n        if (startFrame.tween) {\r\n            easeFun = (Ease as any)[startFrame.tweenMethod];\r\n            if (easeFun == null) easeFun = Ease.linearNone;\r\n            for (i = start; i < end; i++) {\r\n                result[i] = easeFun(i - start, startValue, dValue, dLen);\r\n                if (frames) frames[i] = true;\r\n            }\r\n        } else {\r\n            for (i = start; i < end; i++) {\r\n                result[i] = startValue;\r\n            }\r\n        }\r\n        if (frames) {\r\n            frames[startFrame.index] = true;\r\n            frames[endFrame.index] = true;\r\n        }\r\n        result[endFrame.index] = endFrame.value;\r\n    }\r\n}\r\n","import { FrameAnimation } from \"./FrameAnimation\"\r\nimport { Graphics } from \"./Graphics\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\n\r\n/**\r\n * Graphics动画解析器\r\n * @private\r\n */\r\nexport class GraphicAnimation extends FrameAnimation {\r\n    /**@private */\r\n    animationList: any[];\r\n    /**@private */\r\n    animationDic: any;\r\n    /**@private */\r\n    protected _nodeList: any[];\r\n    /**@private */\r\n    protected _nodeDefaultProps: any;\r\n    /**@private */\r\n    protected _gList: any[];\r\n    /**@private */\r\n    protected _nodeIDAniDic: any = {};\r\n\r\n    /**@private */\r\n    protected static _drawTextureCmd: any[] = [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", -1], [\"height\", -1], [\"pivotX\", 0], [\"pivotY\", 0], [\"scaleX\", 1], [\"scaleY\", 1], [\"rotation\", 0], [\"alpha\", 1], [\"skewX\", 0], [\"skewY\", 0], [\"anchorX\", 0], [\"anchorY\", 0]];\r\n    /**@private */\r\n    protected static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _I: GraphicAnimation;\r\n    /**@private */\r\n    private static _rootMatrix: Matrix;\r\n    /**@private */\r\n    private _rootNode: any;\r\n    /**@private */\r\n    protected _nodeGDic: any;\r\n\r\n    /**@private */\r\n    private _parseNodeList(uiView: any): void {\r\n        if (!this._nodeList) this._nodeList = [];\r\n        this._nodeDefaultProps[uiView.compId] = uiView.props;\r\n        if (uiView.compId) this._nodeList.push(uiView.compId);\r\n        var childs: any[] = uiView.child;\r\n        if (childs) {\r\n            var i: number, len: number = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._parseNodeList(childs[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _calGraphicData(aniData: any): void {\r\n        this._setUp(null, aniData);\r\n        this._createGraphicData();\r\n        if (this._nodeIDAniDic) {\r\n            var key: string;\r\n            for (key in this._nodeIDAniDic) {\r\n                this._nodeIDAniDic[key] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _createGraphicData(): void {\r\n        var gList: any[] = [];\r\n        var i: number, len: number = this.count;\r\n        var animationDataNew: any[] = this._usedFrames;\r\n        if (!animationDataNew) animationDataNew = [];\r\n        var preGraphic: Graphics;\r\n        for (i = 0; i < len; i++) {\r\n            if (animationDataNew[i] || !preGraphic) {\r\n                preGraphic = this._createFrameGraphic(i);\r\n            }\r\n            gList.push(preGraphic);\r\n        }\r\n        this._gList = gList;\r\n    }\r\n\r\n    /**@private */\r\n    protected _createFrameGraphic(frame: number): any {\r\n        var g: Graphics = new Graphics();\r\n        if (!GraphicAnimation._rootMatrix) GraphicAnimation._rootMatrix = new Matrix();\r\n        this._updateNodeGraphic(this._rootNode, frame, GraphicAnimation._rootMatrix, g);\r\n        //_updateNodeGraphic2(_rootNode, frame, g);\r\n        return g;\r\n    }\r\n\r\n    protected _updateNodeGraphic(node: any, frame: number, parentTransfrom: Matrix, g: Graphics, alpha: number = 1): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!tNodeG.resultTransform)\r\n            tNodeG.resultTransform = new Matrix();\r\n        var tResultTransform: Matrix;\r\n        tResultTransform = tNodeG.resultTransform;\r\n        Matrix.mul(tNodeG.transform, parentTransfrom, tResultTransform);\r\n        var tTex: Texture;\r\n        var tGraphicAlpha: number = tNodeG.alpha * alpha;\r\n        if (tGraphicAlpha < 0.01) return;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                if (tResultTransform._checkTransform()) {\r\n                    g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tResultTransform, tGraphicAlpha);\r\n                    tNodeG.resultTransform = null;\r\n                } else {\r\n                    g.drawTexture(tTex, tResultTransform.tx, tResultTransform.ty, tNodeG.width, tNodeG.height, null, tGraphicAlpha);\r\n                }\r\n            }\r\n        }\r\n        var childs: any[] = node.child;\r\n        if (!childs) return;\r\n        var i: number, len: number;\r\n        len = childs.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._updateNodeGraphic(childs[i], frame, tResultTransform, g, tGraphicAlpha);\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param tNodeG \r\n     * @param g \r\n     */\r\n    protected _updateNoChilds(tNodeG: GraphicNode, g: Graphics): void {\r\n        if (!tNodeG.skin) return;\r\n        var tTex: Texture = this._getTextureByUrl(tNodeG.skin);\r\n        if (!tTex) return;\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        if (!onlyTranslate) {\r\n            g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tTransform.clone(), tNodeG.alpha);\r\n        } else {\r\n            g.drawTexture(tTex, tTransform.tx, tTransform.ty, tNodeG.width, tNodeG.height, null, tNodeG.alpha);\r\n        }\r\n    }\r\n\r\n    protected _updateNodeGraphic2(node: any, frame: number, g: Graphics): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!node.child) {\r\n            this._updateNoChilds(tNodeG, g);\r\n            return;\r\n        }\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        var hasTrans: boolean;\r\n        hasTrans = onlyTranslate && (tTransform.tx != 0 || tTransform.ty != 0);\r\n        var ifSave: boolean;\r\n        ifSave = (tTransform._bTransform) || tNodeG.alpha != 1;\r\n        if (ifSave) g.save();\r\n        if (tNodeG.alpha != 1) g.alpha(tNodeG.alpha);\r\n        if (!onlyTranslate) g.transform(tTransform.clone());\r\n        else if (hasTrans) g.translate(tTransform.tx, tTransform.ty);\r\n\r\n        var childs: any[] = node.child;\r\n        var tTex: Texture;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                g.drawImage(tTex, 0, 0, tNodeG.width, tNodeG.height);\r\n            }\r\n        }\r\n\r\n        if (childs) {\r\n            var i: number, len: number;\r\n            len = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._updateNodeGraphic2(childs[i], frame, g);\r\n            }\r\n        }\r\n\r\n        if (ifSave) {\r\n            g.restore();\r\n        } else {\r\n            if (!onlyTranslate) {\r\n                g.transform(tTransform.clone().invert());\r\n            } else if (hasTrans) {\r\n                g.translate(-tTransform.tx, -tTransform.ty);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        this._nodeIDAniDic[node.target] = node;\r\n    }\r\n\r\n    /**@private */\r\n    protected getNodeDataByID(nodeID: number): any {\r\n        return this._nodeIDAniDic[nodeID];\r\n    }\r\n\r\n    /**@private */\r\n    protected _getParams(obj: any, params: any[], frame: number, obj2: any): any[] {\r\n        var rst: any[] = GraphicAnimation._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], frame, params[i][1], obj2);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**@private */\r\n    private _getObjVar(obj: any, key: string, frame: number, noValue: any, obj2: any): any {\r\n        if (key in obj) {\r\n            var vArr: any[] = obj[key];\r\n            if (frame >= vArr.length) frame = vArr.length - 1;\r\n            return obj[key][frame];\r\n        }\r\n        if (key in obj2) {\r\n            return obj2[key];\r\n        }\r\n        return noValue;\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param nodeID \r\n     * @param frame \r\n     * @param rst \r\n     */\r\n    protected _getNodeGraphicData(nodeID: number, frame: number, rst: GraphicNode): GraphicNode {\r\n        if (!rst)\r\n            rst = new GraphicNode();\r\n        if (!rst.transform) {\r\n            rst.transform = new Matrix();\r\n        } else {\r\n            rst.transform.identity();\r\n        }\r\n\r\n        var node: any = this.getNodeDataByID(nodeID);\r\n        if (!node) return rst;\r\n        var frameData: any = node.frames;\r\n        var params: any[] = this._getParams(frameData, GraphicAnimation._drawTextureCmd, frame, this._nodeDefaultProps[nodeID]);\r\n        var url: string = params[0];\r\n        var width: number, height: number;\r\n        var px: number = params[5], py: number = params[6];\r\n        var aX: number = params[13], aY: number = params[14];\r\n        var sx: number = params[7], sy: number = params[8];\r\n        var rotate: number = params[9];\r\n        var skewX: number = params[11], skewY: number = params[12]\r\n        width = params[3];\r\n        height = params[4];\r\n        if (width == 0 || height == 0) url = null;\r\n        if (width == -1) width = 0;\r\n        if (height == -1) height = 0;\r\n        var tex: Texture;\r\n        rst.skin = url;\r\n        rst.width = width;\r\n        rst.height = height;\r\n        if (url) {\r\n            tex = this._getTextureByUrl(url);\r\n            if (tex) {\r\n                if (!width)\r\n                    width = tex.sourceWidth;\r\n                if (!height)\r\n                    height = tex.sourceHeight;\r\n            } else {\r\n                console.warn(\"lost skin:\", url, \",you may load pics first\");\r\n            }\r\n        }\r\n\r\n        rst.alpha = params[10];\r\n\r\n        var m: Matrix = rst.transform;\r\n        if (aX != 0) {\r\n            px = aX * width;\r\n        }\r\n        if (aY != 0) {\r\n            py = aY * height;\r\n        }\r\n        if (px != 0 || py != 0) {\r\n            m.translate(-px, -py);\r\n        }\r\n        var tm: Matrix = null;\r\n        if (rotate || sx !== 1 || sy !== 1 || skewX || skewY) {\r\n            tm = GraphicAnimation._tempMt;\r\n            tm.identity();\r\n            tm._bTransform = true;\r\n            var skx: number = (rotate - skewX) * 0.0174532922222222; //laya.CONST.PI180;\r\n            var sky: number = (rotate + skewY) * 0.0174532922222222;\r\n            var cx: number = Math.cos(sky);\r\n            var ssx: number = Math.sin(sky);\r\n            var cy: number = Math.sin(skx);\r\n            var ssy: number = Math.cos(skx);\r\n            tm.a = sx * cx;\r\n            tm.b = sx * ssx;\r\n            tm.c = -sy * cy;\r\n            tm.d = sy * ssy;\r\n            tm.tx = tm.ty = 0;\r\n        }\r\n        if (tm) {\r\n            m = Matrix.mul(m, tm, m);\r\n        }\r\n\r\n        m.translate(params[1], params[2]);\r\n\r\n        return rst;\r\n    }\r\n    private static _tempMt: Matrix = new Matrix();\r\n\r\n    /**@private */\r\n    protected _getTextureByUrl(url: string): any {\r\n        return Loader.getRes(url);\r\n    }\r\n\r\n    /**@private */\r\n    setAniData(uiView: any, aniName: string = null): void {\r\n        if (uiView.animations) {\r\n            this._nodeDefaultProps = {};\r\n            this._nodeGDic = {};\r\n            if (this._nodeList) this._nodeList.length = 0;\r\n            this._rootNode = uiView;\r\n            this._parseNodeList(uiView);\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                this._labels = null;\r\n                if (aniName && aniName != tAniO.name) {\r\n                    continue;\r\n                }\r\n                if (!tAniO)\r\n                    continue;\r\n                try {\r\n                    this._calGraphicData(tAniO);\r\n                } catch (e) {\r\n                    console.warn(\"parse animation fail:\" + tAniO.name + \",empty animation created\");\r\n                    this._gList = [];\r\n                }\r\n                var frameO: any = {};\r\n                frameO.interval = 1000 / tAniO[\"frameRate\"];\r\n                frameO.frames = this._gList;\r\n                frameO.labels = this._labels;\r\n                frameO.name = tAniO.name;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n        GraphicAnimation._temParam.length = 0;\r\n\r\n    }\r\n\r\n    parseByData(aniData: any): any {\r\n        var rootNode: any, aniO: any;\r\n        rootNode = aniData.nodeRoot;\r\n        aniO = aniData.aniO;\r\n        delete aniData.nodeRoot;\r\n        delete aniData.aniO;\r\n        this._nodeDefaultProps = {};\r\n        this._nodeGDic = {};\r\n        if (this._nodeList) this._nodeList.length = 0;\r\n        this._rootNode = rootNode;\r\n        this._parseNodeList(rootNode);\r\n        this._labels = null;\r\n        try {\r\n            this._calGraphicData(aniO);\r\n        } catch (e) {\r\n            console.warn(\"parse animation fail:\" + aniO.name + \",empty animation created\");\r\n            this._gList = [];\r\n        }\r\n        var frameO: any = aniData;\r\n        frameO.interval = 1000 / aniO[\"frameRate\"];\r\n        frameO.frames = this._gList;\r\n        frameO.labels = this._labels;\r\n        frameO.name = aniO.name;\r\n        return frameO;\r\n    }\r\n\r\n    /**@private */\r\n    setUpAniData(uiView: any): void {\r\n        if (uiView.animations) {\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                if (!tAniO) continue;\r\n                var frameO: any = {};\r\n                frameO.name = tAniO.name;\r\n                frameO.aniO = tAniO;\r\n                frameO.nodeRoot = uiView;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _clear(): void {\r\n        this.animationList = null;\r\n        this.animationDic = null;\r\n        this._gList = null;\r\n        this._nodeGDic = null;\r\n    }\r\n\r\n    static parseAnimationByData(animationObject: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        var rst: any;\r\n        rst = GraphicAnimation._I.parseByData(animationObject);\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n\r\n    static parseAnimationData(aniData: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        GraphicAnimation._I.setUpAniData(aniData);\r\n        var rst: any;\r\n        rst = {};\r\n        rst.animationList = GraphicAnimation._I.animationList;\r\n        rst.animationDic = GraphicAnimation._I.animationDic;\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n}\r\n\r\n\r\n/**@internal */\r\nclass GraphicNode {\r\n    skin: string;\r\n    transform: Matrix;\r\n    resultTransform: Matrix;\r\n    width: number;\r\n    height: number;\r\n    alpha: number = 1;\r\n}\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Loader } from \"../net/Loader\"\r\nimport { GraphicAnimation } from \"./GraphicAnimation\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Animation</code> 是Graphics动画类。实现了基于Graphics的动画创建、播放、控制接口。</p>\r\n * <p>本类使用了动画模版缓存池，它以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\r\n * <p>使用set source、loadImages(...)、loadAtlas(...)、loadAnimation(...)方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\r\n * @example <caption>以下示例代码，创建了一个 <code>Text</code> 实例。</caption>\r\n * package\r\n * {\r\n * \timport laya.display.Animation;\r\n * \timport laya.net.Loader;\r\n * \timport laya.utils.Handler;\r\n * \tpublic class Animation_Example\r\n * \t{\r\n * \t\tpublic function Animation_Example()\r\n * \t\t{\r\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * \t\t\tinit();//初始化\r\n * \t\t}\r\n * \t\tprivate function init():void\r\n * \t\t{\r\n * \t\t\tvar animation:Animation = new Animation();//创建一个 Animation 类的实例对象 animation 。\r\n * \t\t\tanimation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n * \t\t\tanimation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n * \t\t\tanimation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n * \t\t\tanimation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n * \t\t\tanimation.play();//播放动画。\r\n * \t\t\tLaya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n * \t\t}\r\n * \t}\r\n * }\r\n *\r\n * @example\r\n * Animation_Example();\r\n * function Animation_Example(){\r\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *     init();//初始化\r\n * }\r\n * function init()\r\n * {\r\n *     var animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\r\n *     animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n *     animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *     animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *     animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n *     animation.play();//播放动画。\r\n *     Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n * }\r\n *\r\n * @example\r\n * import Animation = laya.display.Animation;\r\n * class Animation_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.init();\r\n *     }\r\n *     private init(): void {\r\n *         var animation:Animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\r\n *         animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n *         animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *         animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *         animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n *         animation.play();//播放动画。\r\n *         Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n *     }\r\n * }\r\n * new Animation_Example();\r\n */\r\nexport class Animation extends AnimationBase {\r\n    /**\r\n     * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\r\n     * <p>使用loadImages(...)、loadAtlas(...)、loadAnimation(...)、set source方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\r\n     */\r\n    static framesMap: any = {};\r\n    /**@private */\r\n    protected _frames: any[];\r\n\r\n    private _source: string;\r\n\r\n    private _autoPlay = false;\r\n\r\n\r\n    /**\r\n     * 创建一个新的 <code>Animation</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setControlNode(this);\r\n    }\r\n\r\n    /** @inheritDoc\r\n     *  @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this.stop();\r\n        super.destroy(destroyChild);\r\n        this._frames = null;\r\n        this._labels = null;\r\n    }\r\n\r\n    /**\r\n     * <p>开始播放动画。会在动画模版缓存池中查找key值为name的动画模版，存在则用此动画模版初始化当前序列帧， 如果不存在，则使用当前序列帧。</p>\r\n     * <p>play(...)方法被设计为在创建实例后的任何时候都可以被调用，调用后就处于播放状态，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否处于播放状态，如果是，则开始播放。</p>\r\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\r\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param\tloop\t（可选）是否循环播放。\r\n     * @param\tname\t（可选）动画模板在动画模版缓存池中的key，也可认为是动画名称。如果name为空，则播放当前动画序列帧；如果不为空，则在动画模版缓存池中寻找key值为name的动画模版，如果存在则用此动画模版初始化当前序列帧并播放，如果不存在，则仍然播放当前动画序列帧；如果没有当前动画的帧数据，则不播放，但该实例仍然处于播放状态。\r\n     * @override\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (name) this._setFramesFromCache(name, true);\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**@private */\r\n    protected _setFramesFromCache(name: string, showWarn: boolean = false): boolean {\r\n        if (this._url) name = this._url + \"#\" + name;\r\n        if (name && Animation.framesMap[name]) {\r\n            var tAniO: any = Animation.framesMap[name];\r\n            if (tAniO instanceof Array) {\r\n                this._frames = Animation.framesMap[name];\r\n                this._count = this._frames.length;\r\n            } else {\r\n                if (tAniO.nodeRoot) {\r\n                    //如果动画数据未解析过,则先进行解析\r\n                    Animation.framesMap[name] = GraphicAnimation.parseAnimationByData(tAniO);\r\n                    tAniO = Animation.framesMap[name];\r\n                }\r\n                this._frames = tAniO.frames;\r\n                this._count = this._frames.length;\r\n                //如果读取的是动画配置信息，帧率按照动画设置的帧率播放\r\n                if (!this._frameRateChanged) this._interval = tAniO.interval;\r\n                this._labels = this._copyLabels(tAniO.labels);\r\n            }\r\n            return true;\r\n        } else {\r\n            if (showWarn) console.log(\"ani not found:\", name);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**@private */\r\n    private _copyLabels(labels: any): any {\r\n        if (!labels) return null;\r\n        var rst: any;\r\n        rst = {};\r\n        var key: string;\r\n        for (key in labels) {\r\n            rst[key] = Utils.copyArray([], labels[key]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**@private \r\n    *  @override\r\n    */\r\n    protected _frameLoop(): void {\r\n        if (this._visible && this._style.alpha > 0.01 && this._frames) {\r\n            super._frameLoop();\r\n        }\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (this._frames) this.graphics = this._frames[value];\r\n    }\r\n\r\n    /**\r\n     * 当前动画的帧图像数组。本类中，每个帧图像是一个Graphics对象，而动画播放就是定时切换Graphics对象的过程。\r\n     */\r\n    get frames(): any[] {\r\n        return this._frames;\r\n    }\r\n\r\n    set frames(value: any[]) {\r\n        this._frames = value;\r\n        if (value) {\r\n            this._count = value.length;\r\n            //if (_isPlaying) play(_index, loop, _actionName);\r\n            if (this._actionName) this._setFramesFromCache(this._actionName, true);\r\n            this.index = this._index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>动画数据源。</p>\r\n     * <p>类型如下：<br/>\r\n     * 1. LayaAir IDE动画文件路径：使用此类型需要预加载所需的图集资源，否则会创建失败，如果不想预加载或者需要创建完毕的回调，请使用loadAnimation(...)方法；<br/>\r\n     * 2. 图集路径：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存或者创建完毕的回调，请使用loadAtlas(...)方法；<br/>\r\n     * 3. 图片路径集合：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存，请使用loadImages(...)方法。</p>\r\n     * @param value\t数据源。比如：图集：\"xx/a1.atlas\"；图片集合：\"a1.png,a2.png,a3.png\"；LayaAir IDE动画\"xx/a1.ani\"。\r\n     */\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n\r\n        if (!value)\r\n            this.clear();\r\n        else if (value.indexOf(\".ani\") > -1)\r\n            this.loadAnimation(value);\r\n        else if (value.startsWith(\"res://\") || value.indexOf(\".json\") > -1 || value.indexOf(\"als\") > -1 || value.indexOf(\"atlas\") > -1)\r\n            this.loadAtlas(value);\r\n        else\r\n            this.loadImages(value.split(\",\"));\r\n    }\r\n\r\n    /**\r\n     * 是否自动播放，默认为false。如果设置为true，则动画被创建并添加到舞台后自动播放。\r\n     */\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value)\r\n            this.play();\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @override\r\n     */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this.stop();\r\n        this.graphics = null;\r\n        this._frames = null;\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图片集合并创建动画模版。注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadImages(...).loadImages(...).play(...);。</p>\r\n     * @param\turls\t\t图片路径集合。需要创建动画模版时，会以此为数据源。参数形如：[url1,url2,url3,...]。\r\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @return \t返回Animation对象本身。\r\n     */\r\n    loadImages(urls: any[], cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(urls, cacheName);\r\n        }\r\n        if (!this._isPlaying && this._autoPlay)\r\n            this.play();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图集并创建动画模版。</p>\r\n     * <p>注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAtlas(...).loadAtlas(...).play(...);。</p>\r\n     * @param\turl\t\t\t图集路径。需要创建动画模版时，会以此为数据源。\r\n     * @param\tloaded\t\t（可选）使用指定图集初始化动画完毕的回调。\r\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @return \t返回动画本身。\r\n     */\r\n    loadAtlas(url: string, loaded: Handler = null, cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            let onLoaded = (loadUrl: string) => {\r\n                if (url === loadUrl) {\r\n                    this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(url, cacheName);\r\n                    if (!this._isPlaying && this._autoPlay)\r\n                        this.play();\r\n                    if (loaded) loaded.run();\r\n                }\r\n            }\r\n            if (Loader.getAtlas(url)) onLoaded(url);\r\n            else ILaya.loader.load(url, Handler.create(null, onLoaded, [url]), null, Loader.ATLAS);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>加载并解析由LayaAir IDE制作的动画文件，此文件中可能包含多个动画。默认帧率为在IDE中设计的帧率，如果调用过set interval，则使用此帧间隔对应的帧率。加载后创建动画模版，并缓存到动画模版缓存池，key \"url#动画名称\" 对应相应动画名称的动画模板，key \"url#\" 对应动画模版集合的默认动画模版。</p>\r\n     * <p>注意：如果调用本方法前，还没有预加载动画使用的图集，请将atlas参数指定为对应的图集路径，否则会导致动画创建失败。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAnimation(...).loadAnimation(...).play(...);。</p>\r\n     * @param\turl \t动画文件路径。可由LayaAir IDE创建并发布。\r\n     * @param\tloaded\t（可选）使用指定动画资源初始化动画完毕的回调。\r\n     * @param\tatlas\t（可选）动画用到的图集地址（可选）。\r\n     * @return \t返回动画本身。\r\n     * @deprecated\r\n     */\r\n    loadAnimation(url: string, loaded: Handler = null, atlas: string = null): Animation {\r\n        this._url = url;\r\n        var _this: Animation = this;\r\n        if (!this._actionName) this._actionName = \"\";\r\n        if (!_this._setFramesFromCache(this._actionName)) {\r\n            if (!atlas || Loader.getAtlas(atlas)) {\r\n                this._loadAnimationData(url, loaded, atlas);\r\n            } else {\r\n                ILaya.loader.load(atlas, Handler.create(this, this._loadAnimationData, [url, loaded, atlas]), null, Loader.ATLAS)\r\n            }\r\n        } else {\r\n            _this._setFramesFromCache(this._actionName, true);\r\n            this.index = 0;\r\n            if (loaded) loaded.run();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**@private */\r\n    private _loadAnimationData(url: string, loaded: Handler = null, atlas: string = null): void {\r\n        if (atlas && !Loader.getAtlas(atlas)) {\r\n            console.warn(\"atlas load fail:\" + atlas);\r\n            return;\r\n        }\r\n\r\n        ILaya.loader.fetch(url, \"json\").then(data => {\r\n            if (this._url !== url)\r\n                return;\r\n\r\n            if (!data) {\r\n                // 如果getRes失败了，有可能是相同的文件已经被删掉了，因为下面在用完后会立即删除\r\n                // 这时候可以取frameMap中去找，如果找到了，走正常流程。--王伟\r\n                if (Animation.framesMap[url + \"#\"]) {\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                    this._resumePlay();\r\n                    if (loaded) loaded.run();\r\n                }\r\n                return;\r\n            }\r\n\r\n            let tAniO: any;\r\n            if (!Animation.framesMap[url + \"#\"]) {\r\n                //此次解析仅返回动画数据，并不真正解析动画graphic数据\r\n                let aniData: any = GraphicAnimation.parseAnimationData(data);\r\n                if (!aniData) return;\r\n                //缓存动画数据\r\n                let aniList: any[] = aniData.animationList;\r\n                let len: number = aniList.length;\r\n                let defaultO: any;\r\n                for (let i = 0; i < len; i++) {\r\n                    tAniO = aniList[i];\r\n                    Animation.framesMap[url + \"#\" + tAniO.name] = tAniO;\r\n                    if (!defaultO) defaultO = tAniO;\r\n                }\r\n                if (defaultO) {\r\n                    Animation.framesMap[url + \"#\"] = defaultO;\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                }\r\n                this._resumePlay();\r\n            } else {\r\n                this._setFramesFromCache(this._actionName, true);\r\n                this.index = 0;\r\n                this._resumePlay();\r\n            }\r\n            if (loaded) loaded.run();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * <p>创建动画模板，多个动画可共享同一份动画模板，而不必每次都创建一份新的，从而节省创建Graphics集合的开销。</p>\r\n     * @param\turl\t\t\t图集路径或者图片路径数组。如果是图集路径，需要相应图集已经被预加载，如果没有预加载，会导致创建失败。\r\n     * @param\tname\t\t动画模板在动画模版缓存池中的key。如果不为空，则以此为key缓存动画模板，否则不缓存。\r\n     * @return\t动画模板。\r\n     */\r\n    static createFrames(url: string | string[], name: string): any[] {\r\n        var arr: any[];\r\n        if (typeof (url) == 'string') {\r\n            var atlas: AtlasResource = Loader.getAtlas(<string>url);\r\n            if (atlas && atlas.frames.length) {\r\n                let frames = atlas.frames;\r\n                arr = [];\r\n                for (var i: number = 0, n: number = frames.length; i < n; i++) {\r\n                    var g: Graphics = new Graphics();\r\n                    g.drawImage(frames[i], 0, 0);\r\n                    arr.push(g);\r\n                }\r\n            }\r\n        } else if (url instanceof Array) {\r\n            arr = [];\r\n            for (i = 0, n = url.length; i < n; i++) {\r\n                g = new Graphics();\r\n                g.loadImage(url[i], 0, 0);\r\n                arr.push(g);\r\n            }\r\n        }\r\n        if (name) Animation.framesMap[name] = arr;\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * <p>从动画模版缓存池中清除指定key值的动画数据。</p>\r\n     * <p>开发者在调用创建动画模版函数时，可以手动指定此值。而如果是由LayaAir IDE创建的动画集，解析后的key格式为：\"url#\"：表示动画集的默认动画模版，如果以此值为参数，会清除整个动画集数据；\"url#aniName\"：表示相应名称的动画模版。</p>\r\n     * @param key 动画模板在动画模版缓存池中的key。\r\n     */\r\n    static clearCache(key: string): void {\r\n        var cache: any = Animation.framesMap;\r\n        var val: string;\r\n        var key2: string = key + \"#\";\r\n        for (val in cache) {\r\n            if (val === key || val.indexOf(key2) === 0) {\r\n                delete Animation.framesMap[val];\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    onAfterDeserialize(): void {\r\n        super.onAfterDeserialize();\r\n\r\n        if ((<any>this).images) {\r\n            if (!this._source)\r\n                this.loadImages((<any>this).images);\r\n            delete (<any>this).images;\r\n        }\r\n    }\r\n}\r\n\r\n","import { Texture } from \"../resource/Texture\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * <code>BitmapFont</code> 是位图字体类，用于定义位图字体信息。\r\n * 字体制作及使用方法，请参考文章\r\n * @see http://ldc2.layabox.com/doc/?nav=ch-js-1-2-5\r\n */\r\nexport class BitmapFont extends Resource {\r\n    texture: Texture;\r\n    dict: Record<string, BMGlyph> = {};\r\n\r\n    padding: any[];\r\n\r\n    /**当前位图字体字号，使用时，如果字号和设置不同，并且autoScaleSize=true，则按照设置字号比率进行缩放显示。*/\r\n    fontSize: number = 12;\r\n    /**表示是否根据实际使用的字体大小缩放位图字体大小。*/\r\n    autoScaleSize: boolean = false;\r\n    tint: boolean = true;\r\n    maxWidth: number = 0;\r\n    lineHeight: number = 12;\r\n    letterSpacing = 0;\r\n\r\n    /**\r\n     * 通过指定位图字体文件路径，加载位图字体文件，加载完成后会自动解析。\r\n     * @param\tpath\t\t位图字体文件的路径。\r\n     * @param\tcomplete\t加载并解析完成的回调。\r\n     */\r\n    static loadFont(path: string, complete: Handler): void {\r\n        ILaya.loader.load(path, Loader.FONT).then(font => {\r\n            complete && complete.runWith(font);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super(false);\r\n    }\r\n\r\n    /**\r\n     * 解析字体文件。\r\n     * @param\txml\t\t\t字体文件XML。\r\n     * @param\ttexture\t\t字体的纹理。\r\n     */\r\n    parseFont(xml: XML, texture: Texture): void {\r\n        if (xml == null || texture == null) return;\r\n        this.texture = texture;\r\n        texture._addReference();\r\n\r\n        let scale: number = 1;\r\n        let info = xml.getNode(\"info\");\r\n        this.fontSize = info.getAttrInt(\"size\", 12);\r\n        this.autoScaleSize = info.getAttrBool(\"autoScaleSize\");\r\n        this.lineHeight = info.getAttrInt(\"lineHeight\", this.fontSize);\r\n        if (this.lineHeight == 0)\r\n            this.lineHeight = this.fontSize;\r\n\r\n        let padding: string = info.getAttrString(\"padding\", \"\");\r\n        let paddingArray: any[] = padding.split(\",\");\r\n        this.padding = [parseInt(paddingArray[0]), parseInt(paddingArray[1]), parseInt(paddingArray[2]), parseInt(paddingArray[3])];\r\n\r\n        let chars = xml.getNode(\"chars\")?.elements(\"char\") || [];\r\n        let maxWidth = 0;\r\n        let dict = this.dict;\r\n        for (let i = 0, n = chars.length; i < n; i++) {\r\n            let ct = chars[i];\r\n            let id = ct.getAttrInt(\"id\");\r\n\r\n            let xOffset = ct.getAttrInt(\"xoffset\") / scale;\r\n            let yOffset = ct.getAttrInt(\"yoffset\") / scale;\r\n            let advance = ct.getAttrInt(\"xadvance\") / scale;\r\n\r\n            let x = ct.getAttrInt(\"x\");\r\n            let y = ct.getAttrInt(\"y\");\r\n            let width = ct.getAttrInt(\"width\");\r\n            let height = ct.getAttrInt(\"height\");\r\n\r\n            let tex = Texture.create(texture, x, y, width, height, xOffset, yOffset);\r\n\r\n            if (advance == 0)\r\n                advance = width;\r\n            advance += this.letterSpacing;\r\n            maxWidth = Math.max(maxWidth, advance);\r\n\r\n            dict[id] = { x: 0, y: 0, width, height, advance, texture: tex };\r\n        }\r\n\r\n        if (maxWidth > 0)\r\n            this.maxWidth = maxWidth;\r\n        else\r\n            this.maxWidth = this.fontSize;\r\n\r\n        if (!dict[32]) //space\r\n            dict[32] = { x: 0, y: 0, advance: Math.floor(this.fontSize * 0.5) + this.letterSpacing };\r\n    }\r\n\r\n    /**\r\n     * 销毁位图字体，调用Text.unregisterBitmapFont 时，默认会销毁。\r\n     */\r\n    protected _disposeResource(): void {\r\n        if (this.texture) {\r\n            for (let k in this.dict) {\r\n                this.dict[k].texture?.destroy();\r\n            }\r\n            this.texture._removeReference();\r\n            this.dict = null;\r\n            this.texture = null;\r\n            this.padding = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取指定文本内容的宽度。\r\n     * @param\ttext 文本内容。\r\n     * @return  宽度。\r\n     */\r\n    getTextWidth(text: string, fontSize?: number): number {\r\n        let w = 0;\r\n        for (let i = 0, n = text.length; i < n; i++) {\r\n            let g = this.dict[text.charCodeAt(i)];\r\n            if (g) {\r\n                let scale = this.autoScaleSize ? (fontSize / this.fontSize) : 1;\r\n                w += Math.round(g.advance * scale);\r\n            }\r\n        }\r\n        return w;\r\n    }\r\n\r\n    /**\r\n     * 获取最大字符宽度。\r\n     */\r\n    getMaxWidth(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.maxWidth * (fontSize / this.fontSize));\r\n        else\r\n            return this.maxWidth;\r\n    }\r\n\r\n    /**\r\n     * 获取最大字符高度。\r\n     */\r\n    getMaxHeight(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.lineHeight * (fontSize / this.fontSize));\r\n        else\r\n            return this.lineHeight;\r\n    }\r\n}\r\n\r\nexport interface BMGlyph {\r\n    x?: number;\r\n    y?: number;\r\n    width?: number;\r\n    height?: number;\r\n    advance?: number;\r\n    texture?: Texture;\r\n}","import { FrameAnimation } from \"./FrameAnimation\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * <p> 动效模板。用于为指定目标对象添加动画效果。每个动效有唯一的目标对象，而同一个对象可以添加多个动效。 当一个动效开始播放时，其他动效会自动停止播放。</p>\r\n * <p> 可以通过LayaAir IDE创建。 </p>\r\n */\r\nexport class EffectAnimation extends FrameAnimation {\r\n    /**\r\n     * @private\r\n     * 动效开始事件。\r\n     */\r\n    private static EFFECT_BEGIN: string = \"effectbegin\";\r\n\r\n    /**@internal */\r\n    private _target: any;\r\n    /**@internal */\r\n    private _playEvent: string;\r\n    /**@internal */\r\n    private _initData: any = {};\r\n    /**@internal */\r\n    private _aniKeys: any[];\r\n    /**@internal */\r\n    private _effectClass: new () => any;\r\n\r\n    /**\r\n     * 本实例的目标对象。通过本实例控制目标对象的属性变化。\r\n     * @param v 指定的目标对象。\r\n     */\r\n    set target(v: any) {\r\n        if (this._target) this._target.off(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._target = v;\r\n        if (this._target) this._target.on(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._addEvent();\r\n    }\r\n\r\n    get target(): any {\r\n        return this._target;\r\n    }\r\n\r\n    /**@private */\r\n    private _onOtherBegin(effect: any): void {\r\n        if (effect === this) return;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * 设置开始播放的事件。本实例会侦听目标对象的指定事件，触发后播放相应动画效果。\r\n     * @param event\r\n     */\r\n    set playEvent(event: string) {\r\n        this._playEvent = event;\r\n        if (!event) return;\r\n        this._addEvent();\r\n    }\r\n\r\n    /**@internal */\r\n    private _addEvent(): void {\r\n        if (!this._target || !this._playEvent) return;\r\n        this._setControlNode(this._target);\r\n        this._target.on(this._playEvent, this, this._onPlayAction);\r\n    }\r\n\r\n    /**@internal */\r\n    private _onPlayAction(): void {\r\n        this.play(0, false);\r\n    }\r\n    /**\r\n     * @param start \r\n     * @param loop \r\n     * @param name \r\n     * @override\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (!this._target)\r\n            return;\r\n        this._target.event(EffectAnimation.EFFECT_BEGIN, [this]);\r\n        this._recordInitData();\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**@private */\r\n    private _recordInitData(): void {\r\n        if (!this._aniKeys) return;\r\n        var i: number, len: number;\r\n        len = this._aniKeys.length;\r\n        var key: string;\r\n        for (i = 0; i < len; i++) {\r\n            key = this._aniKeys[i];\r\n            this._initData[key] = this._target[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置提供数据的类。\r\n     * @param classStr 类路径\r\n     */\r\n    set effectClass(classStr: string) {\r\n        this._effectClass = ClassUtils.getClass(classStr);\r\n        if (this._effectClass) {\r\n            var uiData: any = (this._effectClass as any)[\"uiView\"];\r\n            if (uiData) {\r\n                var aniData: any[] = uiData[\"animations\"];\r\n                if (aniData && aniData[0]) {\r\n                    var data: any = aniData[0];\r\n                    this._setUp({}, data);\r\n                    if (data.nodes && data.nodes[0]) {\r\n                        this._aniKeys = data.nodes[0].keys;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置动画数据。\r\n     * @param uiData\r\n     */\r\n    set effectData(uiData: any) {\r\n        if (uiData) {\r\n            var aniData: any[] = uiData[\"animations\"];\r\n            if (aniData && aniData[0]) {\r\n                var data: any = aniData[0];\r\n                this._setUp({}, data);\r\n                if (data.nodes && data.nodes[0]) {\r\n                    this._aniKeys = data.nodes[0].keys;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        len = len > 1 ? 1 : len;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n    */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!this._target) return;\r\n        var target: any = this._target;\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        var secondFrames: any = node.secondFrames;\r\n        var tSecondFrame: number;\r\n        var easeFun: Function;\r\n        var tKeyFrames: any[];\r\n        var startFrame: any;\r\n        var endFrame: any;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            tSecondFrame = secondFrames[key];\r\n            if (tSecondFrame == -1) {\r\n                value = this._initData[key];\r\n            } else {\r\n                if (frame < tSecondFrame) {\r\n                    tKeyFrames = node.keyframes[key];\r\n                    startFrame = tKeyFrames[0];\r\n                    if (startFrame.tween) {\r\n                        easeFun = (Ease as any)[startFrame.tweenMethod];\r\n                        if (easeFun == null) easeFun = Ease.linearNone;\r\n                        endFrame = tKeyFrames[1];\r\n                        value = easeFun(frame, this._initData[key], endFrame.value - this._initData[key], endFrame.index);\r\n                    } else {\r\n                        value = this._initData[key];\r\n                    }\r\n\r\n                } else {\r\n                    if (propFrames.length > frame) value = propFrames[frame];\r\n                    else value = propFrames[propFrames.length - 1];\r\n                }\r\n            }\r\n            target[key] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n\r\n        var secondFrames: any = {};\r\n        node.secondFrames = secondFrames;\r\n        for (key in keyFrames) {\r\n            tKeyFrames = keyFrames[key];\r\n            if (tKeyFrames.length <= 1) secondFrames[key] = -1;\r\n            else secondFrames[key] = tKeyFrames[1].index;\r\n        }\r\n    }\r\n}","/**\r\n * 文本的样式类\r\n */\r\nexport class TextStyle {\r\n    /**字体*/\r\n    font: string;\r\n    /**字号*/\r\n    fontSize: number;\r\n    /**文字颜色*/\r\n    color: string;\r\n    /**是否为粗体*/\r\n    bold: boolean;\r\n    /**\r\n     * 表示使用此文本格式的文本是否为斜体。\r\n     * @default false\r\n     */\r\n    italic: boolean;\r\n\r\n    /**是否显示下划线*/\r\n    underline: boolean;\r\n    /**下划线颜色*/\r\n    underlineColor: string;\r\n\r\n    /**是否显示删除线 */\r\n    strikethrough = false;\r\n    /** 删除线颜色 */\r\n    strikethroughColor:string = null;\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的水平对齐方式。</p>\r\n     * @default  \"left\"\r\n     */\r\n    align: string;\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的垂直对齐方式。</p>\r\n     * @default  \"top\"\r\n     */\r\n    valign: string;\r\n\r\n    /**\r\n     * 图文混排时图片和文字的对齐方式。可选值是top,middle,bottom\r\n     */\r\n    alignItems: string;\r\n\r\n    /**\r\n     * <p>垂直行间距（以像素为单位）</p>\r\n     */\r\n    leading: number;\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @default 0\r\n     */\r\n    stroke: number;\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * @default \"#000000\";\r\n     */\r\n    strokeColor: string;\r\n\r\n    constructor() {\r\n        this.font = \"\";\r\n        this.fontSize = 12;\r\n        this.color = \"#000000\";\r\n        this.bold = false;\r\n        this.italic = false;\r\n        this.underline = false;\r\n        this.underlineColor = null;\r\n        this.align = \"left\";\r\n        this.valign = \"top\";\r\n        this.alignItems = \"middle\";\r\n        this.leading = 2;\r\n        this.stroke = 0;\r\n        this.strokeColor = \"#000000\";\r\n    }\r\n}\r\n\r\n","import { XMLIterator } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { TextStyle } from \"../display/css/TextStyle\";\r\nimport { Pool } from \"../utils/Pool\";\r\n\r\nexport enum HtmlElementType {\r\n    Text,\r\n    Link,\r\n    Image,\r\n    Input,\r\n    Select,\r\n    Object,\r\n\r\n    //internal\r\n    LinkEnd,\r\n}\r\n\r\nexport class HtmlElement {\r\n    public type: HtmlElementType;\r\n    public name: string;\r\n    public text: string;\r\n    public style: TextStyle;\r\n\r\n    public obj: IHtmlObject;\r\n    public space: number;\r\n\r\n    public _attrs: Record<string, any>;\r\n\r\n    public constructor() {\r\n        this.style = new TextStyle();\r\n    }\r\n\r\n    public getAttr(attrName: string): any {\r\n        if (this._attrs == null)\r\n            return null;\r\n\r\n        return this._attrs[attrName];\r\n    }\r\n\r\n    public setAttr(attrName: string, attrValue: any) {\r\n        if (this._attrs == null)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public fetchAttributes() {\r\n        this._attrs = Object.assign({}, XMLIterator.attributes);\r\n    }\r\n\r\n    public reset() {\r\n        this.name = null;\r\n        this.text = null;\r\n        if (this.obj) {\r\n            this.obj.release();\r\n            Pool.recoverByClass(this.obj);\r\n            this.obj = null;\r\n        }\r\n        this._attrs = null;\r\n    }\r\n\r\n    static pool: Array<HtmlElement> = [];\r\n    static getFromPool(type: HtmlElementType): HtmlElement {\r\n        let ele: HtmlElement;\r\n        if (this.pool.length > 0)\r\n            ele = this.pool.pop();\r\n        else\r\n            ele = new HtmlElement();\r\n        ele.type = type;\r\n        if (ele.type != HtmlElementType.Text && !ele._attrs)\r\n            ele._attrs = {};\r\n        return ele;\r\n    }\r\n\r\n    static returnToPool(ele: HtmlElement | Array<HtmlElement>) {\r\n        if (Array.isArray(ele)) {\r\n            for (let e of ele)\r\n                e.reset();\r\n            this.pool.push(...ele);\r\n            ele.length = 0;\r\n        }\r\n        else {\r\n            ele.reset();\r\n            this.pool.push(ele);\r\n        }\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\nexport class HtmlImage implements IHtmlObject {\r\n    public readonly obj: Sprite;\r\n\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n\r\n    public constructor() {\r\n        this.obj = new Sprite();\r\n    }\r\n\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    public get width(): number {\r\n        return this.obj.width;\r\n    }\r\n\r\n    public get height(): number {\r\n        return this.obj.height;\r\n    }\r\n\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this.obj);\r\n\r\n        let src = this._element.getAttrString(\"src\");\r\n        if (src)\r\n            this.loadTexture(src);\r\n    }\r\n\r\n    protected loadTexture(src: string) {\r\n        let width = this._element.getAttrInt(\"width\", -1);\r\n        let height = this._element.getAttrInt(\"height\", -1);\r\n        if (width != -1)\r\n            this.obj.width = width;\r\n        if (height != -1)\r\n            this.obj.height = height;\r\n\r\n        let tex = Loader.getRes(src);\r\n        if (tex) {\r\n            this.obj.texture = tex;\r\n            if (width == -1)\r\n                this.obj.width = tex.sourceWidth;\r\n            if (height == -1)\r\n                this.obj.height = tex.sourceHeight;\r\n        }\r\n        else {\r\n            ILaya.loader.load(src, { silent: true }).then(tex => {\r\n                if (this.obj.destroyed) return;\r\n                let w = this.obj.width;\r\n                let h = this.obj.height;\r\n                this.obj.texture = tex;\r\n                if (width == -1)\r\n                    this.obj.width = tex ? tex.sourceWidth : 0;\r\n                if (height == -1)\r\n                    this.obj.height = tex ? tex.sourceHeight : 0;\r\n                if (this._owner && (w != this.obj.width || h != this.obj.height))\r\n                    this._owner.refreshLayout();\r\n            });\r\n        }\r\n    }\r\n\r\n    public pos(x: number, y: number): void {\r\n        this.obj.pos(x, y);\r\n    }\r\n\r\n    public release(): void {\r\n        this.obj.removeSelf();\r\n        this.obj.offAll();\r\n        this.obj.texture = null;\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.obj.destroy();\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\nexport class HtmlLink implements IHtmlObject, IHitArea {\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n    private _shape: Sprite;\r\n    private _rects: Array<Rectangle>;\r\n    private _rectCnt: number;\r\n\r\n    public constructor() {\r\n        this._shape = new Sprite();\r\n        this._shape.hitArea = this;\r\n        this._shape.on(Event.CLICK, () => {\r\n            this._owner.bubbleEvent(Event.LINK, this._element.getAttrString(\"href\"));\r\n        });\r\n\r\n        this._rects = [];\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    public get width(): number {\r\n        return 0;\r\n    }\r\n\r\n    public get height(): number {\r\n        return 0;\r\n    }\r\n\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this._shape);\r\n    }\r\n\r\n    public resetArea() {\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    public addRect(x: number, y: number, width: number, height: number) {\r\n        let rect = this._rects[this._rectCnt];\r\n        if (!rect)\r\n            rect = this._rects[this._rectCnt] = new Rectangle();\r\n        this._rectCnt++;\r\n        rect.setTo(x, y, width, height);\r\n    }\r\n\r\n    public contains(x: number, y: number): boolean {\r\n        for (let i = 0; i < this._rectCnt; i++) {\r\n            if (this._rects[i].contains(x, y))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public pos(x: number, y: number): void {\r\n    }\r\n\r\n    public release(): void {\r\n        this._shape.removeSelf();\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this._shape.destroy();\r\n    }\r\n}","import { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\nexport class HtmlParseOptions {\r\n    public linkUnderline: boolean;\r\n    public linkColor: string;\r\n    public ignoreWhiteSpace: boolean;\r\n\r\n    public static defaultLinkUnderline: boolean = true;\r\n    public static defaultLinkColor: string = null;\r\n\r\n    public constructor() {\r\n        this.linkUnderline = HtmlParseOptions.defaultLinkUnderline;\r\n        this.linkColor = HtmlParseOptions.defaultLinkColor;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HtmlParseOptions\", HtmlParseOptions);","import { TextStyle } from \"../display/css/TextStyle\";\r\nimport { HtmlElement, HtmlElementType } from \"./HtmlElement\";\r\nimport { HtmlImage } from \"./HtmlImage\";\r\nimport { HtmlLink } from \"./HtmlLink\";\r\nimport { HtmlParseOptions } from \"./HtmlParseOptions\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\nconst s_list1 = new Array<string>();\r\nconst s_list2 = new Array<string>();\r\n\r\nexport class HtmlParser {\r\n    static defaultParser: HtmlParser = new HtmlParser();\r\n\r\n    static classMap: Record<number, new () => IHtmlObject> = {\r\n        [HtmlElementType.Image]: HtmlImage,\r\n        [HtmlElementType.Link]: HtmlLink\r\n    };\r\n\r\n    protected _styleStack: Array<TextStyle>;\r\n    protected _styleStackTop: number;\r\n    protected _style: TextStyle;\r\n    protected _elements: Array<HtmlElement>;\r\n    protected _options: HtmlParseOptions;\r\n\r\n    public constructor() {\r\n        this._styleStack = new Array<TextStyle>();\r\n        this._style = new TextStyle();\r\n        this._options = new HtmlParseOptions();\r\n    }\r\n\r\n    public parse(aSource: string, style: TextStyle, out: Array<HtmlElement>, options?: HtmlParseOptions): void {\r\n        if (options == null)\r\n            options = this._options;\r\n\r\n        this._elements = out;\r\n        this._styleStackTop = 0;\r\n        Object.assign(this._style, style);\r\n        (<any>this._style).colorChanged = false;\r\n        let skipText: number = 0;\r\n        let ignoreWhiteSpace: boolean = options.ignoreWhiteSpace;\r\n        let skipNextCR: boolean = false;\r\n        let text: string\r\n\r\n        XMLIterator.begin(aSource, true);\r\n        while (XMLIterator.nextTag()) {\r\n            if (skipText == 0) {\r\n                text = XMLIterator.getText(ignoreWhiteSpace);\r\n                if (text.length > 0) {\r\n                    if (skipNextCR && text[0] == '\\n')\r\n                        text = text.substring(1);\r\n                    this.appendText(text);\r\n                }\r\n            }\r\n\r\n            skipNextCR = false;\r\n            switch (XMLIterator.tagName) {\r\n                case \"b\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.bold = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"i\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.italic = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"u\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.underline = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"strike\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.strikethrough = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                // case \"sub\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Subscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                // case \"sup\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Superscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                case \"font\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.fontSize = XMLUtils.getInt(XMLIterator.attributes, \"size\", this._style.fontSize);\r\n                        let color: string = XMLIterator.getAttribute(\"color\");\r\n                        if (color != null) {\r\n                            this._style.color = color;\r\n                            (<any>this._style).colorChanged = true;\r\n                        }\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"br\":\r\n                    this.appendText(\"\\n\");\r\n                    break;\r\n\r\n                case \"img\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                        let element: HtmlElement = HtmlElement.getFromPool(HtmlElementType.Image);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        element.style.underline = this._style.underline;\r\n                        element.style.underlineColor = this._style.underlineColor;\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"a\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.underline = this._style.underline || options.linkUnderline;\r\n                        if (!(<any>this._style).colorChanged && options.linkColor != null)\r\n                            this._style.color = options.linkColor;\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Link);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        this._elements.push(element);\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.popStyle();\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.LinkEnd);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"input\":\r\n                    {\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Input);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        Object.assign(element.style, this._style);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"select\":\r\n                    {\r\n                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                            let element = HtmlElement.getFromPool(HtmlElementType.Select);\r\n                            element.fetchAttributes();\r\n                            if (XMLIterator.tagType == XMLTagType.Start) {\r\n                                s_list1.length = 0;\r\n                                s_list2.length = 0;\r\n                                while (XMLIterator.nextTag()) {\r\n                                    if (XMLIterator.tagName == \"select\")\r\n                                        break;\r\n\r\n                                    if (XMLIterator.tagName == \"option\") {\r\n                                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void)\r\n                                            s_list2.push(XMLUtils.getString(XMLIterator.attributes, \"value\", \"\"));\r\n                                        else\r\n                                            s_list1.push(XMLIterator.getText());\r\n                                    }\r\n                                }\r\n                                element.setAttr(\"items\", s_list1.slice());\r\n                                element.setAttr(\"values\", s_list2.slice());\r\n                            }\r\n                            element.name = element.getAttrString(\"name\");\r\n                            Object.assign(element.style, this._style);\r\n                            this._elements.push(element);\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case \"p\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.align = XMLIterator.getAttribute(\"align\");\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n\r\n                        this.popStyle();\r\n                    }\r\n                    break;\r\n\r\n                case \"ui\":\r\n                case \"div\":\r\n                case \"li\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n                    }\r\n                    break;\r\n\r\n                case \"html\":\r\n                case \"body\":\r\n                    //full html\r\n                    ignoreWhiteSpace = true;\r\n                    break;\r\n\r\n                case \"head\":\r\n                case \"style\":\r\n                case \"script\":\r\n                case \"form\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start)\r\n                        skipText++;\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        skipText--;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (skipText == 0) {\r\n            text = XMLIterator.getText(ignoreWhiteSpace);\r\n            if (text.length > 0) {\r\n                if (skipNextCR && text[0] == '\\n')\r\n                    text = text.substring(1);\r\n                this.appendText(text);\r\n            }\r\n        }\r\n\r\n        this._elements = null;\r\n    }\r\n\r\n    protected pushStyle() {\r\n        let tf: TextStyle;\r\n        if (this._styleStack.length <= this._styleStackTop) {\r\n            tf = new TextStyle();\r\n            this._styleStack.push(tf);\r\n        }\r\n        else\r\n            tf = this._styleStack[this._styleStackTop];\r\n        Object.assign(tf, this._style);\r\n        this._styleStackTop++;\r\n    }\r\n\r\n    protected popStyle() {\r\n        if (this._styleStackTop > 0) {\r\n            let tf = this._styleStack[this._styleStackTop - 1];\r\n            Object.assign(this._style, tf);\r\n            this._styleStackTop--;\r\n        }\r\n    }\r\n\r\n    protected isNewLine(): boolean {\r\n        if (this._elements.length > 0) {\r\n            let element: HtmlElement = this._elements[this._elements.length - 1];\r\n            if (element && element.type == HtmlElementType.Text)\r\n                return element.text.endsWith(\"\\n\");\r\n            else\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected appendText(text: string) {\r\n        let element: HtmlElement;\r\n        if (this._elements.length > 0) {\r\n            element = this._elements[this._elements.length - 1];\r\n            if (element.type == HtmlElementType.Text && equalStyle(element.style, this._style)) {\r\n                element.text += text;\r\n                return;\r\n            }\r\n        }\r\n\r\n        element = HtmlElement.getFromPool(HtmlElementType.Text);\r\n        element.text = text;\r\n        Object.assign(element.style, this._style);\r\n        this._elements.push(element);\r\n    }\r\n}\r\n\r\nfunction equalStyle(s1: TextStyle, s2: TextStyle) {\r\n    for (let k in s1) {\r\n        if (!k.startsWith(\"_\") && (<any>s1)[k] != (<any>s2)[k])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n","export interface ITagHandler {\r\n    (tagName: string, end: boolean, attr: string): string;\r\n}\r\n\r\nexport class UBBParser {\r\n    static defaultParser: UBBParser = new UBBParser();\r\n\r\n    private _text: string;\r\n    private _readPos: number = 0;\r\n\r\n    protected _handlers: Record<string, ITagHandler>;\r\n\r\n    public defaultImgWidth: number = 0;\r\n    public defaultImgHeight: number = 0;\r\n    public lastColor: string;\r\n    public lastSize: string;\r\n\r\n    constructor() {\r\n        this._handlers = {};\r\n        this._handlers[\"url\"] = this.onTag_URL;\r\n        this._handlers[\"img\"] = this.onTag_IMG;\r\n        this._handlers[\"b\"] = this.onTag_B;\r\n        this._handlers[\"i\"] = this.onTag_I;\r\n        this._handlers[\"u\"] = this.onTag_U;\r\n        this._handlers[\"sup\"] = this.onTag_Simple;\r\n        this._handlers[\"sub\"] = this.onTag_Simple;\r\n        this._handlers[\"color\"] = this.onTag_COLOR;\r\n        this._handlers[\"font\"] = this.onTag_FONT;\r\n        this._handlers[\"size\"] = this.onTag_SIZE;\r\n    }\r\n\r\n    protected onTag_URL(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            if (attr != null)\r\n                return \"<a href=\\\"\" + attr + \"\\\">\";\r\n            else {\r\n                var href: string = this.getTagText();\r\n                return \"<a href=\\\"\" + href + \"\\\">\";\r\n            }\r\n        }\r\n        else\r\n            return \"</a>\";\r\n    }\r\n\r\n    protected onTag_IMG(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            var src: string = this.getTagText(true);\r\n            if (!src)\r\n                return null;\r\n\r\n            if (this.defaultImgWidth)\r\n                return \"<img src=\\\"\" + src + \"\\\" width=\\\"\" + this.defaultImgWidth + \"\\\" height=\\\"\" + this.defaultImgHeight + \"\\\"/>\";\r\n            else\r\n                return \"<img src=\\\"\" + src + \"\\\"/>\";\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n\r\n    protected onTag_B(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</b>\") : (\"<b>\");\r\n    }\r\n\r\n    protected onTag_I(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</i>\") : (\"<i>\");\r\n    }\r\n\r\n    protected onTag_U(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</u>\") : (\"<u>\");\r\n    }\r\n\r\n    protected onTag_Simple(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</\" + tagName + \">\") : (\"<\" + tagName + \">\");\r\n    }\r\n\r\n    protected onTag_COLOR(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastColor = attr;\r\n            return \"<font color=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_FONT(tagName: string, end: boolean, attr: string): string {\r\n        if (!end)\r\n            return \"<font face=\\\"\" + attr + \"\\\">\";\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_SIZE(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastSize = attr;\r\n            return \"<font size=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected getTagText(remove?: boolean): string {\r\n        var pos1: number = this._readPos;\r\n        var pos2: number;\r\n        var result: string = \"\";\r\n        while ((pos2 = this._text.indexOf(\"[\", pos1)) != -1) {\r\n            if (this._text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += this._text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n            }\r\n            else {\r\n                result += this._text.substring(pos1, pos2);\r\n                break;\r\n            }\r\n        }\r\n        if (pos2 == -1)\r\n            return null;\r\n\r\n        if (remove)\r\n            this._readPos = pos2;\r\n\r\n        return result;\r\n    }\r\n\r\n    public parse(text: string, remove?: boolean): string {\r\n        this._text = text;\r\n        this.lastColor = null;\r\n        this.lastSize = null;\r\n\r\n        var pos1: number = 0, pos2: number, pos3: number;\r\n        var end: boolean;\r\n        var tag: string, attr: string;\r\n        var repl: string;\r\n        var func: Function;\r\n        var result: string = \"\";\r\n        while ((pos2 = text.indexOf(\"[\", pos1)) != -1) {\r\n            if (pos2 > 0 && text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += text.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = text.indexOf(\"]\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            end = text.charAt(pos1 + 1) == '/';\r\n            tag = text.substring(end ? pos1 + 2 : pos1 + 1, pos2);\r\n            this._readPos = pos2 + 1;\r\n            attr = null;\r\n            repl = null;\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                attr = tag.substring(pos3 + 1);\r\n                tag = tag.substring(0, pos3);\r\n            }\r\n            tag = tag.toLowerCase();\r\n            func = this._handlers[tag];\r\n            if (func != null) {\r\n                if (!remove) {\r\n                    repl = func.call(this, tag, end, attr);\r\n                    if (repl != null)\r\n                        result += repl;\r\n                }\r\n            }\r\n            else\r\n                result += text.substring(pos1, this._readPos);\r\n            pos1 = this._readPos;\r\n        }\r\n\r\n        if (pos1 < text.length)\r\n            result += text.substring(pos1);\r\n\r\n        this._text = null;\r\n\r\n        return result;\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { BitmapFont } from \"./BitmapFont\";\r\nimport { TextStyle } from \"./css/TextStyle\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { WordText } from \"../utils/WordText\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Config } from \"../../Config\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\";\r\nimport { HtmlElement, HtmlElementType } from \"../html/HtmlElement\";\r\nimport { HtmlLink } from \"../html/HtmlLink\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { IHtmlObject } from \"../html/IHtmlObject\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { HtmlParser } from \"../html/HtmlParser\";\r\nimport { UBBParser } from \"../html/UBBParser\";\r\nimport { HtmlParseOptions } from \"../html/HtmlParseOptions\";\r\n\r\n/**\r\n * 文本内容发生改变后调度。\r\n * @eventType Event.CHANGE\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Text</code> 类用于创建显示对象以显示文本。</p>\r\n * <p>\r\n * 注意：如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。\r\n * </p>\r\n * @example\r\n * package\r\n * {\r\n * \timport laya.display.Text;\r\n * \tpublic class Text_Example\r\n * \t{\r\n * \t\tpublic function Text_Example()\r\n * \t\t{\r\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * \t\t\tonInit();\r\n * \t\t}\r\n * \t\tprivate function onInit():void\r\n * \t\t{\r\n * \t\t\tvar text:Text = new Text();//创建一个 Text 类的实例对象 text 。\r\n * \t\t\ttext.text = \"这个是一个 Text 文本示例。\";\r\n * \t\t\ttext.color = \"#008fff\";//设置 text 的文本颜色。\r\n * \t\t\ttext.font = \"Arial\";//设置 text 的文本字体。\r\n * \t\t\ttext.bold = true;//设置 text 的文本显示为粗体。\r\n * \t\t\ttext.fontSize = 30;//设置 text 的字体大小。\r\n * \t\t\ttext.wordWrap = true;//设置 text 的文本自动换行。\r\n * \t\t\ttext.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n * \t\t\ttext.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n * \t\t\ttext.width = 300;//设置 text 的宽度。\r\n * \t\t\ttext.height = 200;//设置 text 的高度。\r\n * \t\t\ttext.italic = true;//设置 text 的文本显示为斜体。\r\n * \t\t\ttext.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n * \t\t\tLaya.stage.addChild(text);//将 text 添加到显示列表。\r\n * \t\t}\r\n * \t}\r\n * }\r\n * @example\r\n * Text_Example();\r\n * function Text_Example()\r\n * {\r\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *     onInit();\r\n * }\r\n * function onInit()\r\n * {\r\n *     var text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\r\n *     text.text = \"这个是一个 Text 文本示例。\";\r\n *     text.color = \"#008fff\";//设置 text 的文本颜色。\r\n *     text.font = \"Arial\";//设置 text 的文本字体。\r\n *     text.bold = true;//设置 text 的文本显示为粗体。\r\n *     text.fontSize = 30;//设置 text 的字体大小。\r\n *     text.wordWrap = true;//设置 text 的文本自动换行。\r\n *     text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n *     text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n *     text.width = 300;//设置 text 的宽度。\r\n *     text.height = 200;//设置 text 的高度。\r\n *     text.italic = true;//设置 text 的文本显示为斜体。\r\n *     text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n *     Laya.stage.addChild(text);//将 text 添加到显示列表。\r\n * }\r\n * @example\r\n * class Text_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         var text: laya.display.Text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\r\n *         text.text = \"这个是一个 Text 文本示例。\";\r\n *         text.color = \"#008fff\";//设置 text 的文本颜色。\r\n *         text.font = \"Arial\";//设置 text 的文本字体。\r\n *         text.bold = true;//设置 text 的文本显示为粗体。\r\n *         text.fontSize = 30;//设置 text 的字体大小。\r\n *         text.wordWrap = true;//设置 text 的文本自动换行。\r\n *         text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n *         text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n *         text.width = 300;//设置 text 的宽度。\r\n *         text.height = 200;//设置 text 的高度。\r\n *         text.italic = true;//设置 text 的文本显示为斜体。\r\n *         text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n *         Laya.stage.addChild(text);//将 text 添加到显示列表。\r\n *     }\r\n * }\r\n */\r\nexport class Text extends Sprite {\r\n\r\n    /**visible不进行任何裁切。*/\r\n    static VISIBLE: string = \"visible\";\r\n    /**scroll 不显示文本域外的字符像素，并且支持 scroll 接口。*/\r\n    static SCROLL: string = \"scroll\";\r\n    /**hidden 不显示超出文本域的字符。*/\r\n    static HIDDEN: string = \"hidden\";\r\n    /**shrink 超出文本域时，文本整体缩小以适应文本框。*/\r\n    static SHRINK: string = \"shrink\";\r\n    /**ellipsis 超出文本域时，文本被截断，并且文本最后显示省略号。*/\r\n    static ELLIPSIS: string = \"ellipsis\";\r\n\r\n    /**语言包，是一个包含key:value的集合，用key索引，替换为目标value语言*/\r\n    static langPacks: Record<string, string>;\r\n    /**是否是从右向左的显示顺序*/\r\n    static RightToLeft: boolean = false;\r\n\r\n    /**@internal 预测长度的文字，用来提升计算效率，不同语言找一个最大的字符即可*/\r\n    static _testWord: string = \"游\";\r\n    static _passwordChar = \"●\";\r\n\r\n    /**@private 位图字体字典。*/\r\n    private static _bitmapFonts: Record<string, BitmapFont> = {};\r\n\r\n    /** 标记此文本是否忽略语言包 */\r\n    ignoreLang: boolean;\r\n\r\n    /**表示文本内容字符串。*/\r\n    protected _text: string;\r\n    protected _overflow: string = Text.VISIBLE;\r\n    protected _singleCharRender: boolean = false;\t// 拆分渲染\r\n    protected _textStyle: TextStyle;\r\n    protected _prompt: string = '';\r\n    /**输入提示符颜色。*/\r\n    protected _promptColor: string;\r\n    /**\r\n     * 文本背景颜色，以字符串表示。\r\n     */\r\n    protected _bgColor: string;\r\n    /**\r\n     * 文本边框背景颜色，以字符串表示。\r\n     */\r\n    protected _borderColor: string;\r\n    /**\r\n     * <p>默认边距信息</p>\r\n     * <p>[上边距，右边距，下边距，左边距]（边距以像素为单位）</p>\r\n     */\r\n    protected _padding: number[];\r\n    /**\r\n     * <p>表示使用此文本格式的文本字段是否自动换行。</p>\r\n     * 如果 wordWrap 的值为 true，则该文本字段自动换行；如果值为 false，则该文本字段不自动换行。\r\n     * @default false。\r\n     */\r\n    protected _wordWrap: boolean;\r\n\r\n    /**\r\n     * <p>指定文本字段是否是密码文本字段。</p>\r\n     * 如果此属性的值为 true，则文本字段被视为密码文本字段，并使用星号而不是实际字符来隐藏输入的字符。如果为 false，则不会将文本字段视为密码文本字段。\r\n     */\r\n    protected _asPassword: boolean;\r\n\r\n    protected _htmlParseOptions: HtmlParseOptions;\r\n\r\n    protected _templateVars: Record<string, string>;\r\n\r\n    /**表示文本内容是否发生改变。*/\r\n    protected _isChanged: boolean;\r\n    /**表示文本的宽度，以像素为单位。*/\r\n    protected _textWidth: number = 0;\r\n    /**表示文本的高度，以像素为单位。*/\r\n    protected _textHeight: number = 0;\r\n    protected _realFont: string;\r\n    protected _bitmapFont: BitmapFont;\r\n    protected _scrollPos: Point | null;\r\n    protected _bgDrawCmd: DrawRectCmd;\r\n    protected _html: boolean;\r\n    protected _ubb: boolean;\r\n    protected _lines: Array<ITextLine>;\r\n    protected _elements: Array<HtmlElement>;\r\n    protected _objContainer: Sprite;\r\n    protected _maxWidth: number;\r\n    protected _hideText: boolean;\r\n\r\n    private _updatingLayout: boolean;\r\n    private _fontSizeScale: number;\r\n\r\n    /**是否将字符串中的\\n,\\t转换为实际功能的字符 */\r\n    _parseEscapeChars: boolean;\r\n    _onPostLayout: () => void;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Text</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._textStyle = new TextStyle();\r\n        this._textStyle.fontSize = Config.defaultFontSize;\r\n        this._text = \"\";\r\n        this.font = \"\";\r\n        this._elements = [];\r\n        this._lines = [];\r\n        this._padding = [0, 0, 0, 0];\r\n        this._fontSizeScale = 1;\r\n    }\r\n\r\n    /**\r\n     * 注册位图字体。\r\n     * @param\tname\t\t位图字体的名称。\r\n     * @param\tbitmapFont\t位图字体文件。\r\n     */\r\n    static registerBitmapFont(name: string, bitmapFont: BitmapFont): void {\r\n        bitmapFont._addReference();\r\n        Text._bitmapFonts[name] = bitmapFont;\r\n    }\r\n\r\n    /**\r\n     * 移除注册的位图字体文件。\r\n     * @param\tname\t\t位图字体的名称。\r\n     * @param\tdestroy\t\t是否销毁指定的字体文件。\r\n     */\r\n    static unregisterBitmapFont(name: string, destroy: boolean = true): void {\r\n        let font = Text._bitmapFonts[name];\r\n        if (font) {\r\n            font._removeReference();\r\n            if (destroy) font.destroy();\r\n            delete Text._bitmapFonts[name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        recoverLines(this._lines);\r\n        HtmlElement.returnToPool(this._elements);\r\n\r\n        super.destroy(destroyChild);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec._getBoundPoints();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        return this.textWidth;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        return this.textHeight;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * 表示文本的宽度，以像素为单位。\r\n     */\r\n    get textWidth(): number {\r\n        this.typeset();\r\n        return this._textWidth;\r\n    }\r\n\r\n    /**\r\n     * 表示文本的高度，以像素为单位。\r\n     */\r\n    get textHeight(): number {\r\n        this.typeset();\r\n        return this._textHeight;\r\n    }\r\n\r\n    /** 当前文本的内容字符串。*/\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (!this.ignoreLang && Text.langPacks)\r\n            value = Text.langPacks[value] || value;\r\n\r\n        if (this._text != value) {\r\n            this._text = value;\r\n            this.markChanged();\r\n            this.event(Event.CHANGE);\r\n        }\r\n    }\r\n\r\n    /** @deprecated **/\r\n    changeText(text: string): void {\r\n        this.text = text;\r\n    }\r\n\r\n    /**\r\n     * <p>文本的字体名称，以字符串形式表示。</p>\r\n     * <p>默认值为：\"Arial\"，可以通过Config.defaultFont设置默认字体。</p>\r\n     * <p>如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。</p>\r\n     */\r\n    get font(): string {\r\n        return this._textStyle.font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._textStyle.font = value;\r\n        if (!value) {\r\n            value = Config.defaultFont;\r\n            if (!value)\r\n                value = \"Arial\";\r\n        }\r\n\r\n        this._realFont = value;\r\n        this._bitmapFont = Text._bitmapFonts[value];\r\n\r\n        if (this._bitmapFont) {\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n        else if (value && (Utils.getFileExtension(value) || value.startsWith(\"res://\"))) {\r\n            let t = value;\r\n            let fontObj = ILaya.loader.getRes(value);\r\n            if (!fontObj || fontObj.obsolute) {\r\n                ILaya.loader.load(value).then(fontObj => {\r\n                    if (!fontObj || this._realFont != t)\r\n                        return;\r\n\r\n                    if (fontObj instanceof BitmapFont)\r\n                        this._bitmapFont = fontObj;\r\n                    else\r\n                        this._realFont = fontObj.family;\r\n                    if (this._text)\r\n                        this.markChanged();\r\n                });\r\n            }\r\n            else {\r\n                if (fontObj instanceof BitmapFont)\r\n                    this._bitmapFont = fontObj;\r\n                else\r\n                    this._realFont = fontObj.family;\r\n                if (this._text)\r\n                    this.markChanged();\r\n            }\r\n        }\r\n        else {\r\n            this._realFont = (ILaya.Browser.onIPhone ? (Config.fontFamilyMap[value] || value) : value);\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>指定文本的字体大小（以像素为单位）。</p>\r\n     * <p>默认为20像素，可以通过 <code>Config.defaultFontSize</code> 设置默认大小。</p>\r\n     */\r\n    get fontSize(): number {\r\n        return this._textStyle.fontSize;\r\n    }\r\n\r\n    set fontSize(value: number) {\r\n        if (this._textStyle.fontSize != value) {\r\n            this._textStyle.fontSize = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的颜色值。可以通过 <code>Text.defaultColor</code> 设置默认颜色。</p>\r\n     * <p>默认值为黑色。</p>\r\n     */\r\n    get color(): string {\r\n        return this._textStyle.color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this.set_color(value);\r\n    }\r\n\r\n    set_color(value: string): void {\r\n        if (this._textStyle.color != value) {\r\n            this._textStyle.color = value;\r\n            //如果仅仅更新颜色，无需重新排版\r\n            if (!this._isChanged && this._graphics && this._elements.length == 0)\r\n                this._graphics.replaceTextColor(this._textStyle.color);\r\n            else\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>指定文本是否为粗体字。</p>\r\n     * <p>默认值为 false，这意味着不使用粗体字。如果值为 true，则文本为粗体字。</p>\r\n     */\r\n    get bold(): boolean {\r\n        return this._textStyle.bold;\r\n    }\r\n\r\n    set bold(value: boolean) {\r\n        if (this._textStyle.bold != value) {\r\n            this._textStyle.bold = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本是否为斜体。</p>\r\n     * <p>默认值为 false，这意味着不使用斜体。如果值为 true，则文本为斜体。</p>\r\n     */\r\n    get italic(): boolean {\r\n        return this._textStyle.italic;\r\n    }\r\n\r\n    set italic(value: boolean) {\r\n        if (this._textStyle.italic != value) {\r\n            this._textStyle.italic = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的水平显示方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"left\"： 居左对齐显示。</li>\r\n     * <li>\"center\"： 居中对齐显示。</li>\r\n     * <li>\"right\"： 居右对齐显示。</li>\r\n     * </p>\r\n     */\r\n    get align(): string {\r\n        return this._textStyle.align;\r\n    }\r\n\r\n    set align(value: string) {\r\n        if (this._textStyle.align != value) {\r\n            this._textStyle.align = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的垂直显示方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"top\"： 居顶部对齐显示。</li>\r\n     * <li>\"middle\"： 居中对齐显示。</li>\r\n     * <li>\"bottom\"： 居底部对齐显示。</li>\r\n     * </p>\r\n     */\r\n    get valign(): string {\r\n        return this._textStyle.valign;\r\n    }\r\n\r\n    set valign(value: string) {\r\n        if (this._textStyle.valign != value) {\r\n            this._textStyle.valign = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 图文混排时图片和文字的对齐方式。可选值是top,middle,bottom\r\n     */\r\n    get alignItems(): string {\r\n        return this._textStyle.alignItems;\r\n    }\r\n\r\n    set alignItems(value: string) {\r\n        if (this._textStyle.alignItems != value) {\r\n            this._textStyle.alignItems = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本是否自动换行，默认为false。</p>\r\n     * <p>若值为true，则自动换行；否则不自动换行。</p>\r\n     */\r\n    get wordWrap(): boolean {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(value: boolean) {\r\n        if (this._wordWrap != value) {\r\n            this._wordWrap = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 垂直行间距（以像素为单位）。\r\n     */\r\n    get leading(): number {\r\n        return this._textStyle.leading;\r\n    }\r\n\r\n    set leading(value: number) {\r\n        if (this._textStyle.leading != value) {\r\n            this._textStyle.leading = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>边距信息。</p>\r\n     * <p>数据格式：[上边距，右边距，下边距，左边距]（边距以像素为单位）。</p>\r\n     */\r\n    get padding(): number[] {\r\n        return this._padding;\r\n    }\r\n\r\n    set padding(value: number[] | string) {\r\n        if (typeof (value) == 'string') {\r\n            let arr = value.split(\",\");\r\n            this._padding.length = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let v = parseFloat(arr[i]);\r\n                if (isNaN(v))\r\n                    v = 0;\r\n                this._padding.push(v);\r\n            }\r\n        }\r\n        else\r\n            this._padding = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    /**\r\n     * 文本背景颜色，以字符串表示。\r\n     */\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * 文本边框背景颜色，以字符串表示。\r\n     */\r\n    get borderColor(): string {\r\n        return this._borderColor;\r\n    }\r\n\r\n    set borderColor(value: string) {\r\n        this._borderColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * <p>默认值0，表示不描边。</p>\r\n     */\r\n    get stroke(): number {\r\n        return this._textStyle.stroke;\r\n    }\r\n\r\n    set stroke(value: number) {\r\n        if (this._textStyle.stroke != value) {\r\n            this._textStyle.stroke = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * <p>默认值为 \"#000000\"（黑色）;</p>\r\n     */\r\n    get strokeColor(): string {\r\n        return this._textStyle.strokeColor;\r\n    }\r\n\r\n    set strokeColor(value: string) {\r\n        if (this._textStyle.strokeColor != value) {\r\n            this._textStyle.strokeColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指定文本超出文本域后的行为\r\n     * @tips: <p>值为:可见visible、隐藏hidden、滚动:scroll、自动收缩shrink、显示省略号ellipsis。</p>\r\n     * @tips: <p>作用：可见，表示文本不受文本宽高约束全部可见；隐藏，超过文本宽高就会被裁切掉，性能最好；\r\n     * 滚动，表示超出宽高的部分被隐藏，可以通过划动控制显示在宽高内区域；自动收缩，表示文本会跟随宽高的大小而自动调整文本的大小，始终全部显示在文本宽高内。\r\n     * 显示省略号，表示当文本超出宽高后，未尾的几位字符会替换为省略号，表示当前文本还有未显示的内容</p>\r\n     */\r\n    get overflow(): string {\r\n        return this._overflow;\r\n    }\r\n\r\n    set overflow(value: string) {\r\n        if (this._overflow != value) {\r\n            this._overflow = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**是否显示下划线。*/\r\n    get underline(): boolean {\r\n        return this._textStyle.underline;\r\n    }\r\n\r\n    set underline(value: boolean) {\r\n        if (this._textStyle.underline != value) {\r\n            this._textStyle.underline = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**下划线的颜色，为null则使用字体颜色。*/\r\n    get underlineColor(): string {\r\n        return this._textStyle.underlineColor;\r\n    }\r\n\r\n    set underlineColor(value: string) {\r\n        if (this._textStyle.underlineColor != value) {\r\n            this._textStyle.underlineColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get strikethrough(): boolean {\r\n        return this._textStyle.strikethrough;\r\n    }\r\n\r\n    set strikethrough(value: boolean) {\r\n        if (this._textStyle.strikethrough != value) {\r\n            this._textStyle.strikethrough = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 下划线的颜色，为null则使用字体颜色。\r\n     */\r\n    get strikethroughColor(): string {\r\n        return this._textStyle.strikethroughColor;\r\n    }\r\n\r\n    set strikethroughColor(value: string) {\r\n        if (this._textStyle.strikethroughColor != value) {\r\n            this._textStyle.strikethroughColor = value;\r\n            this.markChanged();\r\n        }\r\n    }    \r\n\r\n    get singleCharRender(): boolean {\r\n        return this._singleCharRender;\r\n    }\r\n\r\n    /** 设置是否单个字符渲染，如果Textd的内容一直改变，例如是一个增加的数字，就设置这个，防止无效占用缓存 */\r\n    set singleCharRender(value: boolean) {\r\n        this._singleCharRender = value;\r\n    }\r\n\r\n    get html(): boolean {\r\n        return this._html;\r\n    }\r\n\r\n    /** 设置是否富文本，支持html语法 */\r\n    set html(value: boolean) {\r\n        if (this._html != value) {\r\n            this._html = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get ubb(): boolean {\r\n        return this._ubb;\r\n    }\r\n\r\n    /** 设置是否使用UBB语法解析文本 */\r\n    set ubb(value: boolean) {\r\n        if (this._ubb != value) {\r\n            this._ubb = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get maxWidth(): number {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    /** 设置当文本达到最大允许的宽度时，自定换行，设置为0则此限制不生效。*/\r\n    set maxWidth(value: number) {\r\n        if (this._maxWidth != value) {\r\n            this._maxWidth = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get htmlParseOptions(): HtmlParseOptions {\r\n        return this._htmlParseOptions;\r\n    }\r\n\r\n    set htmlParseOptions(value: HtmlParseOptions) {\r\n        this._htmlParseOptions = value;\r\n    }\r\n\r\n    protected parseTemplate(template: string): string {\r\n        let pos1: number = 0, pos2: number, pos3: number;\r\n        let tag: string;\r\n        let value: string;\r\n        let result: string = \"\";\r\n        while ((pos2 = template.indexOf(\"{\", pos1)) != -1) {\r\n            if (pos2 > 0 && template.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += template.substring(pos1, pos2 - 1);\r\n                result += \"{\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += template.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = template.indexOf(\"}\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            if (pos2 == pos1 + 1) {\r\n                result += template.substring(pos1, pos1 + 2);\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            tag = template.substring(pos1 + 1, pos2);\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                value = this._templateVars[tag.substring(0, pos3)];\r\n                if (value == null)\r\n                    result += tag.substring(pos3 + 1);\r\n                else\r\n                    result += value;\r\n            }\r\n            else {\r\n                value = this._templateVars[tag];\r\n                if (value != null)\r\n                    result += value;\r\n            }\r\n            pos1 = pos2 + 1;\r\n        }\r\n\r\n        if (pos1 < template.length)\r\n            result += template.substring(pos1);\r\n\r\n        return result;\r\n    }\r\n\r\n    public get templateVars(): Record<string, any> {\r\n        return this._templateVars;\r\n    }\r\n\r\n    public set templateVars(value: Record<string, any> | boolean) {\r\n        if (!this._templateVars && !value)\r\n            return;\r\n\r\n        if (value === true)\r\n            this._templateVars = {};\r\n        else if (value === false)\r\n            this._templateVars = null;\r\n        else\r\n            this._templateVars = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    public setVar(name: string, value: any): Text {\r\n        if (!this._templateVars)\r\n            this._templateVars = {};\r\n        this._templateVars[name] = value;\r\n        this.markChanged();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n    * <p>设置横向滚动量。</p>\r\n    * <p>即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。</p>\r\n    */\r\n    set scrollX(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollX = this.maxScrollX;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollX ? maxScrollX : value;\r\n\r\n        this._scrollPos.x = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * 获取横向滚动量。\r\n     */\r\n    get scrollX(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.x;\r\n    }\r\n\r\n    /**\r\n     * 设置纵向滚动量（px)。即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。\r\n     */\r\n    set scrollY(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollY = this.maxScrollY;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollY ? maxScrollY : value;\r\n\r\n        this._scrollPos.y = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * 获取纵向滚动量。\r\n     */\r\n    get scrollY(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.y;\r\n    }\r\n\r\n    /**\r\n     * 获取横向可滚动最大值。\r\n     */\r\n    get maxScrollX(): number {\r\n        let r = this.textWidth - this._width;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**\r\n     * 获取纵向可滚动最大值。\r\n     */\r\n    get maxScrollY(): number {\r\n        let r = this.textHeight - this._height;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**返回文字行信息*/\r\n    get lines(): ReadonlyArray<ITextLine> {\r\n        this.typeset();\r\n        return this._lines;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected markChanged() {\r\n        if (!this._isChanged) {\r\n            this._isChanged = true;\r\n            ILaya.systemTimer.callLater(this, this._typeset);\r\n        }\r\n    }\r\n\r\n    typeset() {\r\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this._typeset);\r\n    }\r\n\r\n    refreshLayout() {\r\n        ILaya.systemTimer.callLater(this, this.doLayout);\r\n    }\r\n\r\n    get objContainer(): Sprite {\r\n        if (!this._objContainer) {\r\n            this._objContainer = new Sprite();\r\n            this._objContainer.hideFlags |= HideFlags.HideAndDontSave;\r\n            this.addChild(this._objContainer);\r\n        }\r\n        return this._objContainer;\r\n    }\r\n\r\n    /**\r\n     * <p>排版文本。</p>\r\n     * <p>进行宽高计算，渲染、重绘文本。</p>\r\n     */\r\n    protected _typeset(): void {\r\n        this._isChanged = false;\r\n        if (this._hideText || this._destroyed)\r\n            return;\r\n\r\n        HtmlElement.returnToPool(this._elements);\r\n        if (this._objContainer)\r\n            this._objContainer.removeChildren();\r\n\r\n        let text = this._text;\r\n        let isPrompt: boolean;\r\n        if (!text && this._prompt) {\r\n            text = this._prompt;\r\n            isPrompt = true;\r\n        }\r\n\r\n        if (!text) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n\r\n            this._textWidth = this._textHeight = 0;\r\n            this._scrollPos = null;\r\n            if (this._onPostLayout) {\r\n                this._updatingLayout = true;\r\n                this._onPostLayout();\r\n                this._updatingLayout = false;\r\n            }\r\n            return;\r\n        }\r\n\r\n        let html = this._html;\r\n        text = text.replace(normalizeCR, \"\\n\");\r\n        if (this._parseEscapeChars)\r\n            text = text.replace(escapeCharsPattern, getReplaceStr);\r\n        if (!isPrompt && this._templateVars)\r\n            text = this.parseTemplate(text);\r\n\r\n        if (this._ubb) {\r\n            text = UBBParser.defaultParser.parse(text);\r\n            html = true;\r\n        }\r\n        if (!isPrompt && this._asPassword)\r\n            text = Text._passwordChar.repeat(text.length);\r\n\r\n        let saveColor: string;\r\n        if (isPrompt) {\r\n            saveColor = this._textStyle.color;\r\n            this._textStyle.color = this._promptColor;\r\n        }\r\n        if (html)\r\n            HtmlParser.defaultParser.parse(text, this._textStyle, this._elements, this._htmlParseOptions);\r\n        else {\r\n            let ele = HtmlElement.getFromPool(HtmlElementType.Text);\r\n            Object.assign(ele.style, this._textStyle);\r\n            ele.text = text;\r\n            this._elements.push(ele);\r\n        }\r\n        if (isPrompt)\r\n            this._textStyle.color = saveColor;\r\n\r\n        this.doLayout();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 分析文本换行。\r\n     */\r\n    protected doLayout(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._updatingLayout = true;\r\n        this._fontSizeScale = 1;\r\n\r\n        let wordWrap = this._wordWrap || this._overflow == Text.ELLIPSIS;\r\n        let padding = this._padding;\r\n        let rectWidth: number;\r\n        if (this._isWidthSet)\r\n            rectWidth = this._width - padding[3] - padding[1];\r\n        else\r\n            rectWidth = Number.MAX_VALUE;\r\n        if (this._maxWidth > 0) {\r\n            let m = this._maxWidth - padding[3] - padding[1];\r\n            if (!wordWrap || m < rectWidth)\r\n                rectWidth = m;\r\n            wordWrap = true;\r\n        }\r\n        let rectHeight = this._isHeightSet ? (this._height - padding[0] - padding[2]) : Number.MAX_VALUE;\r\n        let bfont = this._bitmapFont;\r\n        let alignItems = this._textStyle.alignItems == \"middle\" ? 1 : (this._textStyle.alignItems == \"bottom\" ? 2 : 0);\r\n\r\n        let lineX: number, lineY: number;\r\n        let curLine: ITextLine;\r\n        let lastCmd: ITextCmd;\r\n        let charWidth: number, charHeight: number;\r\n        let fontSize: number;\r\n\r\n        let getTextWidth = (text: string) => {\r\n            if (bfont)\r\n                return bfont.getTextWidth(text, fontSize);\r\n            else {\r\n                let ret = ILaya.Browser.context.measureText(text);\r\n                return ret ? ret.width : 100;\r\n            }\r\n        };\r\n\r\n        let buildLines = (text: string, style: TextStyle) => {\r\n            if (bfont) {\r\n                charWidth = bfont.getMaxWidth(fontSize);\r\n                charHeight = bfont.getMaxHeight(fontSize);\r\n            } else {\r\n                let ctxFont = (style.italic ? \"italic \" : \"\") + (style.bold ? \"bold \" : \"\") + fontSize + \"px \" + this._realFont;\r\n                (<any>style)._ctxFont = ctxFont; //缓存起来，避免renderText里又拼一次\r\n\r\n                ILaya.Browser.context.font = ctxFont;\r\n                let mr: any = ILaya.Browser.context.measureText(Text._testWord);\r\n\r\n                if (mr) {\r\n                    charWidth = mr.width;\r\n                    charHeight = Math.ceil(mr.height || fontSize);\r\n                }\r\n                else {\r\n                    charWidth = 100;\r\n                    charHeight = fontSize;\r\n                }\r\n            }\r\n\r\n            let lines = text.split(\"\\n\");\r\n            if (wordWrap) {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        wrapText(line, style);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        addCmd(line, style, null);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        let addCmd = (target: string | IHtmlObject, style: TextStyle, width?: number) => {\r\n            let cmd: ITextCmd = cmdPool.length > 0 ? cmdPool.pop() : <any>{};\r\n            cmd.x = lineX;\r\n            cmd.y = lineY;\r\n            if (typeof (target) === \"string\") {\r\n                if (!width)\r\n                    width = getTextWidth(target);\r\n                if (!cmd.wt)\r\n                    cmd.wt = new WordText();\r\n                cmd.wt.setText(target);\r\n                cmd.wt.width = width;\r\n                cmd.wt.splitRender = this._singleCharRender;\r\n                cmd.width = width;\r\n                cmd.height = charHeight;\r\n            }\r\n            else {\r\n                cmd.obj = target;\r\n                cmd.x++;\r\n                cmd.width = target.width + 2;\r\n                cmd.height = target.height;\r\n            }\r\n            cmd.style = style;\r\n            cmd.linkEnd = false;\r\n            cmd.next = null;\r\n            lineX += Math.round(cmd.width);\r\n\r\n            if (!curLine.cmd)\r\n                curLine.cmd = cmd;\r\n            else\r\n                lastCmd.next = cmd;\r\n            lastCmd = cmd;\r\n        };\r\n\r\n        let endLine = () => {\r\n            //计算行高\r\n            let lineHeight = 0;\r\n            let cmd = curLine.cmd;\r\n            while (cmd) {\r\n                if (cmd.height > lineHeight) lineHeight = cmd.height;\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            //调整元素y位置\r\n            cmd = curLine.cmd;\r\n            while (cmd) {\r\n                if (alignItems == 1)\r\n                    cmd.y = Math.floor((lineHeight - cmd.height) * 0.5);\r\n                else if (alignItems == 2)\r\n                    cmd.y = Math.floor((lineHeight - cmd.height));\r\n                else\r\n                    cmd.y = 0;\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (lineHeight == 0)\r\n                lineHeight = charHeight;\r\n            lineHeight++; //预览一个像素用来放下划线\r\n\r\n            curLine.height = lineHeight;\r\n            curLine.width = lineX;\r\n        };\r\n\r\n        let startLine = () => {\r\n            lineX = 0;\r\n            if (curLine)\r\n                lineY += curLine.height + Math.floor(this._textStyle.leading * this._fontSizeScale);\r\n\r\n            curLine = linePool.length > 0 ? linePool.pop() : <any>{ cmds: [] };\r\n            curLine.x = 0;\r\n            curLine.y = lineY;\r\n            this._lines.push(curLine);\r\n\r\n            return curLine;\r\n        };\r\n\r\n        let wrapText = (text: string, style: TextStyle) => {\r\n            let remainWidth = Math.max(0, rectWidth - lineX);\r\n\r\n            let tw = getTextWidth(text);\r\n            //优化1，如果一行小于宽度，则直接跳过遍历\r\n            if (tw <= remainWidth) {\r\n                addCmd(text, style, tw);\r\n                return;\r\n            }\r\n\r\n            let maybeIndex = 0;\r\n            let wordWidth = 0;\r\n            let startIndex = 0;\r\n\r\n            let isEmoji = testEmoji(text);\r\n            if (!bfont && !isEmoji) {\r\n                //优化2，预算第几个字符会超出，减少遍历及字符宽度度量\r\n                maybeIndex = Math.floor(remainWidth / charWidth);\r\n                (maybeIndex == 0) && (maybeIndex = 1);\r\n                wordWidth = getTextWidth(text.substring(0, maybeIndex));\r\n                if (remainWidth < wordWidth && lineX != 0) {\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                }\r\n            }\r\n\r\n            let len = text.length;\r\n            for (let j = maybeIndex; j < len; j++) {\r\n                // 逐字符测量后加入到总宽度中，在某些情况下自动换行不准确。\r\n                // 目前已知在全是字符1的自动换行就会出现这种情况。\r\n                // 考虑性能，保留这种非方式。\r\n                tw = getTextWidth(text.charAt(j));\r\n                wordWidth += tw;\r\n                let isEmojiChar = false;\r\n                if (isEmoji && j + 1 < len && testEmoji(text.charAt(j) + text.charAt(j + 1))) {\r\n                    wordWidth += tw >> 1;\r\n                    j++;\r\n                    isEmojiChar = true;\r\n                }\r\n\r\n                // 如果j的位置已经超出范围，要从startIndex到j找到一个能拆分的地方\r\n                if (wordWidth > remainWidth) {\r\n                    if (isEmojiChar) {\r\n                        if (wordWidth == tw + (tw >> 1)) {\r\n                            //这里是代表第一个就是emoji表情的逻辑\r\n                            j++;\r\n                        } else {\r\n                            j--;\r\n                        }\r\n                    }\r\n\r\n                    if (j == 0) {\r\n                        if (lineX > 0) {\r\n                            endLine();\r\n                            startLine();\r\n                            remainWidth = rectWidth;\r\n                        }\r\n                        continue;\r\n                    }\r\n\r\n                    //截断换行单词\r\n                    let newLine = text.substring(startIndex, j);\r\n                    wordWidth -= tw;\r\n\r\n                    // 如果最后一个是中文则直接截断，否则找空格或者-来拆分\r\n                    let ccode = newLine.charCodeAt(newLine.length - 1);\r\n                    if (isEnglishChar(ccode)) {\r\n                        //按照英文单词字边界截取 因此将会无视中文\r\n                        let execResult = wordBoundaryTest.exec(newLine);// 找不是 空格和标点符号的\r\n                        if (execResult) {\r\n                            j = execResult.index + startIndex;\r\n                            //此行只够容纳这一个单词 强制换行\r\n                            if (execResult.index == 0)\r\n                                j += newLine.length;\r\n                            //此行有多个单词 按单词分行\r\n                            else {\r\n                                wordWidth = null;\r\n                                newLine = text.substring(startIndex, j);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //如果自动换行，则另起一行\r\n                    addCmd(newLine, style, wordWidth);\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                    //如果非自动换行，则只截取字符串\r\n\r\n                    startIndex = j;\r\n                    if (j + maybeIndex < len) {\r\n                        if (maybeIndex != 0)\r\n                            j += maybeIndex - 1;\r\n                        wordWidth = getTextWidth(text.substring(startIndex, j + 1));\r\n                    } else {\r\n                        //此处执行将不会在循环结束后再push一次\r\n                        addCmd(text.substring(startIndex, len), style);\r\n                        startIndex = -1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (startIndex != -1)\r\n                addCmd(text.substring(startIndex, len), style);\r\n        };\r\n\r\n        let calcTextSize = () => {\r\n            let nw: number = 0, nh: number = 0;\r\n            for (let line of this._lines) {\r\n                if (line.width > nw)\r\n                    nw = line.width;\r\n            }\r\n            if (nw > 0)\r\n                nw += padding[1] + padding[3];\r\n            this._textWidth = nw;\r\n\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            if (lastLine)\r\n                nh = lastLine.y + lastLine.height;\r\n            if (nh > 0)\r\n                nh += padding[0] + padding[2];\r\n            this._textHeight = nh;\r\n        };\r\n\r\n        let run = () => {\r\n            lineX = lineY = charWidth = charHeight = 0;\r\n            curLine = null;\r\n            lastCmd = null;\r\n\r\n            recoverLines(this._lines);\r\n            startLine();\r\n\r\n            let elements = this._elements;\r\n            for (let i = 0, n = elements.length; i < n; i++) {\r\n                let ele = elements[i];\r\n                if (ele.type == HtmlElementType.Text) {\r\n                    fontSize = Math.floor(ele.style.fontSize * this._fontSizeScale);\r\n                    if (fontSize == 0)\r\n                        fontSize = 1;\r\n                    buildLines(ele.text, ele.style);\r\n                }\r\n                else if (ele.type == HtmlElementType.LinkEnd) {\r\n                    if (lastCmd)\r\n                        lastCmd.linkEnd = true;\r\n                }\r\n                else {\r\n                    let htmlObj = ele.obj;\r\n                    if (!htmlObj) {\r\n                        let cls = HtmlParser.classMap[ele.type];\r\n                        if (cls) {\r\n                            htmlObj = Pool.createByClass(cls);\r\n                            htmlObj.create(this, ele);\r\n                            ele.obj = htmlObj;\r\n                        }\r\n                    }\r\n\r\n                    if (htmlObj) {\r\n                        if (wordWrap) {\r\n                            let remainWidth = rectWidth - lineX;\r\n                            if (remainWidth < htmlObj.width + 1) {\r\n                                if (lineX > 0) { //如果已经是开始位置了，就算放不下也不换行\r\n                                    endLine();\r\n                                    startLine();\r\n                                }\r\n                            }\r\n                        }\r\n                        addCmd(htmlObj, ele.style);\r\n                    }\r\n                }\r\n            }\r\n\r\n            endLine();\r\n            calcTextSize();\r\n        };\r\n\r\n        run();\r\n\r\n        if (this._overflow == Text.SHRINK) {\r\n            if (this._lines.length > 1 && this._textHeight > rectHeight) {\r\n                //多行的情况，涉及到自动换行，得用二分法查找最合适的比例，会消耗多一点计算资源\r\n                let low = 0;\r\n                let high = this._textStyle.fontSize;\r\n\r\n                //先尝试猜测一个比例\r\n                this._fontSizeScale = Math.sqrt(rectHeight / this._textHeight);\r\n                let cur = Math.floor(this._fontSizeScale * this._textStyle.fontSize);\r\n\r\n                while (true) {\r\n                    run();\r\n\r\n                    if (this._textWidth > rectWidth || this._textHeight > rectHeight)\r\n                        high = cur;\r\n                    else\r\n                        low = cur;\r\n                    if (high - low > 1 || high != low && cur == high) {\r\n                        cur = low + (high - low) / 2;\r\n                        this._fontSizeScale = cur / this._textStyle.fontSize;\r\n                    }\r\n                    else\r\n                        break;\r\n                }\r\n            }\r\n            else if (this._textWidth > rectWidth) {\r\n                this._fontSizeScale = rectWidth / this._textWidth;\r\n\r\n                run();\r\n\r\n                if (this._textWidth > rectWidth) //如果还超出，缩小一点再来一次\r\n                {\r\n                    let size = Math.floor(this._textStyle.fontSize * this._fontSizeScale);\r\n                    size--;\r\n                    this._fontSizeScale = size / this._textStyle.fontSize;\r\n\r\n                    run();\r\n                }\r\n            }\r\n        }\r\n        else if (this._overflow == Text.ELLIPSIS && (this._textWidth > rectWidth || this._textHeight > rectHeight)) {\r\n            //删掉超出的行\r\n            let i = this._lines.findIndex(line => line.y + line.height > rectHeight);\r\n            if (i == 0) i = 1;\r\n            let linesDeleted = false;\r\n            if (i != -1 && this._lines.length > i) {\r\n                recoverLines(this._lines.splice(i, this._lines.length - i));\r\n                linesDeleted = true;\r\n            }\r\n\r\n            //在最后一行加省略号\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            let cmd = lastLine.cmd;\r\n            let next: ITextCmd;\r\n            let done = false;\r\n            while (cmd) {\r\n                next = cmd.next;\r\n\r\n                if (done) {\r\n                    if (cmd.obj)\r\n                        cmd.obj = null;\r\n                    else if (cmd.wt)\r\n                        cmd.wt.cleanCache();\r\n                    cmdPool.push(cmd);\r\n                }\r\n                else if ((!next && linesDeleted) || cmd.x + cmd.width > rectWidth) {\r\n                    if (cmd.obj) //如果最后是个图片，那就删除图片，换成省略号\r\n                        cmd.obj = null;\r\n                    if (!cmd.wt)\r\n                        cmd.wt = new WordText();\r\n\r\n                    cmd.wt.setText(cmd.wt.text.substring(0, Math.max(0, cmd.wt.text.length - 2)) + ellipsisStr);\r\n                    fontSize = cmd.style.fontSize;\r\n                    cmd.width = cmd.wt.width = getTextWidth(cmd.wt.text);\r\n                    cmd.wt.splitRender = this._singleCharRender;\r\n                    cmd.next = null;\r\n                    done = true;\r\n                }\r\n\r\n                cmd = next;\r\n            }\r\n\r\n            if (done)\r\n                calcTextSize();\r\n        }\r\n\r\n        if (this._onPostLayout)\r\n            this._onPostLayout();\r\n\r\n        //处理水平对齐\r\n        let align = this._textStyle.align == \"center\" ? 1 : (this._textStyle.align == \"right\" ? 2 : 0);\r\n        if (align != 0 && this._isWidthSet) {\r\n            let rectWidth = this._width - padding[3] - padding[1];\r\n            for (let line of this._lines) {\r\n                let offsetX = 0;\r\n                if (align == 1)\r\n                    offsetX = Math.floor((rectWidth - line.width) * 0.5);\r\n                else if (align == 2)\r\n                    offsetX = rectWidth - line.width;\r\n\r\n                if (offsetX > 0)\r\n                    line.x = offsetX;\r\n            }\r\n        }\r\n\r\n        //处理垂直对齐\r\n        if (this._isHeightSet && this._textHeight < this._height) {\r\n            let offsetY = 0;\r\n            if (this._textStyle.valign === \"middle\")\r\n                offsetY = Math.floor((this._height - this._textHeight) * 0.5);\r\n            else if (this._textStyle.valign === \"bottom\")\r\n                offsetY = this._height - this._textHeight;\r\n\r\n            if (offsetY > 0) {\r\n                for (let line of this._lines) {\r\n                    line.y += offsetY;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._overflow == Text.SCROLL\r\n            && (this._isWidthSet && this._textWidth > this._width || this._isHeightSet && this._textHeight > this._height)) {\r\n            if (!this._scrollPos)\r\n                this._scrollPos = new Point(0, 0);\r\n            else {\r\n                let maxScrollX = this.maxScrollX;\r\n                let maxScrollY = this.maxScrollY;\r\n                if (this._scrollPos.x > maxScrollX)\r\n                    this._scrollPos.x = maxScrollX;\r\n                if (this._scrollPos.y > maxScrollY)\r\n                    this._scrollPos.y = maxScrollY;\r\n            }\r\n        }\r\n        else\r\n            this._scrollPos = null;\r\n\r\n        if (this._objContainer) {\r\n            this._objContainer.size(this._width, this._height);\r\n\r\n            if (this._scrollPos || this._overflow == Text.HIDDEN && this._objContainer.numChildren > 0) {\r\n                if (!this._objContainer.scrollRect)\r\n                    this._objContainer.scrollRect = new Rectangle();\r\n                this._objContainer.scrollRect.setTo(0, 0, this._width, this._height);\r\n            }\r\n            else\r\n                this._objContainer.scrollRect = null;\r\n        }\r\n\r\n        this._updatingLayout = false;\r\n\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    * 渲染文字。\r\n    * @param\tbegin 开始渲染的行索引。\r\n    * @param\tvisibleLineCount 渲染的行数。\r\n    */\r\n    protected renderText(): void {\r\n        let graphics = this.graphics;\r\n        graphics.clear(true);\r\n        this.drawBg();\r\n\r\n        let padding = this._padding;\r\n        let paddingLeft = padding[3];\r\n        let paddingTop = padding[0];\r\n        let bfont = this._bitmapFont;\r\n        let scrollPos = this._scrollPos;\r\n        let rectWidth = this._isWidthSet ? this._width : this._textWidth;\r\n        let rectHeight = this._isHeightSet ? this._height : this._textHeight;\r\n        let bottom = rectHeight - padding[2];\r\n        let clipped = this._overflow == Text.HIDDEN || this._overflow == Text.SCROLL;\r\n\r\n        if (clipped) {\r\n            graphics.save();\r\n            graphics.clipRect(0, 0, rectWidth, rectHeight);\r\n            this.repaint();\r\n        }\r\n\r\n        rectWidth -= (padding[3] + padding[1]);\r\n        rectHeight -= (padding[0] + padding[2]);\r\n\r\n        let x = 0, y = 0;\r\n        let lines = this._lines;\r\n        let lineCnt = lines.length;\r\n        let curLink: HtmlLink;\r\n        let linkStartX: number;\r\n        for (let i = 0; i < lineCnt; i++) {\r\n            let line = lines[i];\r\n            x = paddingLeft + line.x;\r\n            y = paddingTop + line.y;\r\n            if (scrollPos) {\r\n                x -= scrollPos.x;\r\n                y -= scrollPos.y;\r\n            }\r\n            let lineClipped = clipped && ((y + line.height) <= paddingTop || y >= bottom);\r\n\r\n            let cmd = line.cmd;\r\n            while (cmd) {\r\n                if (cmd.linkEnd) {\r\n                    if (curLink) {\r\n                        curLink.addRect(linkStartX, y, x + cmd.x + cmd.width - linkStartX, line.height);\r\n                        curLink = null;\r\n                    }\r\n                }\r\n\r\n                if (cmd.obj) {\r\n                    cmd.obj.pos(x + cmd.x, y + cmd.y);\r\n\r\n                    if (cmd.obj.element.type == HtmlElementType.Link) {\r\n                        curLink = <HtmlLink>cmd.obj;\r\n                        curLink.resetArea();\r\n                        linkStartX = x + cmd.x;\r\n                    }\r\n                }\r\n                else if (!lineClipped) {\r\n                    if (bfont) {\r\n                        let tx: number = 0;\r\n                        let str = cmd.wt.text;\r\n                        let color = bfont.tint ? cmd.style.color : \"#FFFFFF\";\r\n                        let scale = Math.floor((bfont.autoScaleSize ? cmd.style.fontSize : bfont.fontSize) * this._fontSizeScale) / bfont.fontSize;\r\n                        for (let i = 0, n = str.length; i < n; i++) {\r\n                            let c = str.charCodeAt(i);\r\n                            let g = bfont.dict[c];\r\n                            if (g) {\r\n                                if (g.texture)\r\n                                    graphics.drawImage(g.texture, x + cmd.x + tx + g.x * scale, y + cmd.y + g.y * scale, g.width * scale, g.height * scale, color);\r\n                                tx += Math.round(g.advance * scale);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let ctxFont = (<any>cmd.style)._ctxFont;\r\n                        if (cmd.style.stroke)\r\n                            graphics.fillBorderText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null, cmd.style.stroke, cmd.style.strokeColor);\r\n                        else\r\n                            graphics.fillText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null);\r\n                    }\r\n                }\r\n\r\n                if (!lineClipped ) {\r\n                    if(cmd.style.underline){\r\n                        let thickness = Math.max(1, cmd.style.fontSize * this._fontSizeScale / 16);\r\n                        graphics.drawLine(x + cmd.x, y + line.height - thickness, x + cmd.x + cmd.width, y + line.height - thickness, cmd.style.underlineColor || cmd.style.color, thickness);\r\n                    }\r\n                    if(cmd.style.strikethrough){\r\n                        //画删除线\r\n                        let thickness = Math.max(1, cmd.style.fontSize * this._fontSizeScale / 16);\r\n                        let stx = x+cmd.x;\r\n                        let sty = (y+line.height/2 - thickness)|0;\r\n                        let ext = 4;\r\n                        graphics.drawLine(stx-ext, sty, stx + cmd.width+ext, sty, cmd.style.strikethroughColor || cmd.style.color, thickness);\r\n                    }\r\n                }\r\n\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (curLink) {\r\n                curLink.addRect(linkStartX, y, rectWidth - linkStartX + paddingLeft, line.height);\r\n                linkStartX = paddingLeft;\r\n            }\r\n        }\r\n\r\n        if (clipped)\r\n            graphics.restore();\r\n    }\r\n\r\n    protected drawBg() {\r\n        let cmd = this._bgDrawCmd;\r\n        if (this._bgColor || this._borderColor) {\r\n            if (!cmd) {\r\n                cmd = new DrawRectCmd();\r\n                cmd.x = cmd.y = 0;\r\n                cmd.width = cmd.height = 1;\r\n                cmd.percent = true;\r\n                this._bgDrawCmd = cmd;\r\n            }\r\n            cmd.fillColor = this._bgColor;\r\n            cmd.lineColor = this._borderColor;\r\n            cmd.lineWidth = this._borderColor ? 1 : 0;\r\n\r\n            let cmds = this.graphics.cmds;\r\n            let i = cmds.indexOf(cmd);\r\n            if (i != 0) {\r\n                if (i != -1)\r\n                    cmds.splice(i, 1);\r\n                cmds.unshift(cmd);\r\n                this.graphics.cmds = cmds;\r\n            }\r\n        }\r\n        else if (cmd) {\r\n            this.graphics.removeCmd(cmd);\r\n        }\r\n    }\r\n}\r\nexport interface ITextCmd {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    style: TextStyle;\r\n    wt: WordText;\r\n    obj: IHtmlObject;\r\n    linkEnd: boolean;\r\n    next: ITextCmd;\r\n}\r\n\r\nexport interface ITextLine {\r\n    x: number;\r\n    y: number;\r\n    height: number;\r\n    width: number;\r\n    cmd: ITextCmd;\r\n}\r\n\r\nconst cmdPool: Array<ITextCmd> = [];\r\nconst linePool: Array<ITextLine> = [];\r\n\r\nfunction recoverLines(lines: Array<ITextLine>) {\r\n    for (let line of lines) {\r\n        let cmd = line.cmd;\r\n        while (cmd) {\r\n            if (cmd.obj)\r\n                cmd.obj = null;\r\n            else if (cmd.wt)\r\n                cmd.wt.cleanCache();\r\n            cmdPool.push(cmd);\r\n            cmd = cmd.next;\r\n        }\r\n        line.cmd = null;\r\n    }\r\n\r\n    linePool.push(...lines);\r\n    lines.length = 0;\r\n}\r\n\r\nconst emojiTest = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\nfunction testEmoji(str: string) {\r\n    if (null == str) return false;\r\n    return emojiTest.test(str);\r\n}\r\nfunction isEnglishChar(unicode: number): boolean {\r\n    return (unicode >= 65 && unicode <= 90) ||  // A-Z\r\n        (unicode >= 97 && unicode <= 122) || // a-z\r\n        unicode === 39; // 单引号\r\n}\r\n\r\n\r\nconst wordBoundaryTest = /(?:[^\\s\\!-\\/])+$/;\r\nconst normalizeCR = /\\r\\n/g;\r\nconst escapeCharsPattern = /\\\\(\\w)/g;\r\nconst escapeSequence: any = { \"\\\\n\": \"\\n\", \"\\\\t\": \"\\t\" };\r\nconst ellipsisStr = \"…\";\r\n\r\nfunction getReplaceStr(word: string): string {\r\n    return escapeSequence[word];\r\n}","import { HideFlags, NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Stage } from \"../display/Stage\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Event, ITouchInfo } from \"./Event\";\r\n\r\nvar _isFirstTouch = true;\r\nconst _tempPoint = new Point();\r\nconst _tempRect = new Rectangle();\r\nconst _rollOverChain: Array<Node> = [];\r\nconst _rollOutChain: Array<Node> = [];\r\nvar _inst: InputManager;\r\n\r\nexport class InputManager {\r\n\r\n    /**是否开启多点触控*/\r\n    static multiTouchEnabled: boolean = true;\r\n    /**是否开启鼠标/触摸事件，默认为true*/\r\n    static mouseEventsEnabled: boolean = true;\r\n    /**是否开启键盘事件，默认为true*/\r\n    static keyEventsEnabled: boolean = true;\r\n    /**如果鼠标按下的位置和弹起的位置距离超过这个阀值，则不视为一次点击*/\r\n    static clickTestThreshold = 10;\r\n\r\n    /** canvas 上的鼠标X坐标。*/\r\n    static mouseX: number = 0;\r\n    /** canvas 上的鼠标Y坐标。*/\r\n    static mouseY: number = 0;\r\n    /** 当前是否正在输入文字 */\r\n    static isTextInputting = false;\r\n    static isiOSWKwebView: boolean = false;\r\n    protected _stage: Stage;\r\n    protected _mouseTouch: TouchInfo;\r\n    protected _touches: TouchInfo[];\r\n    protected _touchPool: TouchInfo[];\r\n    protected _touchTarget: Node;\r\n\r\n    //用于IDE处理\r\n    protected _eventType: number;\r\n    protected _nativeEvent: MouseEvent | WheelEvent | TouchEvent;\r\n\r\n    protected _pressKeys: Set<string | number>;\r\n    protected _keyEvent: Event;\r\n\r\n    private _touchInput: boolean;\r\n\r\n    constructor() {\r\n        this._touches = [];\r\n        this._touchPool = [];\r\n        this._mouseTouch = new TouchInfo(this._touches);\r\n        this._pressKeys = new Set();\r\n        this._keyEvent = new Event();\r\n        this._keyEvent._touches = this._touches;\r\n    }\r\n\r\n    static get inst() {\r\n        return _inst;\r\n    }\r\n\r\n    static getTouchPos(touchId?: number): Readonly<Point> {\r\n        if (touchId == null)\r\n            return _inst._touches[0]?.pos || Point.EMPTY;\r\n        else\r\n            return _inst.getTouch(touchId)?.pos || Point.EMPTY;\r\n    }\r\n\r\n    static get touchTarget(): Node {\r\n        return _inst._touchTarget;\r\n    }\r\n\r\n    static get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return _inst._touches;\r\n    }\r\n\r\n    static get touchCount(): number {\r\n        return _inst._touches.length;\r\n    }\r\n\r\n    static cancelClick(touchId?: number): void {\r\n        let touch = touchId == null ? _inst._touches[0] : _inst.getTouch(touchId);\r\n        if (touch)\r\n            touch.clickCancelled = true;\r\n    }\r\n\r\n    /**\r\n     * 返回指定键是否被按下。\r\n     * @param\tkey 键值。参考：https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\r\n     * @return 是否被按下。\r\n     */\r\n    static hasKeyDown(key: string | number): boolean {\r\n        return _inst._pressKeys.has(key);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 初始化。\r\n     */\r\n    static __init__(stage: Stage, canvas: HTMLCanvasElement): void {\r\n        let inst = _inst = new InputManager();\r\n        inst._stage = stage;\r\n\r\n        canvas.oncontextmenu = () => {\r\n            return false;\r\n        };\r\n        canvas.addEventListener(\"mousedown\", ev => {\r\n            if (!Browser.onIE)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseup\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mousemove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseout\", ev => {\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 3);\r\n        }, { passive: false });\r\n        // canvas.addEventListener(\"mouseover\", ev => {\r\n        // });\r\n\r\n        canvas.addEventListener(\"touchstart\", ev => {\r\n            inst._touchInput = true;\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchend\", ev => {\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            _isFirstTouch = false;\r\n            inst.handleTouch(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchmove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchcancel\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 3);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"wheel\", ev => {\r\n            inst.handleMouse(ev, 4);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"pointerdown\", ev => {\r\n            canvas.setPointerCapture(ev.pointerId);\r\n        });\r\n        canvas.addEventListener(\"pointerup\", ev => {\r\n            canvas.releasePointerCapture(ev.pointerId);\r\n        }, true);\r\n\r\n        let document = <Document>Browser.document;\r\n        document.addEventListener(\"keydown\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keypress\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keyup\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n    }\r\n\r\n    handleMouse(ev: MouseEvent | WheelEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n\r\n        //console.log(\"handleMouse\", type);\r\n        let touch: TouchInfo = this._mouseTouch;\r\n\r\n        _tempPoint.setTo(ev.pageX || ev.clientX, ev.pageY || ev.clientY);\r\n        if (this._stage._canvasTransform)\r\n            this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n        InputManager.mouseX = _tempPoint.x;\r\n        InputManager.mouseY = _tempPoint.y;\r\n        let x = _tempPoint.x / this._stage.clientScaleX;\r\n        let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n        touch.event.nativeEvent = ev;\r\n        if (type == 3 || !InputManager.mouseEventsEnabled)\r\n            touch.target = this._touchTarget = null;\r\n        else {\r\n            touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n\r\n            let ix = Math.round(x);\r\n            let iy = Math.round(y);\r\n\r\n            if (ix != touch.pos.x || iy != touch.pos.y) {\r\n                this._stage._mouseMoveTime = Browser.now();\r\n\r\n                touch.pos.setTo(ix, iy);\r\n                touch.move();\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                    for (let t of touch.downTargets)\r\n                        t.event(Event.MOUSE_DRAG, touch.event);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (touch.lastRollOver != touch.target)\r\n            this.handleRollOver(touch);\r\n\r\n        if (type == 0) {\r\n            if (!touch.began) {\r\n                touch.begin();\r\n                this._touches[0] = touch;\r\n                touch.event.button = ev.button;\r\n                touch.downButton = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    this.handleFocus();\r\n\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_DOWN, touch.event);\r\n                }\r\n            }\r\n        }\r\n        else if (type == 1) {\r\n            if (touch.began && ev.button == touch.downButton) {\r\n                touch.end();\r\n                this._touches.length = 0;\r\n                touch.event.button = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_UP, touch.event);\r\n\r\n                    if (touch.moved) {\r\n                        for (let t of touch.downTargets)\r\n                            t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                    }\r\n\r\n                    let clickTarget = touch.clickTest();\r\n                    if (clickTarget) {\r\n                        if (ev.button == 0) {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                            clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                            if (touch.clickCount == 2)\r\n                                clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                        else {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n                            clickTarget.bubbleEvent(Event.RIGHT_CLICK, touch.event);\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                touch.event.button = 0;\r\n            }\r\n        }\r\n        else if (type == 4) {\r\n            if (InputManager.mouseEventsEnabled) {\r\n                touch.event.delta = (<WheelEvent>ev).deltaY * 0.025;\r\n                touch.target?.bubbleEvent(Event.MOUSE_WHEEL, touch.event);\r\n                touch.event.delta = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTouch(ev: TouchEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n\r\n        let touches = ev.changedTouches;\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let uTouch: Touch = touches[i];\r\n\r\n            if (!InputManager.multiTouchEnabled\r\n                && this._touches.length > 0\r\n                && this._touches[0].touchId != uTouch.identifier)\r\n                continue;\r\n\r\n            _tempPoint.setTo(uTouch.pageX, uTouch.pageY);\r\n            if (this._stage._canvasTransform)\r\n                this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n            InputManager.mouseX = _tempPoint.x;\r\n            InputManager.mouseY = _tempPoint.y;\r\n            let x = _tempPoint.x / this._stage.clientScaleX;\r\n            let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n            let touch = this.getTouch(uTouch.identifier, type == 0);\r\n            if (!touch)\r\n                continue;\r\n\r\n            touch.event.nativeEvent = ev;\r\n            touch.event.touchId = touch.touchId;\r\n            if (type == 3 || !InputManager.mouseEventsEnabled)\r\n                touch.target = this._touchTarget = null;\r\n            else {\r\n                touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n                this._stage._mouseMoveTime = Browser.now();\r\n\r\n                let ix = Math.round(x);\r\n                let iy = Math.round(y);\r\n\r\n                if (Math.abs(ix - touch.pos.x) > 1.5 || Math.abs(iy - touch.pos.y) > 1.5) {\r\n                    touch.pos.setTo(ix, iy);\r\n\r\n                    if (type == 2) {\r\n                        touch.move();\r\n\r\n                        if (InputManager.mouseEventsEnabled) {\r\n\r\n                            touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG, touch.event);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (touch.lastRollOver != touch.target)\r\n                this.handleRollOver(touch);\r\n\r\n            if (type == 0) {\r\n                if (!touch.began) {\r\n                    touch.begin();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        this.handleFocus();\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    }\r\n                }\r\n            }\r\n            else if (type == 1 || type == 3) {\r\n                if (touch.began) {\r\n                    touch.end();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n\r\n                        if (touch.moved) {\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                        }\r\n\r\n                        if (type != 3) {\r\n                            let clickTarget = touch.clickTest();\r\n                            if (clickTarget != null) {\r\n                                touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                                clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                                if (touch.clickCount == 2)\r\n                                    clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                                touch.event.isDblClick = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    touch.target = null;\r\n                    this.handleRollOver(touch);\r\n                }\r\n\r\n                touch.reset();\r\n                this._touches.splice(this._touches.indexOf(touch), 1);\r\n                this._touchPool.push(touch);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getTouch(touchId: number, shouldCreate?: boolean): TouchInfo {\r\n        let touch = this._touches.find(e => e.touchId == touchId);\r\n        if (touch || !shouldCreate)\r\n            return touch;\r\n\r\n        touch = this._touchPool.length > 0 ? this._touchPool.pop() : new TouchInfo(this._touches);\r\n        touch.touchId = touchId;\r\n        this._touches.push(touch);\r\n\r\n        return touch;\r\n    }\r\n\r\n    private handleFocus() {\r\n        if (InputManager.isTextInputting\r\n            && this._stage.focus && (<any>this._stage.focus)[\"focus\"]\r\n            && !this._stage.focus.contains(this._touchTarget)) {\r\n            // 从UI Input组件中取得Input引用\r\n            // _tf 是TextInput的属性\r\n            let pre_input: any = (<any>this._stage.focus)['_tf'] || this._stage.focus;\r\n            let new_input = (<any>this._touchTarget)['_tf'] || this._touchTarget;\r\n\r\n            // 新的焦点是Input的情况下，不需要blur；\r\n            // 不过如果是Input和TextArea之间的切换，还是需要重新弹出输入法；\r\n            if (new_input.nativeInput && new_input.multiline == pre_input.multiline)\r\n                pre_input['_focusOut']();\r\n            else\r\n                pre_input.focus = false;\r\n        }\r\n    }\r\n\r\n    handleKeys(ev: KeyboardEvent): void {\r\n        let type = ev.type;\r\n        let keyCode = ev.keyCode;\r\n        //判断同时按下的键\r\n        if (type === \"keydown\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.add(keyCode);\r\n            this._pressKeys.add(ev.key);\r\n        }\r\n        else if (type === \"keyup\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.delete(keyCode);\r\n            this._pressKeys.delete(ev.key);\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = ev;\r\n\r\n        if (InputManager.keyEventsEnabled) {\r\n            let target = (this._stage.focus && (this._stage.focus.event != null) && this._stage.focus.displayedInStage) ? this._stage.focus : this._stage;\r\n            let ct = target;\r\n            while (ct) {\r\n                ct.event(type, this._keyEvent.setTo(type, ct, target));\r\n                ct = ct.parent;\r\n            }\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = null;\r\n    }\r\n\r\n    getNodeUnderPoint(x: number, y: number): Node {\r\n        let target: Node = this.getSpriteUnderPoint(this._stage, x, y);\r\n        if (!target)\r\n            target = this.getSprite3DUnderPoint(x, y);\r\n        return target || this._stage;\r\n    }\r\n\r\n    /**\r\n     * 获取指定坐标下的sprite。x/y值是sp的本地坐标\r\n     * @param sp\r\n     * @param x\r\n     * @param y\r\n     */\r\n    getSpriteUnderPoint(sp: Sprite, x: number, y: number): Sprite {\r\n        //如果有裁剪，则先判断是否在裁剪范围内\r\n        let scrollRect = sp._style.scrollRect;\r\n        if (scrollRect && !sp._getBit(NodeFlags.DISABLE_INNER_CLIPPING)) {\r\n            _tempRect.setTo(scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\r\n            if (!_tempRect.contains(x, y))\r\n                return null;\r\n        }\r\n\r\n        let editing = sp._getBit(NodeFlags.EDITING_NODE);\r\n\r\n        if (!editing && sp.hitTestPrior && !sp.mouseThrough && sp != this._stage && !this.hitTest(sp, x, y))\r\n            return null;\r\n\r\n        for (let i = sp._children.length - 1; i > -1; i--) {\r\n            let child = <Sprite>sp._children[i];\r\n            let childEditing = editing || child._getBit(NodeFlags.EDITING_NODE);\r\n            //只有接受交互事件的，才进行处理\r\n            if (!child._destroyed\r\n                && (childEditing ? ((!child.hasHideFlag(HideFlags.HideInHierarchy) || child.mouseThrough) && !child._getBit(NodeFlags.HIDE_BY_EDITOR)) : child._mouseState > 1)\r\n                && (child._visible || child._getBit(NodeFlags.DISABLE_VISIBILITY))) {\r\n                _tempPoint.setTo(x, y);\r\n                child.fromParentPoint(_tempPoint);\r\n                let ret = this.getSpriteUnderPoint(child, _tempPoint.x, _tempPoint.y);\r\n                if (ret)\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        if (editing) {\r\n            if (!sp._getBit(NodeFlags.LOCK_BY_EDITOR)\r\n                && !sp.hasHideFlag(HideFlags.HideInHierarchy)\r\n                && this.hitTest(sp, x, y, editing))\r\n                return sp;\r\n        }\r\n        else if (sp != this._stage) {\r\n            if (sp.hitTestPrior && !sp.mouseThrough || this.hitTest(sp, x, y))\r\n                return sp;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSprite3DUnderPoint(x: number, y: number): Node {\r\n        return null;\r\n    }\r\n\r\n    hitTest(sp: Sprite, x: number, y: number, editing?: boolean): boolean {\r\n        let isHit: boolean = false;\r\n        if (sp.scrollRect) {\r\n            x -= sp._style.scrollRect.x;\r\n            y -= sp._style.scrollRect.y;\r\n        }\r\n        let hitArea = sp._style.hitArea;\r\n        let mouseThrough = sp.mouseThrough;\r\n        if (editing) {\r\n            hitArea = null;\r\n            mouseThrough = false;\r\n        }\r\n\r\n        if (hitArea) {\r\n            return hitArea.contains(x, y, sp);\r\n        }\r\n\r\n        if (sp.width > 0 && sp.height > 0 || mouseThrough || hitArea) {\r\n            //判断是否在矩形区域内\r\n            if (!mouseThrough)\r\n                isHit = (hitArea ? hitArea : _tempRect.setTo(0, 0, sp.width, sp.height)).contains(x, y, sp);\r\n            else //如果可穿透，则根据子对象实际大小进行碰撞\r\n                isHit = sp.getGraphicBounds().contains(x, y);\r\n        }\r\n        return isHit;\r\n    }\r\n\r\n    private handleRollOver(touch: TouchInfo) {\r\n        if (!InputManager.mouseEventsEnabled) {\r\n            touch.lastRollOver = touch.target;\r\n            return;\r\n        }\r\n\r\n        _rollOverChain.length = 0;\r\n        _rollOutChain.length = 0;\r\n\r\n        let ele = touch.lastRollOver;\r\n        while (ele) {\r\n            _rollOutChain.push(ele);\r\n            ele = ele.parent;\r\n        }\r\n        touch.lastRollOver = touch.target;\r\n\r\n        ele = touch.target;\r\n        while (ele) {\r\n            let i = _rollOutChain.indexOf(ele);\r\n            if (i != -1) {\r\n                _rollOutChain.splice(i, _rollOutChain.length - i);\r\n                break;\r\n            }\r\n\r\n            _rollOverChain.push(ele);\r\n\r\n            ele = ele.parent;\r\n        }\r\n\r\n        let cnt = _rollOutChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOutChain[i];\r\n                if (!ele._destroyed)\r\n                    ele.event(Event.MOUSE_OUT, touch.event.setTo(Event.MOUSE_OUT, ele, ele));\r\n            }\r\n            _rollOutChain.length = 0;\r\n        }\r\n\r\n        cnt = _rollOverChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOverChain[i];\r\n                if (ele.activeInHierarchy)\r\n                    ele.event(Event.MOUSE_OVER, touch.event.setTo(Event.MOUSE_OVER, ele, ele));\r\n            }\r\n            _rollOverChain.length = 0;\r\n        };\r\n    }\r\n}\r\n\r\nconst clickTrack: Record<number, { pos: Point, time: number, button: number }> = {};\r\n\r\nclass TouchInfo implements ITouchInfo {\r\n    readonly event: Event;\r\n    readonly pos: Point;\r\n    touchId: number;\r\n    clickCount: number;\r\n    began: boolean;\r\n    target: Node;\r\n    lastRollOver: Node;\r\n    clickCancelled: boolean;\r\n    moved: boolean;\r\n    downButton: number;\r\n    readonly downTargets: Node[];\r\n\r\n    private downPos: Point;\r\n\r\n    constructor(touches: Array<TouchInfo>) {\r\n        this.downPos = new Point();\r\n        this.downTargets = [];\r\n        this.event = new Event();\r\n        this.event._touches = touches;\r\n        this.pos = this.event.touchPos;\r\n        this.reset();\r\n    }\r\n\r\n    begin() {\r\n        this.began = true;\r\n        this.clickCancelled = false;\r\n        this.moved = false;\r\n        this.downPos.copy(this.pos);\r\n\r\n        this.downTargets.length = 0;\r\n        if (this.target) {\r\n            let ele = this.target;\r\n            while (ele) {\r\n                this.downTargets.push(ele);\r\n                ele = ele.parent;\r\n            }\r\n        }\r\n    }\r\n\r\n    move() {\r\n        this.moved = true;\r\n\r\n        if (Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold)\r\n            this.clickCancelled = true;\r\n    }\r\n\r\n    end() {\r\n        this.began = false;\r\n        let now = performance.now();\r\n\r\n        let lastClick = clickTrack[this.touchId];\r\n        if (!lastClick) {\r\n            lastClick = { pos: new Point(), time: 0, button: 0 };\r\n            clickTrack[this.touchId] = lastClick;\r\n        }\r\n\r\n        if (this.downTargets.length == 0\r\n            || this.clickCancelled\r\n            || Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold) {\r\n            this.clickCancelled = true;\r\n            lastClick.time = 0;\r\n            this.clickCount = 1;\r\n        }\r\n        else {\r\n            if (now - lastClick.time < 350\r\n                && Math.abs(this.pos.x - lastClick.pos.x) < InputManager.clickTestThreshold\r\n                && Math.abs(this.pos.y - lastClick.pos.y) < InputManager.clickTestThreshold\r\n                && lastClick.button == this.event.button) {\r\n                this.clickCount = 2;\r\n            }\r\n            else\r\n                this.clickCount = 1;\r\n            lastClick.time = now;\r\n            lastClick.pos.copy(this.pos);\r\n            lastClick.button = this.event.button;\r\n        }\r\n    }\r\n\r\n    clickTest(): Node {\r\n        if (this.clickCancelled) {\r\n            this.downTargets.length = 0;\r\n            return null;\r\n        }\r\n\r\n        let obj = this.downTargets[0];\r\n        if (obj.activeInHierarchy) {\r\n            this.downTargets.length = 0;\r\n            return obj;\r\n        }\r\n\r\n        obj = this.target;\r\n        while (obj) {\r\n            let i = this.downTargets.indexOf(obj);\r\n            if (i != -1 && obj.activeInHierarchy)\r\n                break;\r\n\r\n            obj = obj.parent;\r\n        }\r\n\r\n        this.downTargets.length = 0;\r\n\r\n        return obj;\r\n    }\r\n\r\n    reset() {\r\n        this.pos.setTo(0, 0);\r\n        this.touchId = 0;\r\n        this.clickCount = 0;\r\n        this.began = false;\r\n        this.moved = false;\r\n        this.target = null;\r\n        this.downTargets.length = 0;\r\n        this.lastRollOver = null;\r\n        this.clickCancelled = false;\r\n        this.downButton = 0;\r\n    }\r\n}\r\n","import { ILaya } from \"./../../ILaya\";\r\nimport { Config } from \"./../../Config\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { VertexElementFormat } from \"./VertexElementFormat\";\r\n\r\n/**\r\n * <code>Render</code> 是渲染管理类。它是一个单例，可以使用 Laya.render 访问。\r\n */\r\nexport class Render {\r\n    /** @internal */\r\n    static _context: Context;\r\n    /** @internal 主画布。canvas和webgl渲染都用这个画布*/\r\n    static _mainCanvas: HTMLCanvas;\r\n    /** 表示是否是 3D 模式。*/\r\n    static is3DMode: boolean;\r\n    /**自定义帧循环 */\r\n    static _customRequestAnimationFrame: any;\r\n    /**帧循环函数 */\r\n    static _loopFunction: any;\r\n\r\n    /** 当前的帧数 */\r\n    private static lastFrm = 0;\r\n    /** 第一次运行标记 */\r\n    private _first = true;\r\n    /** 刚启动的时间。由于微信的rAF不标准，传入的stamp参数不对，因此自己计算一个从启动开始的相对时间 */\r\n    private _startTm = 0;\r\n\r\n    /** @internal */\r\n    private static ifps = 1000 / 60;\r\n\r\n    static _Render: Render;\r\n\r\n    static customRequestAnimationFrame(value: any, loopFun: any) {\r\n        Render._customRequestAnimationFrame = value;\r\n        Render._loopFunction = loopFun;\r\n    }\r\n\r\n    private static _customEngine: IRenderEngine;\r\n    static set customRenderEngine(engine: IRenderEngine) {\r\n        Render._customEngine = engine;\r\n    }\r\n    static get customRenderEngine() {\r\n        return Render._customEngine;\r\n    }\r\n\r\n\r\n    /**\r\n     * 初始化引擎。\r\n     * @param\twidth 游戏窗口宽度。\r\n     * @param\theight\t游戏窗口高度。\r\n     */\r\n    constructor(width: number, height: number, mainCanv: HTMLCanvas) {\r\n        Render._Render = this;\r\n        Render._mainCanvas = mainCanv;\r\n        let source: HTMLCanvasElement = Render._mainCanvas.source as HTMLCanvasElement;\r\n        //创建主画布。改到Browser中了，因为为了runtime，主画布必须是第一个\r\n        source.id = \"layaCanvas\";\r\n        source.width = width;\r\n        source.height = height;\r\n        if (LayaEnv.isConch) {\r\n            document.body.appendChild(source);\r\n        }\r\n\r\n        this.initRender(Render._mainCanvas, width, height);\r\n        if (Config._enableWindowRAFFunction) {\r\n            window.requestAnimationFrame(loop);\r\n        } else {\r\n            requestAnimationFrame(loop);\r\n        }\r\n        let me = this;\r\n        let lastFrmTm = performance.now();\r\n        let fps = Config.FPS;\r\n        let ifps = Render.ifps = 1000 / fps; //如果VR的话，需要改这个\r\n        function loop(stamp: number) {\r\n            //let perf = PerfHUD.inst;\r\n            let sttm = performance.now();\r\n            //perf && perf.updateValue(0, sttm-lastFrmTm);\r\n            lastFrmTm = sttm;\r\n            if (me._first) {\r\n                // 把starttm转成帧对齐\r\n                me._startTm = Math.floor(stamp / ifps) * ifps;\r\n                me._first = false;\r\n            }\r\n            // 与第一帧开始时间的delta\r\n            stamp -= me._startTm;\r\n            // 计算当前帧数\r\n            let frm = Math.floor(stamp / ifps);    // 不能|0 在微信下会变成负的\r\n            // 是否已经跨帧了\r\n            let dfrm = frm - Render.lastFrm;\r\n            if (dfrm > 0 || LayaEnv.isConch || !Config.fixedFrames) {\r\n                //不限制\r\n                Render.lastFrm = frm;\r\n                ILaya.stage._loop();\r\n            }\r\n            //perf && perf.updateValue(1, performance.now()-sttm);\r\n\r\n            if (!!Render._customRequestAnimationFrame && !!Render._loopFunction) {\r\n                Render._customRequestAnimationFrame(Render._loopFunction);\r\n            }\r\n            else {\r\n                if (Config._enableWindowRAFFunction) {\r\n                    window.requestAnimationFrame(loop);\r\n                } else {\r\n                    requestAnimationFrame(loop);\r\n                }\r\n            }\r\n        }\r\n        ILaya.stage.on(\"visibilitychange\", this, this._onVisibilitychange);\r\n    }\r\n\r\n    /**@private */\r\n    private _timeId: number = 0;\r\n\r\n    /**@private */\r\n    private _onVisibilitychange(): void {\r\n        if (!ILaya.stage.isVisibility) {\r\n            this._timeId = window.setInterval(this._enterFrame, 1000);\r\n        } else if (this._timeId != 0) {\r\n            window.clearInterval(this._timeId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取帧对齐的时间。\r\n     * 用这个做动画的时间参数会更平滑。\r\n     * 从render构造开始算起。\r\n     * @returns \r\n     */\r\n    static vsyncTime() {\r\n        return Render.lastFrm * Render.ifps;\r\n    }\r\n\r\n    initRender(canvas: HTMLCanvas, w: number, h: number): boolean {\r\n\r\n        canvas.size(w, h);\t//在ctx之后调用。\r\n        ShaderDefines2D.__init__();\r\n        VertexElementFormat.__init__();\r\n        Context.__init__();\r\n        SubmitBase.__init__();\r\n\r\n        var ctx: Context = new Context();\r\n        Context._rendercontex = ctx;\r\n        ctx.isMain = true;\r\n        Render._context = ctx;\r\n        canvas._setContext(ctx);\r\n\r\n\r\n        Shader2D.__init__();\r\n        BlendMode._init_();\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    /**@private */\r\n    private _enterFrame(e: any = null): void {\r\n        ILaya.stage._loop();\r\n    }\r\n\r\n    /** 目前使用的渲染器。*/\r\n    static get context(): Context {\r\n        return Render._context;\r\n    }\r\n\r\n    /** 渲染使用的原生画布引用。 */\r\n    static get canvas(): any {\r\n        return Render._mainCanvas.source;\r\n    }\r\n}\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\nexport const TypedArrayClasses: Record<string, any> = {\r\n    \"Int8Array\": Int8Array,\r\n    \"Uint8Array\": Uint8Array,\r\n    \"Int16Array\": Int16Array,\r\n    \"Uint16Array\": Uint16Array,\r\n    \"Int32Array\": Int32Array,\r\n    \"Uint32Array\": Uint32Array,\r\n    \"Float32Array\": Float32Array,\r\n    \"Float64Array\": Float64Array\r\n};\r\n\r\nexport interface IDecodeObjOptions {\r\n    outErrors?: Array<string>;\r\n    getNodeByRef?: (id: string | string[]) => Node;\r\n    getNodeData?: (node: Node) => any;\r\n}\r\n\r\nvar _errors: Array<string>;\r\nvar _getNodeByRef: (id: string | string[]) => Node;\r\nvar _getNodeData: (node: Node) => any;\r\n\r\nexport class SerializeUtil {\r\n    public static isDeserializing = false;\r\n\r\n    public static decodeObj(data: any, obj?: any, options?: IDecodeObjOptions) {\r\n        if (options) {\r\n            _errors = options.outErrors;\r\n            _getNodeByRef = options.getNodeByRef;\r\n            _getNodeData = options.getNodeData;\r\n        }\r\n        else {\r\n            _errors = null;\r\n            _getNodeByRef = null;\r\n            _getNodeData = null;\r\n        }\r\n\r\n        SerializeUtil.isDeserializing = true;\r\n        try {\r\n            return SerializeUtil._decodeObj(data, obj);\r\n        } finally {\r\n            SerializeUtil.isDeserializing = false;\r\n        }\r\n    }\r\n\r\n    private static _decodeObj(data: any, obj?: any): any {\r\n        if (data == null)\r\n            return null;\r\n        else if (Array.isArray(data)) {\r\n            let arr: any[] = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let v = data[i];\r\n                if (v != null) {\r\n                    try {\r\n                        arr[i] = SerializeUtil._decodeObj(v);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                        arr[i] = null;\r\n                    }\r\n                }\r\n                else\r\n                    arr[i] = null;\r\n            }\r\n            return arr;\r\n        }\r\n        else if (typeof (data) === \"object\") {\r\n            if (data._$uuid != null) {\r\n                let url = URL.getResURLByUUID(data._$uuid);\r\n                return ILaya.loader.getRes(url, SerializeUtil.getLoadTypeByEngineType(data._$type));\r\n            }\r\n\r\n            if (data._$ref != null) {\r\n                let node = _getNodeByRef?.(data._$ref);\r\n                if (node && data._$type) {\r\n                    let cls: any = ClassUtils.getClass(data._$type);\r\n                    if (cls)\r\n                        return node.getComponent(cls);\r\n                    else\r\n                        return null;\r\n                }\r\n                else\r\n                    return node;\r\n            }\r\n\r\n            let type = data._$type;\r\n\r\n            if (type === \"any\") {\r\n                if (data._$type)\r\n                    return data.value;\r\n                else\r\n                    return data;\r\n            }\r\n\r\n            let typedArray = TypedArrayClasses[type];\r\n            if (typedArray != null) {\r\n                if (data._$type)\r\n                    return new typedArray(data.value);\r\n                else\r\n                    return new typedArray(data);\r\n            }\r\n\r\n            if (!obj) {\r\n                let cls: any = ClassUtils.getClass(type);\r\n                if (!cls) {\r\n                    //this._errors.push(new Error(`missing type '${type}'`));\r\n                    return null;\r\n                }\r\n\r\n                obj = new cls();\r\n            }\r\n\r\n            for (let key in data) {\r\n                if (key.startsWith(\"_$\"))\r\n                    continue;\r\n\r\n                let v = data[key];\r\n                if (v == null || typeof (v) !== \"object\" || Array.isArray(v)\r\n                    || v._$type || v._$uuid || v._$ref) {\r\n                    try {\r\n                        let v2 = SerializeUtil._decodeObj(v);\r\n                        obj[key] = v2;\r\n\r\n                        if (v2 != null && v != null && v._$tmpl)\r\n                            obj[v._$tmpl] = _getNodeData(v2);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                    }\r\n                }\r\n                else {\r\n                    let childObj = obj[key];\r\n                    if (childObj) {\r\n                        try {\r\n                            SerializeUtil._decodeObj(v, childObj);\r\n                        }\r\n                        catch (error: any) {\r\n                            if (_errors)\r\n                                _errors.push(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (obj.onAfterDeserialize)\r\n                obj.onAfterDeserialize();\r\n\r\n            return obj;\r\n        }\r\n        else\r\n            return data;\r\n    }\r\n\r\n    static getLoadTypeByEngineType(type: string) {\r\n        switch (type) {\r\n            case \"Texture2D\":\r\n            case \"RenderTexture\":\r\n                return Loader.TEXTURE2D;\r\n            case \"TextureCube\":\r\n                return Loader.TEXTURECUBE;\r\n            case \"Prefab\":\r\n                return Loader.HIERARCHY;\r\n            case \"Material\":\r\n                return Loader.MATERIAL;\r\n            case \"Mesh\":\r\n                return Loader.MESH;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n\r\n    static bakeOverrideData(overrideData: any) {\r\n        let dataMap: Record<string, Array<any>> = null;\r\n        for (let n = overrideData.length, i = n - 1; i >= 0; i--) {\r\n            let arr = overrideData[i];\r\n            if (arr && arr.length > 0) {\r\n                for (let d of arr) {\r\n                    let od = d._$override || d._$parent;\r\n                    let k: string;\r\n                    if (Array.isArray(od))\r\n                        k = od[n - i - 1];\r\n                    else if (i == n - 1)\r\n                        k = od;\r\n\r\n                    if (k != null) {\r\n                        if (!dataMap) dataMap = {};\r\n                        let arr2 = dataMap[k];\r\n                        if (!arr2)\r\n                            dataMap[k] = arr2 = [];\r\n                        arr2.push(n - i, d);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return dataMap;\r\n    }\r\n\r\n    static applyOverrideData(nodeData: any, overrideDataMap: Record<string, Array<any>>) {\r\n        function test(obj: any) {\r\n            if (overrideDataMap[obj._$id])\r\n                return true;\r\n\r\n            let children: Array<any> = obj._$child;\r\n            if (children && children.find(child => test(child)))\r\n                return true;\r\n\r\n            return false;\r\n        }\r\n\r\n        function cloneTree(obj: any) {\r\n            let ret = Object.assign({}, obj);\r\n            let children: Array<any> = ret._$child;\r\n            if (children)\r\n                ret._$child = children.map(c => cloneTree(c));\r\n            let comps: Array<any> = ret._$comp;\r\n            if (comps)\r\n                ret._$comp = comps.map(c => Object.assign({}, c));\r\n            return ret;\r\n        }\r\n\r\n        function visit(data: any) {\r\n            let children: Array<any> = data._$child;\r\n            if (children) {\r\n                for (let child of children) {\r\n                    if (child._$id)\r\n                        visit(child);\r\n                }\r\n            }\r\n\r\n            let od = overrideDataMap[data._$id];\r\n            if (od) {\r\n                for (let i = 0; i < od.length; i += 2) {\r\n                    let j = od[i];\r\n                    let e = od[i + 1];\r\n                    let idPath: string | string[];\r\n                    if (idPath = e._$override) {\r\n                        let toWrite: any;\r\n                        if (Array.isArray(idPath)) {\r\n                            if (j == idPath.length - 1) {\r\n                                let k = idPath[j];\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else\r\n                                    toWrite = children.find(c => c._$override == k);\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else if (j < idPath.length - 1) {\r\n                                let k = idPath.slice(j);\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else {\r\n                                    toWrite = children.find(c => {\r\n                                        let o = c._$override;\r\n                                        return Array.isArray(o) && arrayEquals(o, k);\r\n                                    });\r\n                                }\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else\r\n                                toWrite = data;\r\n                        }\r\n                        else\r\n                            toWrite = data;\r\n\r\n                        mergeData(toWrite, e);\r\n                        if (e._$comp) {\r\n                            let comps: Array<any> = toWrite._$comp;\r\n                            if (!comps)\r\n                                toWrite._$comp = comps = [];\r\n                            for (let comp of e._$comp) {\r\n                                let compType = comp._$type || comp._$override;\r\n                                let c = comps.find(c => c._$override == compType || c._$type == compType);\r\n                                if (!c) {\r\n                                    c = {};\r\n                                    if (comp._$type)\r\n                                        c._$type = compType;\r\n                                    else\r\n                                        c._$override = compType;\r\n                                    comps.push(c);\r\n                                }\r\n                                mergeData(c, comp);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (idPath = e._$parent) { //增加的节点\r\n                        if (!children)\r\n                            data._$child = children = [];\r\n                        let k: string | string[];\r\n                        if (j < idPath.length) { //挂接的节点在嵌套预制体内部\r\n                            if (j == idPath.length - 1)\r\n                                k = idPath[j];\r\n                            else\r\n                                k = idPath.slice(j);\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            toWrite._$parent = k;\r\n                            children.push(toWrite);\r\n                        }\r\n                        else {\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            delete toWrite._$parent;\r\n                            if (data._$prefab) {\r\n                                children.push(toWrite);\r\n                            }\r\n                            else {\r\n                                delete toWrite._$index;\r\n                                if (e._$index < children.length)\r\n                                    children.splice(e._$index, 0, toWrite);\r\n                                else\r\n                                    children.push(toWrite);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (test(nodeData)) {\r\n            nodeData = cloneTree(nodeData);\r\n            visit(nodeData);\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n}\r\n\r\nfunction mergeData(target: any, overrided: any) {\r\n    for (let k in overrided) {\r\n        if (k.startsWith(\"_$\"))\r\n            continue;\r\n\r\n        let v = overrided[k];\r\n        if (v != null && typeof (v) === \"object\" && !Array.isArray(v) && !(v._$type || v._$uuid || v._$ref)) {\r\n            let v2 = target[k];\r\n            if (v2 != null && typeof (v2) === \"object\") {\r\n                target[k] = v2 = Object.assign({}, v2);\r\n                mergeData(v2, v);\r\n            }\r\n            else\r\n                target[k] = v;\r\n        }\r\n        else\r\n            target[k] = v;\r\n    }\r\n}\r\n\r\nfunction arrayEquals(a: ReadonlyArray<any>, b: ReadonlyArray<any>): boolean {\r\n    if (a.length === b.length) {\r\n        for (var i = 0; i < a.length; i++) {\r\n            if (a[i] !== b[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { Text } from \"./Text\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { InputManager } from \"../events/InputManager\";\r\nimport { Render } from \"../renders/Render\";\r\nimport { Config } from \"../../Config\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { SerializeUtil } from \"../loaders/SerializeUtil\";\r\n\r\n/**\r\n * 用户输入一个或多个文本字符时后调度。\r\n * @eventType Event.INPUT\r\n * */\r\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 文本发生变化后调度。\r\n * @eventType Event.CHANGE\r\n * */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 用户在输入框内敲回车键后，将会调度 <code>enter</code> 事件。\r\n * @eventType Event.ENTER\r\n * */\r\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 显示对象获得焦点后调度。\r\n * @eventType Event.FOCUS\r\n * */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 显示对象失去焦点后调度。\r\n * @eventType Event.BLUR\r\n * */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p><code>Input</code> 类用于创建显示对象以显示和输入文本。</p>\r\n * <p>Input 类封装了原生的文本输入框，由于不同浏览器的差异，会导致此对象的默认文本的位置与用户点击输入时的文本的位置有少许的偏差。</p>\r\n */\r\nexport class Input extends Text {\r\n    /** 常规文本域。*/\r\n    static TYPE_TEXT: string = \"text\";\r\n    /** password 类型用于密码域输入。*/\r\n    static TYPE_PASSWORD: string = \"password\";\r\n    /** email 类型用于应该包含 e-mail 地址的输入域。*/\r\n    static TYPE_EMAIL: string = \"email\";\r\n    /** url 类型用于应该包含 URL 地址的输入域。*/\r\n    static TYPE_URL: string = \"url\";\r\n    /** number 类型用于应该包含数值的输入域。*/\r\n    static TYPE_NUMBER: string = \"number\";\r\n    /**\r\n     * <p>range 类型用于应该包含一定范围内数字值的输入域。</p>\r\n     * <p>range 类型显示为滑动条。</p>\r\n     * <p>您还能够设定对所接受的数字的限定。</p>\r\n     */\r\n    static TYPE_RANGE: string = \"range\";\r\n    /**  选取日、月、年。*/\r\n    static TYPE_DATE: string = \"date\";\r\n    /** month - 选取月、年。*/\r\n    static TYPE_MONTH: string = \"month\";\r\n    /** week - 选取周和年。*/\r\n    static TYPE_WEEK: string = \"week\";\r\n    /** time - 选取时间（小时和分钟）。*/\r\n    static TYPE_TIME: string = \"time\";\r\n    /** datetime - 选取时间、日、月、年（UTC 时间）。*/\r\n    static TYPE_DATE_TIME: string = \"datetime\";\r\n    /** datetime-local - 选取时间、日、月、年（本地时间）。*/\r\n    static TYPE_DATE_TIME_LOCAL: string = \"datetime-local\";\r\n    /**\r\n     * <p>search 类型用于搜索域，比如站点搜索或 Google 搜索。</p>\r\n     * <p>search 域显示为常规的文本域。</p>\r\n     */\r\n    static TYPE_SEARCH: string = \"search\";\r\n\r\n    /**@private */\r\n    protected static input: HTMLInputElement;\r\n    /**@private */\r\n    protected static area: HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputElement: HTMLInputElement | HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputContainer: HTMLDivElement;\r\n    /**@private */\r\n    protected static confirmButton: any;\r\n    /**@private */\r\n    protected static promptStyleDOM: any;\r\n\r\n    protected _focus: boolean;\r\n    protected _multiline: boolean = false;\r\n    protected _editable: boolean = true;\r\n    protected _restrict: string;\r\n    protected _restrictPattern: any;\r\n    protected _maxChars: number = 0;\r\n\r\n    private _type: string = \"text\";\r\n\r\n    /**@private */\r\n    static IOS_IFRAME: boolean = false;\r\n\r\n    static isAppUseNewInput: boolean = false;\r\n\r\n    /**创建一个新的 <code>Input</code> 类实例。*/\r\n    constructor() {\r\n        super();\r\n        Input.IOS_IFRAME = (ILaya.Browser.onIOS && ILaya.Browser.window.top != ILaya.Browser.window.self);\r\n        this._width = 100;\r\n        this._height = 20;\r\n\r\n        this.multiline = false;\r\n        this.overflow = Text.SCROLL;\r\n        this._promptColor = \"#A9A9A9\";\r\n\r\n        this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        this.on(Event.UNDISPLAY, this, this._onUnDisplay);\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        Input._createInputElement();\r\n\r\n        // 移动端通过画布的touchend调用focus\r\n        if (ILaya.Browser.onMobile) {\r\n            var isTrue: boolean = false;\r\n            if (ILaya.Browser.onMiniGame || ILaya.Browser.onBDMiniGame || ILaya.Browser.onQGMiniGame || ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onQQMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onHWMiniGame || ILaya.Browser.onTBMiniGame) {\r\n                isTrue = true;\r\n            }\r\n            Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? \"touchend\" : \"click\") : \"touchend\", Input._popupInputMethod);\r\n        }\r\n    }\r\n\r\n    // 移动平台在单击事件触发后弹出输入法\r\n    private static _popupInputMethod(e: any): void {\r\n        //e.preventDefault();\r\n        if (!InputManager.isTextInputting) return;\r\n\r\n        var input: any = Input.inputElement;\r\n\r\n        // 弹出输入法。\r\n        input.focus();\r\n    }\r\n\r\n    private static _createInputElement(): void {\r\n        Input._initInput(Input.area = ILaya.Browser.createElement(\"textarea\"));\r\n        Input._initInput(Input.input = ILaya.Browser.createElement(\"input\"));\r\n\r\n        Input.inputContainer = ILaya.Browser.createElement(\"div\");\r\n        Input.inputContainer.style.position = \"absolute\";\r\n        Input.inputContainer.style.zIndex = '1E5';\r\n        ILaya.Browser.container.appendChild(Input.inputContainer);\r\n        (Input.inputContainer as any).setPos = function (x: number, y: number): void {\r\n            Input.inputContainer.style.left = x + 'px';\r\n            Input.inputContainer.style.top = y + 'px';\r\n        };\r\n    }\r\n\r\n    private static _initInput(input: HTMLInputElement): void {\r\n        var style = input.style;\r\n        style.cssText = \"position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;\";\r\n        style.resize = 'none';\r\n        style.backgroundColor = 'transparent';\r\n        style.border = 'none';\r\n        style.outline = 'none';\r\n        style.zIndex = '1';\r\n\r\n        input.addEventListener('input', Input._processInputting);\r\n\r\n        input.addEventListener('mousemove', Input._stopEvent, { passive: false });\r\n        input.addEventListener('mousedown', Input._stopEvent, { passive: false });\r\n        input.addEventListener('touchmove', Input._stopEvent, { passive: false });\r\n\r\n        (input as any).setFontFace = function (fontFace: string): void { input.style.fontFamily = fontFace; };\r\n        if (!(LayaEnv.isConch && !Input.isAppUseNewInput)) {\r\n            (input as any).setColor = function (color: string): void { input.style.color = color; };\r\n            (input as any).setFontSize = function (fontSize: number): void { input.style.fontSize = fontSize + 'px'; };\r\n        }\r\n    }\r\n\r\n    private static _processInputting(e: any): void {\r\n        var input: Input = (Input.inputElement as any).target;\r\n        if (!input) return;\r\n\r\n        var value = Input.inputElement.value;\r\n\r\n        // 对输入字符进行限制\r\n        if (input._restrictPattern) {\r\n            // 部分输入法兼容\r\n            value = value.replace(/\\u2006|\\x27/g, \"\");\r\n\r\n            if (input._restrictPattern.test(value)) {\r\n                value = value.replace(input._restrictPattern, \"\");\r\n                Input.inputElement.value = value;\r\n            }\r\n        }\r\n\r\n        if (value == null) value = \"\";\r\n        input._text = value;\r\n        input.event(Event.INPUT);\r\n    }\r\n\r\n    private static _stopEvent(e: any): void {\r\n        if (e.type == 'touchmove')\r\n            e.preventDefault();\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * 设置光标位置和选取字符。\r\n     * @param\tstartIndex\t光标起始位置。\r\n     * @param\tendIndex\t光标结束位置。\r\n     */\r\n    setSelection(startIndex: number, endIndex: number): void {\r\n        this.focus = true;\r\n        Input.inputElement.selectionStart = startIndex;\r\n        Input.inputElement.selectionEnd = endIndex;\r\n    }\r\n\r\n    /**表示是否是多行输入框。*/\r\n    get multiline(): boolean {\r\n        return this._multiline;\r\n    }\r\n\r\n    set multiline(value: boolean) {\r\n        this._multiline = value;\r\n        if (!SerializeUtil.isDeserializing)\r\n            this.valign = value ? \"top\" : \"middle\";\r\n    }\r\n\r\n    /**\r\n     * 获取对输入框的引用实例。\r\n     */\r\n    get nativeInput(): HTMLInputElement | HTMLTextAreaElement {\r\n        return this._multiline ? Input.area : Input.input;\r\n    }\r\n\r\n    private _onUnDisplay(e: Event = null): void {\r\n        this.focus = false;\r\n    }\r\n\r\n    private _onMouseDown(e: Event): void {\r\n        this.focus = true;\r\n    }\r\n    /**\r\n     * 在输入期间，如果 Input 实例的位置改变，调用_syncInputTransform同步输入框的位置。\r\n     */\r\n    private _syncInputTransform(): void {\r\n        var inputElement = this.nativeInput;\r\n        var transform = SpriteUtils.getTransformRelativeToWindow(this, this._padding[3], this._padding[0]);\r\n        var inputWid = this._width - this._padding[1] - this._padding[3];\r\n        var inputHei = this._height - this._padding[0] - this._padding[2];\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (inputElement as any).setScale(transform.scaleX, transform.scaleY);\r\n            (inputElement as any).setSize(inputWid, inputHei);\r\n            (inputElement as any).setPos(transform.x, transform.y);\r\n        } else {\r\n            Input.inputContainer.style.transform = Input.inputContainer.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n            inputElement.style.width = inputWid + 'px';\r\n            inputElement.style.height = inputHei + 'px';\r\n            Input.inputContainer.style.left = transform.x + 'px';\r\n            Input.inputContainer.style.top = transform.y + 'px';\r\n        }\r\n    }\r\n\r\n    /**选中当前实例的所有文本。*/\r\n    select(): void {\r\n        this.nativeInput.select();\r\n    }\r\n\r\n    /**\r\n     * 表示焦点是否在此实例上。\r\n     */\r\n    get focus(): boolean {\r\n        return this._focus;\r\n    }\r\n\r\n    // 移动平台最后单击画布才会调用focus\r\n    // 因此 调用focus接口是无法都在移动平台立刻弹出键盘的\r\n    set focus(value: boolean) {\r\n        var input = this.nativeInput;\r\n\r\n        if (this._focus !== value) {\r\n            if (value) {\r\n                if ((input as any).target) {\r\n                    (input as any).target._focusOut();\r\n                } else {\r\n                    this._setInputMethod();\r\n                }\r\n                input = this.nativeInput;\r\n                (input as any).target = this;\r\n                this._focusIn();\r\n            } else {\r\n                (input as any).target = null;\r\n                this._focusOut();\r\n                ILaya.Browser.document.body.scrollTop = 0;\r\n                input.blur();\r\n\r\n                if (LayaEnv.isConch && !Input.isAppUseNewInput) (input as any).setPos(-10000, -10000);\r\n                else if (Input.inputContainer.contains(input)) Input.inputContainer.removeChild(input);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _setInputMethod(): void {\r\n        Input.input.parentElement && (Input.inputContainer.removeChild(Input.input));\r\n        Input.area.parentElement && (Input.inputContainer.removeChild(Input.area));\r\n\r\n        // 安卓的安全键盘的问题；\r\n        // 如果设置type='password' 则会弹安全键盘\r\n        // 就算以后设置type='text' 还是会弹安全键盘，所以对于安卓，干脆全部重新生成\r\n        if (ILaya.Browser.onAndroid) {\r\n            Input.input = Input.inputElement = ILaya.Browser.createElement('input');\r\n            Input._initInput(Input.input);\r\n        }\r\n\r\n        Input.inputElement = (this._multiline ? Input.area : Input.input);\r\n        Input.inputContainer.appendChild(Input.inputElement);\r\n        if (Text.RightToLeft) {\r\n            Input.inputElement.style.direction = \"rtl\";\r\n        }\r\n    }\r\n\r\n    private _focusIn(): void {\r\n        InputManager.isTextInputting = true;\r\n        var input = this.nativeInput;\r\n\r\n        Input.input && (Input.input.type = this._type);\t\t// 设置input控件的 password\r\n\r\n        this._focus = true;\r\n\r\n        var cssStyle = input.style;\r\n        cssStyle.whiteSpace = (this.wordWrap ? \"pre-wrap\" : \"nowrap\");\r\n        this._setPromptColor();\r\n\r\n        input.readOnly = !this._editable;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setType(this._type);\r\n            (input as any).setForbidEdit(!this._editable);\r\n        }\r\n        input.maxLength = this._maxChars <= 0 ? 1E5 : this._maxChars;\r\n\r\n        input.value = this._text;\r\n        input.placeholder = this._prompt;\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.on(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = this;\r\n        this.event(Event.FOCUS);\r\n\r\n        // PC端直接调用focus进入焦点。\r\n        if (ILaya.Browser.onPC) input.focus();\r\n\r\n        // PC浏览器隐藏文字\r\n        if (!(LayaEnv.isConch && Input.isAppUseNewInput) && !ILaya.Browser.onMiniGame && !ILaya.Browser.onBDMiniGame && !ILaya.Browser.onQGMiniGame && !ILaya.Browser.onKGMiniGame && !ILaya.Browser.onVVMiniGame && !ILaya.Browser.onAlipayMiniGame && !ILaya.Browser.onQQMiniGame && !ILaya.Browser.onBLMiniGame && !ILaya.Browser.onTTMiniGame && !ILaya.Browser.onHWMiniGame && !ILaya.Browser.onTBMiniGame) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n            this._hideText = true;\r\n        }\r\n\r\n        // PC同步输入框外观。\r\n        (input as any).setColor(this.color);\r\n        (input as any).setFontSize(this.fontSize);\r\n        (input as any).setFontFace(this._realFont);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setMultiAble && (input as any).setMultiAble(this._multiline);\r\n        }\r\n        cssStyle.lineHeight = (this.leading + this.fontSize) + \"px\";\r\n        cssStyle.fontStyle = (this.italic ? \"italic\" : \"normal\");\r\n        cssStyle.fontWeight = (this.bold ? \"bold\" : \"normal\");\r\n        cssStyle.textAlign = this.align;\r\n        cssStyle.padding = \"0 0\";\r\n\r\n        // 输入框重定位。\r\n        this._syncInputTransform();\r\n        if (!LayaEnv.isConch && ILaya.Browser.onPC)\r\n            ILaya.systemTimer.frameLoop(1, this, this._syncInputTransform);\r\n    }\r\n\r\n    // 设置DOM输入框提示符颜色。\r\n    private _setPromptColor(): void {\r\n        // 创建style标签\r\n        Input.promptStyleDOM = ILaya.Browser.getElementById(\"promptStyle\");\r\n        if (!Input.promptStyleDOM) {\r\n            Input.promptStyleDOM = ILaya.Browser.createElement(\"style\");\r\n            Input.promptStyleDOM.setAttribute(\"id\", \"promptStyle\");\r\n            ILaya.Browser.document.head.appendChild(Input.promptStyleDOM);\r\n        }\r\n\r\n        // 设置style标签\r\n        Input.promptStyleDOM.innerText = \"input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-moz-placeholder, textarea:-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input::-moz-placeholder, textarea::-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-ms-input-placeholder, textarea:-ms-input-placeholder {\" + \"color:\" + this._promptColor + \"}\";\r\n    }\r\n\r\n    /**@private */\r\n    private _focusOut(): void {\r\n        if (!InputManager.isTextInputting) return;\r\n        if (!InputManager.isiOSWKwebView)\r\n            InputManager.isTextInputting = false;\r\n        this._focus = false;\r\n        this._hideText = false;\r\n\r\n        this.text = this.nativeInput.value;\r\n        this.markChanged();\r\n        this.typeset();\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = null;\r\n        this.event(Event.BLUR);\r\n        this.event(Event.CHANGE);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) this.nativeInput.blur();\r\n        // 只有PC会注册此事件。\r\n        ILaya.Browser.onPC && ILaya.systemTimer.clear(this, this._syncInputTransform);\r\n    }\r\n\r\n    /**@private */\r\n    private _onKeyDown(e: any): void {\r\n        if (e.keyCode === 13) {\r\n            // 移动平台单行输入状态下点击回车收回输入法。 \r\n            if (ILaya.Browser.onMobile && !this._multiline)\r\n                this.focus = false;\r\n\r\n            this.event(Event.ENTER);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 小游戏专用(解决键盘输入框内容和游戏输入框内容不同步的bug)\r\n     * @param value \r\n     */\r\n    miniGameTxt(value: string) {\r\n        value += '';\r\n        if (!this._multiline)\r\n            value = value.replace(/\\r?\\n/g, '');\r\n        this.text = value;\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (this._focus) {\r\n            this.nativeInput.value = value;\r\n            this.event(Event.CHANGE);\r\n        } else {\r\n            // 单行时不允许换行\r\n            if (!this._multiline)\r\n                value = value.replace(/\\r?\\n/g, '');\r\n\r\n            super.text = value;\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get text(): string {\r\n        if (this._focus)\r\n            return this.nativeInput.value;\r\n        else\r\n            return super.text;\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set_color(value: string) {\r\n        if (this._focus)\r\n            (this.nativeInput as any).setColor(value);\r\n\r\n        super.set_color(value);\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set bgColor(value: string) {\r\n        super.bgColor = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput)\r\n            (this.nativeInput as any).setBgColor(value);\r\n    }\r\n\r\n    get bgColor() {\r\n        return super.bgColor;\r\n    }\r\n\r\n    /**限制输入的字符。*/\r\n    get restrict(): string {\r\n        return this._restrict;\r\n    }\r\n\r\n    set restrict(value: string) {\r\n        this._restrict = value;\r\n        // H5保存RegExp\r\n        if (value) {\r\n            value = \"[^\" + value + \"]\";\r\n\r\n            // 如果pattern为^\\00-\\FF，则我们需要的正则表达式是\\00-\\FF\r\n            if (value.indexOf(\"^^\") > -1)\r\n                value = value.replace(\"^^\", \"\");\r\n\r\n            this._restrictPattern = new RegExp(value, \"g\");\r\n        } else\r\n            this._restrictPattern = null;\r\n    }\r\n\r\n    /**\r\n     * 是否可编辑。\r\n     */\r\n    set editable(value: boolean) {\r\n        this._editable = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (Input.input as any).setForbidEdit(!value);\r\n        }\r\n    }\r\n\r\n    get editable(): boolean {\r\n        return this._editable;\r\n    }\r\n\r\n    /**\r\n     * <p>字符数量限制，默认为10000。</p>\r\n     * <p>设置字符数量限制时，小于等于0的值将会限制字符数量为10000。</p>\r\n     */\r\n    get maxChars(): number {\r\n        return this._maxChars;\r\n    }\r\n\r\n    set maxChars(value: number) {\r\n        this._maxChars = value;\r\n    }\r\n\r\n    /**\r\n     * 设置输入提示符。\r\n     */\r\n    get prompt(): string {\r\n        return this._prompt;\r\n    }\r\n\r\n    set prompt(value: string) {\r\n        value = Text.langPacks?.[value] || value;\r\n        if (this._prompt != value) {\r\n            this._prompt = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置输入提示符颜色。\r\n     */\r\n    get promptColor(): string {\r\n        return this._promptColor;\r\n    }\r\n\r\n    set promptColor(value: string) {\r\n        if (this._promptColor != value) {\r\n            this._promptColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>输入框类型为Input静态常量之一。</p>\r\n     * <ul>\r\n     * <li>TYPE_TEXT</li>\r\n     * <li>TYPE_PASSWORD</li>\r\n     * <li>TYPE_EMAIL</li>\r\n     * <li>TYPE_URL</li>\r\n     * <li>TYPE_NUMBER</li>\r\n     * <li>TYPE_RANGE</li>\r\n     * <li>TYPE_DATE</li>\r\n     * <li>TYPE_MONTH</li>\r\n     * <li>TYPE_WEEK</li>\r\n     * <li>TYPE_TIME</li>\r\n     * <li>TYPE_DATE_TIME</li>\r\n     * <li>TYPE_DATE_TIME_LOCAL</li>\r\n     * </ul>\r\n     * <p>平台兼容性参见http://www.w3school.com.cn/html5/html_5_form_input_types.asp。</p>\r\n     */\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._asPassword = value === \"password\";\r\n        this._type = value;\r\n        this.markChanged();\r\n    }\r\n}","import { Component } from \"./Component\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * 相对布局插件\r\n */\r\nexport class Widget extends Component {\r\n    /**一个已初始化的 <code>Widget</code> 实例。*/\r\n    static EMPTY: Widget = null;// new Widget();\r\n\r\n    private _top: number = null;\r\n    private _bottom: number = null;\r\n    private _left: number = null;\r\n    private _right: number = null;\r\n    private _centerX: number = null;\r\n    private _centerY: number = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.runInEditor = true;\r\n        this.hideFlags |= HideFlags.HideAndDontSave;\r\n    }\r\n\r\n    onReset(): void {\r\n        this._top = this._bottom = this._left = this._right = this._centerX = this._centerY = null;\r\n    }\r\n\r\n    protected _onEnable(): void {\r\n        if (this.owner.parent) this._onAdded();\r\n        else this.owner.once(Event.ADDED, this, this._onAdded);\r\n    }\r\n\r\n    protected _onDisable(): void {\r\n        this.owner.off(Event.ADDED, this, this._onAdded);\r\n        if (this.owner.parent) this.owner.parent.off(Event.RESIZE, this, this._onParentResize);\r\n    }\r\n\r\n    protected _onAdded(): void {\r\n        if (this.owner.parent)\r\n            this.owner.parent.on(Event.RESIZE, this, this._onParentResize);\r\n        this.resetLayoutX();\r\n        this.resetLayoutY();\r\n    }\r\n\r\n    /**\r\n     * 父容器的 <code>Event.RESIZE</code> 事件侦听处理函数。\r\n     */\r\n    protected _onParentResize(): void {\r\n        var flagX = this.resetLayoutX();\r\n        var flagY = this.resetLayoutY();\r\n        if (flagX || flagY) this.owner.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * <p>重置对象的 <code>X</code> 轴（水平方向）布局。</p>\r\n     * @private\r\n     */\r\n    resetLayoutX(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerX != null) {\r\n                owner.x = Math.round((parent.width - owner.displayWidth) * 0.5 + this._centerX + owner.pivotX * owner.scaleX);\r\n            } else if (this._left != null) {\r\n                owner.x = Math.round(this._left + owner.pivotX * owner.scaleX);\r\n                if (this._right != null) {\r\n                    if (!parent._width) return false;\r\n                    //TODO:如果用width，会死循环\r\n                    var temp: number = (parent._width - this._left - this._right) / (owner.scaleX || 0.01);\r\n                    if (temp != owner._width) {\r\n                        owner.width = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._right != null) {\r\n                owner.x = Math.round(parent.width - owner.displayWidth - this._right + owner.pivotX * owner.scaleX);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <p>重置对象的 <code>Y</code> 轴（垂直方向）布局。</p>\r\n     * @private\r\n     */\r\n    resetLayoutY(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerY != null) {\r\n                owner.y = Math.round((parent.height - owner.displayHeight) * 0.5 + this._centerY + owner.pivotY * owner.scaleY);\r\n            } else if (this._top != null) {\r\n                owner.y = Math.round(this._top + owner.pivotY * owner.scaleY);\r\n                if (this._bottom != null) {\r\n                    if (!parent._height) return false;\r\n                    //TODO:\r\n                    var temp: number = (parent._height - this._top - this._bottom) / (owner.scaleY || 0.01);\r\n                    if (temp != owner._height) {\r\n                        owner.height = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._bottom != null) {\r\n                owner.y = Math.round(parent.height - owner.displayHeight - this._bottom + owner.pivotY * owner.scaleY);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 重新计算布局\r\n     */\r\n    resetLayout(): void {\r\n        if (this.owner) {\r\n            this.resetLayoutX();\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距顶边的距离（以像素为单位）。*/\r\n    get top(): number {\r\n        return this._top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._top != value) {\r\n            this._top = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距底边的距离（以像素为单位）。*/\r\n    get bottom(): number {\r\n        return this._bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._bottom != value) {\r\n            this._bottom = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距左边的距离（以像素为单位）。*/\r\n    get left(): number {\r\n        return this._left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._left != value) {\r\n            this._left = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距右边的距离（以像素为单位）。*/\r\n    get right(): number {\r\n        return this._right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._right != value) {\r\n            this._right = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距水平方向中心轴的距离（以像素为单位）。*/\r\n    get centerX(): number {\r\n        return this._centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerX != value) {\r\n            this._centerX = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距垂直方向中心轴的距离（以像素为单位）。*/\r\n    get centerY(): number {\r\n        return this._centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerY != value) {\r\n            this._centerY = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n}\r\n\r\nWidget.EMPTY = new Widget();\r\n","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IHitArea } from \"./IHitArea\";\r\n\r\nconst _rect: Rectangle = new Rectangle();\r\nconst _ptPoint: Point = new Point();\r\n\r\n/**\r\n * 鼠标点击区域，可以设置绘制一系列矢量图作为点击区域和非点击区域（目前只支持圆形，矩形，多边形）\r\n *\r\n */\r\nexport class HitArea implements IHitArea {\r\n    _hit: Graphics;\r\n    _unHit: Graphics;\r\n\r\n    /**\r\n     * 检测对象是否包含指定的点。\r\n     * @param\tx\t点的 X 轴坐标值（水平位置）。\r\n     * @param\ty\t点的 Y 轴坐标值（垂直位置）。\r\n     * @return\t如果包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number, sp: Sprite): boolean {\r\n        if (!HitArea._isHitGraphic(x, y, sp, this._hit))\r\n            return false;\r\n        return !HitArea._isHitGraphic(x, y, sp, this._unHit);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 是否击中Graphic\r\n     */\r\n    static _isHitGraphic(x: number, y: number, sp: Sprite, graphic: Graphics): boolean {\r\n        if (!graphic) return false;\r\n        let cmds = graphic.cmds;\r\n        if (cmds.length == 0) return false;\r\n        let len = cmds.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let cmd = cmds[i];\r\n            if (!cmd) continue;\r\n            switch (cmd.cmdID) {\r\n                case \"Translate\":\r\n                    x -= cmd.tx;\r\n                    y -= cmd.ty;\r\n            }\r\n            if (HitArea._isHitCmd(x, y, sp, cmd)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 是否击中绘图指令\r\n     */\r\n    static _isHitCmd(x: number, y: number, sp: Sprite, cmd: any): boolean {\r\n        if (!cmd) return false;\r\n        var rst: boolean = false;\r\n        switch (cmd.cmdID) {\r\n            case \"DrawRect\":\r\n                if (cmd.percent)\r\n                    _rect.setTo(cmd.x * sp.width, cmd.y * sp.height, cmd.width * sp.width, cmd.height * sp.height);\r\n                else\r\n                    _rect.setTo(cmd.x, cmd.y, cmd.width, cmd.height);\r\n                rst = _rect.contains(x, y);\r\n                break;\r\n            case \"DrawCircle\":\r\n                let r = cmd.radius;\r\n                var d: number;\r\n                if (cmd.percent) {\r\n                    x -= cmd.x * sp.width;\r\n                    y -= cmd.y * sp.height;\r\n                    r *= sp.width;\r\n                }\r\n                else {\r\n                    x -= cmd.x;\r\n                    y -= cmd.y;\r\n                }\r\n                d = x * x + y * y;\r\n                rst = d < r * r;\r\n                break;\r\n            case \"DrawPoly\":\r\n                x -= cmd.x;\r\n                y -= cmd.y;\r\n                rst = HitArea._ptInPolygon(x, y, cmd.points);\r\n                break;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 坐标是否在多边形内\r\n     */\r\n    static _ptInPolygon(x: number, y: number, areaPoints: any[]): boolean {\r\n        var p: Point = _ptPoint;\r\n        p.setTo(x, y);\r\n        // 交点个数\r\n        var nCross: number = 0;\r\n        var p1x: number, p1y: number, p2x: number, p2y: number;\r\n        var len: number;\r\n        len = areaPoints.length;\r\n        for (var i: number = 0; i < len; i += 2) {\r\n            p1x = areaPoints[i];\r\n            p1y = areaPoints[i + 1];\r\n            p2x = areaPoints[(i + 2) % len];\r\n            p2y = areaPoints[(i + 3) % len];\r\n            //var p1:Point = areaPoints[i];\r\n            //var p2:Point = areaPoints[(i + 1) % areaPoints.length]; // 最后一个点与第一个点连线\r\n            if (p1y == p2y) continue;\r\n            if (p.y < Math.min(p1y, p2y)) continue;\r\n            if (p.y >= Math.max(p1y, p2y)) continue;\r\n            // 求交点的x坐标\r\n            var tx: number = (p.y - p1y) * (p2x - p1x) / (p2y - p1y) + p1x;\r\n            // 只统计p1p2与p向右射线的交点\r\n            if (tx > p.x) nCross++;\r\n        }\r\n        // 交点为偶数，点在多边形之外\r\n        return (nCross % 2 == 1);\r\n    }\r\n\r\n    /**\r\n     * 可点击区域，可以设置绘制一系列矢量图作为点击区域（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get hit(): Graphics {\r\n        if (!this._hit) this._hit = new Graphics();\r\n        return this._hit;\r\n    }\r\n\r\n    set hit(value: Graphics) {\r\n        this._hit = value;\r\n    }\r\n\r\n    /**\r\n     * 不可点击区域，可以设置绘制一系列矢量图作为非点击区域（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get unHit(): Graphics {\r\n        if (!this._unHit) this._unHit = new Graphics();\r\n        return this._unHit;\r\n    }\r\n\r\n    set unHit(value: Graphics) {\r\n        this._unHit = value;\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._hitCmds) {\r\n                this.hit.cmds = (<any>this)._hitCmds;\r\n                delete (<any>this)._hitCmds;\r\n            }\r\n\r\n            if ((<any>this)._unHitCmds) {\r\n                this.unHit.cmds = (<any>this)._unHitCmds;\r\n                delete (<any>this)._unHitCmds;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HitArea\", HitArea);\r\n\r\n","import { Utils } from \"./Utils\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 封装弱引用WeakMap\r\n * 如果支持WeakMap，则使用WeakMap，如果不支持，则用Object代替\r\n * 注意：如果采用Object，为了防止内存泄漏，则采用定时清理缓存策略\r\n * \r\n * 这里的设计是错误的，为了兼容，先不删掉这个类，直接采用Object\r\n */\r\nexport class WeakObject {\r\n    /**是否支持WeakMap*/\r\n    static supportWeakMap = false;\r\n    /**如果不支持WeakMap，则多少时间清理一次缓存，默认10分钟清理一次*/\r\n    static delInterval = 10 * 60 * 1000;\r\n    /**全局WeakObject单例*/\r\n    static I: WeakObject;\r\n    /**@private */\r\n    private static _maps: any[] = [];\r\n    /**@internal */\r\n    _obj: any;\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        WeakObject.I = new WeakObject();\r\n        //WeakObject.supportWeakMap = Browser.window.WeakMap != null;\r\n        //如果不支持，10分钟回收一次\r\n        if (!WeakObject.supportWeakMap) ILaya.systemTimer.loop(WeakObject.delInterval, null, WeakObject.clearCache);\r\n    }\r\n\r\n    /**清理缓存，回收内存*/\r\n    static clearCache(): void {\r\n        for (var i = 0, n = WeakObject._maps.length; i < n; i++) {\r\n            var obj = WeakObject._maps[i];\r\n            obj._obj = {};\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        this._obj = {};\r\n        WeakObject._maps.push(this);\r\n    }\r\n\r\n\t/**\r\n\t * 设置缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t * @param\tvalue object对象，可被回收\r\n\t */\r\n    set(key: any, value: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') {\r\n                this._obj[key as any] = value;\r\n            } else {\r\n                key.$_GID || (key.$_GID = Utils.getGID());\r\n                this._obj[key.$_GID] = value;\r\n            }\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t */\r\n    get(key: any): any {\r\n        if (key == null) return null;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any];\r\n            return this._obj[key.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除缓存\r\n\t */\r\n    del(key: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') delete this._obj[key as any];\r\n            else delete this._obj[this._obj.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 是否有缓存\r\n\t */\r\n    has(key: any): boolean {\r\n        if (key == null) return false;\r\n        if (WeakObject.supportWeakMap) {\r\n            return false;\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any] != null;\r\n            return this._obj[this._obj.$_GID] != null;\r\n        }\r\n    }\r\n}\r\n\r\n//WeakObject.__init__();","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { Resource } from \"./Resource\";\r\n\r\nexport class Prefab extends Resource {\r\n    public readonly version: number;\r\n    protected _deps: Array<Resource>;\r\n\r\n    /**@private */\r\n    json: any; //兼容2.0\r\n\r\n    constructor(version?: number) {\r\n        super();\r\n\r\n        this.version = version;\r\n        this._deps = [];\r\n    }\r\n\r\n    /**\r\n     * 创建实例\r\n     */\r\n    create(options?: Record<string, any>, errors?: Array<any>): Node {\r\n        if (this.json) //兼容2.0\r\n            return LegacyUIParser.createByData(null, this.json);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    get deps(): ReadonlyArray<Resource> {\r\n        return this._deps;\r\n    }\r\n\r\n    addDep(res: Resource) {\r\n        if (res instanceof Resource) {\r\n            res._addReference();\r\n            this._deps.push(res);\r\n\r\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                res.on(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n    }\r\n\r\n    addDeps(resArr: Array<Resource>) {\r\n        for (let res of resArr) {\r\n            if (res instanceof Resource) {\r\n                res._addReference();\r\n                this._deps.push(res);\r\n\r\n                if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                    res.on(\"obsolute\", this, this.onDepObsolute);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        for (let res of this._deps) {\r\n            res._removeReference();\r\n\r\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                res.off(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n    }\r\n\r\n    public get obsolute(): boolean {\r\n        return this._obsolute;\r\n    }\r\n\r\n    public set obsolute(value: boolean) {\r\n        if (this._obsolute != value) {\r\n            this._obsolute = value;\r\n            if (value && !LayaEnv.isPlaying)\r\n                this.event(\"obsolute\");\r\n        }\r\n    }\r\n\r\n    private onDepObsolute() {\r\n        this.obsolute = true;\r\n    }\r\n}\r\n\r\n//旧版本兼容\r\nexport type HierarchyResource = Prefab;\r\nexport var HierarchyResource = Prefab;","import { Component } from \"../components/Component\"\r\nimport { FrameAnimation } from \"../display/FrameAnimation\"\r\nimport { Node } from \"../display/Node\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Graphics } from \"../display/Graphics\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { WeakObject } from \"../utils/WeakObject\";\r\nimport { Handler } from \"laya/utils/Handler\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\nvar _listClass: any;\r\nvar _viewClass: any;\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nexport class LegacyUIParser {\r\n    /**@private */\r\n    private static _funMap: WeakObject;\r\n    /**@private */\r\n    private static _parseWatchData: RegExp = /\\${(.*?)}/g;\r\n    /**@private */\r\n    private static _parseKeyWord: RegExp = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;\r\n    /**@internal */\r\n    static _sheet: any;\r\n\r\n    static parse(data: any, options: any) {\r\n        let root: Sprite = options?.root;\r\n        if (!root) {\r\n            let runtime: string = (LayaEnv.isPlaying && data.props.runtime) ? data.props.runtime : data.type;\r\n            let clas = ClassUtils.getClass(runtime);\r\n\r\n            if (data.props.renderType == \"instance\")\r\n                root = clas.instance || (clas.instance = new clas());\r\n            else\r\n                root = new clas();\r\n        }\r\n\r\n        if (root && (<any>root)._viewCreated)\r\n            return root;\r\n\r\n        return LegacyUIParser.createByData(root, data);\r\n    }\r\n\r\n    /**\r\n     * @private 根据字符串，返回函数表达式\r\n     */\r\n    //TODO:coverage\r\n    static getBindFun(value: string): Function {\r\n        let map = LegacyUIParser._funMap;\r\n        if (!map)\r\n            map = LegacyUIParser._funMap = new WeakObject();\r\n        var fun: Function = LegacyUIParser._funMap.get(value);\r\n        if (fun == null) {\r\n            var temp: string = \"\\\"\" + value + \"\\\"\";\r\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\r\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\r\n            fun = (window as any).Laya._runScript(str);\r\n            LegacyUIParser._funMap.set(value, fun);\r\n        }\r\n        return fun;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过视图数据创建视图。\r\n     * @param uiView 视图数据信息。\r\n     */\r\n    //TODO:coverage\r\n    static createByData(root: Sprite, uiView: any): Sprite {\r\n        var tInitTool: InitTool = InitTool.create();\r\n\r\n        //递归创建节点\r\n        root = LegacyUIParser.createComp(uiView, root, root, null, tInitTool);\r\n        if (\"_idMap\" in root) {\r\n            (<any>root)[\"_idMap\"] = tInitTool._idMap;\r\n        }\r\n\r\n        //处理动画信息\r\n        if (uiView.animations) {\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAni: FrameAnimation;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAni = new FrameAnimation();\r\n                tAniO = animations[i];\r\n                tAni._setUp(tInitTool._idMap, tAniO);\r\n                (<any>root)[tAniO.name] = tAni;\r\n                tAni._setControlNode(root);\r\n                switch (tAniO.action) {\r\n                    case 1:\r\n                        tAni.play(0, false);\r\n                        break;\r\n                    case 2:\r\n                        tAni.play(0, true);\r\n                        break;\r\n                }\r\n                anilist.push(tAni);\r\n            }\r\n            (<any>root)._aniList = anilist;\r\n        }\r\n\r\n        //设置页面穿透\r\n        if ((root instanceof Scene) && root._width > 0 && uiView.props.hitTestPrior == null && !root.mouseThrough)\r\n            root.hitTestPrior = true;\r\n\r\n        //设置组件\r\n        tInitTool.finish();\r\n        root._setBit(NodeFlags.NOT_READY, false);\r\n        if (root.parent && root.parent.activeInHierarchy && root.active)\r\n            root._processActive(true);\r\n        return root;\r\n    }\r\n\r\n    static createInitTool(): InitTool {\r\n        return InitTool.create();\r\n    }\r\n\r\n    /**\r\n     * 根据UI数据实例化组件。\r\n     * @param uiView UI数据。\r\n     * @param comp 组件本体，如果为空，会新创建一个。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     * @return 一个 Component 对象。\r\n     */\r\n    static createComp(uiView: any, comp: Sprite = null, view: Sprite = null, dataMap: any[] = null, initTool: InitTool = null): any {\r\n        comp = comp || LegacyUIParser.getCompInstance(uiView);\r\n        if (!comp) {\r\n            if (uiView.props && uiView.props.runtime)\r\n                console.warn(\"runtime not found:\" + uiView.props.runtime);\r\n            else\r\n                console.warn(\"can not create:\" + uiView.type);\r\n            return null;\r\n        }\r\n\r\n        var child: any[] = uiView.child;\r\n        if (child) {\r\n            var isList: boolean = comp instanceof (_listClass || (_listClass = ClassUtils.getClass(\"List\")));\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var node: any = child[i];\r\n                if ('itemRender' in comp && (node.props.name == \"render\" || node.props.renderType === \"render\")) {\r\n                    //如果list的itemRender\r\n                    (<any>comp)[\"itemRender\"] = node;\r\n                } else if (node.type == \"Graphic\") {\r\n                    //绘制矢量图\r\n                    this._addGraphicsToSprite(node, comp);\r\n                } else if (this._isDrawType(node.type)) {\r\n                    this._addGraphicToSprite(node, comp, true);\r\n                } else {\r\n                    if (isList) {\r\n                        //收集数据绑定信息\r\n                        var arr: any[] = [];\r\n                        var tChild: any = LegacyUIParser.createComp(node, null, view, arr, initTool);\r\n                        if (arr.length)\r\n                            tChild[\"_$bindData\"] = arr;\r\n                    } else {\r\n                        tChild = LegacyUIParser.createComp(node, null, view, dataMap, initTool);\r\n                    }\r\n\r\n                    //处理脚本\r\n                    if (node.type == \"Script\") {\r\n                        if (tChild instanceof Component) {\r\n                            comp.addComponentInstance(tChild);\r\n                        } else {\r\n                            //兼容老版本\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = comp;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = comp;\r\n                            }\r\n                        }\r\n                    } else if (node.props.renderType == \"mask\" || node.props.name == \"mask\") {\r\n                        comp.mask = tChild;\r\n                    } else {\r\n                        tChild instanceof Node && comp.addChild(tChild);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var props: any = uiView.props;\r\n        for (var prop in props) {\r\n            var value: any = props[prop];\r\n            if (typeof (value) == 'string' && (value.indexOf(\"@node:\") >= 0 || value.indexOf(\"@Prefab:\") >= 0)) {\r\n                if (initTool) {\r\n                    initTool.addNodeRef(comp, prop, <string>value);\r\n                }\r\n            } else\r\n                LegacyUIParser.setCompValue(comp, prop, value, view, dataMap);\r\n        }\r\n\r\n        if ((<any>comp)._afterInited) {\r\n            //if (initTool) {\r\n            //initTool.addInitItem(comp);\r\n            //} else {\r\n            (<any>comp)._afterInited();\r\n            //}\r\n        }\r\n\r\n        if (uiView.compId && initTool && initTool._idMap) {\r\n            initTool._idMap[uiView.compId] = comp;\r\n        }\r\n\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置组件的属性值。\r\n     * @param comp 组件实例。\r\n     * @param prop 属性名称。\r\n     * @param value 属性值。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     */\r\n    private static setCompValue(comp: any, prop: string, value: any, view: any = null, dataMap: any[] = null): void {\r\n        //处理数据绑定\r\n        if (typeof (value) == 'string' && value.indexOf(\"${\") > -1) {\r\n            LegacyUIParser._sheet || (LegacyUIParser._sheet = ClassUtils.getClass(\"laya.data.Table\"));\r\n            if (!LegacyUIParser._sheet) {\r\n                console.warn(\"Can not find class Sheet\");\r\n                return;\r\n            }\r\n            //list的item处理\r\n            if (dataMap) {\r\n                dataMap.push(comp, prop, value);\r\n            } else if (view) {\r\n                if (value.indexOf(\"].\") == -1) {\r\n                    //TODO\r\n                    value = value.replace(\".\", \"[0].\");\r\n                }\r\n                var watcher: DataWatcher = new DataWatcher(comp, prop, value);\r\n\r\n                //执行第一次数据赋值\r\n                watcher.exe(view);\r\n                var one: any[], temp: any[];\r\n                var str: string = value.replace(/\\[.*?\\]\\./g, \".\");\r\n                while ((one = LegacyUIParser._parseWatchData.exec(str)) != null) {\r\n                    var key1: string = one[1];\r\n                    while ((temp = LegacyUIParser._parseKeyWord.exec(key1)) != null) {\r\n                        var key2: string = temp[0];\r\n                        var arr: any[] = (view._watchMap[key2] || (view._watchMap[key2] = []));\r\n                        arr.push(watcher);\r\n                        //监听数据变化\r\n                        LegacyUIParser._sheet.I.notifer.on(key2, view, view.changeData, [key2]);\r\n                    }\r\n                    //TODO\r\n                    arr = (view._watchMap[key1] || (view._watchMap[key1] = []));\r\n                    arr.push(watcher);\r\n                    LegacyUIParser._sheet.I.notifer.on(key1, view, view.changeData, [key1]);\r\n                }\r\n                //trace(view._watchMap);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (prop === \"var\" && view) {\r\n            view[value] = comp;\r\n        } else {\r\n            comp[prop] = (value === \"true\" ? true : (value === \"false\" ? false : value));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过组建UI数据，获取组件实例。\r\n     * @param json UI数据。\r\n     * @return Component 对象。\r\n     */\r\n    static getCompInstance(json: any): any {\r\n        if (json.type == \"UIView\") {\r\n            if (json.props && json.props.pageData) {\r\n                return LegacyUIParser.createByData(null, json.props.pageData);\r\n            }\r\n        }\r\n        var runtime: string = LayaEnv.isPlaying ? ((json.props && json.props.runtime) || json.type) : json.type;\r\n        var compClass = ClassUtils.getClass(runtime);\r\n        if (!compClass) throw \"Can not find class \" + runtime;\r\n        if (json.type === \"Script\" && compClass.prototype._doAwake) {\r\n            var comp: any = Pool.createByClass(compClass);\r\n            comp._destroyed = false;\r\n            return comp;\r\n        }\r\n        if (json.props && \"renderType\" in json.props && json.props[\"renderType\"] == \"instance\") {\r\n            if (!(compClass as any)[\"instance\"]) (compClass as any)[\"instance\"] = new compClass();\r\n            return (compClass as any)[\"instance\"];\r\n        }\r\n\r\n        let ret = new compClass();\r\n        if (ret instanceof (_viewClass || (_viewClass = ClassUtils.getClass(\"View\")))) //3.0取消了View的_scene属性，因为它不应该是一个scene。但兼容2.0的代码，这里补回去\r\n            (<any>ret)._scene = ret;\r\n        return ret;\r\n    }\r\n\r\n    public static collectResourceLinks(uiView: any) {\r\n        let test = new Set();\r\n        let innerUrls: string[] = [];\r\n\r\n        function addInnerUrl(url: string) {\r\n            if (!test.has(url)) {\r\n                test.add(url);\r\n                innerUrls.push(url);\r\n            }\r\n        }\r\n\r\n        function check(uiView: any) {\r\n            let props: any = uiView.props;\r\n            for (let prop in props) {\r\n                let value: any = props[prop];\r\n                if (typeof (value) == 'string' && value.indexOf(\"@Prefab:\") >= 0) {\r\n                    let url = value.replace(\"@Prefab:\", \"\");\r\n                    addInnerUrl(url);\r\n                }\r\n            }\r\n\r\n            let child: any[] = uiView.child;\r\n            if (child) {\r\n                for (let i: number = 0, n: number = child.length; i < n; i++) {\r\n                    let node: any = child[i];\r\n                    check(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (uiView.loadList) {\r\n            for (let url of uiView.loadList)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        if (uiView.loadList3D) {\r\n            for (let url of uiView.loadList3D)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        check(uiView);\r\n        return innerUrls;\r\n    }\r\n\r\n    /**\r\n     * 根据指定的 json 数据创建节点对象。\r\n     * 比如:\r\n     * {\r\n     * \t\"type\":\"Sprite\",\r\n     * \t\"props\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"customProps\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"child\":[\r\n     * \t\t{\r\n     * \t\t\t\"type\":\"Text\",\r\n     * \t\t\t\"props\":{\r\n     * \t\t\t\t\"text\":\"this is a test\",\r\n     * \t\t\t\t\"var\":\"label\",\r\n     * \t\t\t\t\"rumtime\":\"\"\r\n     * \t\t\t}\r\n     * \t\t}\r\n     * \t]\r\n     * }\r\n     * @param\tjson json字符串或者Object对象。\r\n     * @param\tnode node节点，如果为空，则新创建一个。\r\n     * @param\troot 根节点，用来设置var定义。\r\n     * @return\t生成的节点。\r\n     */\r\n    static createByJson(json: any, node: any = null, root: Node = null, customHandler: Handler = null, instanceHandler: Handler = null): any {\r\n        if (typeof (json) == 'string') json = JSON.parse((<string>json));\r\n        var props: any = json.props;\r\n\r\n        if (!node) {\r\n            node = instanceHandler ? instanceHandler.runWith(json) : ClassUtils.getInstance(LayaEnv.isPlaying ? (props.runtime || json.type) : json.type);\r\n            if (!node) return null;\r\n        }\r\n\r\n        var child: any[] = json.child;\r\n        if (child) {\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var data: any = child[i];\r\n                if ((data.props.name === \"render\" || data.props.renderType === \"render\") && node[\"_$set_itemRender\"])\r\n                    node.itemRender = data;\r\n                else {\r\n                    if (data.type == \"Graphic\") {\r\n                        this._addGraphicsToSprite(data, node);\r\n                    } else if (this._isDrawType(data.type)) {\r\n                        this._addGraphicToSprite(data, node, true);\r\n                    } else {\r\n                        var tChild: any = this.createByJson(data, null, root, customHandler, instanceHandler)\r\n                        if (data.type === \"Script\") {\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = node;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = node;\r\n                            }\r\n                        } else if (data.props.renderType == \"mask\") {\r\n                            node.mask = tChild;\r\n                        } else {\r\n                            node.addChild(tChild);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props) {\r\n            for (var prop in props) {\r\n                var value: any = props[prop];\r\n                if (prop === \"var\" && root) {\r\n                    (root as any)[value] = node;\r\n                } else if (value instanceof Array && node[prop] instanceof Function) {\r\n                    node[prop].apply(node, value);\r\n                } else {\r\n                    node[prop] = value;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (customHandler && json.customProps) {\r\n            customHandler.runWith([node, json]);\r\n        }\r\n\r\n        if (node[\"created\"]) node.created();\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic对象添加到Sprite上\r\n     * @param graphicO graphic对象描述\r\n     */\r\n    static _addGraphicsToSprite(graphicO: any, sprite: Sprite): void {\r\n        var graphics: any[] = graphicO.child;\r\n        if (!graphics || graphics.length < 1) return;\r\n        var g: Graphics = this._getGraphicsFromSprite(graphicO, sprite);\r\n        var ox: number = 0;\r\n        var oy: number = 0;\r\n        if (graphicO.props) {\r\n            ox = this._getObjVar(graphicO.props, \"x\", 0);\r\n            oy = this._getObjVar(graphicO.props, \"y\", 0);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(ox, oy);\r\n        }\r\n        var i: number, len: number;\r\n        len = graphics.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._addGraphicToGraphics(graphics[i], g);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(-ox, -oy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic绘图指令添加到sprite上\r\n     * @param graphicO 绘图指令描述\r\n     */\r\n    static _addGraphicToSprite(graphicO: any, sprite: Sprite, isChild: boolean = false): void {\r\n        var g: Graphics = isChild ? this._getGraphicsFromSprite(graphicO, sprite) : sprite.graphics;\r\n        this._addGraphicToGraphics(graphicO, g);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getGraphicsFromSprite(dataO: any, sprite: Sprite): Graphics {\r\n        if (!dataO || !dataO.props) return sprite.graphics;\r\n        var propsName: string = dataO.props.renderType;\r\n        if (propsName === \"hit\" || propsName === \"unHit\") {\r\n            var hitArea: HitArea = <HitArea>sprite._style.hitArea || (sprite.hitArea = new HitArea());\r\n            if (!hitArea[propsName]) {\r\n                hitArea[propsName] = new Graphics();\r\n            }\r\n            var g: Graphics = hitArea[propsName];\r\n        }\r\n        if (!g) g = sprite.graphics;\r\n        return g;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getTransformData(propsO: any): Matrix {\r\n        var m: Matrix;\r\n\r\n        if (\"pivotX\" in propsO || \"pivotY\" in propsO) {\r\n            m = m || new Matrix();\r\n            m.translate(-this._getObjVar(propsO, \"pivotX\", 0), -this._getObjVar(propsO, \"pivotY\", 0));\r\n        }\r\n\r\n        var sx: number = this._getObjVar(propsO, \"scaleX\", 1), sy: number = this._getObjVar(propsO, \"scaleY\", 1);\r\n        var rotate: number = this._getObjVar(propsO, \"rotation\", 0);\r\n        var skewX: number = this._getObjVar(propsO, \"skewX\", 0);\r\n        var skewY: number = this._getObjVar(propsO, \"skewY\", 0);\r\n\r\n        if (sx != 1 || sy != 1 || rotate != 0) {\r\n            m = m || new Matrix();\r\n            m.scale(sx, sy);\r\n            m.rotate(rotate * 0.0174532922222222);\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _addGraphicToGraphics(graphicO: any, graphic: Graphics): void {\r\n        var propsO: any;\r\n        propsO = graphicO.props;\r\n        if (!propsO) return;\r\n        var drawConfig: any;\r\n        drawConfig = this.DrawTypeDic[graphicO.type];\r\n        if (!drawConfig) return;\r\n\r\n        var g: Graphics = graphic;\r\n        var params: any = this._getParams(propsO, drawConfig[1], drawConfig[2], drawConfig[3]);\r\n        var m: Matrix = this._tM;\r\n        if (m || this._alpha != 1) {\r\n            g.save();\r\n            if (m) g.transform(m);\r\n            if (this._alpha != 1) g.alpha(this._alpha);\r\n        }\r\n        (g as any)[drawConfig[0]].apply(g, params);\r\n        if (m || this._alpha != 1) {\r\n            g.restore();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLineData(params: any[]): any[] {\r\n        params[2] = parseFloat(params[0]) + parseFloat(params[2]);\r\n        params[3] = parseFloat(params[1]) + parseFloat(params[3]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptTextureData(params: any[]): any[] {\r\n        params[0] = ILaya.Loader.getRes(params[0]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLinesData(params: any[]): any[] {\r\n        params[2] = this._getPointListByStr(params[2]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _isDrawType(type: string): boolean {\r\n        if (type === \"Image\") return false;\r\n        return type in this.DrawTypeDic;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getParams(obj: any, params: any[], xPos: number = 0, adptFun: string = null): any[] {\r\n        var rst: any = this._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number;\r\n        len = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], params[i][1]);\r\n        }\r\n        this._alpha = this._getObjVar(obj, \"alpha\", 1);\r\n        var m: Matrix;\r\n        m = this._getTransformData(obj);\r\n        if (m) {\r\n            if (!xPos) xPos = 0;\r\n\r\n            m.translate(rst[xPos], rst[xPos + 1]);\r\n            rst[xPos] = rst[xPos + 1] = 0;\r\n            this._tM = m;\r\n        } else {\r\n            this._tM = null;\r\n        }\r\n        if (adptFun && (this as any)[adptFun]) {\r\n            rst = (this as any)[adptFun](rst);\r\n        }\r\n        return rst;\r\n    }\r\n    /**@private */\r\n    private static DrawTypeDic: any = { \"Rect\": [\"drawRect\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Circle\": [\"drawCircle\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Pie\": [\"drawPie\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"startAngle\", 0], [\"endAngle\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Image\": [\"drawTexture\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]]], \"Texture\": [\"drawTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]], 1, \"_adptTextureData\"], \"FillTexture\": [\"fillTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"repeat\", null]], 1, \"_adptTextureData\"], \"FillText\": [\"fillText\", [[\"text\", \"\"], [\"x\", 0], [\"y\", 0], [\"font\", null], [\"color\", null], [\"textAlign\", null]], 1], \"Line\": [\"drawLine\", [[\"x\", 0], [\"y\", 0], [\"toX\", 0], [\"toY\", 0], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLineData\"], \"Lines\": [\"drawLines\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Curves\": [\"drawCurves\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Poly\": [\"drawPoly\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]], 0, \"_adptLinesData\"] };\r\n    /**@private */\r\n    private static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _tM: Matrix;\r\n    /**@private */\r\n    private static _alpha: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getPointListByStr(str: string): any[] {\r\n        var pointArr: any[] = str.split(\",\");\r\n        var i: number, len: number;\r\n        len = pointArr.length;\r\n        for (i = 0; i < len; i++) {\r\n            pointArr[i] = parseFloat(pointArr[i]);\r\n        }\r\n        return pointArr;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getObjVar(obj: any, key: string, noValue: any): any {\r\n        if (key in obj) {\r\n            return obj[key];\r\n        }\r\n        return noValue;\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass DataWatcher {\r\n    comp: any;\r\n    prop: string;\r\n    value: string;\r\n\r\n    //TODO:coverage\r\n    constructor(comp: any, prop: string, value: string) {\r\n        this.comp = comp;\r\n        this.prop = prop;\r\n        this.value = value;\r\n    }\r\n\r\n    exe(view: any): void {\r\n        var fun: Function = LegacyUIParser.getBindFun(this.value);\r\n        this.comp[this.prop] = fun.call(this, view);\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass InitTool {\r\n    /**@private */\r\n    private _nodeRefList: any[];\r\n    /**@private */\r\n    private _initList: any[];\r\n    /**@internal */\r\n    _idMap: { [key: string]: Sprite };\r\n\r\n    //TODO:coverage\r\n    reset(): void {\r\n        this._nodeRefList = null;\r\n        this._initList = null;\r\n        this._idMap = null;\r\n    }\r\n\r\n    //TODO:coverage\r\n    recover(): void {\r\n        this.reset();\r\n        Pool.recover(\"InitTool\", this);\r\n    }\r\n\r\n    static create(): InitTool {\r\n        var tool: InitTool = Pool.getItemByClass(\"InitTool\", InitTool);\r\n        tool._idMap = {};\r\n        return tool;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addNodeRef(node: any, prop: string, referStr: string): void {\r\n        if (!this._nodeRefList) this._nodeRefList = [];\r\n        this._nodeRefList.push([node, prop, referStr]);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    setNodeRef(): void {\r\n        if (!this._nodeRefList) return;\r\n        if (!this._idMap) {\r\n            this._nodeRefList = null;\r\n            return;\r\n        }\r\n        var i: number, len: number;\r\n        len = this._nodeRefList.length;\r\n        var tRefInfo: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tRefInfo = this._nodeRefList[i];\r\n            tRefInfo[0][tRefInfo[1]] = this.getReferData(tRefInfo[2]);\r\n        }\r\n        this._nodeRefList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    getReferData(referStr: string): any {\r\n        if (referStr.indexOf(\"@Prefab:\") >= 0) {\r\n            return new PrefabImpl(LegacyUIParser, Loader.getRes(referStr.replace(\"@Prefab:\", \"\")), 2);\r\n        } else if (referStr.indexOf(\"@arr:\") >= 0) {\r\n            referStr = referStr.replace(\"@arr:\", \"\");\r\n            var list: string[];\r\n            list = referStr.split(\",\");\r\n            var i: number, len: number;\r\n            var tStr: string;\r\n            len = list.length;\r\n            var list2: Sprite[] = [];\r\n            for (i = 0; i < len; i++) {\r\n                tStr = list[i];\r\n                if (tStr) {\r\n                    list2.push(this._idMap[tStr.replace(\"@node:\", \"\")]);\r\n                } else {\r\n                    list2.push(null);\r\n                }\r\n            }\r\n            return list2;\r\n        } else {\r\n            return this._idMap[referStr.replace(\"@node:\", \"\")];\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addInitItem(item: any): void {\r\n        if (!this._initList) this._initList = [];\r\n        this._initList.push(item);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    doInits(): void {\r\n        if (!this._initList) return;\r\n        this._initList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    finish(): void {\r\n        this.setNodeRef();\r\n        this.doInits();\r\n        this.recover();\r\n    }\r\n}","import { Node } from \"../display/Node\";\r\nimport { ILoadURL } from \"../net/Loader\";\r\nimport { Prefab } from \"./HierarchyResource\";\r\n\r\n/**\r\n * 层次结构分析器API\r\n */\r\nexport interface IHierarchyParserAPI {\r\n    /**收集资源链接 */\r\n    collectResourceLinks: (data: any, basePath: string) => (string | ILoadURL)[],\r\n    /**解析 */\r\n    parse: (data: any, options?: Record<string, any>, errors?: Array<any>) => Array<Node> | Node;\r\n}\r\n\r\n/**\r\n * 预制体导入\r\n */\r\nexport class PrefabImpl extends Prefab {\r\n    /**数据 */\r\n    data: any;\r\n    /**层次结构API */\r\n    api: IHierarchyParserAPI;\r\n\r\n    /**\r\n     * 实例化一个预制体\r\n     * @param api 层次结构API\r\n     * @param data 数据\r\n     * @param version 版本\r\n     */\r\n    constructor(api: IHierarchyParserAPI, data: any, version: number) {\r\n        super(version);\r\n\r\n        this.api = api;\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * 创建一个\r\n     * @param options \r\n     * @param errors \r\n     * @returns \r\n     */\r\n    create(options?: Record<string, any>, errors?: any[]): Node {\r\n        let ret = this.api.parse(this.data, options, errors);\r\n        if (Array.isArray(ret)) {\r\n            if (ret.length == 1) {\r\n                ret[0].url = this.url;\r\n            }\r\n            return ret[0];\r\n        }\r\n        else {\r\n            ret.url = this.url;\r\n            return ret;\r\n        }\r\n    }\r\n}\r\n","import { Sprite } from \"./Sprite\";\r\nimport { Widget } from \"../components/Widget\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Resource } from \"../resource/Resource\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { NodeFlags } from \"../Const\";\r\n\r\n/**\r\n * 场景类，负责场景创建，加载，销毁等功能\r\n * 场景被从节点移除后，并不会被自动垃圾机制回收，如果想回收，请调用destroy接口，可以通过unDestroyedScenes属性查看还未被销毁的场景列表\r\n */\r\nexport class Scene extends Sprite {\r\n    /**创建后，还未被销毁的场景列表，方便查看还未被销毁的场景列表，方便内存管理，本属性只读，请不要直接修改*/\r\n    static readonly unDestroyedScenes: Set<Scene> = new Set();\r\n    /**获取根节点*/\r\n    private static _root: Sprite;\r\n    /**@private */\r\n    private static _loadPage: Sprite;\r\n\r\n    /**场景被关闭后，是否自动销毁（销毁节点和使用到的资源），默认为false*/\r\n    autoDestroyAtClosed: boolean = false;\r\n    /**@internal */\r\n    _idMap?: any;\r\n    _scene3D: any;\r\n\r\n    /**@private 相对布局组件*/\r\n    protected _widget: Widget;\r\n\r\n    /**场景时钟*/\r\n    private _timer: Timer;\r\n    /**@private */\r\n    private _viewCreated: boolean = false;\r\n\r\n    constructor(createChildren = true) {\r\n        super();\r\n\r\n        this._timer = ILaya.timer;\r\n        this._widget = Widget.EMPTY;\r\n\r\n        this._scene = this;\r\n        if (createChildren)\r\n            this.createChildren();\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     */\r\n    protected createChildren(): void {\r\n    }\r\n\r\n    /**\r\n     * 兼容加载模式\r\n     * 加载模式设置uimap\r\n     * @param url uimapJosn的url\r\n     */\r\n    static setUIMap(url: string): void {\r\n        let uimap = ILaya.loader.getRes(url);\r\n        if (uimap) {\r\n            for (let key in uimap) {\r\n                ILaya.Loader.loadedMap[key + \".scene\"] = uimap[key];\r\n            }\r\n        } else {\r\n            throw \"请提前加载uimap的json，再使用该接口设置！\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     * 装载场景视图。用于加载模式。\r\n     * @param path 场景地址。\r\n     */\r\n    loadScene(path: string): void {\r\n        Scene.unDestroyedScenes.add(this);\r\n        let url: string = path.indexOf(\".\") > -1 ? path : path + \".scene\";\r\n        let content: Prefab = ILaya.loader.getRes(url);\r\n        if (content) {\r\n            if (!this._viewCreated) {\r\n                content.create({ root: this });\r\n                this._viewCreated = true;\r\n                Scene.unDestroyedScenes.add(this);\r\n            }\r\n        } else {\r\n            this._setBit(NodeFlags.NOT_READY, true);\r\n            ILaya.loader.load(url, null, value => {\r\n                if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            }).then((content: Prefab) => {\r\n                if (!content) throw \"Can not find scene:\" + path;\r\n                if (!this._viewCreated) {\r\n                    this.url = url;\r\n                    Scene.hideLoadingPage();\r\n\r\n                    content.create({ root: this });\r\n                    this._viewCreated = true;\r\n                    Scene.unDestroyedScenes.add(this);\r\n                }\r\n                else\r\n                    this._setBit(NodeFlags.NOT_READY, false);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     * 通过视图数据创建视图。\r\n     * @param uiView 视图数据信息。\r\n     */\r\n    createView(view: any): void {\r\n        if (view && !this._viewCreated) {\r\n            this._viewCreated = true;\r\n            LegacyUIParser.createByData(this, view);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 根据IDE内的节点id，获得节点实例\r\n    */\r\n    getNodeByID(id: number): any {\r\n        if (this._idMap) return this._idMap[id];\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 打开场景。【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选）\r\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\r\n     */\r\n    open(closeOther: boolean = true, param: any = null): void {\r\n        if (closeOther) Scene.closeAll();\r\n        Scene.root.addChild(this);\r\n        if (this._scene3D)\r\n            ILaya.stage.addChildAt(this._scene3D, 0);\r\n        this.onOpened(param);\r\n    }\r\n\r\n    /**场景打开完成后，调用此方法（如果有弹出动画，则在动画完成后执行）*/\r\n    onOpened(param: any): void {\r\n        //trace(\"onOpened\");\r\n    }\r\n\r\n    /**\r\n     * 关闭场景\r\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param type 关闭的原因，会传递给onClosed函数\r\n     */\r\n    close(type: string = null): void {\r\n        this.onClosed(type);\r\n        if (this.autoDestroyAtClosed) {\r\n            this.destroy();\r\n            if (this._scene3D)\r\n                this._scene3D.destroy();\r\n        }\r\n        else {\r\n            this.removeSelf();\r\n            if (this._scene3D)\r\n                this._scene3D.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭完成后，调用此方法（如果有关闭动画，则在动画完成后执行）\r\n     * @param type 如果是点击默认关闭按钮触发，则传入关闭按钮的名字(name)，否则为null。\r\n     */\r\n    onClosed(type: string = null): void {\r\n        //trace(\"onClosed\");\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        if (this._scene3D) {\r\n            this._scene3D.destroy();\r\n            this._scene3D = null;\r\n        }\r\n\r\n        this._idMap = null;\r\n        Scene.unDestroyedScenes.delete(this);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * 场景时钟\r\n     * @override\r\n     */\r\n    get timer(): Timer {\r\n        return this._timer;\r\n    }\r\n\r\n    set timer(value: Timer) {\r\n        this._timer = value;\r\n    }\r\n\r\n    /**\r\n     * 场景包含的3D场景实例\r\n     */\r\n    get scene3D() {\r\n        return this._scene3D;\r\n    }\r\n\r\n    /**\r\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get top(): number {\r\n        return this._widget.top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (value != this._widget.top) {\r\n            this._getWidget().top = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get bottom(): number {\r\n        return this._widget.bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (value != this._widget.bottom) {\r\n            this._getWidget().bottom = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get left(): number {\r\n        return this._widget.left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (value != this._widget.left) {\r\n            this._getWidget().left = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get right(): number {\r\n        return this._widget.right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (value != this._widget.right) {\r\n            this._getWidget().right = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerX(): number {\r\n        return this._widget.centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (value != this._widget.centerX) {\r\n            this._getWidget().centerX = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerY(): number {\r\n        return this._widget.centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (value != this._widget.centerY) {\r\n            this._getWidget().centerY = value;\r\n        }\r\n    }\r\n\r\n    protected _shouldRefreshLayout(): void {\r\n        super._shouldRefreshLayout();\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        this.event(Event.RESIZE);\r\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\r\n    }\r\n\r\n    /**\r\n     * 重新排版\r\n     */\r\n    freshLayout() {\r\n        if (this._widget != Widget.EMPTY) {\r\n            this._widget.resetLayout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\r\n     */\r\n    private _getWidget(): Widget {\r\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\r\n        return this._widget;\r\n    }\r\n\r\n    //////////////////////////////////////静态方法//////////////////////////////////////////\r\n\r\n    /**获取场景根容器*/\r\n    static get root(): Sprite {\r\n        let root = Scene._root;\r\n        if (!root) {\r\n            root = Scene._root = (<Sprite>ILaya.stage.addChild(new Sprite()));\r\n            root.name = \"root\";\r\n            root.mouseThrough = true;\r\n            ILaya.stage.on(\"resize\", null, () => {\r\n                root.size(ILaya.stage.width, ILaya.stage.height);\r\n                root.event(Event.RESIZE);\r\n            });\r\n            root.size(ILaya.stage.width, ILaya.stage.height);\r\n            root.event(Event.RESIZE);\r\n        }\r\n        return root;\r\n    }\r\n\r\n    /**\r\n     * 加载场景及场景使用到的资源\r\n     * @param\turl\t\t\t场景地址\r\n     * @param\tcomplete\t加载完成回调，返回场景实例（可选）\r\n     * @param\tprogress\t加载进度回调（可选）\r\n     */\r\n    static load(url: string, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        return ILaya.loader.load(url, null, value => {\r\n            if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            progress && progress.runWith(value);\r\n        }).then((content: Prefab) => {\r\n            if (!content) throw \"Can not find scene:\" + url;\r\n\r\n            let scene: Scene;\r\n            let errors: Array<any> = [];\r\n            let ret = content.create(null, errors);\r\n            if (errors.length > 0)\r\n                console.warn(`Error loading ${url}: \\n${errors.join(\"\\n\")}`);\r\n\r\n            if (ret instanceof Scene)\r\n                scene = ret;\r\n            else if (ret._is3D) {\r\n                scene = new Scene();\r\n                scene.left = scene.right = scene.top = scene.bottom = 0;\r\n                scene._scene3D = ret;\r\n            }\r\n            else\r\n                throw \"Not a scene:\" + url;\r\n\r\n            scene._viewCreated = true;\r\n            if (scene._scene3D)\r\n                scene._scene3D._scene2D = scene;\r\n            Scene.unDestroyedScenes.add(scene);\r\n            Scene.hideLoadingPage();\r\n            complete && complete.runWith(scene);\r\n\r\n            return scene;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载并打开场景\r\n     * @param\turl\t\t\t场景地址\r\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选），【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\r\n     * @param\tcomplete\t打开完成回调，返回场景实例（可选）\r\n     * @param\tprogress\t加载进度回调（可选）\r\n     */\r\n    static open(url: string, closeOther: boolean = true, param: any = null, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        //兼容处理\r\n        if (param instanceof Handler) {\r\n            var temp: any = complete;\r\n            complete = param;\r\n            param = temp;\r\n        }\r\n        Scene.showLoadingPage();\r\n        return Scene.load(url, Handler.create(null, this._onSceneLoaded, [closeOther, complete, param]), progress);\r\n    }\r\n\r\n    /**@private */\r\n    private static _onSceneLoaded(closeOther: boolean, complete: Handler, param: any, scene: Scene): void {\r\n        scene.open(closeOther, param);\r\n        if (complete) complete.runWith(scene);\r\n    }\r\n\r\n    /**\r\n     * 根据地址，关闭场景（包括对话框）\r\n     * @param\turl\t\t场景地址\r\n     * @param\tname\t如果name不为空，name必须相同才能关闭\r\n     * @return\t返回是否关闭成功，如果url找不到，则不成功\r\n     */\r\n    static close(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene && scene.parent && scene.url === url && (name == null || scene.name == name)) {\r\n                scene.close();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * 关闭所有场景，不包括对话框，如果关闭对话框，请使用Dialog.closeAll()\r\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     */\r\n    static closeAll(): void {\r\n        let root: Sprite = Scene.root;\r\n        for (let i = 0, n = root.numChildren; i < n; i++) {\r\n            var scene = root.getChildAt(0);\r\n            if (scene instanceof Scene)\r\n                scene.close();\r\n            else\r\n                scene.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据地址，销毁场景（包括对话框）\r\n     * @param\turl\t\t场景地址\r\n     * @param\tname\t如果name不为空，name必须相同才能关闭\r\n     * @return\t返回是否销毁成功，如果url找不到，则不成功\r\n     */\r\n    static destroy(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene.url === url && (name == null || scene.name == name) && !scene._destroyed) {\r\n                scene.destroy();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\r\n     */\r\n    static gc(): void {\r\n        Resource.destroyUnusedResources();\r\n    }\r\n\r\n    /**\r\n     * 设置loading界面，引擎会在调用open方法后，延迟打开loading界面，在页面添加到舞台之后，关闭loading界面\r\n     * @param\tloadPage \tload界面实例\r\n     */\r\n    static setLoadingPage(loadPage: Sprite): void {\r\n        Scene._loadPage = loadPage;\r\n    }\r\n\r\n    /**\r\n     * 显示loading界面\r\n     * @param\tparam 打开参数，如果是scene，则会传递给onOpened方法\r\n     * @param\tdelay 延迟打开时间，默认500毫秒\r\n     */\r\n    static showLoadingPage(param: any = null, delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._showLoading, [param], false);\r\n        }\r\n    }\r\n\r\n    private static _showLoading(param: any): void {\r\n        ILaya.stage.addChild(Scene._loadPage);\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.onOpened(param);\r\n    }\r\n\r\n    private static _hideLoading(): void {\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.close();\r\n        else\r\n            Scene._loadPage.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * 隐藏loading界面\r\n     * @param\tdelay 延迟关闭时间，默认500毫秒\r\n     */\r\n    static hideLoadingPage(delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._hideLoading);\r\n        }\r\n    }\r\n}","import { CallLater } from \"./CallLater\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * <code>Timer</code> 是时钟管理类。它是一个单例，不要手动实例化此类，应该通过 Laya.timer 访问。\r\n */\r\nexport class Timer {\r\n    /**@private */\r\n    static gSysTimer: Timer = null;\r\n\r\n    /**@private */\r\n    private static _pool: any[] = [];\r\n    /**@private */\r\n    static _mid: number = 1;\r\n\r\n\r\n    /** 时针缩放。*/\r\n    scale: number = 1;\r\n    /** 当前帧开始的时间。*/\r\n    currTimer: number;\r\n    /** 当前的帧数。*/\r\n    currFrame: number = 0;\r\n    /**@internal 两帧之间的时间间隔,单位毫秒。*/\r\n    _delta: number = 0;\r\n    /**@internal */\r\n    _lastTimer: number;\r\n    /**@private */\r\n    private _map: { [key: string]: TimerHandler } = {};\r\n    /**@private */\r\n    private _handlers: any[] = [];\r\n    /**@private */\r\n    private _temp: any[] = [];\r\n    /**@private */\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * 创建 <code>Timer</code> 类的一个实例。\r\n     */\r\n    constructor(autoActive: boolean = true) {\r\n        autoActive && Timer.gSysTimer && Timer.gSysTimer.frameLoop(1, this, this._update);\r\n        this.currTimer = this._getNowData();\r\n        this._lastTimer = this._getNowData();\r\n    }\r\n\r\n    /**两帧之间的时间间隔,单位毫秒。*/\r\n    get delta(): number {\r\n        return this._delta;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        if (this.scale <= 0) {\r\n            this._lastTimer = this._getNowData();\r\n            this._delta = 0;\r\n            return;\r\n        }\r\n        var frame: number = this.currFrame = this.currFrame + this.scale;\r\n        var now: number = this._getNowData();\r\n        var awake: boolean = (now - this._lastTimer) > 30000;\r\n        this._delta = (now - this._lastTimer) * this.scale;\r\n        var timer: number = this.currTimer = this.currTimer + this._delta;\r\n        this._lastTimer = now;\r\n\r\n        //处理handler\r\n        var handlers: any[] = this._handlers;\r\n        this._count = 0;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) {\r\n                var t: number = handler.userFrame ? frame : timer;\r\n                if (t >= handler.exeTime) {\r\n                    if (handler.repeat) {\r\n                        if (!handler.jumpFrame || awake) {\r\n                            handler.exeTime += handler.delay;\r\n                            handler.run(false);\r\n                            if (t > handler.exeTime) {\r\n                                //如果执行一次后还能再执行，做跳出处理，如果想用多次执行，需要设置jumpFrame=true\r\n                                handler.exeTime += Math.ceil((t - handler.exeTime) / handler.delay) * handler.delay;\r\n                            }\r\n                        } else {\r\n                            while (t >= handler.exeTime) {\r\n                                handler.exeTime += handler.delay;\r\n                                handler.run(false);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        handler.run(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._count++;\r\n            }\r\n        }\r\n\r\n        if (this._count > 30 || frame % 200 === 0) this._clearHandlers();\r\n    }\r\n\r\n    /** @private */\r\n    private _clearHandlers(): void {\r\n        var handlers: any[] = this._handlers;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) this._temp.push(handler);\r\n            else this._recoverHandler(handler);\r\n        }\r\n        this._handlers = this._temp;\r\n        handlers.length = 0;\r\n        this._temp = handlers;\r\n    }\r\n\r\n    /** @private */\r\n    private _recoverHandler(handler: TimerHandler): void {\r\n        if (this._map[handler.key] == handler) delete this._map[handler.key];\r\n        handler.clear();\r\n        Timer._pool.push(handler);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * get now time data\r\n     * @returns \r\n     */\r\n    public _getNowData(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /** @internal */\r\n    _create(useFrame: boolean, repeat: boolean, delay: number, caller: any, method: Function, args: any[], coverBefore: boolean): TimerHandler {\r\n        //如果延迟为0，则立即执行\r\n        if (!delay) {\r\n            method.apply(caller, args);\r\n            return null;\r\n        }\r\n\r\n        //先覆盖相同函数的计时\r\n        if (coverBefore) {\r\n            var handler: TimerHandler = this._getHandler(caller, method);\r\n            if (handler) {\r\n                handler.repeat = repeat;\r\n                handler.userFrame = useFrame;\r\n                handler.delay = delay;\r\n                handler.caller = caller;\r\n                handler.method = method;\r\n                handler.args = args;\r\n                handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n                return handler;\r\n            }\r\n        }\r\n\r\n        //找到一个空闲的timerHandler\r\n        handler = Timer._pool.length > 0 ? Timer._pool.pop() : new TimerHandler();\r\n        handler.repeat = repeat;\r\n        handler.userFrame = useFrame;\r\n        handler.delay = delay;\r\n        handler.caller = caller;\r\n        handler.method = method;\r\n        handler.args = args;\r\n        handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n\r\n        //索引handler\r\n        this._indexHandler(handler);\r\n\r\n        //插入数组\r\n        this._handlers.push(handler);\r\n\r\n        return handler;\r\n    }\r\n\r\n    /** @private */\r\n    private _indexHandler(handler: TimerHandler): void {\r\n        var caller: any = handler.caller;\r\n        var method: any = handler.method;\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        handler.key = cid + \"_\" + mid;\r\n        this._map[handler.key] = handler;\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次。\r\n     * @param\tdelay\t延迟时间(单位为毫秒)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    once(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行。\r\n     * @param\tdelay\t间隔时间(单位毫秒)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\r\n     */\r\n    loop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        var handler: TimerHandler = this._create(false, true, delay, caller, method, args, coverBefore);\r\n        if (handler) handler.jumpFrame = jumpFrame;\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次(基于帧率)。\r\n     * @param\tdelay\t延迟几帧(单位为帧)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行(基于帧率)。\r\n     * @param\tdelay\t间隔几帧(单位为帧)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /** 返回统计信息。*/\r\n    toString(): string {\r\n        return \" handlers:\" + this._handlers.length + \" pool:\" + Timer._pool.length;\r\n    }\r\n\r\n    /**\r\n     * 清理定时器。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    clear(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理对象身上的所有定时器。\r\n     * @param\tcaller 执行域(this)。\r\n     */\r\n    clearAll(caller: any): void {\r\n        if (!caller) return;\r\n        for (var i: number = 0, n: number = this._handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = this._handlers[i];\r\n            if (handler.caller === caller) {\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): TimerHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        var key: any = cid + \"_\" + mid;\r\n        return this._map[key];\r\n    }\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        CallLater.I.callLater(caller, method, args);\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        CallLater.I.runCallLater(caller, method);\r\n    }\r\n\r\n    /**\r\n     * 取消执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    clearCallLater(caller: any, method: Function): void {\r\n        CallLater.I.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * 立即提前执行定时器，执行之后从队列中删除\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runTimer(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停时钟\r\n     */\r\n    pause(): void {\r\n        this.scale = 0;\r\n    }\r\n\r\n    /**\r\n     * 恢复时钟\r\n     */\r\n    resume(): void {\r\n        this.scale = 1;\r\n    }\r\n\r\n\r\n    destroy() {\r\n        for (var i = 0, n = this._handlers.length; i < n; i++) {\r\n            var handler = this._handlers[i];\r\n            handler.clear();\r\n        }\r\n        this._handlers.length = 0;\r\n        this._map = {};\r\n        this._temp.length = 0;\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass TimerHandler {\r\n    key: string;\r\n    repeat: boolean;\r\n    delay: number;\r\n    userFrame: boolean;\r\n    exeTime: number;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n    jumpFrame: boolean;\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(withClear: boolean): void {\r\n        var caller: any = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method: Function = this.method;\r\n        var args: any[] = this.args;\r\n        withClear && this.clear();\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { Timer } from \"./Timer\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class CallLater {\r\n    static I = new CallLater();\r\n    /**@private */\r\n    private _pool: LaterHandler[] = [];\r\n    /**@private */\r\n    private _map: { [key: string]: LaterHandler } = {};\r\n    /**@private */\r\n    private _laters: LaterHandler[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     * 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        let laters = this._laters;\r\n        let len = laters.length;\r\n        if (len > 0) {\r\n            for (let i = 0, n = len - 1; i <= n; i++) {\r\n                let handler = laters[i];\r\n                this._map[handler.key] = null;\r\n                if (handler.method !== null) {\r\n                    handler.run();\r\n                    handler.clear();\r\n                }\r\n                this._pool.push(handler);\r\n                i === n && (n = laters.length - 1);\r\n            }\r\n            laters.length = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): LaterHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = (Timer._mid++));\r\n        return this._map[cid + '.' + mid]\r\n    }\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        if (this._getHandler(caller, method) == null) {\r\n            let handler: LaterHandler;\r\n            if (this._pool.length)\r\n                handler = this._pool.pop();\r\n            else\r\n                handler = new LaterHandler();\r\n            //设置属性\r\n            handler.caller = caller;\r\n            handler.method = method;\r\n            handler.args = args;\r\n            //索引handler\r\n            var cid: number = caller ? caller.$_GID : 0;\r\n            var mid: number = (method as any)[\"$_TID\"];\r\n            handler.key = cid + '.' + mid;\r\n            this._map[handler.key] = handler\r\n            //插入队列\r\n            this._laters.push(handler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run();\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    clear(caller: any, method: Function) {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            this._map[handler.key] = null;\r\n            handler.key = \"\";\r\n            handler.clear();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearAll(caller: any) {\r\n        if (!caller) return;\r\n        for (var i = 0, n = this._laters.length; i < n; i++) {\r\n            var handler = this._laters[i];\r\n            if (handler.caller === caller) {\r\n                this._map[handler.key] = null;\r\n                handler.key = \"\";\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass LaterHandler {\r\n    key: string;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(): void {\r\n        var caller = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method = this.method;\r\n        var args = this.args;\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderState2D } from \"./utils/RenderState2D\"\r\n\r\n/**\r\n * @private\r\n */\r\nexport class WebGL {\r\n    static isNativeRender_enable: boolean = false;\r\n\r\n    static _nativeRender_enable(): void {\r\n    }\r\n\r\n    //使用webgl渲染器\r\n    static enable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    static onStageResize(width: number, height: number): void {\r\n        LayaGL.renderEngine.viewport(0, 0, width, height);\r\n        RenderState2D.width = width;\r\n        RenderState2D.height = height;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { WebGL } from \"../webgl/WebGL\"\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport class RunDriver {\r\n\r\n    /**\r\n     * 用于改变 WebGL宽高信息。\r\n     */\r\n    static changeWebGLSize: Function = function (w: number, h: number): void {\r\n        WebGL.onStageResize(w, h);\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from \"./Component\";\r\n\r\nexport class ComponentDriver {\r\n    private _onUpdates: Set<Component> = new Set();\r\n    private _onLateUpdates: Set<Component> = new Set();\r\n    private _onPreRenders: Set<Component> = new Set();\r\n    private _onPostRenders: Set<Component> = new Set();\r\n\r\n    private _toStarts: Set<Component> = new Set();\r\n    readonly _toDestroys: Set<Component> = new Set();\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件Onstart\r\n     */\r\n    callStart() {\r\n        for (let ele of this._toStarts) {\r\n            if (ele._status == 2) {\r\n                ele._status = 3;\r\n\r\n                try {\r\n                    ele.onStart();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n        this._toStarts.clear();\r\n    }\r\n    /**\r\n     * @internal\r\n     * 调用组件OnUpdate\r\n     */\r\n    callUpdate() {\r\n        for (let ele of this._onUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件LayeUpdate\r\n     */\r\n    callLateUpdate() {\r\n        for (let ele of this._onLateUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onLateUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件onPreRender\r\n     */\r\n    callPreRender() {\r\n        for (let ele of this._onPreRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPreRender();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件onPostRender\r\n     */\r\n    callPostRender() {\r\n        for (let ele of this._onPostRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPostRender();\r\n                }\r\n                catch (err: any) {\r\n                    this.onError(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用销毁\r\n     */\r\n    callDestroy(): void {\r\n        for (let ele of this._toDestroys) {\r\n            try {\r\n                ele._destroy(true);\r\n            }\r\n            catch (err: any) {\r\n                this.onError(err);\r\n            }\r\n        }\r\n        this._toDestroys.clear();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 添加一个组件\r\n     * @param comp 组件\r\n     */\r\n    add(comp: Component) {\r\n        if (comp._status == 1) {\r\n            if (comp.onStart) {\r\n                comp._status = 2;\r\n                this._toStarts.add(comp);\r\n            }\r\n            else\r\n                comp._status = 3;\r\n        }\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.add(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.add(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.add(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.add(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 移除一个组件\r\n     * @param comp 组件\r\n     */\r\n    remove(comp: Component) {\r\n        if (comp._status == 2) //starting\r\n            comp._status = 1; //cancel start\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.delete(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.delete(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.delete(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.delete(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 删除组件Driver\r\n     */\r\n    destroy() {\r\n        //TODO:\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param err 错误\r\n     */\r\n    onError(err: any) {\r\n        console.error(err);\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Node } from \"./Node\";\r\nimport { Config } from \"./../../Config\";\r\nimport { Input } from \"./Input\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\nimport { InputManager } from \"../events/InputManager\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Render } from \"../renders/Render\"\r\nimport { RenderInfo } from \"../renders/RenderInfo\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { CallLater } from \"../utils/CallLater\"\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { RunDriver } from \"../utils/RunDriver\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n/**\r\n * stage大小经过重新调整时进行调度。\r\n * @eventType Event.RESIZE\r\n */\r\n/*[Event(name = \"resize\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台获得焦点时调度。比如浏览器或者当前标签处于后台，重新切换回来时进行调度。\r\n * @eventType Event.FOCUS\r\n */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台失去焦点时调度。比如浏览器或者当前标签被切换到后台后调度。\r\n * @eventType Event.BLUR\r\n */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台焦点变化时调度，使用Laya.stage.isFocused可以获取当前舞台是否获得焦点。\r\n * @eventType Event.FOCUS_CHANGE\r\n */\r\n/*[Event(name = \"focuschange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台可见性发生变化时调度（比如浏览器或者当前标签被切换到后台后调度），使用Laya.stage.isVisibility可以获取当前是否处于显示状态。\r\n * @eventType Event.VISIBILITY_CHANGE\r\n */\r\n/*[Event(name = \"visibilitychange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 浏览器全屏更改时调度，比如进入全屏或者退出全屏。\r\n * @eventType Event.FULL_SCREEN_CHANGE\r\n */\r\n/*[Event(name = \"fullscreenchange\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Stage</code> 是舞台类，显示列表的根节点，所有显示对象都在舞台上显示。通过 Laya.stage 单例访问。</p>\r\n * <p>Stage提供几种适配模式，不同的适配模式会产生不同的画布大小，画布越大，渲染压力越大，所以要选择合适的适配方案。</p>\r\n * <p>Stage提供不同的帧率模式，帧率越高，渲染压力越大，越费电，合理使用帧率甚至动态更改帧率有利于改进手机耗电。</p>\r\n */\r\nexport class Stage extends Sprite {\r\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_NOSCALE: string = \"noscale\";\r\n    /**应用根据屏幕大小铺满全屏，非等比缩放会变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_EXACTFIT: string = \"exactfit\";\r\n    /**应用显示全部内容，按照最小比率缩放，等比缩放不变形，一边可能会留空白，stage的宽高等于设计宽高。*/\r\n    static SCALE_SHOWALL: string = \"showall\";\r\n    /**应用按照最大比率缩放显示，宽或高方向会显示一部分，等比缩放不变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_NOBORDER: string = \"noborder\";\r\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于屏幕宽高。*/\r\n    static SCALE_FULL: string = \"full\";\r\n    /**应用保持设计宽度不变，高度根据屏幕比缩放，stage的宽度等于设计高度，高度根据屏幕比率大小而变化*/\r\n    static SCALE_FIXED_WIDTH: string = \"fixedwidth\";\r\n    /**应用保持设计高度不变，宽度根据屏幕比缩放，stage的高度等于设计宽度，宽度根据屏幕比率大小而变化*/\r\n    static SCALE_FIXED_HEIGHT: string = \"fixedheight\";\r\n    /**应用保持设计比例不变，全屏显示全部内容(类似showall，但showall非全屏，会有黑边)，根据屏幕长宽比，自动选择使用SCALE_FIXED_WIDTH或SCALE_FIXED_HEIGHT*/\r\n    static SCALE_FIXED_AUTO: string = \"fixedauto\";\r\n\r\n    static SCALE_FIXED_AUTO_LAYAME: string = \"fixedauto_layame\";\r\n    static SCALE_FIXED_AUTO_LAYAVERSE: string = \"fixedauto_layaverse\";\r\n\r\n    /**画布水平居左对齐。*/\r\n    static ALIGN_LEFT: string = \"left\";\r\n    /**画布水平居右对齐。*/\r\n    static ALIGN_RIGHT: string = \"right\";\r\n    /**画布水平居中对齐。*/\r\n    static ALIGN_CENTER: string = \"center\";\r\n    /**画布垂直居上对齐。*/\r\n    static ALIGN_TOP: string = \"top\";\r\n    /**画布垂直居中对齐。*/\r\n    static ALIGN_MIDDLE: string = \"middle\";\r\n    /**画布垂直居下对齐。*/\r\n    static ALIGN_BOTTOM: string = \"bottom\";\r\n\r\n    /**不更改屏幕。*/\r\n    static SCREEN_NONE: string = \"none\";\r\n    /**自动横屏。*/\r\n    static SCREEN_HORIZONTAL: string = \"horizontal\";\r\n    /**自动竖屏。*/\r\n    static SCREEN_VERTICAL: string = \"vertical\";\r\n\r\n    /**全速模式，以60的帧率运行。*/\r\n    static FRAME_FAST: string = \"fast\";\r\n    /**慢速模式，以30的帧率运行。*/\r\n    static FRAME_SLOW: string = \"slow\";\r\n    /**自动模式，以30的帧率运行，但鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗。*/\r\n    static FRAME_MOUSE: string = \"mouse\";\r\n    /**休眠模式，以1的帧率运行*/\r\n    static FRAME_SLEEP: string = \"sleep\";\r\n\r\n    /**当前焦点对象，此对象会影响当前键盘事件的派发主体。*/\r\n    focus: Node;\r\n    /**@private 相对浏览器左上角的偏移，弃用，请使用_canvasTransform。*/\r\n    offset: Point = new Point();\r\n    /**帧率类型，支持三种模式：fast-60帧(默认)，slow-30帧，mouse-30帧（鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗），sleep-1帧。*/\r\n    private _frameRate: string = \"fast\";\r\n    /**设计宽度（初始化时设置的宽度Laya.init(width,height)）*/\r\n    designWidth: number = 0;\r\n    /**设计高度（初始化时设置的高度Laya.init(width,height)）*/\r\n    designHeight: number = 0;\r\n    /**画布是否发生翻转。*/\r\n    canvasRotation: boolean = false;\r\n    /**画布的旋转角度。*/\r\n    canvasDegree: number = 0;\r\n    /**\r\n     * <p>设置是否渲染，设置为false，可以停止渲染，画面会停留到最后一次渲染上，减少cpu消耗，此设置不影响时钟。</p>\r\n     * <p>比如非激活状态，可以设置renderingEnabled=false以节省消耗。</p>\r\n     * */\r\n    renderingEnabled: boolean = true;\r\n    /**是否启用屏幕适配，可以适配后，在某个时候关闭屏幕适配，防止某些操作导致的屏幕意外改变*/\r\n    screenAdaptationEnabled: boolean = true;\r\n    /**@internal */\r\n    _canvasTransform: Matrix = new Matrix();\r\n    /**@private */\r\n    private _screenMode: string = \"none\";\r\n    /**@private */\r\n    private _scaleMode: string = \"noscale\";\r\n    /**@private */\r\n    private _alignV: string = \"top\";\r\n    /**@private */\r\n    private _alignH: string = \"left\";\r\n    /**@private */\r\n    private _bgColor: string = \"black\";\r\n    /**@internal */\r\n    _mouseMoveTime: number = 0;\r\n    /**@private */\r\n    private _renderCount: number = 0;\r\n    /**@private */\r\n    private _safariOffsetY: number = 0;\r\n    /**@private */\r\n    private _frameStartTime: number = 0;\r\n    /**@private */\r\n    private _previousOrientation: number = Browser.window.orientation;\r\n    /**@private */\r\n    private _isFocused: boolean;\r\n    /**@private */\r\n    private _isVisibility: boolean;\r\n    /**@internal webgl Color*/\r\n    _wgColor: number[] | null = [0, 0, 0, 1];\r\n    /**@internal */\r\n    _scene3Ds: Node[] = [];\r\n\r\n    /**@private */\r\n    private _globalRepaintSet: boolean = false;\t\t// 设置全局重画标志。这个是给IDE用的。IDE的Image无法在onload的时候通知对应的sprite重画。\r\n    /**@private */\r\n    private _globalRepaintGet: boolean = false;\t\t// 一个get一个set是为了把标志延迟到下一帧的开始，防止部分对象接收不到。\r\n\r\n    /**使用物理分辨率作为canvas大小，会改进渲染效果，但是会降低性能*/\r\n    useRetinalCanvas: boolean = false;\r\n\r\n    /**场景类，引擎中只有一个stage实例，此实例可以通过Laya.stage访问。*/\r\n    constructor() {\r\n        super();\r\n        super.set_transform(this._createTransform());\r\n        //重置默认值，请不要修改\r\n        this.mouseEnabled = true;\r\n        this.hitTestPrior = true;\r\n        this.autoSize = false;\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, true);\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        this._isFocused = true;\r\n        this._isVisibility = true;\r\n\r\n        //this.drawCallOptimize=true;\r\n        this.useRetinalCanvas = Config.useRetinalCanvas;\r\n\r\n        var window: any = Browser.window;\r\n        //var _me = this;\t\r\n\r\n        window.addEventListener(\"focus\", () => {\r\n            this._isFocused = true;\r\n            this.event(Event.FOCUS);\r\n            this.event(Event.FOCUS_CHANGE);\r\n        });\r\n        window.addEventListener(\"blur\", () => {\r\n            this._isFocused = false;\r\n            this.event(Event.BLUR);\r\n            this.event(Event.FOCUS_CHANGE);\r\n            if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n        });\r\n\r\n        // 各种浏览器兼容\r\n        var state = \"visibilityState\", visibilityChange = \"visibilitychange\";\r\n        var document: any = window.document;\r\n        if (typeof document.hidden !== \"undefined\") {\r\n            visibilityChange = \"visibilitychange\";\r\n            state = \"visibilityState\";\r\n        } else if (typeof document.mozHidden !== \"undefined\") {\r\n            visibilityChange = \"mozvisibilitychange\";\r\n            state = \"mozVisibilityState\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            visibilityChange = \"msvisibilitychange\";\r\n            state = \"msVisibilityState\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            visibilityChange = \"webkitvisibilitychange\";\r\n            state = \"webkitVisibilityState\";\r\n        }\r\n\r\n        window.document.addEventListener(visibilityChange, () => {\r\n            if (Browser.document[state] == \"hidden\") {\r\n                this._isVisibility = false;\r\n                if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n            } else {\r\n                this._isVisibility = true;\r\n            }\r\n            this.renderingEnabled = this._isVisibility;\r\n            this.event(Event.VISIBILITY_CHANGE);\r\n        });\r\n        window.addEventListener(\"resize\", () => {\r\n            // 处理屏幕旋转。旋转后收起输入法。\r\n            var orientation: any = Browser.window.orientation;\r\n            if (orientation != null && orientation != this._previousOrientation && this._isInputting()) {\r\n                (Input[\"inputElement\"] as any).target.focus = false;\r\n            }\r\n            this._previousOrientation = orientation;\r\n\r\n            // 弹出输入法不应对画布进行resize。\r\n            if (this._isInputting()) return;\r\n\r\n            // Safari横屏工具栏偏移\r\n            if (Browser.onSafari)\r\n                this._safariOffsetY = Browser.getSafariToolbarOffset();\r\n\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize();\r\n            }\r\n        });\r\n\r\n        // 微信的iframe不触发orientationchange。\r\n        window.addEventListener(\"orientationchange\", (e: any) => {\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize();\r\n            }\r\n        });\r\n\r\n        this._componentDriver = new ComponentDriver();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 在移动端输入时，输入法弹出期间不进行画布尺寸重置。\r\n     */\r\n    private _isInputting(): boolean {\r\n        return (Browser.onMobile && InputManager.isTextInputting);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set_width(value: number) {\r\n        this.designWidth = value;\r\n        super.set_width(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_width();\r\n    }\r\n\r\n    /**@inheritDoc @override */\r\n    set_height(value: number) {\r\n        this.designHeight = value;\r\n        super.set_height(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /** @override*/\r\n    get_height(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_height();\r\n    }\r\n\r\n    /**@override*/\r\n    set transform(value: Matrix) {\r\n        super.set_transform(value);\r\n    }\r\n    /**@inheritDoc @override*/\r\n    get transform(): Matrix {\r\n        if (this._tfChanged) this._adjustTransform();\r\n        return (this._transform = this._transform || this._createTransform());\r\n    }\r\n\r\n    /**\r\n     * 舞台是否获得焦点。\r\n     */\r\n    get isFocused(): boolean {\r\n        return this._isFocused;\r\n    }\r\n\r\n    /**\r\n     * 舞台是否处于可见状态(是否进入后台)。\r\n     */\r\n    get isVisibility(): boolean {\r\n        return this._isVisibility;\r\n    }\r\n\r\n    private _needUpdateCanvasSize: boolean = false;\r\n    updateCanvasSize(delay?: boolean): void {\r\n        if (delay) {\r\n            if (!this._needUpdateCanvasSize) {\r\n                this._needUpdateCanvasSize = true;\r\n                ILaya.systemTimer.callLater(this, this.updateCanvasSize);\r\n            }\r\n        }\r\n        else {\r\n            this.setScreenSize(Browser.clientWidth * Browser.pixelRatio, Browser.clientHeight * Browser.pixelRatio);\r\n        }\r\n    }\r\n\r\n    needUpdateCanvasSize() {\r\n        if (this._needUpdateCanvasSize)\r\n            this.updateCanvasSize();\r\n    }\r\n\r\n    /**\r\n     * 设置屏幕大小，场景会根据屏幕大小进行适配。可以动态调用此方法，来更改游戏显示的大小。\r\n     * @param\tscreenWidth\t\t屏幕宽度。\r\n     * @param\tscreenHeight\t屏幕高度。\r\n     */\r\n    setScreenSize(screenWidth: number, screenHeight: number): void {\r\n        this._needUpdateCanvasSize = false;\r\n\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (this._screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== this._screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        var canvas: HTMLCanvas = Render._mainCanvas;\r\n        var mat: Matrix = this._canvasTransform.identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth;\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        var pixelRatio: number = Browser.pixelRatio;\r\n        this._width = this.designWidth;\r\n        this._height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            // case Stage.SCALE_FULL:\r\n            //     scaleX = scaleY = 1;\r\n            //     this._width = canvasWidth = screenWidth;\r\n            //     this._height = canvasHeight = screenHeight;\r\n            //     break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = pixelRatio;\r\n                canvasWidth = screenWidth;\r\n                canvasHeight = screenHeight;\r\n                this._width = screenWidth / pixelRatio;\r\n                this._height = screenHeight / pixelRatio;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n                this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n                this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO_LAYAME:\r\n                if (screenWidth < screenHeight) {\r\n                    scaleY = scaleX;\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = screenHeight / this.designWidth;\r\n                    scaleY = scaleX;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\r\n                }\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO_LAYAVERSE:\r\n                if (screenWidth > screenHeight) {\r\n                    scaleX = scaleY;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                else {\r\n                    scaleX = screenWidth / this.designHeight;\r\n                    scaleY = scaleX;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        //根据不同尺寸缩放stage画面\r\n        scaleX *= this.scaleX;\r\n        scaleY *= this.scaleY;\r\n        if (scaleX === 1 && scaleY === 1) {\r\n            this.transform.identity();\r\n        } else {\r\n            this.transform.a = this._formatData(scaleX / (realWidth / canvasWidth));\r\n            this.transform.d = this._formatData(scaleY / (realHeight / canvasHeight));\r\n        }\r\n\r\n        //处理canvas大小\r\n        canvas.size(canvasWidth, canvasHeight);\r\n        RunDriver.changeWebGLSize(canvasWidth, canvasHeight);\r\n        mat.scale(realWidth / canvasWidth / pixelRatio, realHeight / canvasHeight / pixelRatio);\r\n\r\n        //处理水平对齐\r\n        if (this._alignH === Stage.ALIGN_LEFT) this.offset.x = 0;\r\n        else if (this._alignH === Stage.ALIGN_RIGHT) this.offset.x = screenWidth - realWidth;\r\n        else this.offset.x = (screenWidth - realWidth) * 0.5 / pixelRatio;\r\n\r\n        //处理垂直对齐\r\n        if (this._alignV === Stage.ALIGN_TOP) this.offset.y = 0;\r\n        else if (this._alignV === Stage.ALIGN_BOTTOM) this.offset.y = screenHeight - realHeight;\r\n        else this.offset.y = (screenHeight - realHeight) * 0.5 / pixelRatio;\r\n\r\n        //处理用户自行设置的画布偏移\r\n        this.offset.x = Math.round(this.offset.x);\r\n        this.offset.y = Math.round(this.offset.y);\r\n        mat.translate(this.offset.x, this.offset.y);\r\n        if (this._safariOffsetY) mat.translate(0, this._safariOffsetY);\r\n\r\n        //处理横竖屏\r\n        this.canvasDegree = 0;\r\n        if (rotation) {\r\n            if (this._screenMode === Stage.SCREEN_HORIZONTAL) {\r\n                mat.rotate(Math.PI / 2);\r\n                mat.translate(screenHeight / pixelRatio, 0);\r\n                this.canvasDegree = 90;\r\n            } else {\r\n                mat.rotate(-Math.PI / 2);\r\n                mat.translate(0, screenWidth / pixelRatio);\r\n                this.canvasDegree = -90;\r\n            }\r\n        }\r\n\r\n        mat.a = this._formatData(mat.a);\r\n        mat.d = this._formatData(mat.d);\r\n        mat.tx = this._formatData(mat.tx);\r\n        mat.ty = this._formatData(mat.ty);\r\n\r\n        super.set_transform(this.transform);\r\n        Stage._setStageStyle(canvas, canvasWidth, canvasHeight, mat);\r\n        //修正用户自行设置的偏移\r\n        if (this._safariOffsetY) mat.translate(0, -this._safariOffsetY);\r\n        this.visible = true;\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n\r\n        this.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 适配淘宝小游戏\r\n     * @param mainCanv \r\n     */\r\n    static _setStageStyle(mainCanv: HTMLCanvas, canvasWidth: number, canvasHeight: number, mat: Matrix) {\r\n        var canvasStyle: any = mainCanv.source.style;\r\n        canvasStyle.transformOrigin = canvasStyle.webkitTransformOrigin = canvasStyle.msTransformOrigin = canvasStyle.mozTransformOrigin = canvasStyle.oTransformOrigin = \"0px 0px 0px\";\r\n        canvasStyle.transform = canvasStyle.webkitTransform = canvasStyle.msTransform = canvasStyle.mozTransform = canvasStyle.oTransform = \"matrix(\" + mat.toString() + \")\";\r\n        canvasStyle.width = canvasWidth;\r\n        canvasStyle.height = canvasHeight;\r\n        mat.translate(parseInt(canvasStyle.left) || 0, parseInt(canvasStyle.top) || 0);\r\n    }\r\n\r\n    /**\r\n     * 屏幕旋转用layaverse 需要\r\n     * @param screenWidth \r\n     * @param screenHeight \r\n     * @param _screenMode \r\n     * @returns \r\n     */\r\n    setScreenSizeForScene(screenWidth: number, screenHeight: number, _screenMode: string) {\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (/**this.*/_screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== /**this.*/_screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        var canvas: HTMLCanvas = Render._mainCanvas;\r\n        var canvasStyle: any = canvas.source.style;\r\n        var mat: Matrix = this._canvasTransform/**add */.clone().identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        var pixelRatio: number = Browser.pixelRatio;\r\n        let /**this.*/_width = this.designWidth;\r\n        let /**this.*/_height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = 1;\r\n\t\t\t\t/**this.*/_width = canvasWidth = screenWidth;\r\n\t\t\t\t/**this.*/_height = canvasHeight = screenHeight;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n\t\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n\t\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        return {\r\n            stageWidth: _width,\r\n            stageHeight: _height,\r\n            canvasWidth: canvasWidth,\r\n            canvasHeight: canvasHeight,\r\n            scaleX: scaleX / (realWidth / canvasWidth),\r\n            scaleY: scaleY / (realHeight / canvasHeight),\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _formatData(value: number): number {\r\n        if (Math.abs(value) < 0.000001) return 0;\r\n        if (Math.abs(1 - value) < 0.001) return value > 0 ? 1 : -1;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * <p>缩放模式。默认值为 \"noscale\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"noscale\" ：不缩放；</li>\r\n     * <li>\"exactfit\" ：全屏不等比缩放；</li>\r\n     * <li>\"showall\" ：最小比例缩放；</li>\r\n     * <li>\"noborder\" ：最大比例缩放；</li>\r\n     * <li>\"full\" ：不缩放，stage的宽高等于屏幕宽高；</li>\r\n     * <li>\"fixedwidth\" ：宽度不变，高度根据屏幕比缩放；</li>\r\n     * <li>\"fixedheight\" ：高度不变，宽度根据屏幕比缩放；</li>\r\n     * <li>\"fixedauto\" ：根据宽高比，自动选择使用fixedwidth或fixedheight；</li>\r\n     * </ul></p>\r\n     */\r\n    get scaleMode(): string {\r\n        return this._scaleMode;\r\n    }\r\n\r\n    set scaleMode(value: string) {\r\n        this._scaleMode = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * <p>水平对齐方式。默认值为\"left\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"left\" ：居左对齐；</li>\r\n     * <li>\"center\" ：居中对齐；</li>\r\n     * <li>\"right\" ：居右对齐；</li>\r\n     * </ul></p>\r\n     */\r\n    get alignH(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignH;\r\n    }\r\n\r\n    set alignH(value: string) {\r\n        this._alignH = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * <p>垂直对齐方式。默认值为\"top\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"top\" ：居顶部对齐；</li>\r\n     * <li>\"middle\" ：居中对齐；</li>\r\n     * <li>\"bottom\" ：居底部对齐；</li>\r\n     * </ul></p>\r\n     */\r\n    get alignV(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignV;\r\n    }\r\n\r\n    set alignV(value: string) {\r\n        this._alignV = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**舞台的背景颜色，默认为黑色，null为透明。*/\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        if (value)\r\n            this._wgColor = ColorUtils.create(value).arrColor;\r\n        else\r\n            this._wgColor = null;\r\n\r\n        Stage._setStyleBgColor(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 适配淘宝小游戏\r\n     * @param value \r\n     */\r\n    static _setStyleBgColor(value: string) {\r\n        if (value) {\r\n            Render.canvas.style.background = value;\r\n        } else {\r\n            Render.canvas.style.background = \"none\";\r\n        }\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 X 轴坐标。@override*/\r\n    get mouseX(): number {\r\n        return Math.round(InputManager.mouseX / this.clientScaleX);\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 Y 轴坐标。@override*/\r\n    get mouseY(): number {\r\n        return Math.round(InputManager.mouseY / this.clientScaleY);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getMousePoint(): Point {\r\n        return Point.TEMP.setTo(this.mouseX, this.mouseY);\r\n    }\r\n\r\n    /**当前视窗由缩放模式导致的 X 轴缩放系数。*/\r\n    get clientScaleX(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleX() : 1;\r\n    }\r\n\r\n    /**当前视窗由缩放模式导致的 Y 轴缩放系数。*/\r\n    get clientScaleY(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleY() : 1;\r\n    }\r\n\r\n    /**\r\n     * <p>场景布局类型。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"none\" ：不更改屏幕</li>\r\n     * <li>\"horizontal\" ：自动横屏</li>\r\n     * <li>\"vertical\" ：自动竖屏</li>\r\n     * </ul></p>\r\n     */\r\n    get screenMode(): string {\r\n        return this._screenMode;\r\n    }\r\n\r\n    set screenMode(value: string) {\r\n        this._screenMode = value;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        this._repaint |= type;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _loop(): boolean {\r\n        this._globalRepaintGet = this._globalRepaintSet;\r\n        this._globalRepaintSet = false;\r\n        this.render(Render._context, 0, 0);\r\n        return true;\r\n    }\r\n\r\n    /**@private */\r\n    getFrameTm(): number {\r\n        return this._frameStartTime;\r\n    }\r\n\r\n    /**\r\n     * <p>获得距当前帧开始后，过了多少时间，单位为毫秒。</p>\r\n     * <p>可以用来判断函数内时间消耗，通过合理控制每帧函数处理消耗时长，避免一帧做事情太多，对复杂计算分帧处理，能有效降低帧率波动。</p>\r\n     */\r\n    getTimeFromFrameStart(): number {\r\n        return Browser.now() - this._frameStartTime;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set visible(value: boolean) {\r\n        if (this.visible !== value) {\r\n            super.set_visible(value);\r\n            Stage._setVisibleStyle(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 适配淘宝小游戏\r\n     * @param value \r\n     */\r\n    static _setVisibleStyle(value: boolean) {\r\n        var style: any = Render._mainCanvas.source.style;\r\n        style.visibility = value ? \"visible\" : \"hidden\";\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get visible() {\r\n        return super.visible;\r\n    }\r\n\r\n    /** @private */\r\n    static clear: Function = function (value: string): void {\r\n        //修改需要同步到上面的native实现中\r\n        Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\r\n        RenderState2D.worldScissorTest && LayaGL.renderEngine.scissorTest(false);\r\n        var ctx: Context = Render.context;\r\n        //兼容浏览器\r\n        var c: any[] = (ctx._submits._length == 0 || Config.preserveDrawingBuffer) ? ColorUtils.create(value).arrColor : ILaya.stage._wgColor;\r\n        if (c)\r\n            ctx.clearBG(c[0], c[1], c[2], c[3]);\r\n        else\r\n            ctx.clearBG(0, 0, 0, 0);\r\n        RenderState2D.clear();\r\n    };\r\n\r\n    /**@inheritDoc @override*/\r\n    render(context: Context, x: number, y: number): void {\r\n        if (LayaEnv.isConch) {\r\n            this.renderToNative(context, x, y);\r\n            return;\r\n        }\r\n\r\n        let delta: number = ILaya.timer._delta / 1000;\r\n        if (this._frameRate === Stage.FRAME_SLEEP) {\r\n            var now: number = Browser.now();\r\n            if (now - this._frameStartTime < 1000)\r\n                return;\r\n            this._frameStartTime = now;\r\n        } else {\r\n            if (!this._visible) {\r\n                this._renderCount++;\r\n                if (this._renderCount % 5 === 0) {\r\n                    CallLater.I._update();\r\n                    Stat.loopCount++;\r\n                    RenderInfo.loopCount = Stat.loopCount;\r\n                    this._runComponents();\r\n                    this._updateTimers();\r\n                }\r\n                return;\r\n            }\r\n            this._frameStartTime = Browser.now();\r\n            RenderInfo.loopStTm = this._frameStartTime;\r\n        }\r\n\r\n        this._renderCount++;\r\n        var frameMode: string = this._frameRate === Stage.FRAME_MOUSE ? (((this._frameStartTime - this._mouseMoveTime) < 2000) ? Stage.FRAME_FAST : Stage.FRAME_SLOW) : this._frameRate;\r\n        var isFastMode: boolean = (frameMode !== Stage.FRAME_SLOW);\r\n        var isDoubleLoop: boolean = (this._renderCount % 2 === 0);\r\n\r\n        Stat.renderSlow = !isFastMode;\r\n        if (!isFastMode && !isDoubleLoop)//统一双帧处理渲染\r\n            return;\r\n\r\n        CallLater.I._update();\r\n        Stat.loopCount++;\r\n        RenderInfo.loopCount = Stat.loopCount;\r\n\r\n        if (this.renderingEnabled) {\r\n            for (let i = 0, n = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i])._update();\r\n            this._runComponents();\r\n\r\n            context.clear();\r\n\r\n            this._componentDriver.callPreRender();\r\n\r\n            super.render(context, x, y);\r\n\r\n            Stat.render(context, x, y);\r\n\r\n            Stage.clear(this._bgColor);\r\n\r\n            context.flush();\r\n\r\n            this._componentDriver.callPostRender();\r\n\r\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\r\n        }\r\n        else\r\n            this._runComponents();\r\n\r\n        this._updateTimers();\r\n    }\r\n\r\n    renderToNative(context: Context, x: number, y: number): void {\r\n        this._renderCount++;\r\n\r\n        if (!this._visible) {\r\n            if (this._renderCount % 5 === 0) {\r\n                CallLater.I._update();\r\n                Stat.loopCount++;\r\n                RenderInfo.loopCount = Stat.loopCount;\r\n                this._runComponents();\r\n                this._updateTimers();\r\n            }\r\n            return;\r\n        }\r\n        this._frameStartTime = Browser.now();\r\n        //update\r\n        CallLater.I._update();\r\n        Stat.loopCount++;\r\n        RenderInfo.loopCount = Stat.loopCount;\r\n\r\n        //render\r\n        if (this.renderingEnabled) {\r\n            for (let i: number = 0, n: number = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i])._update();\r\n\r\n            this._runComponents();\r\n\r\n            this._componentDriver.callPreRender();\r\n\r\n            context.clear();\r\n            super.render(context, x, y);\r\n            Stat.render(context, x, y);\r\n\r\n            this._componentDriver.callPostRender();\r\n        }\r\n        else\r\n            this._runComponents();\r\n\r\n        //commit submit\r\n        if (this.renderingEnabled) {\r\n            Stage.clear(this._bgColor);\r\n            context.flush();\r\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\r\n        }\r\n        this._updateTimers();\r\n    }\r\n\r\n    private _runComponents() {\r\n        this._componentDriver.callStart();\r\n        this._componentDriver.callUpdate();\r\n        this._componentDriver.callLateUpdate();\r\n        this._componentDriver.callDestroy();\r\n    }\r\n\r\n    private _updateTimers(): void {\r\n        ILaya.systemTimer._update();\r\n        ILaya.physicsTimer._update();\r\n        ILaya.timer._update();\r\n    }\r\n\r\n    /**\r\n     * <p>是否开启全屏，用户点击后进入全屏。</p>\r\n     * <p>兼容性提示：部分浏览器不允许点击进入全屏，比如Iphone等。</p>\r\n     */\r\n    set fullScreenEnabled(value: boolean) {\r\n        var document: any = Browser.document;\r\n        var canvas: any = Render.canvas;\r\n        if (value) {\r\n            canvas.addEventListener('mousedown', requestFullscreen);\r\n            canvas.addEventListener('touchstart', requestFullscreen);\r\n            document.addEventListener(\"fullscreenchange\", fullScreenChanged);\r\n            document.addEventListener(\"mozfullscreenchange\", fullScreenChanged);\r\n            document.addEventListener(\"webkitfullscreenchange\", fullScreenChanged);\r\n            document.addEventListener(\"msfullscreenchange\", fullScreenChanged);\r\n        } else {\r\n            canvas.removeEventListener('mousedown', requestFullscreen);\r\n            canvas.removeEventListener('touchstart', requestFullscreen);\r\n            document.removeEventListener(\"fullscreenchange\", fullScreenChanged);\r\n            document.removeEventListener(\"mozfullscreenchange\", fullScreenChanged);\r\n            document.removeEventListener(\"webkitfullscreenchange\", fullScreenChanged);\r\n            document.removeEventListener(\"msfullscreenchange\", fullScreenChanged);\r\n        }\r\n    }\r\n\r\n    /**退出全屏模式*/\r\n    exitFullscreen(): void {\r\n        var document: any = Browser.document;\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n    }\r\n\r\n    get frameRate(): string {\r\n        if (!LayaEnv.isConch) {\r\n            return this._frameRate;\r\n        } else {\r\n            return ((<any>this))._frameRateNative;\r\n        }\r\n    }\r\n\r\n    set frameRate(value: string) {\r\n        if (!LayaEnv.isConch) {\r\n            this._frameRate = value;\r\n        } else {\r\n            var c: any = ((<any>window)).conch;\r\n            switch (value) {\r\n                case Stage.FRAME_FAST:\r\n                    c.config.setLimitFPS(60);\r\n                    break;\r\n                case Stage.FRAME_MOUSE:\r\n                    c.config.setMouseFrame(2000);\r\n                    break;\r\n                case Stage.FRAME_SLOW:\r\n                    c.config.setSlowFrame(true);\r\n                    break;\r\n                case Stage.FRAME_SLEEP:\r\n                    c.config.setLimitFPS(1);\r\n                    break;\r\n            }\r\n            ((<any>this))._frameRateNative = value;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    isGlobalRepaint(): boolean {\r\n        return this._globalRepaintGet;\r\n    }\r\n\r\n    /**@private */\r\n    setGlobalRepaint(): void {\r\n        this._globalRepaintSet = true;\r\n    }\r\n}\r\n\r\nfunction requestFullscreen(): void {\r\n    var element: any = Browser.document.documentElement;\r\n    if (element.requestFullscreen) {\r\n        element.requestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n        element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n        element.webkitRequestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n        element.msRequestFullscreen();\r\n    }\r\n\r\n    var canvas: any = Render.canvas;\r\n    canvas.removeEventListener('mousedown', requestFullscreen);\r\n    canvas.removeEventListener('touchstart', requestFullscreen);\r\n}\r\n\r\nfunction fullScreenChanged(): void {\r\n    ILaya.stage.event(Event.FULL_SCREEN_CHANGE);\r\n}","import { Matrix } from \"../maths/Matrix\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\n\r\n//积分结果缓存\r\nvar _definiteIntegralMap:{[key:number]:number}={};\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport class BlurFilterGLRender {\r\n    private static blurinfo = new Vector2();\r\n    render(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: BlurFilter): void {\r\n        var shaderValue: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n        if(filter.strength>=2){\r\n            this.setShaderInfo(shaderValue, filter, rt.width, rt.height);\r\n        }\r\n        ctx.drawTarget(rt, 0, 0, width, height, Matrix.EMPTY.identity(), shaderValue);\r\n    }\r\n\r\n    setShaderInfo(shader: Value2D, filter: BlurFilter, w: number, h: number): void {\r\n        shader.defines.addDefine(ShaderDefines2D.FILTERBLUR);\r\n        var sv = <TextureSV>shader;\r\n        BlurFilterGLRender.blurinfo.x = w; BlurFilterGLRender.blurinfo.y = h;\r\n        sv.blurInfo = BlurFilterGLRender.blurinfo;\r\n        let strength = Math.max(Math.abs(filter.strength),2);//<2的函数太尖不适合下面的方法，会导致变透明，具体以后再找\r\n        var sigma: number = strength / 3.0;//3σ以外影响很小。即当σ=1的时候，半径为3;\r\n        var sigma2: number = sigma * sigma;\r\n        let vz = 2.0 * sigma2;\r\n        let vw = 1.0 / (2.0 * Math.PI * sigma2);\r\n        //由于目前shader中写死了blur宽度是9，相当于希望3σ是4，可是实际使用的时候经常会strength超过4，\r\n        //这时候blur范围内的积分<1会导致变暗变透明，所以需要计算实际积分值进行放大\r\n        //使用公式计算误差较大，直接累加把\r\n        let s = 0;\r\n        let key = Math.floor(strength * 10);\r\n        if (_definiteIntegralMap[key] != undefined) {\r\n            s = _definiteIntegralMap[key];\r\n        }else{\r\n            for (let y = -4; y <= 4; ++y) {\r\n                for (let x = -4; x <= 4; ++x) {\r\n                    s += vw * Math.exp(-(x * x + y * y) / vz);\r\n                }\r\n            }\r\n            _definiteIntegralMap[key] = s;\r\n        }\r\n        vw /= s;\r\n\r\n        Vector4.tempVec4.x = filter.strength_sig2_2sig2_gauss1[0] = strength;\r\n        Vector4.tempVec4.y = filter.strength_sig2_2sig2_gauss1[1] = sigma2;\t\t\t//做一些预计算传给shader，提高效率\r\n        Vector4.tempVec4.z = filter.strength_sig2_2sig2_gauss1[2] = vz;\r\n        Vector4.tempVec4.w = filter.strength_sig2_2sig2_gauss1[3] = vw;\r\n\r\n        sv.strength_sig2_2sig2_gauss1 = Vector4.tempVec4;\r\n    }\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { BlurFilterGLRender } from \"./BlurFilterGLRender\";\r\n\r\n/**\r\n * 模糊滤镜\r\n */\r\nexport class BlurFilter extends Filter {\r\n\r\n    /**模糊滤镜的强度(值越大，越不清晰 */\r\n    _strength: number;\r\n    strength_sig2_2sig2_gauss1: number[] = [];//给shader用的。避免创建对象\r\n    strength_sig2_native: Float32Array;//给native用的\r\n    renderFunc: any;//\r\n\r\n    /**\r\n     * 模糊滤镜\r\n     * @param\tstrength\t模糊滤镜的强度值\r\n     */\r\n    constructor(strength: number = 4) {\r\n        super();\r\n        this.strength = strength;\r\n        this._glRender = new BlurFilterGLRender();\r\n    }\r\n\r\n    get strength(){\r\n        return this._strength;\r\n    }\r\n    set strength(v:number){\r\n        this._strength=v;\r\n        this.onChange();\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 当前滤镜的类型\r\n     * @override\r\n     */\r\n    get type(): number {\r\n        return Filter.BLUR;\r\n    }\r\n\r\n    getStrenth_sig2_2sig2_native(): Float32Array {\r\n        if (!this.strength_sig2_native) {\r\n            this.strength_sig2_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不要每次进行计算\r\n        var sigma: number = this.strength / 3.0;\r\n        var sigma2: number = sigma * sigma;\r\n        this.strength_sig2_native[0] = this.strength;\r\n        this.strength_sig2_native[1] = sigma2;\r\n        this.strength_sig2_native[2] = 2.0 * sigma2;\r\n        this.strength_sig2_native[3] = 1.0 / (2.0 * Math.PI * sigma2);\r\n        return this.strength_sig2_native;\r\n    }\r\n}\r\n\r\n","import { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\"\r\nimport { RenderStateContext } from \"../RenderEngine/RenderStateContext\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { TextureSV } from \"../webgl/shader/d2/value/TextureSV\";\r\nimport { RenderSpriteData, Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { GlowFilter } from \"./GlowFilter\";\r\n/**\r\n * @private\r\n */\r\nexport class GlowFilterGLRender {\r\n\tprivate setShaderInfo(shader: Value2D, w: number, h: number, data: GlowFilter): void {\r\n\t\tshader.defines.addDefine(data.typeDefine);\r\n\t\tvar sv = <TextureSV>shader;\r\n\t\t//data._sv_blurInfo1;// [data.blur, data.blur, data.offX, -data.offY];\r\n\t\tVector4.tempVec4.setValue(data._sv_blurInfo1[0], data._sv_blurInfo1[1], data._sv_blurInfo1[2], data._sv_blurInfo1[3]);\r\n\t\tsv.u_blurInfo1 = Vector4.tempVec4;\r\n\t\tvar info2 = data._sv_blurInfo2;\r\n\t\tinfo2[0] = w; info2[1] = h;\r\n\t\tVector4.tempVec4.setValue(info2[0], info2[1], info2[2], info2[3]);\r\n\t\tsv.u_blurInfo2 = Vector4.tempVec4;\r\n\t\tvar arry = data.getColor();\r\n\t\tVector4.tempVec4.setValue(arry[0], arry[1], arry[2], arry[3]);\r\n\t\tsv.color = Vector4.tempVec4;\r\n\t}\r\n\trender(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: GlowFilter): void {\r\n\t\tvar w: number = width, h: number = height;\r\n\t\tvar svBlur: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n\t\tthis.setShaderInfo(svBlur, w, h, filter);\r\n\t\tvar svCP: Value2D = Value2D.create(RenderSpriteData.Texture2D);\r\n\t\tvar matI: Matrix = Matrix.TEMP.identity();\r\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svBlur);\t//先画模糊的底\r\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svCP, null, 9);\t\t//再画原始图片,blend为9是为了解决文字边缘锯齿问题，主要是由于预乘alpha导致的，暂时先用这种方法解决\r\n\t\t//ctx.drawTarget(rt, 0, 0, w, h, matI, svCP);\r\n\t}\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { GlowFilterGLRender } from \"./GlowFilterGLRender\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\n\r\n/**\r\n *  发光滤镜(也可以当成阴影滤使用）\r\n */\r\nexport class GlowFilter extends Filter {\r\n\r\n    /**数据的存储，顺序R,G,B,A,blurWidth,offX,offY;*/\r\n    private _elements: Float32Array = new Float32Array(9);\r\n    /**@internal */\r\n    _sv_blurInfo1: number[] = new Array(4);\t//给shader用\r\n    /**@internal */\r\n    _sv_blurInfo2: number[] = [0, 0, 1, 0];\r\n    /**滤镜的颜色*/\r\n    private _color: ColorUtils;\r\n    /**@internal */\r\n    _color_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof1_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof2_native: Float32Array;\r\n\r\n    /**\r\n     * 创建发光滤镜\r\n     * @param\tcolor\t滤镜的颜色\r\n     * @param\tblur\t边缘模糊的大小\r\n     * @param\toffX\tX轴方向的偏移\r\n     * @param\toffY\tY轴方向的偏移\r\n     */\r\n    constructor(color: string, blur: number = 4, offX: number = 6, offY: number = 6) {\r\n        super();\r\n        this._color = new ColorUtils(color || \"#000\");\r\n        //限制最大效果为20\r\n        this.blur = Math.min(blur, 20);\r\n        this.offX = offX;\r\n        this.offY = offY;\r\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = this.blur; this._sv_blurInfo1[2] = offX; this._sv_blurInfo1[3] = -offY;\r\n        this._glRender = new GlowFilterGLRender();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滤镜类型\r\n     * @override\r\n     */\r\n    get type(): number {\r\n        return BlurFilter.GLOW;\r\n    }\r\n\r\n    /**@internal */\r\n    get typeDefine(): ShaderDefine {\r\n        return ShaderDefines2D.FILTERGLOW;\r\n    }\r\n\r\n    /**@private */\r\n    get offY(): number {\r\n        return this._elements[6];\r\n    }\r\n\r\n    /**@private */\r\n    set offY(value: number) {\r\n        this._elements[6] = value;\r\n        this._sv_blurInfo1[3] = -value;\r\n        this.onChange();\r\n    }\r\n\r\n    /**@private */\r\n    get offX(): number {\r\n        return this._elements[5];\r\n    }\r\n\r\n    /**@private */\r\n    set offX(value: number) {\r\n        this._elements[5] = value;\r\n        this._sv_blurInfo1[2] = value;\r\n        this.onChange();\r\n    }\r\n\r\n    /**@private */\r\n    get color(): string {\r\n        return this._color.strColor;\r\n    }\r\n\r\n    /**@private */\r\n    set color(value: string) {\r\n        this._color = new ColorUtils(value);\r\n        this.onChange();\r\n    }\r\n\r\n    /**@private */\r\n    getColor(): any[] {\r\n        return this._color.arrColor;\r\n    }\r\n\r\n    /**@private */\r\n    get blur(): number {\r\n        return this._elements[4];\r\n    }\r\n\r\n    /**@private */\r\n    set blur(value: number) {\r\n        this._elements[4] = value;\r\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = value;\r\n        this.onChange();\r\n    }\r\n\r\n    getColorNative(): Float32Array {\r\n        if (!this._color_native) {\r\n            this._color_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        var color: any[] = this.getColor();\r\n        this._color_native[0] = color[0];\r\n        this._color_native[1] = color[1];\r\n        this._color_native[2] = color[2];\r\n        this._color_native[3] = color[3];\r\n        return this._color_native;\r\n    }\r\n    getBlurInfo1Native(): Float32Array {\r\n        if (!this._blurInof1_native) {\r\n            this._blurInof1_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        this._blurInof1_native[0] = this._blurInof1_native[1] = this.blur;\r\n        this._blurInof1_native[2] = this.offX;\r\n        this._blurInof1_native[3] = this.offY;\r\n        return this._blurInof1_native;\r\n    }\r\n    getBlurInfo2Native(): Float32Array {\r\n        if (!this._blurInof2_native) {\r\n            this._blurInof2_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        this._blurInof2_native[2] = 1;\r\n        return this._blurInof2_native;\r\n    }\r\n}\r\n\r\n","import { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Handler } from \"../utils/Handler\"\r\n\r\n/**\r\n * <p> <code>SoundChannel</code> 用来控制程序中的声音。每个声音均分配给一个声道，而且应用程序可以具有混合在一起的多个声道。</p>\r\n * <p> <code>SoundChannel</code> 类包含控制声音的播放、暂停、停止、音量的方法，以及获取声音的播放状态、总时间、当前播放时间、总循环次数、播放地址等信息的方法。</p>\r\n */\r\nexport class SoundChannel extends EventDispatcher {\r\n    /**\r\n     * 声音地址。\r\n     */\r\n    url: string;\r\n    /**\r\n     * 循环次数。\r\n     */\r\n    loops: number;\r\n    /**\r\n     * 播放声音开始时间。\r\n     */\r\n    startTime: number;\r\n    /**\r\n     * 表示声音是否已暂停。\r\n     */\r\n    isStopped: boolean = false;\r\n    /**\r\n     * 播放完成处理器。\r\n     */\r\n    completeHandler: Handler;\r\n\r\n    /**\r\n     * 音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    set volume(v: number) {\r\n\r\n    }\r\n\r\n    get volume(): number {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放时间，单位是秒。\r\n     */\r\n    get position(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间，单位是秒。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 播放声音。\r\n     */\r\n    play(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 停止播放。\r\n     */\r\n    stop(): void {\r\n        if (this.completeHandler) this.completeHandler.runWith(false);\r\n    }\r\n\r\n    /**\r\n     * 暂停播放。\r\n     */\r\n    pause(): void {\r\n    }\r\n\r\n    /**\r\n     * 继续播放。\r\n     */\r\n    resume(): void {\r\n    }\r\n\r\n    /**\r\n     * private\r\n     */\r\n    protected __runComplete(handler: Handler): void {\r\n        if (handler) {\r\n            handler.runWith(true);\r\n        }\r\n    }\r\n}\r\n\r\n","import { Event as LayaEvent } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\n//import { SoundManager } from \"../SoundManager\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AudioSound } from \"./AudioSound\";\r\n\r\n/**\r\n * @private\r\n * audio标签播放声音的音轨控制\r\n */\r\nexport class AudioSoundChannel extends SoundChannel {\r\n\r\n    /**\r\n     * 播放用的audio标签\r\n     */\r\n    private _audio: HTMLAudioElement = null;\r\n    private _onEnd: (evt: Event) => void;\r\n    private _resumePlay: (evt: Event) => void;\r\n    private _src: string;\r\n\r\n    constructor(audio: HTMLAudioElement) {\r\n        super();\r\n        this._onEnd = this.__onEnd.bind(this);\r\n        this._resumePlay = this.__resumePlay.bind(this);\r\n        audio.addEventListener(\"ended\", this._onEnd);\r\n        this._audio = audio;\r\n        this._src = audio.src;\r\n    }\r\n\r\n    private __onEnd(evt: Event): void {\r\n        if (this.loops == 1) {\r\n            if (this.completeHandler) {\r\n                ILaya.systemTimer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(LayaEvent.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    private __resumePlay(): void {\r\n        if (this._audio) this._audio.removeEventListener(\"canplay\", this._resumePlay as any);\r\n        if (this.isStopped) return;\r\n        try {\r\n            this._audio.currentTime = this.startTime;\r\n            Browser.container.appendChild(this._audio);\r\n            this._audio.play();\r\n        } catch (e) {\r\n            //this.audio.play();\r\n            this.event(LayaEvent.ERROR);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放\r\n     * @override\r\n     */\r\n    play(): void {\r\n        this.isStopped = false;\r\n        try {\r\n            this._audio.playbackRate = SoundManager.playbackRate;\r\n            this._audio.currentTime = this.startTime;\r\n        } catch (e) {\r\n            this._audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            return;\r\n        }\r\n        SoundManager.addChannel(this);\r\n        Browser.container.appendChild(this._audio);\r\n        if (\"play\" in this._audio) {\r\n            let p = this._audio.play();\r\n            if (p)\r\n                p.catch(e => { /*Auto-play was prevented*/ });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当前播放到的位置\r\n     * @return\r\n     * @override\r\n     *\r\n     */\r\n    get position(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.currentTime;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     * @override\r\n     */\r\n    get duration(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.duration;\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     * @override\r\n     */\r\n    stop(): void {\r\n        //trace(\"stop and remove event\");\r\n        super.stop();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            //理论上应该全部使用stop，但是不知为什么，使用pause，为了安全我只修改在加速器模式下再调用一次stop\r\n            if (LayaEnv.isConch) {\r\n                (this._audio as any).stop();\r\n            }\r\n        this._audio.pause();\r\n        this._audio.removeEventListener(\"ended\", this._onEnd as EventListener);\r\n        this._audio.removeEventListener(\"canplay\", this._resumePlay);\r\n        //ie下使用对象池可能会导致后面的声音播放不出来\r\n        if (!ILaya.Browser.onIE) {\r\n            if (this._audio != AudioSound._musicAudio) {\r\n                Pool.recover(\"audio:\" + this.url, this._audio);\r\n            }\r\n        }\r\n        Browser.removeElement(this._audio);\r\n        this._audio = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    pause(): void {\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            this._audio.pause();\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    resume(): void {\r\n        var audio = this._audio;\r\n        if (!audio)\r\n            return;\r\n        this.isStopped = false;\r\n        if (audio.readyState == 0) { //当音频放到后台一定时间后，会被卸载，音频会断开连接，并将readyState重置为0\r\n            audio.src = this._src;\r\n            audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            audio.load();\r\n        }\r\n        SoundManager.addChannel(this);\r\n        if (\"play\" in audio) {\r\n            audio.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     * @param v\r\n     * @override\r\n     *\r\n     */\r\n    set volume(v: number) {\r\n        if (!this._audio) return;\r\n        this._audio.volume = v;\r\n    }\r\n\r\n    /**\r\n     * 获取音量\r\n     * @return\r\n     * @override\r\n     *\r\n     */\r\n    get volume(): number {\r\n        if (!this._audio) return 1;\r\n        return this._audio.volume;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { AudioSoundChannel } from \"./AudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { URL } from \"../../net/URL\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { Pool } from \"../../utils/Pool\"\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AssetDb } from \"../../resource/AssetDb\";\r\n\r\n/**\r\n * @private\r\n * 使用Audio标签播放声音\r\n */\r\nexport class AudioSound extends EventDispatcher {\r\n\r\n    /**@private */\r\n    private static _audioCache: any = {};\r\n    /**\r\n     * 声音URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * 播放用的audio标签\r\n     */\r\n    audio: HTMLAudioElement;\r\n    /**\r\n     * 是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**@internal */\r\n    static _musicAudio: HTMLAudioElement;\r\n    /**\r\n     * 释放声音\r\n     *\r\n     */\r\n    dispose(): void {\r\n        var ad: HTMLAudioElement = AudioSound._audioCache[this.url];\r\n        Pool.clearBySign(\"audio:\" + this.url);\r\n        if (ad) {\r\n            if (!LayaEnv.isConch) {\r\n                ad.src = \"\";\r\n            }\r\n            delete AudioSound._audioCache[this.url];\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    static _initMusicAudio(): void {\r\n        if (AudioSound._musicAudio) return;\r\n        if (!AudioSound._musicAudio) AudioSound._musicAudio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        if (!LayaEnv.isConch) {\r\n            Browser.document.addEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _makeMusicOK(): void {\r\n        Browser.document.removeEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        if (!AudioSound._musicAudio.src) {\r\n            AudioSound._musicAudio.src = \"\";\r\n            AudioSound._musicAudio.load();\r\n        } else {\r\n            AudioSound._musicAudio.play();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 加载声音\r\n     * @param url\r\n     *\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        var ad: HTMLAudioElement;\r\n        if (url == SoundManager._bgMusic) {\r\n            AudioSound._initMusicAudio();\r\n            ad = AudioSound._musicAudio;\r\n            if ((<any>ad).originalUrl != url) {\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                ad = null;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[url];\r\n        }\r\n        if (ad && ad.readyState >= 2) {\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (!ad) {\r\n            if (url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                ad = AudioSound._musicAudio;\r\n            } else {\r\n                ad = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n            }\r\n            AudioSound._audioCache[url] = ad;\r\n            AssetDb.inst.resolveURL(url, url => {\r\n                ad.src = URL.postFormatURL(URL.formatURL(url));\r\n            });\r\n        }\r\n        (<any>ad).originalUrl = url;\r\n\r\n        ad.addEventListener(\"canplaythrough\", onLoaded);\r\n        ad.addEventListener(\"error\", onErr);\r\n        var me: AudioSound = this;\r\n        function onLoaded(): void {\r\n            offs();\r\n            me.loaded = true;\r\n            me.event(Event.COMPLETE);\r\n        }\r\n\r\n        function onErr(): void {\r\n            ad.load = null;\r\n            offs();\r\n            me.event(Event.ERROR);\r\n        }\r\n\r\n        function offs(): void {\r\n            ad.removeEventListener(\"canplaythrough\", onLoaded);\r\n            ad.removeEventListener(\"error\", onErr);\r\n        }\r\n\r\n        this.audio = ad;\r\n        if (ad.load) {\r\n            ad.load();\r\n        } else {\r\n            onErr();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 播放声音\r\n     * @param startTime 起始时间\r\n     * @param loops 循环次数\r\n     * @return\r\n     *\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        //trace(\"playAudioSound\");\r\n        if (!this.url)\r\n            return null;\r\n\r\n        var ad: HTMLAudioElement;\r\n        if (this.url == SoundManager._bgMusic) {\r\n            ad = AudioSound._musicAudio;\r\n            if (ad.src != \"\" && (<any>ad).originalUrl != this.url) {  //@fix 清除上一次记录 防止它释放时把音乐暂停了\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                AudioSound._audioCache[this.url] = ad;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[this.url];\r\n        }\r\n\r\n        if (!ad) return null;\r\n        var tAd: HTMLAudioElement;\r\n\r\n        tAd = Pool.getItem(\"audio:\" + this.url);\r\n\r\n        if (LayaEnv.isConch) {\r\n            if (!tAd) {\r\n                tAd = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this.url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                tAd = AudioSound._musicAudio;\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            } else {\r\n                tAd = tAd ? tAd : ad.cloneNode(true) as HTMLAudioElement;\r\n            }\r\n        }\r\n        (<any>tAd).originalUrl = this.url;\r\n\r\n        var channel: AudioSoundChannel = new AudioSoundChannel(tAd);\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     */\r\n    get duration(): number {\r\n        var ad: HTMLAudioElement;\r\n        ad = AudioSound._audioCache[this.url];\r\n        if (!ad)\r\n            return 0;\r\n        return ad.duration;\r\n    }\r\n}\r\n\r\n\r\n","import { Event } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\n/**\r\n * @private\r\n * web audio api方式播放声音的音轨控制\r\n */\r\nexport class WebAudioSoundChannel extends SoundChannel {\r\n    /**\r\n     * 声音原始文件数据\r\n     */\r\n    audioBuffer: any;\r\n\r\n    /**\r\n     * gain节点\r\n     */\r\n    private gain: any;\r\n\r\n    /**\r\n     * 播放用的数据\r\n     */\r\n    private bufferSource: any = null;\r\n    /**\r\n     * 当前时间\r\n     */\r\n    private _currentTime: number = 0;\r\n\r\n    /**\r\n     * 当前音量\r\n     */\r\n    private _volume: number = 1;\r\n\r\n    /**\r\n     * 播放开始时的时间戳\r\n     */\r\n    private _startTime: number = 0;\r\n\r\n    private _pauseTime: number = 0;\r\n\r\n    /**\r\n     * 播放设备\r\n     */\r\n    private context: AudioContext;\r\n\r\n    private _onPlayEnd: Function;\r\n    private static _tryCleanFailed: boolean = false;\r\n    static SetTargetDelay: number = 0.001;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.context = WebAudioSound.ctx;\r\n\r\n        this._onPlayEnd = this.__onPlayEnd.bind(this);\r\n        if (this.context[\"createGain\"]) {\r\n            this.gain = this.context[\"createGain\"]();\r\n        } else {\r\n            this.gain = (<any>this.context)[\"createGainNode\"]();\r\n        }\r\n    }\r\n    /**\r\n     * 播放声音\r\n     * @override\r\n     */\r\n    play(): void {\r\n        SoundManager.addChannel(this);\r\n        this.isStopped = false;\r\n        this._clearBufferSource();\r\n        if (!this.audioBuffer) return;\r\n        if (this.startTime >= this.duration) return this.stop();\r\n        var context: any = this.context;\r\n        var gain: any = this.gain;\r\n        var bufferSource: any = context.createBufferSource();\r\n        this.bufferSource = bufferSource;\r\n        bufferSource.buffer = this.audioBuffer;\r\n        bufferSource.connect(gain);\r\n        if (gain)\r\n            gain.disconnect();\r\n        gain.connect(context.destination);\r\n        bufferSource.onended = this._onPlayEnd;\r\n        // if (this.startTime >= this.duration) this.startTime = 0;\r\n        this._startTime = Browser.now();\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = this._volume;\r\n        if (this.loops == 0) {\r\n            bufferSource.loop = true;\r\n        }\r\n        if (bufferSource.playbackRate.setTargetAtTime) {\r\n            bufferSource.playbackRate.setTargetAtTime(SoundManager.playbackRate, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay)\r\n        } else\r\n            bufferSource.playbackRate.value = SoundManager.playbackRate;\r\n        bufferSource.start(0, this.startTime);\r\n        this._currentTime = 0;\r\n    }\r\n\r\n\r\n\r\n    private __onPlayEnd(): void {\r\n        if (this.loops == 1) {\r\n\r\n            if (this.completeHandler) {\r\n                ILaya.timer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放位置\r\n     * @override\r\n     */\r\n    get position(): number {\r\n        if (this.bufferSource) {\r\n            return (Browser.now() - this._startTime) / 1000 + this.startTime;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private _clearBufferSource(): void {\r\n        if (this.bufferSource) {\r\n            var sourceNode: any = this.bufferSource;\r\n            if (sourceNode.stop) {\r\n                sourceNode.stop(0);\r\n            } else {\r\n                sourceNode.noteOff(0);\r\n            }\r\n            sourceNode.disconnect(0);\r\n            sourceNode.onended = null;\r\n            if (!WebAudioSoundChannel._tryCleanFailed) this._tryClearBuffer(sourceNode);\r\n            this.bufferSource = null;\r\n        }\r\n    }\r\n\r\n    private _tryClearBuffer(sourceNode: any): void {\r\n        try {//已经支持buffer=null\r\n            sourceNode.buffer = null;\r\n        } catch (e) {\r\n            WebAudioSoundChannel._tryCleanFailed = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     * @override\r\n     */\r\n    stop(): void {\r\n        super.stop();\r\n        this._clearBufferSource();\r\n        this.audioBuffer = null;\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    pause(): void {\r\n        if (!this.isStopped) {\r\n            this._pauseTime = this.position;\r\n        }\r\n        this._clearBufferSource();\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    resume(): void {\r\n        this.startTime = this._pauseTime;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     * @override\r\n     */\r\n    set volume(v: number) {\r\n        this._volume = v;\r\n        if (this.isStopped) {\r\n            return;\r\n        }\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(v, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = v;\r\n    }\r\n\r\n    /**\r\n     * 获取音量\r\n     * @override\r\n     */\r\n    get volume(): number {\r\n        return this._volume;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { WebAudioSoundChannel } from \"./WebAudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Loader } from \"../../net/Loader\";\r\n\r\n/**\r\n * @private\r\n * web audio api方式播放声音\r\n */\r\nexport class WebAudioSound extends EventDispatcher {\r\n\r\n    /**\r\n     * 播放设备\r\n     */\r\n    static ctx: AudioContext;\r\n\r\n    /**\r\n     * 用于播放解锁声音以及解决Ios9版本的内存释放\r\n     */\r\n    static _miniBuffer: any = WebAudioSound.ctx ? WebAudioSound.ctx.createBuffer(1, 1, 22050) : undefined;\r\n\r\n    /**\r\n     * 是否已解锁声音播放\r\n     */\r\n    private static _unlocked: boolean = false;\r\n\r\n    /**\r\n     * 声音URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * 是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**\r\n     * 声音原始文件数据\r\n     */\r\n    audioBuffer: AudioBuffer;\r\n    /**\r\n     * 待播放的声音列表\r\n     */\r\n    private __toPlays: any[];\r\n    /**\r\n     * @private\r\n     */\r\n    private _disposed: boolean = false;\r\n\r\n\r\n    /**\r\n     * 播放声音以解锁IOS的声音\r\n     *\r\n     */\r\n    private static _playEmptySound(): void {\r\n        if (WebAudioSound.ctx == null) {\r\n            return;\r\n        }\r\n        var source: any = WebAudioSound.ctx.createBufferSource();\r\n        source.buffer = WebAudioSound._miniBuffer;\r\n        source.connect(WebAudioSound.ctx.destination);\r\n        source.start(0, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 尝试解锁声音\r\n     *\r\n     */\r\n    private static _unlock(): void {\r\n        if (WebAudioSound._unlocked) {\r\n            return;\r\n        }\r\n        WebAudioSound._playEmptySound();\r\n        if (WebAudioSound.ctx.state == \"running\") {\r\n            window.document.removeEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n            WebAudioSound._unlocked = true;\r\n        }\r\n    }\r\n    /*;*/\r\n\r\n    static initWebAudio(): void {\r\n        WebAudioSound.ctx = new (window[\"AudioContext\"] || (window as any)[\"webkitAudioContext\"] || (window as any)[\"mozAudioContext\"])();\r\n\r\n        if (WebAudioSound.ctx.state != \"running\") {\r\n            WebAudioSound._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\r\n            window.document.addEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载声音\r\n     * @param url\r\n     *\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        this.audioBuffer = ILaya.loader.getRes(url);\r\n        if (this.audioBuffer) {\r\n            this._loaded(this.audioBuffer);\r\n            return;\r\n        }\r\n        ILaya.loader.load(url, Loader.SOUND).then(audioBuffer => this._loaded(audioBuffer));\r\n    }\r\n\r\n    private _loaded(audioBuffer: any): void {\r\n        if (this._disposed)\r\n            return;\r\n\r\n        this.audioBuffer = audioBuffer;\r\n        this.loaded = true;\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    private __playAfterLoaded(): void {\r\n        if (!this.__toPlays) return;\r\n        var i: number, len: number;\r\n        var toPlays: any[];\r\n        toPlays = this.__toPlays;\r\n        len = toPlays.length;\r\n        var tParams: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tParams = toPlays[i];\r\n            if (tParams[2] && !((<WebAudioSoundChannel>tParams[2])).isStopped) {\r\n                this.play(tParams[0], tParams[1], tParams[2]);\r\n            }\r\n        }\r\n        this.__toPlays.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 播放声音\r\n     * @param startTime 起始时间\r\n     * @param loops 循环次数\r\n     * @return\r\n     *\r\n     */\r\n    play(startTime: number = 0, loops: number = 0, channel: WebAudioSoundChannel = null): SoundChannel {\r\n        channel = channel ? channel : new WebAudioSoundChannel();\r\n        if (!this.audioBuffer) {\r\n            if (this.url) {\r\n                if (!this.__toPlays) this.__toPlays = [];\r\n                this.__toPlays.push([startTime, loops, channel]);\r\n                this.once(Event.COMPLETE, this, this.__playAfterLoaded);\r\n                this.load(this.url);\r\n            }\r\n        }\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.audioBuffer = this.audioBuffer;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    dispose(): void {\r\n        this._disposed = true;\r\n        if (this.audioBuffer) {\r\n            ILaya.loader.clearRes(this.url, this.audioBuffer);\r\n            this.audioBuffer = null;\r\n        }\r\n        this.__toPlays = [];\r\n    }\r\n}\r\n\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { Event } from \"../events/Event\"\r\nimport { AudioSound } from \"./h5audio/AudioSound\"\r\nimport { WebAudioSound } from \"./webaudio/WebAudioSound\"\r\nimport { URL } from \"../net/URL\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Sound } from \"./Sound\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>SoundManager</code> 是一个声音管理类。提供了对背景音乐、音效的播放控制方法。\r\n * 引擎默认有两套声音方案：WebAudio和H5Audio\r\n * 播放音效，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\r\n * 播放背景音乐，则使用H5Audio播放（使用WebAudio会增加特别大的内存，并且要等加载完毕后才能播放，有延迟）\r\n * 建议背景音乐用mp3类型，音效用wav或者mp3类型（如果打包为app，音效只能用wav格式）。\r\n * 详细教程及声音格式请参考：http://ldc2.layabox.com/doc/?nav=ch-as-1-7-0\r\n */\r\nexport class SoundManager {\r\n    /**\r\n     * 背景音乐音量。\r\n     * @default 1\r\n     */\r\n    static musicVolume: number = 1;\r\n    /**\r\n     * 音效音量。\r\n     * @default 1\r\n     */\r\n    static soundVolume: number = 1;\r\n    /**\r\n     * 声音播放速率。\r\n     * @default 1\r\n     */\r\n    static playbackRate: number = 1;\r\n    /**\r\n     * 背景音乐使用Audio标签播放。\r\n     * @default true\r\n     */\r\n    private static _useAudioMusic: boolean = true;\r\n    /**@private 是否静音，默认为false。*/\r\n    private static _muted: boolean = false;\r\n    /**@private 是否音效静音，默认为false。*/\r\n    private static _soundMuted: boolean = false;\r\n    /**@private 是否背景音乐静音，默认为false。*/\r\n    private static _musicMuted: boolean = false;\r\n    /**@internal 当前背景音乐url。*/\r\n    static _bgMusic: string = null;\r\n    /**@private 当前背景音乐声道。*/\r\n    static _musicChannel: SoundChannel = null;\r\n    /**@private 当前播放的Channel列表。*/\r\n    private static _channels: any[] = [];\r\n    /**@private */\r\n    private static _autoStopMusic: boolean;\r\n    /**@private */\r\n    private static _blurPaused: boolean = false;\r\n    /**@private */\r\n    private static _isActive: boolean = true;\r\n    /**@internal */\r\n    static _soundClass: new () => any;\r\n    /**@internal */\r\n    static _musicClass: new () => any;\r\n    /**@private */\r\n    private static _lastSoundUsedTimeDic: any = {};\r\n    /**@private */\r\n    private static _isCheckingDispose: boolean = false;\r\n    /**@private */\r\n    private static _soundCache: Record<string, Sound> = {};\r\n\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        var win: any = ILaya.Browser.window;\r\n        var supportWebAudio = win[\"AudioContext\"] || win[\"webkitAudioContext\"] || win[\"mozAudioContext\"] ? true : false;\r\n        if (supportWebAudio)\r\n            WebAudioSound.initWebAudio();\r\n        SoundManager._soundClass = supportWebAudio ? WebAudioSound : AudioSound;\r\n\r\n        if (!Browser.onTBMiniGame) {\r\n            AudioSound._initMusicAudio();\r\n        }\r\n        SoundManager._musicClass = AudioSound;\r\n\r\n        return supportWebAudio;\r\n    }\r\n\r\n    /**\r\n     * 音效播放后自动删除。\r\n     * @default true\r\n     */\r\n    static autoReleaseSound: boolean = true;\r\n\r\n    /**\r\n     * 添加播放的声音实例。\r\n     * @param channel <code>SoundChannel</code> 对象。\r\n     */\r\n    static addChannel(channel: SoundChannel): void {\r\n        if (SoundManager._channels.indexOf(channel) >= 0) return;\r\n        SoundManager._channels.push(channel);\r\n    }\r\n\r\n    /**\r\n     * 移除播放的声音实例。\r\n     * @param channel <code>SoundChannel</code> 对象。\r\n     */\r\n    static removeChannel(channel: SoundChannel): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i] == channel) {\r\n                SoundManager._channels.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static disposeSoundLater(url: string): void {\r\n        SoundManager._lastSoundUsedTimeDic[url] = ILaya.Browser.now();\r\n        if (!SoundManager._isCheckingDispose) {\r\n            SoundManager._isCheckingDispose = true;\r\n            ILaya.timer.loop(5000, null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _checkDisposeSound(): void {\r\n        let tTime: number = ILaya.Browser.now();\r\n        let hasCheck: boolean = false;\r\n        for (let key in SoundManager._lastSoundUsedTimeDic) {\r\n            if (tTime - SoundManager._lastSoundUsedTimeDic[key] > 30000) {\r\n                delete SoundManager._lastSoundUsedTimeDic[key];\r\n                SoundManager.disposeSoundIfNotUsed(key);\r\n            } else {\r\n                hasCheck = true;\r\n            }\r\n        }\r\n        if (!hasCheck) {\r\n            SoundManager._isCheckingDispose = false;\r\n            ILaya.timer.clear(null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static disposeSoundIfNotUsed(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i].url == url) {\r\n                return;\r\n            }\r\n        }\r\n        SoundManager.destroySound(url);\r\n    }\r\n\r\n    /**\r\n     * 失去焦点后是否自动停止背景音乐。\r\n     * @param v Boolean 失去焦点后是否自动停止背景音乐。\r\n     *\r\n     */\r\n    static set autoStopMusic(v: boolean) {\r\n        ILaya.stage.off(Event.BLUR, null, SoundManager._stageOnBlur);\r\n        ILaya.stage.off(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n        ILaya.stage.off(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        SoundManager._autoStopMusic = v;\r\n        if (v) {\r\n            ILaya.stage.on(Event.BLUR, null, SoundManager._stageOnBlur);\r\n            ILaya.stage.on(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n            ILaya.stage.on(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 失去焦点后是否自动停止背景音乐。\r\n     */\r\n    static get autoStopMusic(): boolean {\r\n        return SoundManager._autoStopMusic;\r\n    }\r\n\r\n    private static _visibilityChange(): void {\r\n        if (ILaya.stage.isVisibility) {\r\n            SoundManager._stageOnFocus();\r\n        } else {\r\n            SoundManager._stageOnBlur();\r\n        }\r\n    }\r\n\r\n    private static _stageOnBlur(): void {\r\n        SoundManager._isActive = false;\r\n        if (SoundManager._musicChannel) {\r\n            if (!SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = true;\r\n                SoundManager._musicChannel.pause();\r\n\r\n            }\r\n\r\n        }\r\n        SoundManager.stopAllSound();\r\n        ILaya.stage.once(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n    }\r\n\r\n    private static _recoverWebAudio(): void {\r\n        if (WebAudioSound.ctx && WebAudioSound.ctx.state != \"running\" && WebAudioSound.ctx.resume)\r\n            WebAudioSound.ctx.resume();\r\n    }\r\n\r\n    private static _stageOnFocus(): void {\r\n        SoundManager._isActive = true;\r\n        SoundManager._recoverWebAudio();\r\n        ILaya.stage.off(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n        if (SoundManager._blurPaused) {\r\n            if (SoundManager._musicChannel && SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = false;\r\n                SoundManager._musicChannel.resume();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 背景音乐和所有音效是否静音。\r\n     */\r\n    static set muted(value: boolean) {\r\n        if (value == SoundManager._muted) return;\r\n        if (value) {\r\n            SoundManager.stopAllSound();\r\n        }\r\n        SoundManager.musicMuted = value;\r\n        SoundManager._muted = value;\r\n    }\r\n\r\n    static get muted(): boolean {\r\n        return SoundManager._muted;\r\n    }\r\n\r\n    /**\r\n     * 所有音效（不包括背景音乐）是否静音。\r\n     */\r\n    static set soundMuted(value: boolean) {\r\n        SoundManager._soundMuted = value;\r\n    }\r\n\r\n    static get soundMuted(): boolean {\r\n        return SoundManager._soundMuted;\r\n    }\r\n\r\n    /**\r\n     * 背景音乐（不包括音效）是否静音。\r\n     */\r\n    static set musicMuted(value: boolean) {\r\n        if (value == SoundManager._musicMuted) return;\r\n        if (value) {\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel && !SoundManager._musicChannel.isStopped) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = true;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.pause();\r\n                    }\r\n                } else {\r\n                    SoundManager._musicChannel = null;\r\n                }\r\n            } else {\r\n                SoundManager._musicChannel = null;\r\n            }\r\n\r\n            SoundManager._musicMuted = value;\r\n        } else {\r\n            SoundManager._musicMuted = value;\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = false;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.resume();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static get musicMuted(): boolean {\r\n        return SoundManager._musicMuted;\r\n    }\r\n\r\n    static get useAudioMusic(): boolean {\r\n        return SoundManager._useAudioMusic;\r\n    }\r\n\r\n    static set useAudioMusic(value: boolean) {\r\n        SoundManager._useAudioMusic = value;\r\n        if (value) {\r\n            SoundManager._musicClass = AudioSound;\r\n        } else {\r\n            SoundManager._musicClass = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放音效。音效可以同时播放多个。\r\n     * @param url\t\t\t声音文件地址。\r\n     * @param loops\t\t\t循环次数,0表示无限循环。\r\n     * @param complete\t\t声音播放完成回调  Handler对象。\r\n     * @param soundClass\t使用哪个声音类进行播放，null表示自动选择。\r\n     * @param startTime\t\t声音播放起始时间。\r\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playSound(url: string, loops: number = 1, complete: Handler = null, soundClass: new () => any = null, startTime: number = 0): SoundChannel {\r\n        if (!SoundManager._isActive || !url) return null;\r\n        if (SoundManager._muted) return null;\r\n        SoundManager._recoverWebAudio();\r\n        if (url == SoundManager._bgMusic) {\r\n            if (SoundManager._musicMuted) return null;\r\n        } else {\r\n            if (SoundManager._soundMuted) return null;\r\n        }\r\n        let tSound: Sound;\r\n        if (!Browser._isMiniGame) {\r\n            tSound = SoundManager._soundCache[url];\r\n        }\r\n        if (!soundClass) soundClass = SoundManager._soundClass;\r\n        if (!tSound) {\r\n            tSound = new soundClass();\r\n            tSound.load(url);\r\n            if (!Browser._isMiniGame) {\r\n                SoundManager._soundCache[url] = tSound;\r\n            }\r\n        }\r\n        let channel = tSound.play(startTime, loops);\r\n        if (!channel) return null;\r\n        channel.url = url;\r\n        channel.volume = (url == SoundManager._bgMusic) ? SoundManager.musicVolume : SoundManager.soundVolume;\r\n        channel.completeHandler = complete;\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源。\r\n     * @param url\t声音播放地址。\r\n     */\r\n    static destroySound(url: string): void {\r\n        let tSound = SoundManager._soundCache[url];\r\n        if (tSound) {\r\n            delete SoundManager._soundCache[url];\r\n            tSound.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播放当前的背景音乐。\r\n     * @param url\t\t声音文件地址。\r\n     * @param loops\t\t循环次数,0表示无限循环。\r\n     * @param complete\t声音播放完成回调,complete 结果参数 true: 播放完成, false/undefined ：stop触发的complete。\r\n     * @param startTime\t声音播放起始时间。\r\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playMusic(url: string, loops: number = 0, complete: Handler = null, startTime: number = 0): SoundChannel {\r\n        SoundManager._bgMusic = url;\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        return SoundManager._musicChannel = SoundManager.playSound(url, loops, complete, SoundManager._musicClass, startTime);\r\n    }\r\n\r\n    /**\r\n     * 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。\r\n     * @param url  声音文件地址。\r\n     */\r\n    static stopSound(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放所有声音（包括背景音乐和音效）。\r\n     */\r\n    static stopAll(): void {\r\n        SoundManager._bgMusic = null;\r\n        var i: number;\r\n        var channel: SoundChannel;\r\n        for (i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            channel = SoundManager._channels[i];\r\n            channel.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放所有音效（不包括背景音乐）。\r\n     */\r\n    static stopAllSound(): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url != SoundManager._bgMusic) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放背景音乐（不包括音效）。\r\n     * @param url  声音文件地址。\r\n     */\r\n    static stopMusic(): void {\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        SoundManager._bgMusic = null;\r\n    }\r\n\r\n    /**\r\n     * 设置声音音量。根据参数不同，可以分别设置指定声音（背景音乐或音效）音量或者所有音效（不包括背景音乐）音量。\r\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param url\t\t(default = null)声音播放地址。默认为null。为空表示设置所有音效（不包括背景音乐）的音量，不为空表示设置指定声音（背景音乐或音效）的音量。\r\n     */\r\n    static setSoundVolume(volume: number, url: string = null): void {\r\n        if (url) {\r\n            SoundManager._setVolume(url, volume);\r\n        } else {\r\n            SoundManager.soundVolume = volume;\r\n            for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n                let channel = SoundManager._channels[i];\r\n                if (channel.url != SoundManager._bgMusic) {\r\n                    channel.volume = volume;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置背景音乐音量。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    static setMusicVolume(volume: number): void {\r\n        SoundManager.musicVolume = volume;\r\n        SoundManager._setVolume(SoundManager._bgMusic, volume);\r\n    }\r\n\r\n    /**\r\n     * 设置指定声音的音量。\r\n     * @param url\t\t声音文件url\r\n     * @param volume\t音量。初始值为1。\r\n     */\r\n    private static _setVolume(url: string, volume: number): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.volume = volume;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { SoundManager } from \"./SoundManager\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * 用于播放背景音乐或者音效的节点\r\n */\r\nexport class SoundNode extends Sprite {\r\n    private _channel: SoundChannel;\r\n    private _tar: Sprite;\r\n    private _playEvents: string;\r\n    private _stopEvents: string;\r\n    private _source: string;\r\n    private _isMusic: boolean;\r\n    private _autoPlay: boolean;\r\n    private _loop: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._loop = 1;\r\n\r\n        this.on(Event.ADDED, this, this._onParentChange);\r\n        this.on(Event.REMOVED, this, this._onParentChange);\r\n    }\r\n\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n        if (value) {\r\n            if (this._autoPlay && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n                this.play();\r\n        }\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    /**\r\n     * 如果是，音乐类型为背景音乐，否则为音效\r\n     */\r\n    get isMusic() {\r\n        return this._isMusic;\r\n    }\r\n\r\n    set isMusic(value: boolean) {\r\n        this._isMusic = value;\r\n    }\r\n\r\n    /**\r\n     * 循环次数\r\n     */\r\n    get loop() {\r\n        return this._loop;\r\n    }\r\n\r\n    set loop(value: number) {\r\n        this._loop = value;\r\n    }\r\n\r\n    /**\r\n     * 是否自动播放\r\n     */\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value && this._source && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n            this.play();\r\n    }\r\n\r\n    /**@private */\r\n    private _onParentChange(): void {\r\n        this.target = (<Sprite>this.parent);\r\n    }\r\n\r\n    /**\r\n     * 播放\r\n     * @param loops 循环次数\r\n     * @param complete 完成回调\r\n     *\r\n     */\r\n    play(loops?: number, complete?: Handler): void {\r\n        if (!this._source) return;\r\n\r\n        if (loops == null || isNaN(loops))\r\n            loops = this._loop;\r\n\r\n        this.stop();\r\n\r\n        if (this._isMusic)\r\n            this._channel = SoundManager.playMusic(this._source, loops, complete);\r\n        else\r\n            this._channel = SoundManager.playSound(this._source, loops, complete);\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     *\r\n     */\r\n    stop(): void {\r\n        if (this._channel && !this._channel.isStopped) {\r\n            this._channel.stop();\r\n        }\r\n        this._channel = null;\r\n    }\r\n\r\n    /**@private */\r\n    private _setPlayAction(tar: Sprite, event: string, action: string, add: boolean = true): void {\r\n        if (!(this as any)[action]) return;\r\n        if (!tar) return;\r\n        if (add) {\r\n            tar.on(event, this, (this as any)[action]);\r\n        } else {\r\n            tar.off(event, this, (this as any)[action]);\r\n        }\r\n\r\n    }\r\n\r\n    /**@private */\r\n    private _setPlayActions(tar: Sprite, events: string, action: string, add: boolean = true): void {\r\n        if (!tar) return;\r\n        if (!events) return;\r\n        let eventArr = events.split(\",\");\r\n        let len = eventArr.length;\r\n        for (let i = 0; i < len; i++) {\r\n            this._setPlayAction(tar, eventArr[i], action, add);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置触发播放的事件\r\n     * @param events\r\n     *\r\n     */\r\n    set playEvent(events: string) {\r\n        this._playEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"play\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置控制播放的对象\r\n     * @param tar\r\n     *\r\n     */\r\n    set target(tar: Sprite) {\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", false);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", false);\r\n        }\r\n        this._tar = tar;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", true);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置触发停止的事件\r\n     * @param events\r\n     *\r\n     */\r\n    set stopEvent(events: string) {\r\n        this._stopEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"stop\");\r\n        }\r\n    }\r\n}\r\n","import { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { URL } from \"../net/URL\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Event as LayaEvent } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * @en VideoTexture Multimedia texture\r\n * @zh VideoTexture 多媒体纹理\r\n */\r\nexport class VideoTexture extends BaseTexture {\r\n    public readonly element: HTMLVideoElement;\r\n    static videoEvent_update: string = \"videoUpdate\";\r\n    private _source: string;\r\n    private _listeningEvents: Record<string, (evt: Event) => void>;\r\n    private immediatelyPlay: boolean;\r\n    /**\r\n     * 是否开发者自己调用Render\r\n     */\r\n    private _frameRender: boolean;\r\n    /** @inernal 避免重复的加载 */\r\n    _isLoaded: boolean;\r\n    _needUpdate: boolean;\r\n    /** @inernal 是否使用了requestVideoFrameCallback 接口 */\r\n    _requestVideoFrame: boolean = false;\r\n    /**@internal */\r\n    private _frameDelty: number;\r\n    /**@internal */\r\n    private _updateFrame: number;\r\n    /**@internal */\r\n    private _useFrame: boolean;\r\n    /**@internal */\r\n    private _lastTimer: number = 0;\r\n\r\n    /**\r\n     * @en videoTexture update frame\r\n     * @zh 视频纹理更新帧率\r\n     */\r\n    set updateFrame(value: number) {\r\n        this._frameDelty = 1 / value * 1000;\r\n        this._updateFrame = value;\r\n    }\r\n\r\n    get updateFrame() {\r\n        return this._updateFrame;\r\n    }\r\n\r\n    set useFrame(value: boolean) {\r\n        this._useFrame = value;\r\n    }\r\n\r\n    get useFrame() {\r\n        return this._useFrame;\r\n    }\r\n\r\n    /**\r\n     * @en Constructor method of VideoTexture \r\n     * @zh VideoTexture对象的构造方法\r\n     */\r\n    constructor() {\r\n        let ele: HTMLVideoElement = ILaya.Browser.createElement(\"video\");\r\n        super(ele.videoWidth, ele.videoHeight, RenderTargetFormat.R8G8B8);\r\n        this._frameRender = true;\r\n        this._isLoaded = false;\r\n        this._needUpdate = false;\r\n        this.immediatelyPlay = false;\r\n        this.element = ele;\r\n\r\n        this.useFrame = false;\r\n        this.updateFrame = 30;\r\n\r\n        this._listeningEvents = {};\r\n\r\n        this._dimension = TextureDimension.Tex2D;\r\n\r\n\r\n        // ele.setAttribute('crossorigin', 'Anonymous');\r\n\r\n        var style: any = this.element.style;\r\n        style.position = 'absolute';\r\n        style.top = '0px';\r\n        style.left = '0px';\r\n\r\n        // 默认放开webGL对纹理数据的跨域限制\r\n        ele.setAttribute('crossorigin', 'anonymous');\r\n        if (ILaya.Browser.onMobile) {\r\n            //@ts-ignore\r\n            ele[\"x5-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"x5-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.x5PlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsInline = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.webkitPlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsinline = true;\r\n            //@ts-ignore\r\n            ele.style.playsInline = true;\r\n            ele.crossOrigin = \"anonymous\";\r\n            ele.setAttribute('playsinline', 'true');\r\n            ele.setAttribute('x5-playsinline', 'true');\r\n            ele.setAttribute('webkit-playsinline', 'true');\r\n            ele.autoplay = true;\r\n        }\r\n\r\n        ele.addEventListener(\"loadedmetadata\", () => {\r\n            this.loadedmetadata();\r\n        });\r\n\r\n\r\n        if (\"requestVideoFrameCallback\" in HTMLVideoElement.prototype) {\r\n            const scope = this;\r\n            function updateVideo() {\r\n                scope._needUpdate = true;\r\n                ele.requestVideoFrameCallback(updateVideo);\r\n            }\r\n            ele.requestVideoFrameCallback(updateVideo);\r\n            this._requestVideoFrame = true\r\n        } else {\r\n            this._needUpdate = true;\r\n        }\r\n\r\n        // if ('requestVideoFrameCallback' in ele) {\r\n        //     const scope = this;\r\n        //     function updateVideo() {\r\n        //         scope._needUpdate = true;\r\n        //         ele.requestVideoFrameCallback(updateVideo);\r\n        //     }\r\n        //     ele.requestVideoFrameCallback(updateVideo);\r\n        //     this._requestVideoFrame = true\r\n        // } else {\r\n        //     this._needUpdate = true;\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    private isNeedUpdate() {\r\n        if (!this.useFrame)\r\n            return !this._requestVideoFrame || this._needUpdate;\r\n        else {\r\n            let timer: number = Browser.now();\r\n            if (timer - this._lastTimer > this._frameDelty) {\r\n                this._lastTimer = timer;\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Handle the loadedmetadata event of the video element.\r\n     * Processes the initialization work after the video resource is loaded, ensuring that necessary texture and playback settings are made so that the video can be properly handled during rendering.\r\n     * @zh 视频元素的 loadedmetadata 事件的回调方法。\r\n     * 处理视频资源加载完毕后的初始化工作，用于在视频正确加载后，做必要的纹理和播放设置，确保视频能在渲染时被正确处理。\r\n     */\r\n    loadedmetadata() {\r\n        if (this._isLoaded)\r\n            return;\r\n        //flag only TODO\r\n        this._width = this.element.videoWidth;\r\n        this._height = this.element.videoHeight;\r\n        if (Browser.onLayaRuntime) {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8A8, false, false, false);\r\n        }\r\n        else {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8, false, false, false);\r\n        }\r\n        this.wrapModeU = WrapMode.Clamp;\r\n        this.wrapModeV = WrapMode.Clamp;\r\n        this.filterMode = FilterMode.Bilinear;\r\n        LayaGL.textureContext.initVideoTextureData(this._texture);\r\n        this._texture.gammaCorrection = 2.2;//这里使用srgb会变得特别的卡，所以srgb的转换放入Shader中进行\r\n        if (this.immediatelyPlay) {\r\n            this.play();\r\n        }\r\n        this._isLoaded = true;\r\n        this.event(LayaEvent.READY, this);\r\n    }\r\n\r\n\r\n    /**\r\n     * @en The gamma correction value\r\n     * @zh gamma 校正值\r\n     */\r\n    get gammaCorrection() {\r\n        return 2.2;\r\n    }\r\n\r\n    /**\r\n     * @en The source URL for the video\r\n     * @zh 视频的源 URL\r\n     */\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    set source(url: string) {\r\n        this._source = url;\r\n        if (!url)\r\n            return;\r\n\r\n        AssetDb.inst.resolveURL(url, url => {\r\n            while (this.element.childElementCount)\r\n                this.element.firstChild.remove();\r\n\r\n            if (url.startsWith(\"blob:\"))\r\n                this.element.src = url;\r\n            else\r\n                this.appendSource(url);\r\n        });\r\n    }\r\n\r\n    private appendSource(source: string): void {\r\n        var sourceElement: HTMLSourceElement = ILaya.Browser.createElement(\"source\");\r\n        sourceElement.src = URL.postFormatURL(URL.formatURL(source));\r\n        let extension = Utils.getFileExtension(source);\r\n        sourceElement.type = extension == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + extension);\r\n        this.element.appendChild(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @en Render the video texture\r\n     * @zh 渲染视频纹理\r\n     */\r\n    render() {\r\n\r\n        if (this.element.readyState == 0)\r\n            return;\r\n        if (this.isNeedUpdate() || Browser.onLayaRuntime) {\r\n            LayaGL.textureContext.updateVideoTexture(this._texture, this.element, false, false);\r\n            this._needUpdate = false;\r\n            //更新事件\r\n            this.event(VideoTexture.videoEvent_update);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Whether to render every frame\r\n     * @zh 是否每一帧都渲染\r\n     */\r\n    get frameRender() {\r\n        return this._frameRender;\r\n    }\r\n\r\n    set frameRender(value: boolean) {\r\n        if (this._frameRender && !value) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n        if (!this._frameRender && value) {\r\n            ILaya.timer.frameLoop(1, this, this.render);\r\n        }\r\n        this._frameRender = value;\r\n    }\r\n\r\n    /**\r\n     * @en Start playing the video\r\n     * @zh 开始播放视频\r\n     */\r\n    play() {\r\n        if (!this._texture) {\r\n            this.immediatelyPlay = true;\r\n        } else {\r\n            this.element.play().catch(() => {\r\n                this.event(\"NotAllowedError\");\r\n            });\r\n            if (this._frameRender) {\r\n                ILaya.timer.frameLoop(1, this, this.render);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    _getSource() {\r\n        return this._texture ? this._texture.resource : null;\r\n    }\r\n\r\n    /**\r\n     * @en The default texture\r\n     * @zh 默认纹理\r\n     */\r\n    get defaultTexture() {\r\n        return Texture2D.whiteTexture;\r\n    }\r\n\r\n    /**\r\n     * @en Pause the video playback\r\n     * @zh 暂停播放视频\r\n     */\r\n    pause() {\r\n        this.element.pause();\r\n        if (this._frameRender) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @en Reload the video\r\n     * @zh 重新加载视频\r\n     */\r\n    load(): void {\r\n        this.element.load();\r\n    }\r\n\r\n    /**\r\n     * @en Check if the specified video format is supported for playback\r\n     * @param type Video format type, such as \"mp4\", \"ogg\", \"webm\", \"m3u8\", etc.\r\n     * @returns  The level of support. Possible values:\r\n     * - \"probably\": The browser most likely supports this audio/video type\r\n     * - \"maybe\": The browser might support this audio/video type\r\n     * - \"\": (empty string) The browser does not support this audio/video type\r\n     * @zh 检测是否支持播放指定格式视频\r\n     * @param type\t视频格式类型 \"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\r\n     * @return 表示支持的级别。可能的值：\r\n     * - \"probably\": 浏览器最可能支持该音频/视频类型\r\n     * - \"maybe\": 浏览器也许支持该音频/视频类型\r\n     * - \"\": （空字符串）浏览器不支持该音频/视频类型\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        type = type == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + type);\r\n        return this.element.canPlayType(type);\r\n    }\r\n\r\n    /**\r\n     * @en Get the TimeRanges object representing the buffered parts of the audio/video\r\n     * The TimeRanges object represents the buffered time ranges of the audio/video. If the user skips around in the audio/video, multiple buffered ranges may be created.\r\n     * buffered.length returns the number of buffered ranges. \r\n     * To get the first buffered range, use buffered.start(0) and buffered.end(0). Values are in seconds.\r\n     * @returns The TimeRanges object\r\n     * @zh 获取表示音视频已缓冲部分的 TimeRanges 对象\r\n     * TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * buffered.length 返回缓冲范围个数。如获取第一个缓冲范围则是 buffered.start(0) 和 buffered.end(0)。以秒计。\r\n     * @returns TimeRanges(JS)对象\r\n     */\r\n    get buffered(): any {\r\n        return this.element.buffered;\r\n    }\r\n\r\n    /**\r\n     * @en The current source URL of the video\r\n     * @zh 当前播放源路径\r\n     */\r\n    get currentSrc(): string {\r\n        return this.element.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * @en The current playback position in seconds\r\n     * @zh 当前播放头位置（以秒为单位）\r\n     */\r\n    get currentTime(): number {\r\n        return this.element.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this.element)\r\n            return;\r\n\r\n        this.element.currentTime = value;\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * @en The current volume level\r\n     * @zh 当前音量\r\n     */\r\n    get volume(): number {\r\n        return this.element.volume;\r\n    }\r\n\r\n    set volume(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.volume = value;\r\n    }\r\n\r\n\r\n    /**\r\n     * @en The readiness state of the video element:\r\n     * - 0 = HAVE_NOTHING - No information is available about the audio/video\r\n     * - 1 = HAVE_METADATA - Metadata for the audio/video is ready\r\n     * - 2 = HAVE_CURRENT_DATA - Data for the current playback position is available, but not enough to play the next frame/millisecond\r\n     * - 3 = HAVE_FUTURE_DATA - Data for the current and at least the next frame is available\r\n     * - 4 = HAVE_ENOUGH_DATA - Enough data is available to start playing\r\n     * @zh 视频元素的就绪状态：\r\n     * - 0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息\r\n     * - 1 = HAVE_METADATA - 关于音频/视频就绪的元数据\r\n     * - 2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒\r\n     * - 3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的\r\n     * - 4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放\r\n     */\r\n    get readyState(): any {\r\n        return this.element.readyState;\r\n    }\r\n\r\n    /**\r\n     * @en The width of the video source. Available after the ready event is triggered.\r\n     * @zh 视频源宽度。ready 事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this.element.videoWidth;\r\n    }\r\n\r\n    /**\r\n     * @en The height of the video source. Available after the ready event is triggered.\r\n     * @zh 视频源高度。ready 事件触发后可用。\r\n     */\r\n    get videoHeight(): number {\r\n        return this.element.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * @en The duration of the video in seconds. Available after the ready event is triggered.\r\n     * @zh 视频长度（秒）。ready 事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this.element.duration;\r\n    }\r\n\r\n    /**\r\n     * @en If the playback of the audio/video has ended\r\n     * @zh 音频/视频的播放是否已结束\r\n     */\r\n    get ended(): boolean {\r\n        return this.element.ended;\r\n    }\r\n\r\n    /**\r\n     * @en Return the MediaError object representing the error state of the audio/video\r\n     * @zh 返回表示音频/视频错误状态的 MediaError 对象\r\n     */\r\n    get error(): MediaError {\r\n        return this.element.error;\r\n    }\r\n\r\n    /**\r\n     * @en Whether the audio/video should loop when it reaches the end\r\n     * @zh 音频/视频是否应在结束时重新播放\r\n     */\r\n    get loop(): boolean {\r\n        return this.element.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.loop = value;\r\n    }\r\n\r\n    /**\r\n     * @en The current playback speed of the audio/video. For example:\r\n     * - 1.0: Normal speed\r\n     * - 0.5: Half speed (slower)\r\n     * - 2.0: Double speed (faster)\r\n     * - -1.0: Backwards, normal speed\r\n     * - -0.5: Backwards, half speed\r\n     * Note: Only Google Chrome and Safari support the playbackRate property.\r\n     * @zh 音频/视频的当前播放速度。如：\r\n     * - 1.0：正常速度\r\n     * - 0.5：半速（更慢）\r\n     * - 2.0：倍速（更快）\r\n     * - -1.0：向后，正常速度\r\n     * - -0.5：向后，半速\r\n     * 注意：只有 Google Chrome 和 Safari 支持 playbackRate 属性。\r\n     */\r\n    get playbackRate(): number {\r\n        return this.element.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * @en The muted state of the video\r\n     * @zh 视频的静音状态\r\n     */\r\n    get muted(): boolean {\r\n        return this.element.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.muted = value;\r\n    }\r\n\r\n    /**\r\n     * @en If the video is paused\r\n     * @zh 视频是否暂停\r\n     */\r\n    get paused(): boolean {\r\n        return this.element.paused;\r\n    }\r\n\r\n    /**\r\n     * @en The preload attribute of the video. Possible values:\r\n     * - \"auto\": Indicates that the video should be loaded as soon as the page loads\r\n     * - \"metadata\": Indicates that only metadata should be loaded when the page loads\r\n     * - \"none\": Indicates that the video should not be loaded when the page loads\r\n     * @zh 视频的预加载属性。可赋值如下：\r\n     * - \"auto\"：指示一旦页面加载，则开始加载视频\r\n     * - \"metadata\"：指示当页面加载后仅加载音频/视频的元数据\r\n     * - \"none\"：指示页面加载后不应加载音频/视频\r\n     */\r\n    get preload(): string {\r\n        return this.element.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this.element)\r\n            return;\r\n        //@ts-ignore\r\n        this.element.preload = value;\r\n    }\r\n\r\n    /**\r\n     * @en see: http://www.w3school.com.cn/tags/av_prop_seekable.asp象\r\n     * @zh 参见：http://www.w3school.com.cn/tags/av_prop_seekable.asp\r\n     */\r\n    get seekable(): any {\r\n        return this.element.seekable;\r\n    }\r\n\r\n    /**\r\n     * @en Returns whether the user is currently seeking in the audio/video.\r\n     * Seeking refers to the user moving/jumping to a new position in the audio/video.\r\n     * @zh 返回用户目前是否在音频/视频中寻址。\r\n     * 寻址（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this.element.seeking;\r\n    }\r\n\r\n    protected onStartListeningToType(type: string): void {\r\n        if (videoEvents.has(type)) {\r\n            let func = this._listeningEvents[type];\r\n            if (!func)\r\n                func = this._listeningEvents[type] = () => {\r\n                    this.event(type);\r\n                };\r\n\r\n            this.element.addEventListener(type, func);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @en Destroys the current instance and releases resources.\r\n     * @zh 销毁当前实例并释放资源。\r\n     */\r\n    destroy() {\r\n        if (this.element) {\r\n            if (LayaEnv.isConch) {\r\n                (<any>this.element)._destroy();\r\n            }\r\n            else {\r\n                this.element.pause();\r\n                this.element.src = \"\";\r\n                while (this.element.childElementCount)\r\n                    this.element.firstChild.remove();\r\n            }\r\n        }\r\n\r\n        ILaya.timer.clear(this, this.render);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\nconst videoEvents = new Set([\r\n    \"abort\", \"canplay\", \"canplaythrough\", \"durationchange\", \"emptied\", \"error\", \"loadeddata\",\r\n    \"loadedmetadata\", \"loadstart\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"seeked\", \"seeking\",\r\n    \"stalled\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\", \"ended\"\r\n]);","import { Sprite } from \"../display/Sprite\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { VideoTexture } from \"./VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n/**\r\n * <code>VideoNode</code>将视频显示到Canvas上。<code>Video</code>可能不会在所有浏览器有效。\r\n * <p>关于Video支持的所有事件参见：<i>http://www.w3school.com.cn/tags/html_ref_audio_video_dom.asp</i>。</p>\r\n * <p>\r\n * <b>注意：</b><br/>\r\n * 在PC端可以在任何时机调用<code>play()</code>因此，可以在程序开始运行时就使Video开始播放。但是在移动端，只有在用户第一次触碰屏幕后才可以调用play()，所以移动端不可能在程序开始运行时就自动开始播放Video。\r\n * </p>\r\n *\r\n * <p>MDN Video链接： <i>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video</i></p>\r\n */\r\nexport class VideoNode extends Sprite {\r\n    private _videoTexture: VideoTexture;\r\n    private _internalTex: Texture;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.texture = this._internalTex = new Texture();\r\n\r\n        if (LayaEnv.isPlaying && ILaya.Browser.onMobile && !LayaEnv.isConch) {\r\n            let func = () => {\r\n                ILaya.Browser.document.removeEventListener(\"touchend\", func);\r\n\r\n                if (!this._videoTexture)\r\n                    return;\r\n\r\n                if (Browser.onIOS) {\r\n                    this._videoTexture.load();\r\n                } else {\r\n                    this._videoTexture.play();\r\n                    this._videoTexture.pause();\r\n                }\r\n            }\r\n\r\n            ILaya.Browser.document.addEventListener(\"touchend\", func);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 视频纹理\r\n     */\r\n    get videoTexture(): VideoTexture {\r\n        return this._videoTexture;\r\n    }\r\n\r\n    set videoTexture(value: VideoTexture) {\r\n        if (this._videoTexture) {\r\n            this._videoTexture._removeReference();\r\n            this.videoTexture.off(VideoTexture.videoEvent_update, this, this._repaintCachAs);\r\n            this._videoTexture.off(Event.READY, this, this.onVideoMetaLoaded);\r\n        }\r\n\r\n        this._videoTexture = value;\r\n        if (value) {\r\n            this._videoTexture._addReference();\r\n            this._videoTexture.on(Event.READY, this, this.onVideoMetaLoaded);\r\n            if (this._videoTexture._isLoaded)\r\n                this._internalTex.setTo(this._videoTexture);\r\n        }\r\n        else {\r\n            this._internalTex.setTo(null);\r\n        }\r\n        this._checkCachAs();\r\n    }\r\n\r\n    /**\r\n     * 视频源\r\n     */\r\n    get source() {\r\n        return this._videoTexture?.source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        if (value) {\r\n            if (!this._videoTexture)\r\n                this.videoTexture = new VideoTexture();\r\n            this._videoTexture.source = value;\r\n        }\r\n        else if (this._videoTexture)\r\n            this._videoTexture.source = value;\r\n        this._checkCachAs();\r\n    }\r\n\r\n\r\n    private _checkCachAs() {\r\n        if (this.videoTexture != null)\r\n            this.videoTexture.on(VideoTexture.videoEvent_update, this, this._repaintCachAs);\r\n\r\n    }\r\n\r\n    private _repaintCachAs() {\r\n        if (this.cacheAs != \"none\" || (!!this._getCacheStyle().mask)) {\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 设置播放源。\r\n     * @param url\t播放源路径。\r\n     */\r\n    load(url: string): void {\r\n        this.source = url;\r\n    }\r\n\r\n    /**\r\n     * 开始播放视频。\r\n     */\r\n    play(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.play();\r\n    }\r\n\r\n    /**\r\n     * 暂停视频播放。\r\n     */\r\n    pause(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.pause();\r\n    }\r\n\r\n    /**\r\n     * 重新加载视频。\r\n     */\r\n    reload(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.load();\r\n    }\r\n\r\n    /**\r\n     * 检测是否支持播放指定格式视频。\r\n     * @param type\t\"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\r\n     * @return 表示支持的级别。可能的值：\r\n     * <ul>\r\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\r\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\r\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\r\n     * </ul>\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        if (!this._videoTexture)\r\n            this.videoTexture = new VideoTexture();\r\n        return this._videoTexture.canPlayType(type);\r\n    }\r\n\r\n    private onVideoMetaLoaded(): void {\r\n        this._internalTex.setTo(this._videoTexture);\r\n    }\r\n\r\n    /**\r\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\r\n     * @return TimeRanges(JS)对象\r\n     */\r\n    get buffered(): any {\r\n        return this._videoTexture?.buffered;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放源路径。\r\n     */\r\n    get currentSrc(): string {\r\n        return this._videoTexture?.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前播放头位置。\r\n     */\r\n    get currentTime(): number {\r\n        return this._videoTexture?.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.currentTime = value;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前音量。\r\n     */\r\n    set volume(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.volume = value;\r\n    }\r\n\r\n    get volume(): number {\r\n        return this._videoTexture?.volume;\r\n    }\r\n\r\n    /**\r\n     * 表示视频元素的就绪状态：\r\n     * <ul>\r\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\r\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\r\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\r\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\r\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\r\n     * </ul>\r\n     */\r\n    get readyState(): any {\r\n        return this._videoTexture?.readyState;\r\n    }\r\n\r\n    /**\r\n     * 获取视频源尺寸。ready事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this._videoTexture?.videoWidth;\r\n    }\r\n\r\n    get videoHeight(): number {\r\n        return this._videoTexture?.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * 获取视频长度（秒）。ready事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this._videoTexture?.duration;\r\n    }\r\n\r\n    /**\r\n     * 返回音频/视频的播放是否已结束\r\n     */\r\n    get ended(): boolean {\r\n        return this._videoTexture?.ended;\r\n    }\r\n\r\n    /**\r\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\r\n     */\r\n    get error(): MediaError {\r\n        return this._videoTexture?.error;\r\n    }\r\n\r\n    /**\r\n     * 设置或返回音频/视频是否应在结束时重新播放。\r\n     */\r\n    get loop(): boolean {\r\n        return this._videoTexture?.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.loop = value;\r\n    }\r\n\r\n    /**\r\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\r\n     * <ul>\r\n     * <li>1.0 正常速度</li>\r\n     * <li>0.5 半速（更慢）</li>\r\n     * <li>2.0 倍速（更快）</li>\r\n     * <li>-1.0 向后，正常速度</li>\r\n     * <li>-0.5 向后，半速</li>\r\n     * </ul>\r\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\r\n     */\r\n    get playbackRate(): number {\r\n        return this._videoTexture?.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * 获取和设置静音状态。\r\n     */\r\n    get muted(): boolean {\r\n        return this._videoTexture?.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.muted = value;\r\n    }\r\n\r\n    /**\r\n     * 返回视频是否暂停\r\n     */\r\n    get paused(): boolean {\r\n        return this._videoTexture?.paused;\r\n    }\r\n\r\n    /**\r\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\r\n     * <ul>\r\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\r\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\r\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\r\n     * </ul>\r\n     */\r\n    get preload(): string {\r\n        return this._videoTexture?.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        //@ts-ignore\r\n        this._videoTexture.preload = value;\r\n    }\r\n\r\n    /**\r\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\r\n     */\r\n    get seekable(): any {\r\n        return this._videoTexture?.seekable;\r\n    }\r\n\r\n    /**\r\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\r\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this._videoTexture?.seeking;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    _setX(value: number): void {\r\n        super._setX(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.left = transform.x;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    _setY(value: number): void {\r\n        super._setY(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.top = transform.y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    set_width(value: number): void {\r\n        super.set_width(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.width = value * transform.scaleX;\r\n        }\r\n        else {\r\n            this._videoTexture.element.width = this.width / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    set_height(value: number) {\r\n        super.set_height(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.height = value * transform.scaleY;\r\n\r\n        }\r\n        else {\r\n            this._videoTexture.element.height = this.height / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁内部事件绑定。\r\n     * @param detroyChildren    是否删除子节点\r\n     * @override\r\n     */\r\n    destroy(detroyChildren: boolean = true): void {\r\n        this.videoTexture = null;\r\n        super.destroy(detroyChildren);\r\n    }\r\n}","import { AnimatorState2D } from \"./AnimatorState2D\";\r\n\r\nexport class AnimatorPlayState2D {\r\n\t_finish: boolean;\r\n\t/**@internal */\r\n\t_startPlayTime: number;\r\n\t/**@internal */\r\n\t_lastElapsedTime: number;\r\n\t/**@internal 动画播放时间*/\r\n\t_elapsedTime: number;\r\n\t/**@internal 播放的次数*/\r\n\t_playNum: number;\r\n\r\n\t/**播放总时间，不受speed为负数的影响 */\r\n\t_playAllTime: number;\r\n\r\n\t/**@internal 单词播放归一化时间 */\r\n\t_normalizedPlayTime: number;\r\n\t/**@internal */\r\n\t_duration: number;\r\n\t/**@internal 上次播放的时间，event事件使用*/\r\n\t_parentPlayTime: number;\r\n\t/**@internal */\r\n\t_lastIsFront: boolean;\r\n\t/**@internal */\r\n\t_currentState: AnimatorState2D | null = null;\r\n\r\n\t/**是为正向播放 */\r\n\t_frontPlay = true;\r\n\r\n\r\n\t/**\r\n\t * 当前动画的持续时间，以秒为单位。\r\n\t */\r\n\tget duration(): number {\r\n\t\treturn this._duration;\r\n\t}\r\n\r\n\t// checkPlayNext(): Animation2DNext {\r\n\t//     var nexts = this._currentState.nexts;\r\n\t//     if (nexts) {\r\n\t//         for (var i = 0, len = nexts.length; i < len; i++) {\r\n\t//             var no = nexts[i];\r\n\t//             //TODO 需要检测next的条件\r\n\t//             return no;\r\n\t//         }\r\n\t//     }\r\n\t//     return null;\r\n\t// }\r\n\r\n\t/**\r\n\t * 动画状态机。\r\n\t */\r\n\tget animatorState(): AnimatorState2D {\r\n\t\treturn this._currentState!;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>AnimatorPlayState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_resetPlayState(startTime: number, clipDuration: number): void {\r\n\t\tthis._finish = false;\r\n\t\tthis._startPlayTime = startTime;\r\n\t\tthis._elapsedTime = startTime;\r\n\t\tthis._lastIsFront = true;\r\n\t\tthis._parentPlayTime = null;\r\n\t\tthis._playNum = 0;\r\n\t\tthis._playAllTime = 0;\r\n\t\tvar playTime = (this._elapsedTime / clipDuration) % 1.0;\r\n\t\tthis._normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\t\tthis._frontPlay = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_cloneTo(dest: AnimatorPlayState2D): void {\r\n\t\tdest._finish = this._finish;\r\n\t\tdest._startPlayTime = this._startPlayTime;\r\n\t\tdest._elapsedTime = this._elapsedTime;\r\n\t\tdest._playNum = this._playNum;\r\n\t\tdest._parentPlayTime = this._parentPlayTime;\r\n\t\tdest._normalizedPlayTime = this._normalizedPlayTime;\r\n\t\tdest._lastIsFront = this._lastIsFront;\r\n\t\tdest._frontPlay = this._frontPlay;\r\n\t\tdest._playAllTime = this._playAllTime;\r\n\t}\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\nexport class AnimatorControllerLayer2D implements IClone {\r\n\r\n    /**混合模式_覆盖。 */\r\n    static BLENDINGMODE_OVERRIDE: number = 0;\r\n\r\n    /**混合模式_叠加。 */\r\n    static BLENDINGMODE_ADDTIVE: number = 1;\r\n\r\n    /**@internal */\r\n    private _defaultState: AnimatorState2D | null;\r\n\r\n    /**@internal */\r\n    private _referenceCount = 0;\r\n\r\n    /**@internal */\r\n    private _defaultStateNameCatch: string;\r\n\r\n    /**@internal*/\r\n    _playStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossPlayStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossMark: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersCount: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersIndicesMap: any = {};\r\n\r\n    /**@internal */\r\n    _srcCrossClipNodeIndices: number[] = [];\r\n\r\n    /**@internal */\r\n    _destCrossClipNodeIndices: number[] = [];\r\n    \r\n    /**@internal */\r\n    _enterTransition: AnimatorTransition2D;\r\n\r\n    /**\r\n     * 层的名字\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 是否开始时播放\r\n     */\r\n    playOnWake = true;\r\n\r\n    /**\r\n     * 默认权重\r\n     */\r\n    defaultWeight = 1.0;\r\n\r\n    /**\r\n     * 混合模式\r\n     */\r\n    blendingMode = AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n\r\n    /**\r\n     * 是否开启\r\n     */\r\n    enable = true;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _states: AnimatorState2D[] = [];\r\n\r\n    /**\r\n     * @internal \r\n     * 0:常规播放、1:动态融合播放、2:固定融合播放\r\n     */\r\n    _playType = -1;\r\n\r\n    /**\r\n     * 实例化一个2D动画控制器\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    /**\r\n     * 设置状态机\r\n     */\r\n    set states(states: ReadonlyArray<AnimatorState2D>) {\r\n        if (this._states === states)\r\n            return;\r\n        for (let i = this.states.length - 1; i >= 0; i--) {\r\n            this.removeState(this.states[i]);\r\n        }\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            this.addState(states[i]);\r\n        }\r\n    }\r\n\r\n    get states(): ReadonlyArray<AnimatorState2D> {\r\n        return this._states;\r\n    }\r\n\r\n    /**\r\n     * 默认状态名称\r\n     */\r\n    set defaultStateName(str: string) {\r\n        this._defaultState = this.getStateByName(str);\r\n        if (null == this._defaultState) {\r\n            if (0 == this._states.length) {\r\n                this._defaultStateNameCatch = str;\r\n            } else {\r\n                for (var i = this._states.length - 1; i >= 0; i--) {\r\n                    if (this._states[i].name == str) {\r\n                        this._defaultState = this._states[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get defaultStateName() {\r\n        if (!this._defaultState) {\r\n            return null;\r\n        }\r\n        return this._defaultState.name;\r\n    }\r\n\r\n    /**\r\n     * 默认动画状态机。\r\n     */\r\n    get defaultState(): AnimatorState2D {\r\n        return this._defaultState!;\r\n    }\r\n\r\n    set defaultState(value: AnimatorState2D) {\r\n        this._defaultState = value;\r\n        //this._statesMap[value.name] = value;\r\n    }\r\n\r\n    /**\r\n     * 移除Clip\r\n     * @param clipStateInfos \r\n     * @param index \r\n     * @param state \r\n     */\r\n    private _removeClip(clipStateInfos: AnimatorState2D[], index: number, state: AnimatorState2D): void {\r\n        clipStateInfos.splice(index, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._addReference(count);\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count = 1): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._removeReference(count);\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n\r\n    /**\r\n    * 获取当前的播放状态。\r\n    * @return 动画播放状态。\r\n    */\r\n    getCurrentPlayState(): AnimatorPlayState2D {\r\n        return this._playStateInfo!;\r\n    }\r\n\r\n    /**\r\n     * 状态机名称\r\n     * @param str \r\n     * @returns \r\n     */\r\n    getStateByName(str: string) {\r\n        for (let i = this._states.length - 1; i >= 0; i--) {\r\n            if (this._states[i].name == str) {\r\n                return this._states[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 添加动画状态。\r\n     * @param\tstate 动画状态。\r\n     * @param   layerIndex 层索引。\r\n     */\r\n    addState(state: AnimatorState2D): void {\r\n        var stateName = state.name;\r\n        if (this.getStateByName(stateName)) {\r\n            throw \"AnimatorControllerLayer:this stat's name has exist.\";\r\n        } else {\r\n            this._states.push(state);\r\n            if (stateName == this._defaultStateNameCatch) {\r\n                this._defaultState = state;\r\n                this._defaultStateNameCatch = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除动画状态。\r\n     * @param\tstate 动画状态。\r\n     * @param   layerIndex 层索引。\r\n     */\r\n    removeState(state: AnimatorState2D): void {\r\n        var states = this._states;\r\n        var index = -1;\r\n        for (var i = 0, n = states.length; i < n; i++) {\r\n            if (states[i] === state) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (-1 != index)\r\n            this._removeClip(states, index, state);\r\n    }\r\n\r\n    /**\r\n         * 克隆。\r\n         * @return\t 克隆副本。\r\n         */\r\n    clone() {\r\n        var dest: AnimatorControllerLayer2D = new AnimatorControllerLayer2D(this.name);\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorControllerLayer2D = (<AnimatorControllerLayer2D>destObject);\r\n        dest.name = this.name;\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        this._removeReference();\r\n        for (var i = 0, n = this._states.length; i < n; i++) {\r\n            this._states[i].destroy();\r\n        }\r\n        this._states.length = 0;\r\n    }\r\n}","import { AvatarMask } from \"../d3/component/Animator/AvatarMask\";\r\n\r\nexport interface TypeAnimatorControllerData {\r\n    layerW: number,\r\n    controllerLayers: TypeAnimatorLayer[];\r\n    cullingMode?: number,\r\n    enable?: boolean,\r\n    animatorParams?: TypeAnimatorParams[],\r\n}\r\nexport interface TypeAnimatorParams {\r\n    id: number,\r\n    name: string,\r\n    type: AniParmType,\r\n    val: number | boolean,\r\n}\r\nexport interface TypeAnimatorLayer {\r\n    defaultStateName?: string,\r\n    name: string,\r\n    blendingMode: number,\r\n    states: TypeAnimatorState[],\r\n    playOnWake: boolean,\r\n    defaultWeight: number,\r\n    avatarMask?: any,\r\n\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\n\r\nexport enum AniParmType {\r\n    Float,\r\n    Bool,\r\n    Trigger,\r\n}\r\n\r\n/**\r\n * 动画状态条件类型\r\n */\r\nexport enum AniStateConditionType {\r\n    Number,\r\n    Bool,\r\n    Trigger\r\n}\r\n\r\nexport interface TypeAnimatorState {\r\n    x: number,\r\n    y: number,\r\n    /**-1代表enter，-2代表exit，-3代表anyState */\r\n    id: string,\r\n    name: string,\r\n    speed?: number,\r\n    clipStart?: number,\r\n    clipEnd?: number,\r\n    loop?: number,\r\n    yoyo?: boolean,\r\n    soloTransitions?: TypeAnimatorTransition[],\r\n    clip?: { _$uuid: string, },\r\n    scripts?: string[],\r\n\r\n\r\n    states?: TypeAnimatorState[],\r\n    defaultStateName?: string,\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\nexport interface TypeAnimatorTransition {\r\n    id: string,\r\n    name?: string,\r\n    mute?: boolean,\r\n    solo?: boolean,\r\n    exitTime?: number,\r\n    transduration?: number,\r\n    transstartoffset?: number,\r\n    exitByTime?: boolean,\r\n    conditions?: TypeAnimatorConditions[],\r\n}\r\nexport interface TypeAnimatorConditions {\r\n    id?: number,\r\n    type?: AniStateConditionNumberCompressType,\r\n    checkValue?: number | boolean,\r\n    name?: string,\r\n}\r\n\r\nexport enum AniStateConditionNumberCompressType {\r\n    Less,\r\n    Greater\r\n}\r\n\r\nexport class AnimatorControllerParse {\r\n    static parse(data: TypeAnimatorControllerData) {\r\n        //let ret: TypeAnimatorControllerData = JSON.parse(JSON.stringify(data));\r\n        let ret = data;\r\n        let layers = ret.controllerLayers;\r\n        if (null == layers) {\r\n            layers = [];\r\n        }\r\n\r\n        let clipsID: string[] = [];\r\n\r\n\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let states = l.states;\r\n            if (!states) {\r\n                states = [];\r\n                l.states = states;\r\n            }\r\n\r\n            l.defaultStateName = null;\r\n            let retobj = this.checkStates(states, clipsID, ret);\r\n            if (retobj) {\r\n                l.defaultStateName = retobj.enterName;\r\n            } else {\r\n                layers.splice(i, 1);\r\n            }\r\n        }\r\n        return { ret: ret, clipsID: clipsID };\r\n    }\r\n\r\n\r\n    private static checkStates(states: TypeAnimatorState[], clipsID: string[], data: TypeAnimatorControllerData) {\r\n        let clipState: TypeAnimatorState[] = null;\r\n        let enterState: TypeAnimatorState = null;\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            let state = states[j];\r\n            if (state.states) {\r\n                if (null == this.checkStates(state.states, clipsID, data)) {\r\n                    states.splice(j, 1);\r\n                } else {\r\n                    if (null == clipState) {\r\n                        clipState = [];\r\n                    }\r\n                    clipState.push(state);\r\n                }\r\n            } else if (\"-1\" == state.id) {\r\n                enterState = state;\r\n                // let defName = this.checkDefault(state, states);\r\n                // if (null != defName) {\r\n                //     l.defaultStateName = defName;\r\n                // }\r\n            } else if (\"-2\" == state.id) {\r\n                //TODO any\r\n            } else if (\"-3\" == state.id) {\r\n                //TODO exit\r\n            } else if (null == state.clip || null == state.clip._$uuid || \"\" == state.clip._$uuid) {\r\n                states.splice(j, 1);\r\n            } else {\r\n                if (0 > clipsID.indexOf(state.clip._$uuid)) {\r\n                    clipsID.push(state.clip._$uuid);\r\n                }\r\n\r\n                this.checkNext(state, states, data);\r\n                if (null == clipState) {\r\n                    clipState = [];\r\n                }\r\n                clipState.push(state);\r\n            }\r\n        }\r\n        let ret: { states: TypeAnimatorState[], enterName: string } = null;\r\n        if (clipState && enterState) {\r\n            let defName = this.checkDefault(enterState, clipState);\r\n            if (null != defName) {\r\n                ret = { states: clipState, enterName: defName };\r\n            }\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    private static checkNext(state: TypeAnimatorState, states: TypeAnimatorState[], data: TypeAnimatorControllerData) {\r\n        let nexts = state.soloTransitions;\r\n        if (nexts) {\r\n            for (let i = nexts.length - 1; i >= 0; i--) {\r\n                let next = nexts[i];\r\n                let nState = this.getStateByID(states, next.id);\r\n                if (!nState || (null == nState.clip && \"-3\" != nState.id && null == nState.states)) {\r\n                    nexts.splice(i, 1);\r\n                } else {\r\n                    next.name = nState.name;\r\n\r\n                    next.conditions = this.checkConditions(next.conditions, data);\r\n\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private static checkConditions(conditions: TypeAnimatorConditions[], data: TypeAnimatorControllerData) {\r\n        if (!conditions || 0 == conditions.length || null == data.animatorParams || 0 == data.animatorParams.length) {\r\n            return [];\r\n        }\r\n\r\n        let parms = data.animatorParams;\r\n\r\n        for (let i = conditions.length - 1; i >= 0; i--) {\r\n            let o = conditions[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                conditions.splice(i, 1);\r\n            } else {\r\n                o.name = parm.name;\r\n                if (parm.type == AniParmType.Float) {\r\n                    let num = Number(o.checkValue);\r\n                    if (isNaN(num)) {\r\n                        o.checkValue = 0;\r\n                    }\r\n                    num = Number(o.type);\r\n                    if (isNaN(num)) {\r\n                        o.type = 0;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return conditions;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    private static checkDefault(state: TypeAnimatorState, states: TypeAnimatorState[]) {\r\n        let nexts = state.soloTransitions;\r\n        let id: string = null;\r\n        if (nexts && 0 < nexts.length) {\r\n            id = nexts[0].id;\r\n        }\r\n\r\n        let defState: TypeAnimatorState = null;\r\n        if (null != id) {\r\n            defState = this.getStateByID(states, id);\r\n        }\r\n        if (null != defState && (null != defState.clip || null != defState.states)) {\r\n            return defState.name;\r\n        }\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            if (states[i].clip) {\r\n                return states[i].name;\r\n            }\r\n        }\r\n\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n\r\n    private static getStateByID(states: TypeAnimatorState[], id: string) {\r\n        if (states) {\r\n            for (let i = states.length - 1; i >= 0; i--) {\r\n                if (states[i].id == id) {\r\n                    return states[i];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","/**\r\n * 动画更新模式\r\n */\r\nexport enum AnimatorUpdateMode {\r\n    /**正常更新。*/\r\n    Normal = 0,\r\n    /**低频率更新 */\r\n    LowFrame = 1,\r\n    /**不更新 */\r\n    UnScaleTime = 2\r\n}\r\n","\r\n/**\r\n * 动画条件类型\r\n */\r\nexport enum AniConditionType {\r\n    /**\r\n     * 大于\r\n     */\r\n    Greater,\r\n    /**\r\n     * 小于\r\n     */\r\n    Less,\r\n    /**\r\n     * 等于\r\n     */\r\n    Equals,\r\n    /**\r\n     * 不等于\r\n     */\r\n    NotEqual,//不等于\r\n}\r\n\r\n/**\r\n * 2D动画类型\r\n */\r\nexport class Animation2DCondition {\r\n    /**\r\n     * id编号\r\n     */\r\n    id: number;\r\n    /**\r\n     * 动画条件\r\n     */\r\n    type: AniConditionType;\r\n    /**\r\n     * 检测值\r\n     */\r\n    checkValue: any\r\n}","import { Resource } from \"./Resource\";\r\n/**\r\n * 文字资源格式\r\n */\r\nexport enum TextResourceFormat {\r\n    /**Buffer */\r\n    Buffer,\r\n    /**TODO */\r\n    Plain,\r\n    /**Json */\r\n    JSON,\r\n    /**XML */\r\n    XML\r\n}\r\n\r\n/**\r\n * 文字资源\r\n */\r\nexport class TextResource extends Resource {\r\n    /**数据 */\r\n    public readonly data: any;\r\n    /**格式 */\r\n    public readonly format: TextResourceFormat;\r\n    /**\r\n     * 实例化文字资源\r\n     * @param data \r\n     * @param format \r\n     */\r\n    constructor(data: any, format: TextResourceFormat) {\r\n        super();\r\n        this.data = data;\r\n        this.format = format;\r\n    }\r\n}","\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { Component } from \"./Component\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Node } from \"../../laya/display/Node\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimatorController2D } from \"./AnimatorController2D\";\r\nimport { AniParmType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { AnimatorUpdateMode } from \"./AnimatorUpdateMode\";\r\n\r\n/**\r\n * <code>Animator2D<code/>2D动画组件\r\n */\r\nexport class Animator2D extends Component {\r\n    /**@internal */\r\n    private _speed = 1;\r\n    /**@internal 更新模式*/\r\n    private _updateMode = AnimatorUpdateMode.Normal;\r\n    /**@internal 降低更新频率调整值*/\r\n    private _lowUpdateDelty = 20;\r\n    /**@internal */\r\n    private _isPlaying = true;\r\n    /**@internal */\r\n    private _ownerMap: Map<KeyframeNode2D, { ower: Node, pro?: { ower: any, key: string, defVal: any } }>\r\n    /**@internal */\r\n    _parameters: Record<string, Animation2DParm>;\r\n    /**@internal */\r\n    _controllerLayers: AnimatorControllerLayer2D[];\r\n    /**@internal */\r\n    _controller: AnimatorController2D;\r\n    /**@internal */\r\n    _checkEnterIndex: number[];\r\n\r\n    /**\r\n     * 实例化2D动画组件\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._controllerLayers = [];\r\n        this._parameters = {};\r\n    }\r\n\r\n    /**\r\n     * 2D动画控制器\r\n     */\r\n    set controller(val: AnimatorController2D) {\r\n        this._controller = val;\r\n        if (val) {\r\n            val.updateTo(this);\r\n        }\r\n    }\r\n\r\n    get controller() {\r\n        return this._controller;\r\n    }\r\n\r\n    /**\r\n     * 动画参数\r\n     */\r\n    set parameters(val: Record<string, Animation2DParm>) {\r\n        this._parameters = val;\r\n    }\r\n\r\n    get parameters() {\r\n        return this._parameters;\r\n    }\r\n\r\n    /**\r\n     * 播放速度\r\n     */\r\n    set speed(num: number) {\r\n        this._speed = num;\r\n    }\r\n\r\n    get speed() {\r\n        return this._speed;\r\n    }\r\n\r\n    /**\r\n     * 是否正在播放中\r\n     */\r\n    get isPlaying() {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     */\r\n    private _updateStateFinish(animatorState: AnimatorState2D, playState: AnimatorPlayState2D): void {\r\n        if (playState._finish) {\r\n            animatorState._eventExit();//派发播放完成的事件\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 赋值Node数据\r\n     * @param stateInfo 动画状态\r\n     * @param additive 是否为addtive\r\n     * @param weight state权重\r\n     * @param isFirstLayer 是否是第一层\r\n     */\r\n    private _setClipDatasToNode(stateInfo: AnimatorState2D, additive: boolean, weight: number, controllerLayer: AnimatorControllerLayer2D = null): void {\r\n        var realtimeDatas = stateInfo._realtimeDatas;\r\n        var nodes = stateInfo._clip!._nodes!;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            if (null == realtimeDatas[i]) continue;\r\n            var node = nodes.getNodeByIndex(i);\r\n            var o = this.getOwner(node);\r\n            o && this._applyFloat(o, additive, weight, realtimeDatas[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param o \r\n     * @param additive \r\n     * @param weight \r\n     * @param isFirstLayer \r\n     * @param data \r\n     */\r\n    private _applyFloat(o: { ower: Node, pro?: { ower: any, key: string, defVal: any } }, additive: boolean, weight: number, data: string | number | boolean): void {\r\n        var pro = o.pro;\r\n        if (pro && pro.ower) {\r\n            if (additive && \"number\" == typeof data) {\r\n                pro.ower[pro.key] = pro.defVal + weight * data;\r\n            } else if (\"number\" == typeof data) {\r\n                pro.ower[pro.key] = weight * data;\r\n            } else {\r\n                pro.ower[pro.key] = data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param node \r\n     * @returns \r\n     */\r\n    private getOwner(node: KeyframeNode2D) {\r\n        var ret: { ower: Node, pro?: { ower: any, key: string, defVal: any } };\r\n        if (this._ownerMap) {\r\n            ret = this._ownerMap.get(node);\r\n            if (ret) {\r\n                return ret;\r\n            }\r\n        }\r\n\r\n        var property = this.owner;\r\n        for (var j = 0, m = node.ownerPathCount; j < m; j++) {\r\n            var ownPat = node.getOwnerPathByIndex(j);\r\n            if (\"\" == ownPat) {\r\n                continue;\r\n            } else {\r\n                property = property.getChildByName(ownPat);\r\n                if (!property)\r\n                    break;\r\n            }\r\n        }\r\n\r\n        ret = { ower: property };\r\n\r\n        if (property) {\r\n            var pobj: any = property;\r\n            var propertyCount = node.propertyCount;\r\n\r\n            if (1 == propertyCount) {\r\n                var pname = node.getPropertyByIndex(0);\r\n                ret.pro = { ower: property, key: pname, defVal: (property as any)[pname] };\r\n            } else {\r\n                for (var i = 0; i < propertyCount; i++) {\r\n                    var pname = node.getPropertyByIndex(i);\r\n\r\n                    if (i == propertyCount - 1 || null == pobj) {\r\n                        ret.pro = { ower: pobj, key: pname, defVal: pobj ? pobj[pname] : null }\r\n                        break;\r\n                    }\r\n\r\n                    if (null == pobj[pname] && property == pobj) {\r\n                        //有可能是组件,查找组件逻辑\r\n                        pobj = null;\r\n                        var classObj = ClassUtils.getClass(pname);\r\n                        if (classObj) {\r\n                            pobj = property.getComponent(classObj);\r\n                        }\r\n\r\n                    } else {\r\n                        pobj = pobj[pname];\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (null == this._ownerMap) {\r\n            this._ownerMap = new Map();\r\n        }\r\n        this._ownerMap.set(node, ret);\r\n        return ret;\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 更新clip数据\r\n     * @internal\r\n     */\r\n    private _updateClipDatas(animatorState: AnimatorState2D, addtive: boolean, playStateInfo: AnimatorPlayState2D): void {\r\n        var clip = animatorState._clip;\r\n        var clipDuration = clip!._duration;\r\n\r\n        var curPlayTime = animatorState.clipStart * clipDuration + playStateInfo._normalizedPlayTime * playStateInfo._duration;\r\n        var currentFrameIndices = animatorState._currentFrameIndices;\r\n        //var frontPlay = playStateInfo._frontPlay;\r\n        let frontPlay = true;\r\n        clip!._evaluateClipDatasRealTime(curPlayTime, currentFrameIndices, addtive, frontPlay, animatorState._realtimeDatas);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     * @param elapsedTime \r\n     * @param loop \r\n     * @param layerIndex \r\n     * @returns \r\n     */\r\n    private _updatePlayer(animatorState: AnimatorState2D, playState: AnimatorPlayState2D, elapsedTime: number, loop: number, layerIndex: number): void {\r\n\r\n        let isReplay = false;\r\n        var clipDuration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n        var lastElapsedTime = playState._elapsedTime;\r\n\r\n        let pAllTime = playState._playAllTime;\r\n\r\n        playState._playAllTime += Math.abs(elapsedTime);\r\n\r\n        //动画播放总时间\r\n        elapsedTime = lastElapsedTime + elapsedTime;\r\n        //动画播放的上次总时间\r\n        playState._lastElapsedTime = lastElapsedTime;\r\n        playState._elapsedTime = elapsedTime;\r\n        var normalizedTime = elapsedTime / clipDuration;\r\n\r\n        let scale = 1;\r\n        if (animatorState.yoyo) {\r\n            scale = 2;\r\n        }\r\n\r\n        //总播放次数\r\n        let pTime = playState._playAllTime / (clipDuration * scale);\r\n\r\n        if (Math.floor(pAllTime / (clipDuration * scale)) < Math.floor(pTime)) {\r\n            isReplay = true;\r\n        }\r\n\r\n        var playTime = normalizedTime % 1.0;\r\n        let normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n        playState._normalizedPlayTime = normalizedPlayTime;\r\n        playState._duration = clipDuration;\r\n\r\n        if (1 != scale) {\r\n            normalizedTime = playState._playAllTime / (clipDuration * scale);\r\n            playTime = normalizedTime % 1.0;\r\n            normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\r\n            if (animatorState.yoyo) {\r\n                if (0.5 > normalizedPlayTime) {\r\n                    if (!playState._frontPlay) {\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        }\r\n                        playState._frontPlay = true;\r\n                    }\r\n                } else {\r\n                    if (playState._frontPlay) {\r\n                        playState._frontPlay = false;\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        animatorState._eventStateUpdate(normalizedPlayTime);\r\n        let ret = this._applyTransition(layerIndex, animatorState._eventtransition(normalizedPlayTime, this.parameters, isReplay));\r\n\r\n        if (!ret && isReplay) {\r\n            let absTime = playState._playAllTime / (clipDuration * scale);\r\n            if (0 < loop && loop <= absTime) {\r\n                playState._finish = true;\r\n\r\n                if (0 > animatorState.speed) {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    }\r\n                } else {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    }\r\n                }\r\n                return;\r\n            } else {\r\n                animatorState._eventLoop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param stateInfo \r\n     * @param playStateInfo \r\n     */\r\n    private _updateEventScript(stateInfo: AnimatorState2D, playStateInfo: AnimatorPlayState2D): void {\r\n        let clip = stateInfo._clip;\r\n        let events = clip!._animationEvents;\r\n        if (!events || 0 == events.length) return;\r\n        let clipDuration = clip!._duration;\r\n        let time = playStateInfo._normalizedPlayTime * clipDuration;\r\n        let frontPlay = playStateInfo._frontPlay;\r\n        let pTime = playStateInfo._parentPlayTime;\r\n        let parentPlayTime = playStateInfo._parentPlayTime;\r\n        if (null == parentPlayTime) {\r\n            if (frontPlay) {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            } else {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n        if (frontPlay) {\r\n            if (time < parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipEnd, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            }\r\n        } else {\r\n            if (time > parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipStart, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n\r\n        this._eventScript(events, parentPlayTime, time, frontPlay);\r\n        /**如果不相等，应该是event事件里面跳转了，被重置了动画 */\r\n        if(pTime == playStateInfo._parentPlayTime){\r\n            playStateInfo._parentPlayTime = time;\r\n        }\r\n    }\r\n    /**\r\n    * @internal\r\n    */\r\n    private _eventScript(events: Animation2DEvent[], parentPlayTime: number, currPlayTime: number, frontPlay: boolean) {\r\n        let scripts = this.owner.components;\r\n        if (frontPlay) {\r\n            for (let i = 0, len = events.length; i < len; i++) {\r\n                let e = events[i];\r\n                if (e.time > parentPlayTime && e.time <= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time > currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                let e = events[i];\r\n                if (e.time < parentPlayTime && e.time >= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time < currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    // private _eventScript(events: Animation2DEvent[], eventIndex: number, endTime: number, front: boolean, startTime = 0): number {\r\n    //     let scripts = this.owner.components;\r\n    //     if (front) {\r\n    //         for (let n = events.length; eventIndex < n; eventIndex++) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time <= endTime) {\r\n    //                 if (event.time >= startTime) {\r\n    //                     for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                         let script = scripts[j];\r\n    //                         if (script._isScript()) {\r\n    //                             let fun: Function = (script as any)[event.eventName];\r\n    //                             (fun) && (fun.apply(script, event.params));\r\n    //                         }\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     } else {\r\n    //         for (; eventIndex >= 0; eventIndex--) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time >= endTime) {\r\n    //                 for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                     let script = scripts[j];\r\n    //                     if (script._isScript()) {\r\n    //                         let fun = (script as any)[event.eventName];\r\n    //                         (fun) && (fun.apply(script, event.params));\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return eventIndex;\r\n    // }\r\n\r\n    /**\r\n     * 启用过渡\r\n     * @param layerindex \r\n     * @param transition \r\n     * @returns \r\n     */\r\n    private _applyTransition(layerindex: number, transition: AnimatorTransition2D) {\r\n        if (!transition)\r\n            return false;\r\n        return this.crossFade(transition.destState.name, transition.transduration, layerindex, transition.transstartoffset);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param delta \r\n     * @returns \r\n     */\r\n    private _applyUpdateMode(delta: number): number {\r\n        let ret;\r\n        switch (this._updateMode) {\r\n            case AnimatorUpdateMode.Normal:\r\n                ret = delta;\r\n                break;\r\n            case AnimatorUpdateMode.LowFrame:\r\n                ret = (Stat.loopCount % this._lowUpdateDelty == 0) ? delta * this._lowUpdateDelty : 0;\r\n                break;\r\n            case AnimatorUpdateMode.UnScaleTime:\r\n                ret = 0;\r\n                break;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    gotoAndStopByFrame(name: string, layerIndex: number, frame: number) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var animatorState = controllerLayer.getStateByName(name);\r\n            if (!animatorState || !animatorState._clip)\r\n                return;\r\n            var allFrame = animatorState._clip!._duration * animatorState._clip!._frameRate;\r\n            let normalizedTime = frame / allFrame;\r\n            if (1 < normalizedTime) normalizedTime = 1;\r\n            this.gotoAndStop(name, layerIndex, normalizedTime);\r\n        }\r\n    }\r\n\r\n    gotoAndStop(name: string, layerIndex: number, normalizedTime: number) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var animatorState = controllerLayer.getStateByName(name);\r\n            if (!animatorState || !animatorState._clip)\r\n                return;\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            var curPlayState = playStateInfo._currentState!;\r\n\r\n            var clipDuration = animatorState._clip!._duration;\r\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n            playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n            playStateInfo._normalizedPlayTime = normalizedTime;\r\n            controllerLayer._playType = 0;\r\n            if (curPlayState !== animatorState) {\r\n                playStateInfo._currentState = animatorState;\r\n            }\r\n            animatorState._eventStart(this, layerIndex);\r\n            let addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n            this._updateClipDatas(animatorState, addtive, playStateInfo);\r\n            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @param name 动画名称\r\n     * @param layerIndex 层索引\r\n     * @param normalizedTime 归一化时间\r\n     * @returns \r\n     */\r\n    play(name?: string, layerIndex = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\r\n        if (this._checkEnterIndex) {\r\n            let i = this._checkEnterIndex.indexOf(layerIndex);\r\n            if (0 <= i) {\r\n                this._checkEnterIndex.splice(i, 1);\r\n            }\r\n        }\r\n        this._isPlaying = true;\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var defaultState = controllerLayer.defaultState;\r\n            if (!name && !defaultState)\r\n                throw new Error(\"Animator:must have default clip value,please set clip property.\");\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            var curPlayState = playStateInfo._currentState!;\r\n            var animatorState = name ? controllerLayer.getStateByName(name) : defaultState;\r\n\r\n            if (!animatorState._clip)\r\n                return;\r\n\r\n            var clipDuration = animatorState._clip!._duration;\r\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n            // this.resetDefOwerVal();\r\n            // playStateInfo._resetPlayState(0.0, calclipduration);\r\n            // if (curPlayState != animatorState) {\r\n            //     playStateInfo._currentState = animatorState;\r\n            // }\r\n            // controllerLayer._playType = 0;、\r\n\r\n            if (curPlayState !== animatorState) {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY)\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                else\r\n                    playStateInfo._resetPlayState(0.0, calclipduration);\r\n                (curPlayState !== null && curPlayState !== animatorState);\r\n                controllerLayer._playType = 0;\r\n                playStateInfo._currentState = animatorState;\r\n            } else {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY) {\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                    controllerLayer._playType = 0;\r\n                }\r\n            }\r\n            animatorState._eventStart(this, layerIndex);\r\n        }\r\n        // var scripts = animatorState._scripts!;\r\n        // if (scripts) {\r\n        //     for (var i = 0, n = scripts.length; i < n; i++)\r\n        //         scripts[i].onStateEnter();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 停止播放动画\r\n     */\r\n    stop() {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    /**\r\n     * 帧循环\r\n     * @returns \r\n     */\r\n    onUpdate(): void {\r\n        if (!this._isPlaying) return;\r\n\r\n        if (this._checkEnterIndex) {\r\n            for (let i = this._checkEnterIndex.length - 1; i >= 0; i--) {\r\n                let index = this._checkEnterIndex[i];\r\n                let enterTransition = this._controllerLayers[index]._enterTransition;\r\n                if (enterTransition.check(0, this.parameters, true)) {\r\n                    var defaultClip = this.getDefaultState(index);\r\n                    this.play(null, index, defaultClip.cycleOffset);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        var delta = this.owner.timer._delta / 1000.0;\r\n        delta = this._applyUpdateMode(delta);\r\n        if (0 == this.speed || 0 == delta) return;\r\n        var needRender = true;//TODO:有渲染节点才可将needRender变为true\r\n\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n            var controllerLayer = this._controllerLayers[i];\r\n            if (!controllerLayer.enable)\r\n                continue;\r\n\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            //var crossPlayStateInfo = controllerLayer._crossPlayStateInfo!;\r\n            var addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n            switch (controllerLayer._playType) {\r\n                case 0:\r\n                    var animatorState = playStateInfo._currentState!;\r\n                    var speed = this._speed * animatorState.speed;\r\n                    var finish = playStateInfo._finish;\r\n\r\n                    var loop = animatorState.loop;\r\n                    if (-1 >= loop) {\r\n                        var clip = animatorState._clip!;\r\n                        if (clip.islooping) {\r\n                            loop = 0;\r\n                        } else {\r\n                            loop = 1;\r\n                        }\r\n                    }\r\n\r\n                    let dir = 1;\r\n                    if (!playStateInfo._frontPlay) {\r\n                        dir = -1;\r\n                    }\r\n\r\n\r\n                    finish || this._updatePlayer(animatorState, playStateInfo, delta * speed * dir, loop, i);\r\n                    playStateInfo = controllerLayer._playStateInfo!;\r\n                    animatorState = playStateInfo._currentState!;\r\n                    if (needRender) {\r\n                        this._updateClipDatas(animatorState, addtive, playStateInfo);\r\n                        if (!finish) {\r\n                            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, controllerLayer);\r\n                            this._updateEventScript(animatorState, playStateInfo);\r\n                        }\r\n                    }\r\n                    finish || this._updateStateFinish(animatorState, playStateInfo);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加控制器层。\r\n     */\r\n    addControllerLayer(controllderLayer: AnimatorControllerLayer2D): void {\r\n        this._controllerLayers.push(controllderLayer);\r\n    }\r\n\r\n    /**\r\n     * 在当前动画状态和目标动画状态之间进行融合过渡播放。\r\n     * @param\tname 目标动画状态。\r\n     * @param\ttransitionDuration 过渡时间,该值为当前动画状态的归一化时间，值在0.0~1.0之间。\r\n     * @param\tlayerIndex 层索引。\r\n     * @param\tnormalizedTime 归一化的播放起始时间。\r\n     */\r\n    crossFade(name: string, transitionDuration: number, layerIndex: number = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var destAnimatorState = controllerLayer.getStateByName(name);\r\n            if (destAnimatorState) {\r\n\r\n                this.play(name, layerIndex, normalizedTime);\r\n                return true;\r\n\r\n            }\r\n            else {\r\n                console.warn(\"Invalid layerIndex \" + layerIndex + \".\");\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    onAfterDeserialize(): void {\r\n        let arr = (<any>this).controllerLayers;\r\n        if (!arr || null != this.controller)\r\n            return;\r\n        delete (<any>this).controllerLayers;\r\n        this._controllerLayers.length = 0;\r\n        for (let layer of arr) {\r\n            this.addControllerLayer(layer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onEnable() {\r\n        if (this._checkEnterIndex) this._checkEnterIndex.length = 0;\r\n        else this._checkEnterIndex = [];\r\n\r\n        if (this._isPlaying) {\r\n            for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n                if (this._controllerLayers[i].playOnWake) {\r\n                    var defaultClip = this.getDefaultState(i);\r\n                    //(defaultClip) && (this.play(null, i, defaultClip.cycleOffset));\r\n                    if (defaultClip) {\r\n                        let enterTransition = this._controllerLayers[i]._enterTransition;\r\n                        if (enterTransition) {\r\n                            this._isPlaying = true;\r\n                            if (enterTransition.check(0, this.parameters, true)) {\r\n                                this.play(null, i, defaultClip.cycleOffset);\r\n                            } else {\r\n                                this._checkEnterIndex.push(i);\r\n                            }\r\n                        } else {\r\n                            this.play(null, i, defaultClip.cycleOffset);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 默认状态机\r\n     * @param layerIndex \r\n     * @returns \r\n     */\r\n    getDefaultState(layerIndex = 0) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        return controllerLayer.defaultState;\r\n    }\r\n\r\n    /**\r\n     * 设置参数Trigger值\r\n     * @param name 名字\r\n     */\r\n    setParamsTrigger(name: string) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Trigger, value: true };\r\n    }\r\n\r\n    /**\r\n     * 设置参数Number值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsNumber(name: string, value: number) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * 设置参数Bool值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsBool(name: string, value: boolean) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * 得到参数值\r\n     * @param name 名字\r\n     * @returns \r\n     */\r\n    getParamsvalue(name: number) {\r\n        let parm = this._parameters[name];\r\n        if (parm) {\r\n            return parm.value;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onDestroy() {\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++)\r\n            this._controllerLayers[i].destroy();\r\n        this._controllerLayers.length = 0;\r\n        this._isPlaying = false;\r\n        this._parameters = null;\r\n    }\r\n}","\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorState2DScript } from \"./AnimatorState2DScript\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * <code>Animator</code> 类用于创建动画组件。\r\n */\r\nexport class AnimatorState2D extends EventDispatcher implements IClone {\r\n    /**@internal */\r\n    static EVENT_OnStateEnter = \"OnStartEnter\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateUpdate = \"OnStateUpdate\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateExit = \"OnStateExit\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateLoop = 'OnStateLoop';\r\n\r\n    /** @internal */\r\n    private _referenceCount = 0;\r\n\r\n    /** @internal */\r\n    _clip: AnimationClip2D | null = null;\r\n\r\n    /**@internal */\r\n    _currentFrameIndices: Int16Array | null = null;\r\n\r\n    /**play on awake start offset*/\r\n    cycleOffset: number = 0;\r\n\r\n    /**\r\n     * 名称\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 动画播放速度\r\n     */\r\n    speed = 1.0;\r\n\r\n    /**\r\n     * 动作播放起始时间。\r\n     */\r\n    clipStart = 0.0;\r\n\r\n    /**\r\n     * 动作播放结束时间。\r\n     */\r\n    clipEnd = 1.0;\r\n\r\n    /**\r\n     *  动画循环次数，-1或者小于-1为使用clip的循环状态，1为播放一次，2为播放2次，0为无限循环\r\n     */\r\n    loop = -1;\r\n\r\n    /**\r\n     * 是否为一次正播放，一次倒播放模式 \r\n     */\r\n    yoyo = false;\r\n\r\n    /**@internal 过渡列表*/\r\n    transitions: AnimatorTransition2D[] = [];\r\n\r\n    /**@internal 优先过渡列表only play this transition */\r\n    soloTransitions: AnimatorTransition2D[] = [];\r\n\r\n    /**@internal */\r\n    _scripts: AnimatorState2DScript[] | null = null;\r\n\r\n    /**@internal */\r\n    _realtimeDatas: Array<number | string | boolean> = [];\r\n\r\n    /**\r\n     * 动作。\r\n     */\r\n    get clip(): AnimationClip2D | null {\r\n        return this._clip;\r\n    }\r\n\r\n    set clip(value: AnimationClip2D | null) {\r\n        if (this._clip != value) {\r\n            if (this._clip)\r\n                (this._referenceCount > 0) && (this._clip._removeReference(this._referenceCount));\r\n            if (value) {\r\n                var clipNodes = value._nodes!;\r\n                var count = clipNodes.count;\r\n                this._currentFrameIndices = new Int16Array(count);\r\n                this._resetFrameIndices();\r\n                (this._referenceCount > 0) && (value._addReference(this._referenceCount));\r\n                this._realtimeDatas.length = count;\r\n            }\r\n            this._clip = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStateUpdate(value: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateUpdate, value);\r\n        if (this._scripts) {\r\n            for (var i = 0, n = this._scripts.length; i < n; i++)\r\n                this._scripts[i].onStateUpdate(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStart(animator: Animator2D, layerIndex: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateEnter);\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].setPlayScriptInfo(animator, layerIndex, this);\r\n                this._scripts[i].onStateEnter();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventExit() {\r\n        this.event(AnimatorState2D.EVENT_OnStateExit);\r\n        if (this._scripts) {\r\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].onStateExit();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventLoop() {\r\n        this.event(AnimatorState2D.EVENT_OnStateLoop);\r\n        if (this._scripts) {\r\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\r\n                if (this._scripts[i].onStateLoop)\r\n                    this._scripts[i].onStateLoop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 派发过渡事件\r\n     * @internal\r\n     * @param normalizeTime \r\n     * @param paramsMap \r\n     */\r\n    _eventtransition(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): AnimatorTransition2D {\r\n        let soloNums = this.soloTransitions.length;\r\n        if (soloNums > 0) {\r\n            for (var i = 0; i < soloNums; i++) {\r\n                if (this.soloTransitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                    return this.soloTransitions[i];\r\n            }\r\n            return null;\r\n        }\r\n        let transNums = this.transitions.length;\r\n        for (var i = 0; i < transNums; i++) {\r\n            if (this.transitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                return this.transitions[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetFrameIndices(): void {\r\n        for (var i = 0, n = this._currentFrameIndices!.length; i < n; i++)\r\n            this._currentFrameIndices![i] = -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        (this._clip) && (this._clip._addReference(count));\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count: number): void {\r\n        (this._clip) && (this._clip._removeReference(count));\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n    /**\r\n     * 添加脚本。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本。\r\n     */\r\n    addScript(type: typeof AnimatorState2DScript): AnimatorState2DScript {\r\n        var script: AnimatorState2DScript = new type();\r\n        this._scripts = this._scripts || [];\r\n        this._scripts.push(script);\r\n        return script;\r\n    }\r\n\r\n    /**\r\n     * 获取脚本。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本。\r\n     */\r\n    getScript(type: typeof AnimatorState2DScript): AnimatorState2DScript | null {\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorState2DScript = this._scripts[i];\r\n                if (script instanceof type)\r\n                    return script;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取脚本集合。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本集合。\r\n     */\r\n    getScripts(type: typeof AnimatorState2DScript): AnimatorState2DScript[] | null {\r\n        var coms: AnimatorState2DScript[] | null = null;\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorState2DScript = this._scripts[i];\r\n                if (script instanceof type) {\r\n                    coms = coms || [];\r\n                    coms.push(script);\r\n                }\r\n            }\r\n        }\r\n        return coms;\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @returns \r\n     */\r\n    clone() {\r\n        var dest: AnimatorState2D = new AnimatorState2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * 拷贝到目标\r\n     * @param destObject 目标节点\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorState2D = <AnimatorState2D>destObject;\r\n        dest.name = this.name;\r\n        dest.speed = this.speed;\r\n        dest.clip = this._clip;\r\n    }\r\n\r\n    /**\r\n     * 删除\r\n     */\r\n    destroy() {\r\n        this._clip = null;\r\n        this._currentFrameIndices = null;\r\n        this._scripts = null;\r\n        //this.nexts = null;\r\n        this._realtimeDatas.length = 0;\r\n    }\r\n\r\n}","import { Keyframe2D } from \"./KeyFrame2D\";\r\n\r\nexport class KeyframeNode2D {\r\n    _ownerPath: string[] = [];\r\n    _propertys: string[] = [];\r\n    fullPath: string;\r\n    nodePath: string;\r\n    _indexInList: number;\r\n\r\n\r\n\r\n    _keyFrames: Keyframe2D[] = [];\r\n    /**\r\n    * 帧个数。\r\n    */\r\n    get keyFramesCount(): number {\r\n        return this._keyFrames.length;\r\n    }\r\n    _setOwnerPathCount(value: number) {\r\n        this._ownerPath.length = value;\r\n    }\r\n    _setOwnerPathByIndex(index: number, value: string) {\r\n        this._ownerPath[index] = value;\r\n    }\r\n    _setPropertyCount(value: number) {\r\n        this._propertys.length = value;\r\n    }\r\n    _setPropertyByIndex(index: number, value: string) {\r\n        this._propertys[index] = value;\r\n    }\r\n    _setKeyframeCount(value: number) {\r\n        this._keyFrames.length = value;\r\n    }\r\n\r\n    _joinOwnerPath(sep: string): string {\r\n        return this._ownerPath.join(sep);\r\n    }\r\n    _joinProperty(sep: string): string {\r\n        return this._propertys.join(sep);\r\n    }\r\n\r\n    /**\r\n    * 通过索引获取帧。\r\n    * @param index 索引。\r\n    */\r\n    getKeyframeByIndex(index: number): Keyframe2D {\r\n        return this._keyFrames[index];\r\n    }\r\n    /**\r\n    * 精灵路径个数。\r\n    */\r\n    get ownerPathCount(): number {\r\n        return this._ownerPath.length;\r\n    }\r\n    /**\r\n     * 属性路径个数。\r\n     */\r\n    get propertyCount(): number {\r\n        return this._propertys.length;\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取精灵路径。\r\n     * @param index 索引。\r\n     */\r\n    getOwnerPathByIndex(index: number): string {\r\n        return this._ownerPath[index];\r\n    }\r\n    /**\r\n     * 通过索引获取属性路径。\r\n     * @param index 索引。\r\n     */\r\n    getPropertyByIndex(index: number): string {\r\n        return this._propertys[index];\r\n    }\r\n\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\n\r\nexport interface TypeAniKey {\r\n    /**第几帧 */\r\n    f: number,\r\n    val: number | string | boolean,\r\n    /**目前用于2D动画，用于记录动画补间的类型，比如(Linear|Quad_EaseIn)... */\r\n    tweenType?: string,\r\n    /**扩展，如果有一些其它数据需要加入到关键帧中可以写在这里 */\r\n    extend?: any,\r\n    /**tween的信息 */\r\n    tweenInfo?: TypeTweenInfo,\r\n}\r\n\r\nexport interface TypeTweenInfo {\r\n    outTangent?: number,\r\n    outWeight?: number,\r\n    inTangent?: number,\r\n    inWeight?: number,\r\n    inWeightLock?: boolean,\r\n    outWeightLock?: boolean,\r\n    broken?: boolean,\r\n}\r\n\r\nexport class Keyframe2D implements IClone {\r\n    static defaultWeight = 0.33333;\r\n    /**时间。*/\r\n    time: number;\r\n    /**帧里面的具体数据 */\r\n    data: TypeAniKey;\r\n\r\n\r\n\r\n    clone() {\r\n        var dest = new Keyframe2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    cloneTo(destObject: any): void {\r\n        var destKeyFrame: Keyframe2D = (<Keyframe2D>destObject);\r\n        destKeyFrame.time = this.time;\r\n    }\r\n\r\n}","/**\r\n * <code>Animation2DEvent</code> 类用于实现动画事件。\r\n */\r\nexport class Animation2DEvent {\r\n    /** 事件触发时间。*/\r\n    time: number;\r\n    /** 事件触发名称。*/\r\n    eventName: string;\r\n    /** 事件触发参数。*/\r\n    params: any[];\r\n\r\n    /**\r\n     * 创建一个 <code>Animation2DEvent</code> 实例。\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n}\r\n","import { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * <code>AnimationClip2DParse01</code>\r\n * AnimationClip资源解析\r\n */\r\nexport class AnimationClip2DParse01 {\r\n    \r\n    /**@internal */\r\n    private static _clip: AnimationClip2D | null;\r\n    /**@internal */\r\n    private static _reader: Byte | null;\r\n    /**@internal */\r\n    private static _version: string | null;\r\n    /**@internal */\r\n    private static _strings: string[] = [];\r\n    /**@internal */\r\n    private static _DATA = { offset: 0, size: 0 };\r\n    /**@internal */\r\n    private static _BLOCK: { count: number, blockStarts?: number[], blockLengths?: number[] } = { count: 0 };\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_DATA() {\r\n        this._DATA.offset = this._reader!.getUint32();\r\n        this._DATA.size = this._reader!.getUint32();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_BLOCK() {\r\n        var count = this._BLOCK.count = this._reader!.getUint16();\r\n        var blockStarts: number[] = this._BLOCK.blockStarts = [];\r\n        var blockLengths: number[] = this._BLOCK.blockLengths = [];\r\n        for (var i = 0; i < count; i++) {\r\n            blockStarts.push(this._reader!.getUint32());\r\n            blockLengths.push(this._reader!.getUint32());\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_STRINGS() {\r\n        var offset = this._reader!.getUint32();\r\n        var count = this._reader!.getUint16();\r\n        var prePos = this._reader!.pos;\r\n        this._reader!.pos = offset + this._DATA.offset;\r\n\r\n        for (var i = 0; i < count; i++)\r\n            this._strings[i] = this._reader!.readUTFString();\r\n        this._reader!.pos = prePos;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param clip \r\n     * @param reader \r\n     * @param version \r\n     */\r\n    static parse(clip: AnimationClip2D, reader: Byte, version: string) {\r\n        this._clip = clip;\r\n        this._reader = reader;\r\n        this._version = version;\r\n        this.READ_DATA();\r\n        this.READ_BLOCK();\r\n        this.READ_STRINGS();\r\n\r\n        for (var i = 0, n = this._BLOCK.count; i < n; i++) {\r\n            var index = reader.getUint16();\r\n            var blockName = this._strings[index];\r\n            var fn: () => void = (this as any)[\"READ_\" + blockName];\r\n            if (!fn) {\r\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\r\n            }\r\n            else\r\n                fn.call(this);\r\n        }\r\n\r\n        this._version = null;\r\n        this._reader = null;\r\n        this._clip = null;\r\n        this._strings.length = 0;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param second \r\n     * @param fps \r\n     * @returns \r\n     */\r\n    private static timeToFrame(second: number, fps: number): number {\r\n        return Math.round(second * fps);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static READ_ANIMATIONS2D(): void {\r\n        var i: number, j: number;\r\n\r\n        var reader = this._reader!;\r\n        var clip = this._clip!;\r\n        var node: KeyframeNode2D;\r\n\r\n        var numList: number[] = [];\r\n        var numCount = reader.getUint16();\r\n        numList.length = numCount;\r\n        for (i = 0; i < numCount; i++) {\r\n            numList[i] = reader.getFloat32();\r\n        }\r\n\r\n        var clipDur = clip._duration = numList[reader.getInt16()];\r\n        clip.islooping = !!reader.getByte();\r\n        clip._frameRate = reader.getInt16();\r\n        var nodeCount = reader.getInt16();\r\n\r\n        var nodes = clip._nodes!;\r\n        nodes.count = nodeCount;\r\n        var nodesMap: Record<string, KeyframeNode2D[]> = clip._nodesMap = {};\r\n        var nodesDic: Record<string, KeyframeNode2D> = clip._nodesDic = {};\r\n\r\n        for (i = 0; i < nodeCount; i++) {\r\n            node = new KeyframeNode2D();\r\n            nodes.setNodeByIndex(i, node);\r\n            node._indexInList = i;\r\n\r\n            var pathLength = reader.getUint16();\r\n            node._setOwnerPathCount(pathLength);\r\n\r\n            for (j = 0; j < pathLength; j++) {\r\n                node._setOwnerPathByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var nodePath = node._joinOwnerPath(\"/\");\r\n            var mapArray = nodesMap[nodePath];\r\n            (mapArray) || (nodesMap[nodePath] = mapArray = []);\r\n            mapArray.push(node);\r\n\r\n\r\n            var propertyLength = reader.getUint16();\r\n            node._setPropertyCount(propertyLength);\r\n            for (j = 0; j < propertyLength; j++) {\r\n                node._setPropertyByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var fullPath = nodePath + \".\" + node._joinProperty(\".\");\r\n            nodesDic[fullPath] = node;\r\n            node.fullPath = fullPath;\r\n            node.nodePath = nodePath;\r\n\r\n            var keyframeCount = reader.getUint16();\r\n            //node._setKeyframeCount(keyframeCount);\r\n            for (j = 0; j < keyframeCount; j++) {\r\n                var k = new Keyframe2D();\r\n                k.time = numList[reader.getUint16()];\r\n                k.data = { f: this.timeToFrame(k.time, clip._frameRate), val: 0 };\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenType = this._strings[reader.getUint16()];\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenInfo = {};\r\n\r\n                    k.data.tweenInfo.inTangent = numList[reader.getUint16()];\r\n                    k.data.tweenInfo.outTangent = numList[reader.getUint16()];\r\n\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.inTangent)) {\r\n                    //     k.data.tweenInfo.inTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.inTangent) {\r\n                    //         k.data.tweenInfo.inTangent *= -1;\r\n                    //     }\r\n                    // }\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.outTangent)) {\r\n                    //     k.data.tweenInfo.outTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.outTangent) {\r\n                    //         k.data.tweenInfo.outTangent *= -1;\r\n                    //     }\r\n                    // }\r\n\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.inWeight = numList[reader.getUint16()];\r\n                    }\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.outWeight = numList[reader.getUint16()];\r\n                    }\r\n                }\r\n                var num = reader.getByte();\r\n                if (0 == num) {\r\n                    k.data.val = numList[reader.getUint16()];\r\n                } else if (1 == num) {\r\n                    k.data.val = this._strings[reader.getUint16()];\r\n                } else if (2 == num) {\r\n                    k.data.val = !!reader.getByte();\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    try {\r\n                        k.data.extend = JSON.parse(this._strings[reader.getUint16()])\r\n                    } catch (err) { }\r\n                }\r\n                node._keyFrames.push(k);\r\n            }\r\n        }\r\n        var eventCount = reader.getUint16();\r\n        for (i = 0; i < eventCount; i++) {\r\n            var event = new Animation2DEvent();\r\n            //event.time = Math.min(clipDur, numList[reader.getUint16()]);\r\n            event.time = numList[reader.getUint16()];\r\n            event.eventName = this._strings[reader.getUint16()];\r\n            var params: Array<number | string | boolean> = [];\r\n            var paramCount: number = reader.getUint16();\r\n            (paramCount > 0) && (event.params = params = []);\r\n\r\n            for (j = 0; j < paramCount; j++) {\r\n                var eventType: number = reader.getByte();\r\n                switch (eventType) {\r\n                    case 0:\r\n                        params.push(!!reader.getByte());\r\n                        break;\r\n                    case 1:\r\n                        params.push(reader.getInt32());\r\n                        break;\r\n                    case 2:\r\n                        params.push(numList[reader.getUint16()]);\r\n                        break;\r\n                    case 3:\r\n                        params.push(this._strings[reader.getUint16()]);\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"unknown type.\");\r\n                }\r\n            }\r\n            clip.addEvent(event);\r\n        }\r\n\r\n    }\r\n}","import { KeyframeNode2D } from \"./KeyframeNode2D\";\r\n\r\nexport class KeyframeNodeList2D {\r\n    private _nodes: KeyframeNode2D[] = [];\r\n    /**\r\n    *\t节点个数。\r\n    */\r\n    get count(): number {\r\n        return this._nodes.length;\r\n    }\r\n    set count(value: number) {\r\n        this._nodes.length = value;\r\n    }\r\n    /**\r\n     * 通过索引获取节点。\r\n     * @param\tindex 索引。\r\n     * @return 节点。\r\n     */\r\n    getNodeByIndex(index: number): KeyframeNode2D {\r\n        return this._nodes[index];\r\n    }\r\n\r\n    /**\r\n     * 通过索引设置节点。\r\n     * @param\tindex 索引。\r\n     * @param 节点。\r\n     */\r\n    setNodeByIndex(index: number, node: KeyframeNode2D): void {\r\n        this._nodes[index] = node;\r\n    }\r\n}","import { AnimationClip2DParse01 } from \"./AnimationClip2DParser01\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { KeyframeNodeList2D } from \"./KeyframeNodeList2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\nexport class AnimationClip2D extends Resource {\r\n\r\n    /**\r\n     * @param data \r\n     * @returns \r\n     */\r\n    static _parse(data: ArrayBuffer): AnimationClip2D {\r\n        var clip = new AnimationClip2D();\r\n        var reader = new Byte(data);\r\n        var version = reader.readUTFString();\r\n        switch (version) {\r\n            case \"LAYAANIMATION2D:01\":\r\n                AnimationClip2DParse01.parse(clip, reader, version);\r\n                break;\r\n            default:\r\n                throw \"unknown animationClip version.\";\r\n        }\r\n        return clip;\r\n    }\r\n\r\n    /**\r\n     * 动画补帧函数\r\n     */\r\n    static tween = {\r\n        Linear: function (t: number, b: number, c: number, d: number): number { return c * t / d + b; },\r\n        Quad_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t + b;\r\n        },\r\n        Quad_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (t /= d) * (t - 2) + b;\r\n        },\r\n        Quad_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\r\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n        },\r\n\r\n        Cubic_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t + b;\r\n        },\r\n        Cubic_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t + 1) + b;\r\n        },\r\n        Cubic_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n        },\r\n\r\n        Quart_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t + b;\r\n        },\r\n        Quart_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n        },\r\n        Quart_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\r\n            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n        },\r\n\r\n        Quint_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t * t + b;\r\n        },\r\n        Quint_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n        },\r\n        Quint_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n        },\r\n\r\n        Sine_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n        },\r\n        Sine_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n        },\r\n        Sine_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n        },\r\n\r\n        Expo_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n        },\r\n        Expo_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n        },\r\n        Expo_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t == 0) return b;\r\n            if (t == d) return b + c;\r\n            if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n            return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n        },\r\n\r\n        Circ_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n        },\r\n        Circ_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n        },\r\n        Circ_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n            return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n        },\r\n\r\n        Elastic_EaseIn: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n        },\r\n        Elastic_EaseOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);\r\n        },\r\n        Elastic_EaseInOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d / 2) == 2) return b + c; if (!p) p = d * (.3 * 1.5);\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\r\n        },\r\n\r\n        Back_EaseIn: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n        },\r\n        Back_EaseOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n        },\r\n        Back_EaseInOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n        },\r\n\r\n        Bounce_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c - AnimationClip2D.tween.Bounce_EaseOut(d - t, 0, c, d) + b;\r\n        },\r\n        Bounce_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d) < (1 / 2.75)) {\r\n                return c * (7.5625 * t * t) + b;\r\n            } else if (t < (2 / 2.75)) {\r\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n            } else if (t < (2.5 / 2.75)) {\r\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n            } else {\r\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n            }\r\n        },\r\n        Bounce_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t < d / 2) return AnimationClip2D.tween.Bounce_EaseIn(t * 2, 0, c, d) * .5 + b;\r\n            else return AnimationClip2D.tween.Bounce_EaseOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n        },\r\n\r\n        hermiteInterpolate: function (outTangent: number, inTangent: number, startValue: number, endValue: number, t: number, dur: number): number {\r\n            if (Math.abs(outTangent) == Infinity || Math.abs(inTangent) == Infinity) {\r\n                if (0 > outTangent || 0 < inTangent) return startValue;\r\n                return startValue;\r\n            }\r\n            var t2 = t * t;\r\n            var t3 = t2 * t;\r\n            var a = 2.0 * t3 - 3.0 * t2 + 1.0;\r\n            var b = t3 - 2.0 * t2 + t;\r\n            var c = t3 - t2;\r\n            var d = -2.0 * t3 + 3.0 * t2;\r\n            return a * startValue + b * outTangent * dur + c * inTangent * dur + d * endValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _frameRate: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _duration: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _animationEvents: Animation2DEvent[];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesDic: Record<string, KeyframeNode2D>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesMap: Record<string, KeyframeNode2D[]>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodes: KeyframeNodeList2D | null = new KeyframeNodeList2D();\r\n\r\n    /**\r\n     * 是否循环\r\n     */\r\n    islooping: boolean;\r\n\r\n    /**\r\n     * 实例化一个2D动画clip类\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._animationEvents = [];\r\n    }\r\n\r\n    /**\r\n     * 动画时长\r\n     * @returns \r\n     */\r\n    duration() {\r\n        return this._duration;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @param playCurTime \r\n     * @param realTimeCurrentFrameIndexes \r\n     * @param addtive \r\n     * @param frontPlay \r\n     * @param outDatas \r\n     */\r\n    _evaluateClipDatasRealTime(playCurTime: number, realTimeCurrentFrameIndexes: Int16Array, addtive: boolean, frontPlay: boolean, outDatas: Array<number | string | boolean>) {\r\n        var nodes = this._nodes;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            var node = nodes.getNodeByIndex(i);\r\n            var nextFrameIndex;\r\n            var keyFrames = node._keyFrames;\r\n            var keyFramesCount = keyFrames.length;\r\n            if (0 == keyFramesCount) continue;\r\n            var frameIndex = realTimeCurrentFrameIndexes[i];\r\n            if (frontPlay) {\r\n                if ((-1 != frameIndex) && (playCurTime < keyFrames[frameIndex].time)) {//重置正向循环\r\n                    frameIndex = -1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (nextFrameIndex < keyFramesCount) {\r\n                    if (keyFrames[nextFrameIndex].time > playCurTime)\r\n                        break;\r\n                    frameIndex++;\r\n                    nextFrameIndex++;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n            } else {\r\n                nextFrameIndex = frameIndex + 1;\r\n                if ((nextFrameIndex != keyFramesCount) && (playCurTime > keyFrames[nextFrameIndex].time)) {//重置逆向循环\r\n                    frameIndex = keyFramesCount - 1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (frameIndex > -1) {\r\n                    if (keyFrames[frameIndex].time < playCurTime)\r\n                        break;\r\n                    frameIndex--;\r\n                    nextFrameIndex--;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n            }\r\n            var isEnd = nextFrameIndex == keyFramesCount;\r\n\r\n            if (-1 != frameIndex) {\r\n                var frame = keyFrames[frameIndex];\r\n                if (isEnd) {//如果nextFarme为空，不修改数据，保持上一帧\r\n                    outDatas[i] = frame.data.val;\r\n                } else {\r\n                    var nextFarme = keyFrames[nextFrameIndex];\r\n                    var d = nextFarme.time - frame.time;\r\n                    var t;\r\n                    if (d !== 0)\r\n                        t = (playCurTime - frame.time) / d;\r\n                    else\r\n                        t = 0;\r\n\r\n                    outDatas[i] = this._getTweenVal(frame, nextFarme, t, d);\r\n                }\r\n            } else {\r\n                outDatas[i] = keyFrames[0].data.val;\r\n            }\r\n\r\n            if (addtive && \"number\" == typeof keyFrames[0].data.val) {\r\n                outDatas[i] = <number>outDatas[i] - keyFrames[0].data.val;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param frame \r\n     * @param nextFrame \r\n     * @param t \r\n     * @param dur \r\n     * @returns \r\n     */\r\n    private _getTweenVal(frame: Keyframe2D, nextFrame: Keyframe2D, t: number, dur: number) {\r\n        var start = frame.data;\r\n        var end = nextFrame.data;\r\n\r\n        if (\"number\" != typeof start.val || \"number\" != typeof end.val) {\r\n            return start.val;\r\n        }\r\n        var tweenFun = (AnimationClip2D.tween as any)[start.tweenType];\r\n        var poval = start.val as number;\r\n        var oval = end.val as number;\r\n\r\n        //var t = (x - s.cx) / (e.cx - s.cx);\r\n        if (null != tweenFun) {\r\n            return tweenFun(t, poval, oval - poval, 1);\r\n        }\r\n\r\n        var outTangent = 0;\r\n        var inTangent = 0;\r\n\r\n        var outWeight = NaN;\r\n        var inWeight = NaN;\r\n\r\n        if (null != start.tweenInfo) {\r\n            outTangent = start.tweenInfo.outTangent;\r\n            outWeight = start.tweenInfo.outWeight;\r\n        }\r\n        if (null != end.tweenInfo) {\r\n            inTangent = end.tweenInfo.inTangent;\r\n            inWeight = end.tweenInfo.inWeight;\r\n        }\r\n        if (isNaN(outWeight) || 0 >= outWeight) outWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(inWeight) || 0 >= inWeight) inWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(outTangent)) outTangent = 0;\r\n        if (isNaN(inTangent)) inTangent = 0;\r\n\r\n        if (Math.abs(outTangent) == Number.MAX_VALUE) {\r\n            if (0 > outTangent) {\r\n                outTangent = -Infinity;\r\n            } else {\r\n                outTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        if (Math.abs(inTangent) == Number.MAX_VALUE) {\r\n            if (0 > inTangent) {\r\n                inTangent = -Infinity;\r\n            } else {\r\n                inTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        var tnum: number;\r\n        if ((!start.tweenInfo && !end.tweenInfo) || (Keyframe2D.defaultWeight == inWeight && Keyframe2D.defaultWeight == outWeight)) {\r\n            //var dur = nextFrameTime - startFrameTime;\r\n            tnum = AnimationClip2D.tween.hermiteInterpolate(outTangent, inTangent, poval, oval, t, dur);\r\n        } else {\r\n            tnum = this.hermiteCurveSplineWeight(poval, frame.time, outWeight, outTangent, oval, nextFrame.time, inWeight, inTangent, t);\r\n        }\r\n        return tnum;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param time \r\n     * @returns \r\n     */\r\n    private _binarySearchEventIndex(time: number): number {\r\n        var start = 0;\r\n        var end = this._animationEvents.length - 1;\r\n        var mid;\r\n        while (start <= end) {\r\n            mid = (start + end) >> 1;\r\n            var midValue = this._animationEvents[mid].time;\r\n            if (midValue == time)\r\n                return mid;\r\n            else if (midValue > time)\r\n                end = mid - 1;\r\n            else\r\n                start = mid + 1;\r\n        }\r\n        return start;\r\n    }\r\n\r\n    /**\r\n     * hermite插值算法\r\n     * @param frameValue 上一帧值\r\n     * @param frametime 上一帧事件\r\n     * @param frameOutWeight 上一帧权重\r\n     * @param frameOutTangent 上一帧切线\r\n     * @param nextframeValue 下一帧值\r\n     * @param nextframetime 下一帧时间\r\n     * @param nextframeInweight 下一帧权重\r\n     * @param nextframeIntangent 下一帧切线\r\n     * @param time 时间\r\n     * @returns \r\n     */\r\n    hermiteCurveSplineWeight(frameValue: number, frametime: number, frameOutWeight: number, frameOutTangent: number, nextframeValue: number, nextframetime: number, nextframeInweight: number, nextframeIntangent: number, time: number) {\r\n        let Eps = 2.22e-16;\r\n\r\n        let x = time;\r\n        let x1 = frametime;\r\n        let y1 = frameValue;\r\n        let wt1 = frameOutWeight;\r\n        let x2 = nextframetime;\r\n        let y2 = nextframeValue;\r\n        let wt2 = nextframeInweight;\r\n\r\n        let dx = x2 - x1;\r\n        let dy = y2 - y1;\r\n        dy = Math.max(Math.abs(dy), Eps) * (dy < 0 ? -1 : 1);\r\n\r\n        let yp1 = frameOutTangent;\r\n        let yp2 = nextframeIntangent;\r\n\r\n        if (!Number.isFinite(yp1) || !Number.isFinite(yp2)) {\r\n            return frameValue;\r\n        }\r\n\r\n        yp1 = yp1 * dx / dy;\r\n        yp2 = yp2 * dx / dy;\r\n\r\n        let wt2s = 1 - wt2;\r\n\r\n        let t = 0.5;\r\n        let t2 = 0;\r\n\r\n        if (Math.abs(wt1 - 0.33333334) < 0.0001 && Math.abs(wt2 - 0.33333334) < 0.0001) {\r\n            t = x;\r\n            t2 = 1 - t;\r\n        }\r\n        else {\r\n            while (true) {\r\n                t2 = (1 - t);\r\n                let fg = 3 * t2 * t2 * t * wt1 + 3 * t2 * t * t * wt2s + t * t * t - x;\r\n                if (Math.abs(fg) <= 2.5 * Eps)\r\n                    break;\r\n\r\n                // third order householder method\r\n                let fpg = 3 * t2 * t2 * wt1 + 6 * t2 * t * (wt2s - wt1) + 3 * t * t * (1 - wt2s);\r\n                let fppg = 6 * t2 * (wt2s - 2 * wt1) + 6 * t * (1 - 2 * wt2s + wt1);\r\n                let fpppg = 18 * wt1 - 18 * wt2s + 6;\r\n\r\n                t -= (6 * fg * fpg * fpg - 3 * fg * fg * fppg) / (6 * fpg * fpg * fpg - 6 * fg * fpg * fppg + fg * fg * fpppg);\r\n            }\r\n        }\r\n\r\n        let y = 3 * t2 * t2 * t * wt1 * yp1 + 3 * t2 * t * t * (1 - wt2 * yp2) + t * t * t;\r\n\r\n        return y * dy + y1;\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加动画事件。\r\n     * @param event 动画事件\r\n     */\r\n    addEvent(event: Animation2DEvent): void {\r\n        var index = this._binarySearchEventIndex(event.time);\r\n        this._animationEvents.splice(index, 0, event);\r\n    }\r\n\r\n\r\n\r\n}","import { AniParmType } from \"./AnimatorControllerParse\";\r\n\r\nexport class Animation2DParm {\r\n    name: string;\r\n    type: AniParmType;\r\n    value: boolean | number;\r\n}","import { AniStateConditionType, AniStateConditionNumberCompressType } from \"./AnimatorControllerParse\";\r\n\r\nexport class AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    static _conditionNameMap: any = {};\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _propertyNameCounter: number = 0;\r\n\r\n    /**\r\n     * 通过名称获得唯一ID。\r\n     * @param name Shader属性名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static conditionNameToID(name: string): number {\r\n        if (AnimatorStateCondition._conditionNameMap[name] != null) {\r\n            return AnimatorStateCondition._conditionNameMap[name];\r\n        } else {\r\n            var id: number = this._propertyNameCounter++;\r\n            this._conditionNameMap[name] = id;\r\n            this._conditionNameMap[id] = name;\r\n            return id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过ID获得唯一名称。\r\n     * @param id \r\n     * @returns \r\n     */\r\n    static conditionIDToName(id: number): string {\r\n        return this._conditionNameMap[id];\r\n    }\r\n\r\n    /**\r\n     * @internal 状态条件类型\r\n     */\r\n    protected _type: AniStateConditionType;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _id: number;\r\n\r\n    /**\r\n     * @intenral\r\n     */\r\n    private _name: string;\r\n\r\n    /**\r\n     * 状态机过渡条件\r\n     */\r\n    constructor(name: string = null) {\r\n        if (!name) return;\r\n        this._id = AnimatorStateCondition.conditionNameToID(name);\r\n        this._name = name;\r\n    }\r\n\r\n    /**\r\n     * 唯一ID\r\n     */\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 名称\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._id = AnimatorStateCondition.conditionNameToID(value);\r\n        this._name = value\r\n    }\r\n\r\n    /**\r\n     * 条件类型\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: number | boolean): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateNumberCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberValue: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberCompareFlag: AniStateConditionNumberCompressType;\r\n\r\n    /**\r\n     * 创建number比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._numberValue = 0;\r\n        this._numberCompareFlag = AniStateConditionNumberCompressType.Greater;\r\n        this._type = AniStateConditionType.Number;\r\n    }\r\n\r\n    /**\r\n     * number值\r\n     */\r\n    get numberValue() {\r\n        return this._numberValue;\r\n    }\r\n\r\n    set numberValue(value: number) {\r\n        this._numberValue = value;\r\n    }\r\n\r\n    /**\r\n     * 判断类型\r\n     */\r\n    get compareFlag() {\r\n        return this._numberCompareFlag;\r\n    }\r\n\r\n    set compareFlag(value: AniStateConditionNumberCompressType) {\r\n        this._numberCompareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: number): boolean {\r\n        if (AniStateConditionNumberCompressType.Greater == this._numberCompareFlag)\r\n            return value > this._numberValue;\r\n        else\r\n            return value < this._numberValue;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateBoolCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _compareFlag: boolean;\r\n\r\n    /**\r\n     * 创建bool比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._compareFlag = true;\r\n        this._type = AniStateConditionType.Bool;\r\n    }\r\n\r\n    /**\r\n     * 判断类型 \r\n     */\r\n    get compareFlag() {\r\n        return this._compareFlag;\r\n    }\r\n\r\n    set compareFlag(value: boolean) {\r\n        this._compareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return this._compareFlag == value;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateTriggerCondition extends AnimatorStateCondition {\r\n    /**\r\n     * 创建trigger比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._type = AniStateConditionType.Trigger;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发,tigger 如果是true,就算条件达成\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return value;\r\n    }\r\n}","import { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AniStateConditionType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition } from \"./AnimatorStateCondition\";\r\n\r\nexport class AnimatorTransition2D {\r\n    mute: boolean;\r\n    exitTime: number;//退出时间\r\n    exitByTime: boolean;//是否设置生效时间\r\n    transstartoffset: number;//归一化的时间的下一个state播放位置\r\n    transduration: number;//归一化过度时间 TODO 0-1\r\n    conditions: AnimatorStateCondition[];//\r\n    destState: AnimatorState2D;\r\n    /**\r\n     * 创建一个新的Animatortransition2D\r\n     */\r\n    constructor() {\r\n        this.conditions = [];\r\n        this.exitByTime = true;\r\n        this.exitTime = 1;\r\n        this.transduration = 0;\r\n        this.transstartoffset = 0;\r\n        this.mute = false;\r\n    }\r\n\r\n    /**\r\n     * 增加一个条件\r\n     * @param condition \r\n     */\r\n     addCondition(condition: AnimatorStateCondition): void {\r\n        if (this.conditions.indexOf(condition) == -1) {\r\n            this.conditions.push(condition);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除一个条件\r\n     * @param condition \r\n     */\r\n    removeCondition(condition: AnimatorStateCondition): void {\r\n        let index = this.conditions.indexOf(condition);\r\n        if (index != -1) {\r\n            this.conditions.splice(index, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 是否启用过渡\r\n    * @param normalizeTime \r\n    * @param paramsMap \r\n    */\r\n    check(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): boolean {\r\n        if (this.mute) {\r\n            return false;\r\n        }\r\n        if (this.exitByTime && (normalizeTime < this.exitTime && !isReplay)) {\r\n            return false;\r\n        }\r\n        if (null == this.conditions || 0 == this.conditions.length) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < this.conditions.length; i++) {\r\n            let con = this.conditions[i];\r\n\r\n            let out = con.checkState(paramsMap[con.name].value);\r\n            if (out) {\r\n                if (con.type == AniStateConditionType.Trigger) {\r\n                    paramsMap[con.name].value = false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import { Resource } from \"../resource/Resource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorControllerParse, AniParmType, TypeAnimatorConditions, TypeAnimatorControllerData, TypeAnimatorParams, TypeAnimatorState, TypeAnimatorTransition } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition, AnimatorStateBoolCondition, AnimatorStateNumberCondition, AnimatorStateTriggerCondition } from \"./AnimatorStateCondition\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * <code>2D动画控制器<code/>\r\n */\r\nexport class AnimatorController2D extends Resource {\r\n    /**\r\n     * @internal\r\n     */\r\n    data: TypeAnimatorControllerData;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clipsID: string[];\r\n\r\n    /**\r\n     * 实例化2D动画控制器\r\n     * @param data \r\n     */\r\n    constructor(data: any) {\r\n        super();\r\n        let obj = AnimatorControllerParse.parse(data);\r\n        this.data = obj.ret;\r\n        this.clipsID = obj.clipsID;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    private getLayers() {\r\n        let layers = this.data.controllerLayers;\r\n        let lArr: AnimatorControllerLayer2D[] = [];\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let acl = new AnimatorControllerLayer2D(l.name);\r\n            lArr.unshift(acl);\r\n\r\n\r\n            for (let k in l) {\r\n                if (\"name\" == k || \"states\" == k || null == (l as any)[k]) {\r\n                    continue;\r\n                }\r\n                try {\r\n                    (acl as any)[k] = (l as any)[k];\r\n                } catch (err: any) { }\r\n            }\r\n            this.getState(l.states, acl, this.data);\r\n\r\n        }\r\n        return lArr;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @returns \r\n     */\r\n    private createState(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D) {\r\n        if (!states) return null;\r\n        let ret: Record<string, AnimatorState2D> = {};\r\n        let defID: string = null;\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n            let childStates = obj.states;\r\n            if (childStates) {\r\n                let groupRet = this.createState(childStates, idCatch, acl);\r\n                if (groupRet) {\r\n                    idCatch[obj.id] = groupRet.states[groupRet.id];\r\n                }\r\n                continue;\r\n            }\r\n\r\n            if (0 > Number(obj.id)) {\r\n                if (\"-1\" == obj.id) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions && 0 < transitions.length) {\r\n                        defID = transitions[0].id;\r\n                    }\r\n                }\r\n                continue;\r\n            }\r\n\r\n            let state = new AnimatorState2D();\r\n            idCatch[obj.id] = state;\r\n            ret[obj.id] = state;\r\n            for (let k in obj) {\r\n                try {\r\n                    if (\"scripts\" == k) {\r\n                        let scripts: string[] = obj[k];\r\n                        if (scripts && Array.isArray(scripts)) {\r\n                            for (let k = scripts.length - 1; k >= 0; k--) {\r\n                                let uuid = scripts[k];\r\n                                if (uuid && 0 == uuid.indexOf(\"res://\")) {\r\n                                    uuid = uuid.substring(6);\r\n                                }\r\n                                let c = ClassUtils.getClass(uuid);\r\n                                if (c) {\r\n                                    state.addScript(c);\r\n                                }\r\n                            }\r\n                        }\r\n                        continue;\r\n                    } else if (\"soloTransitions\" == k) {\r\n                        continue;\r\n                    } else if (null != (obj as any)[k]) {\r\n                        (state as any)[k] = (obj as any)[k];\r\n                    }\r\n                } catch (err: any) { }\r\n            }\r\n\r\n            acl.addState(state);\r\n        }\r\n        return { id: defID, states: ret };\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param acl \r\n     * @param data \r\n     */\r\n    private getState(states: TypeAnimatorState[], acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData) {\r\n        //let ret:\r\n        if (states) {\r\n            let idCatch: Record<string, AnimatorState2D> = {};\r\n            this.createState(states, idCatch, acl);\r\n            this.setTransitions(states, idCatch, acl, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param exitRet \r\n     * @param transitions \r\n     * @param idCatch \r\n     * @param data \r\n     * @param pExitRet \r\n     */\r\n    private setExitTransition(exitRet: Record<string, TypeAnimatorTransition[]>, transitions: TypeAnimatorTransition[], idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData, pExitRet: Record<string, TypeAnimatorTransition[]>) {\r\n        for (let id in exitRet) {\r\n            let state = idCatch[id];\r\n            if (state) {\r\n\r\n                let ats: AnimatorTransition2D[] = state.transitions;\r\n                let sts: AnimatorTransition2D[] = state.soloTransitions;\r\n\r\n                let linArr = exitRet[id];\r\n                for (let i = transitions.length - 1; i >= 0; i--) {\r\n                    let t = transitions[i];\r\n                    if (\"-3\" == t.id) {\r\n                        if (null == pExitRet[id]) {\r\n                            pExitRet[id] = [];\r\n                        }\r\n                        pExitRet[id].push(t);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                    for (let j = linArr.length - 1; j >= 0; j--) {\r\n                        let t2 = linArr[j];\r\n\r\n\r\n                        let ato = new AnimatorTransition2D();\r\n                        ato.destState = idCatch[t.id];\r\n\r\n                        if (t.conditions) {\r\n                            this.addConditions(t.conditions, ato, data);\r\n                        }\r\n\r\n                        if (t2.conditions) {\r\n                            this.addConditions(t2.conditions, ato, data);\r\n                        }\r\n\r\n\r\n                        for (let k in t) {\r\n                            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                continue;\r\n                            } else {\r\n                                (ato as any)[k] = (t as any)[k];\r\n                            }\r\n                        }\r\n\r\n                        if (t.solo) {\r\n                            sts.unshift(ato);\r\n                        } else {\r\n                            ats.unshift(ato);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getAnimatorTransition2D(o: TypeAnimatorTransition, idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData) {\r\n        let ato = new AnimatorTransition2D();\r\n\r\n        if (idCatch[o.id]) {\r\n            ato.destState = idCatch[o.id];\r\n        }\r\n        if (o.conditions) {\r\n            this.addConditions(o.conditions, ato, data);\r\n        }\r\n\r\n        for (let k in o) {\r\n            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                continue;\r\n            } else {\r\n                (ato as any)[k] = (o as any)[k];\r\n            }\r\n        }\r\n        return ato;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @param data \r\n     * @param pState \r\n     * @returns \r\n     */\r\n    private setTransitions(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData, pState?: TypeAnimatorState) {\r\n        if (!states) return null;\r\n\r\n        let exitRet: Record<string, TypeAnimatorTransition[]> = {};\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                let exitTransition = this.setTransitions(obj.states, idCatch, acl, data, obj);\r\n                if (exitTransition) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions) {\r\n                        this.setExitTransition(exitTransition, transitions, idCatch, data, exitRet);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                continue;\r\n            }\r\n            if (\"-1\" == obj.id) {\r\n                if (obj.soloTransitions && 0 < obj.soloTransitions.length) {\r\n                    if (null == pState) {\r\n                        acl.defaultState = idCatch[obj.soloTransitions[0].id];\r\n                        acl._enterTransition = this._getAnimatorTransition2D(obj.soloTransitions[0], idCatch, data);\r\n                    } else {\r\n                        idCatch[pState.id] = idCatch[obj.soloTransitions[0].id];\r\n                    }\r\n                    continue;\r\n                }\r\n            } else if (\"-2\" == obj.id) {\r\n                let transitions = obj.soloTransitions;\r\n                if (transitions) {\r\n                    for (let j = transitions.length - 1; j >= 0; j--) {\r\n                        let o = transitions[j];\r\n                        let destState = idCatch[o.id];\r\n                        if (destState) {\r\n                            for (let idk in idCatch) {\r\n                                let state = idCatch[idk];\r\n                                let ato = this._getAnimatorTransition2D(o, idCatch, data)\r\n                                // let ato = new AnimatorTransition2D();\r\n                                // ato.destState = destState;\r\n                                // if (o.conditions) {\r\n                                //     this.addConditions(o.conditions, ato, data);\r\n                                // }\r\n\r\n                                // for (let k in o) {\r\n                                //     if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                //         continue;\r\n                                //     } else {\r\n                                //         (ato as any)[k] = (o as any)[k];\r\n                                //     }\r\n                                // }\r\n\r\n                                if (o.solo) {\r\n                                    state.soloTransitions.unshift(ato);\r\n                                } else {\r\n                                    state.transitions.unshift(ato);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                continue;\r\n            } else if (\"-3\" == obj.id) {\r\n                continue;\r\n            }\r\n\r\n            let soloTransitions = obj.soloTransitions;\r\n            if (soloTransitions && idCatch[obj.id]) {\r\n\r\n                let ats: AnimatorTransition2D[] = idCatch[obj.id].transitions;\r\n                let sts: AnimatorTransition2D[] = idCatch[obj.id].soloTransitions;\r\n                for (let j = soloTransitions.length - 1; j >= 0; j--) {\r\n                    let o = soloTransitions[j];\r\n                    if (\"-3\" == o.id) {\r\n                        if (null == exitRet[obj.id]) {\r\n                            exitRet[obj.id] = [];\r\n                        }\r\n                        exitRet[obj.id].push(o);\r\n                        continue;\r\n                    }\r\n\r\n                    let ato = this._getAnimatorTransition2D(o,idCatch,data);\r\n\r\n                    if (o.solo) {\r\n                        sts.unshift(ato);\r\n                    } else {\r\n                        ats.unshift(ato);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return exitRet;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param arr \r\n     * @param ato \r\n     * @param data \r\n     * @returns \r\n     */\r\n    private addConditions(arr: TypeAnimatorConditions[], ato: AnimatorTransition2D, data: TypeAnimatorControllerData) {\r\n        let parms = data.animatorParams;\r\n        if (null == parms || 0 == parms.length) return;\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            let o = arr[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                return;\r\n            }\r\n            let c: AnimatorStateCondition;\r\n            if (parm.type == AniParmType.Bool) {\r\n                let b = new AnimatorStateBoolCondition(parm.name);\r\n                b.compareFlag = Boolean(o.checkValue);\r\n                c = b;\r\n            } else if (parm.type == AniParmType.Float) {\r\n                let n = new AnimatorStateNumberCondition(parm.name);\r\n                n.numberValue = Number(o.checkValue);\r\n                n.compareFlag = o.type;\r\n                c = n;\r\n            } else if (parm.type == AniParmType.Trigger) {\r\n                let t = new AnimatorStateTriggerCondition(parm.name);\r\n                c = t;\r\n            }\r\n            ato.addCondition(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param a \r\n     */\r\n    updateTo(a: Animator2D) {\r\n        let currLayer = (a as any)._controllerLayers;\r\n\r\n        for (let i = 0, len = currLayer.length; i < len; i++) {\r\n            currLayer[i].destroy();\r\n        }\r\n        currLayer.length = 0;\r\n\r\n        let layers = this.getLayers();\r\n        for (let i = 0, len = layers.length; i < len; i++) {\r\n            a.addControllerLayer(layers[i]);\r\n        }\r\n\r\n        let parms = this.data.animatorParams;\r\n        if (parms) {\r\n            let setParm: Record<string, Animation2DParm> = {};\r\n            for (let i = parms.length - 1; i >= 0; i--) {\r\n                let p = parms[i];\r\n                let sp = new Animation2DParm();\r\n                sp.name = p.name;\r\n                sp.type = p.type;\r\n                sp.value = p.val;\r\n                setParm[p.name] = sp;\r\n            }\r\n            a.parameters = setParm;\r\n        }\r\n    }\r\n}","import { Component } from \"./Component\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Collision } from \"../d3/physics/Collision\";\r\nimport { PhysicsColliderComponent } from \"../d3/physics/PhysicsColliderComponent\";\r\nimport { ColliderBase } from \"../physics/Collider2D/ColliderBase\";\r\nimport { Sprite3D } from \"../d3/core/Sprite3D\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>Script</code> 类用于创建脚本的父类，该类为抽象类，不允许实例。\r\n */\r\nexport class Script extends Component {\r\n    declare owner: Sprite | Sprite3D;\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    _isScript(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected setupScript(): void {\r\n        let owner = this.owner;\r\n        let func: Function;\r\n\r\n        if (!(this.onTriggerEnter == Script.prototype.onTriggerEnter)) owner.on(Event.TRIGGER_ENTER, this, this.onTriggerEnter);\r\n        if (!(this.onTriggerStay == Script.prototype.onTriggerStay)) owner.on(Event.TRIGGER_STAY, this, this.onTriggerStay);\r\n        if (!(this.onTriggerExit == Script.prototype.onTriggerExit)) owner.on(Event.TRIGGER_EXIT, this, this.onTriggerExit);\r\n\r\n        if (!(this.onCollisionEnter == Script.prototype.onCollisionEnter)) owner.on(Event.COLLISION_ENTER, this, this.onCollisionEnter);\r\n        if (!(this.onCollisionStay == Script.prototype.onCollisionStay)) owner.on(Event.COLLISION_STAY, this, this.onCollisionStay);\r\n        if (!(this.onCollisionExit == Script.prototype.onCollisionExit)) owner.on(Event.COLLISION_EXIT, this, this.onCollisionExit);\r\n        if (func = this.onJointBreak) owner.on(Event.JOINT_BREAK, this, func);\r\n\r\n        if (func = this.onMouseDown) owner.on(Event.MOUSE_DOWN, this, func);\r\n        if (func = this.onMouseUp) owner.on(Event.MOUSE_UP, this, func);\r\n        if (func = this.onRightMouseDown) owner.on(Event.RIGHT_MOUSE_DOWN, this, func);\r\n        if (func = this.onRightMouseUp) owner.on(Event.RIGHT_MOUSE_UP, this, func);\r\n        if (func = this.onMouseMove) owner.on(Event.MOUSE_MOVE, this, func);\r\n        if (func = this.onMouseDrag) owner.on(Event.MOUSE_DRAG, this, func);\r\n        if (func = this.onMouseDragEnd) owner.on(Event.MOUSE_DRAG_END, this, func);\r\n        if (func = this.onMouseOver) owner.on(Event.MOUSE_OVER, this, func);\r\n        if (func = this.onMouseOut) owner.on(Event.MOUSE_OUT, this, func);\r\n        if (func = this.onMouseClick) owner.on(Event.CLICK, this, func);\r\n        if (func = this.onMouseDoubleClick) owner.on(Event.DOUBLE_CLICK, this, func);\r\n        if (func = this.onMouseRightClick) owner.on(Event.RIGHT_CLICK, this, func);\r\n\r\n        if (func = this.onKeyDown) ILaya.stage.on(Event.KEY_DOWN, this, func);\r\n        if (func = this.onKeyPress) ILaya.stage.on(Event.KEY_PRESS, this, func);\r\n        if (func = this.onKeyUp) ILaya.stage.on(Event.KEY_UP, this, func);\r\n        owner.event(Event._Add_Script);\r\n    }\r\n\r\n    /**\r\n     * 3D物理触发器事件与2D物理碰撞事件，开始碰撞时执行\r\n     */\r\n    onTriggerEnter?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 3D物理触发器事件与2D物理碰撞事件，持续碰撞时执行\r\n     */\r\n    onTriggerStay?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 3D物理触发器事件与2D物理碰撞事件，结束碰撞时执行\r\n     */\r\n    onTriggerExit?(other: PhysicsColliderComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 3D物理碰撞器事件（不适用2D），开始碰撞时执行\r\n     */\r\n    onCollisionEnter?(collision: Collision): void;\r\n\r\n    /**\r\n     * 3D物理碰撞器事件（不适用2D），持续碰撞时执行\r\n     */\r\n    onCollisionStay?(collision: Collision): void;\r\n\r\n    /**\r\n     *3D物理碰撞器事件（不适用2D），结束碰撞时执行\r\n     */\r\n    onCollisionExit?(collision: Collision): void;\r\n\r\n    /**\r\n     * 关节破坏时执行此方法\r\n     */\r\n    onJointBreak?(): void;\r\n\r\n    /**\r\n     * 鼠标按下时执行\r\n     */\r\n    onMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标抬起时执行\r\n     */\r\n    onMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键或中键按下时执行\r\n     */\r\n    onRightMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键或中键抬起时执行\r\n     */\r\n    onRightMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标在节点上移动时执行\r\n     */\r\n    onMouseMove?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标进入节点时执行\r\n     */\r\n    onMouseOver?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标离开节点时执行\r\n     */\r\n    onMouseOut?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标按住一个物体后，拖拽时执行\r\n     */\r\n    onMouseDrag?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标按住一个物体，拖拽一定距离，释放鼠标按键后执行\r\n     */\r\n    onMouseDragEnd?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标点击时执行\r\n     */\r\n    onMouseClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标双击时执行\r\n     */\r\n    onMouseDoubleClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键点击时执行\r\n     */\r\n    onMouseRightClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘按下时执行\r\n     */\r\n    onKeyDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘产生一个字符时执行\r\n     */\r\n    onKeyPress?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘抬起时执行\r\n     */\r\n    onKeyUp?(evt: Event): void;\r\n}\r\n\r\n","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { TextResource, TextResourceFormat } from \"../resource/TextResource\";\r\n\r\nclass TextAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"text\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Plain);\r\n        });\r\n    }\r\n}\r\n\r\nclass BytesAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Buffer);\r\n        });\r\n    }\r\n}\r\n\r\nclass JsonAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.JSON);\r\n        });\r\n    }\r\n}\r\n\r\nclass XMLAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"xml\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.XML);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"txt\", \"csv\"], TextAssetLoader, Loader.TEXT);\r\nLoader.registerLoader([\"bin\", \"bytes\", \"fui\"], BytesAssetLoader, Loader.BUFFER);\r\nLoader.registerLoader([\"json\"], JsonAssetLoader, Loader.JSON);\r\nLoader.registerLoader([\"xml\"], XMLAssetLoader, Loader.XML);","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass AtlasLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let toloadPics: Array<Promise<Texture>> = [];\r\n            if (data.meta && data.meta.image) {\r\n                let folderPath: string = \"\";\r\n                let i = task.url.lastIndexOf(\"/\");\r\n                if (i != -1)\r\n                    folderPath = task.url.substring(0, i + 1);\r\n\r\n                //如果图集带了版本号，需要将图集中包含的图片也需要追加版本号，以此解决浏览器缓存的问题\r\n                let query: string = \"\";\r\n                i = task.url.lastIndexOf(\"?\");\r\n                if (i != -1)\r\n                    query = task.url.substring(i);\r\n\r\n                //带图片信息的类型\r\n                let pics: Array<string> = data.meta.image.split(\",\");\r\n                for (let pic of pics)\r\n                    toloadPics.push(task.loader.load(folderPath + pic + query, null, task.progress.createCallback()));\r\n            } else {  //不带图片信息\r\n                toloadPics.push(task.loader.load(Utils.replaceFileExtension(task.url, \"png\"), null, task.progress.createCallback()));\r\n            }\r\n\r\n            return Promise.all(toloadPics).then(pics => {\r\n                let baseUrl = task.options.baseUrl || \"\";\r\n\r\n                let frames: any = data.frames;\r\n                let directory: string = (data.meta && data.meta.prefix != null) ? data.meta.prefix : task.url.substring(0, task.url.lastIndexOf(\".\")) + \"/\";\r\n                let subTextures: Array<Texture> = [];\r\n\r\n                let scaleRate: number = 1;\r\n                if (data.meta && data.meta.scale && data.meta.scale != 1)\r\n                    scaleRate = parseFloat(data.meta.scale);\r\n\r\n                for (let tPic of pics) {\r\n                    if (tPic) {\r\n                        tPic._addReference();\r\n                        tPic.scaleRate = scaleRate;\r\n                    }\r\n                }\r\n\r\n                for (let name in frames) {\r\n                    let obj = frames[name];\r\n                    let tPic = pics[obj.frame.idx ? obj.frame.idx : 0];\r\n                    if (!tPic)\r\n                        continue;\r\n\r\n                    let url = baseUrl + directory + (obj.filename || name);\r\n                    let tt = Texture.create(tPic, obj.frame.x, obj.frame.y, obj.frame.w, obj.frame.h, obj.spriteSourceSize.x, obj.spriteSourceSize.y, obj.sourceSize.w, obj.sourceSize.h);\r\n                    tt.lock = true;\r\n                    tt._sizeGrid = obj.sizeGrid;\r\n                    tt._stateNum = obj.stateNum;\r\n                    task.loader.cacheRes(url, tt);\r\n                    tt.url = url;\r\n                    subTextures.push(tt);\r\n                }\r\n\r\n                return new AtlasResource(directory, pics, subTextures);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"atlas\"], AtlasLoader, Loader.ATLAS);","import { Component } from \"../components/Component\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Loader, ILoadURL } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { IDecodeObjOptions, SerializeUtil } from \"./SerializeUtil\";\r\n\r\nconst errorList: Array<any> = [];\r\n\r\nexport class HierarchyParser {\r\n    public static parse(data: any, options?: Record<string, any>, errors?: Array<any>): Array<Node> {\r\n        errors = errors || errorList;\r\n        let nodeMap: Record<string, Node> = {};\r\n        let dataList: Array<any> = [];\r\n        let allNodes: Array<Node> = [];\r\n        let outNodes: Array<Node> = [];\r\n        let scene: Scene;\r\n\r\n        let inPrefab: boolean;\r\n        let prefabNodeDict: Map<Node, Record<string, Node>>;\r\n        let skinBaseUrl: string;\r\n        let overrideData: Array<Array<any>>;\r\n\r\n        if (options) {\r\n            inPrefab = options.inPrefab;\r\n            if (inPrefab)\r\n                prefabNodeDict = options.prefabNodeDict;\r\n            skinBaseUrl = options.skinBaseUrl;\r\n            overrideData = options.overrideData;\r\n        }\r\n\r\n        function createChildren(data: any, prefab: Node) {\r\n            for (let child of data._$child) {\r\n                if (child._$child) {\r\n                    let node = createNode(child, prefab);\r\n                    createChildren(child, child._$prefab ? node : prefab);\r\n\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n                else {\r\n                    let node = createNode(child, prefab);\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        function createNode(nodeData: any, prefab: Node, runtime?: string): Node {\r\n            let node: Node;\r\n            let pstr: string;\r\n            if (pstr = nodeData._$override) { //prefab里的override节点\r\n                if (prefab && prefabNodeDict) {\r\n                    if (Array.isArray(pstr)) {\r\n                        node = prefab;\r\n                        for (let i = 0, n = pstr.length; i < n; i++) {\r\n                            let map = prefabNodeDict.get(node);\r\n                            node = map?.[pstr[i]];\r\n                            if (!node)\r\n                                break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let map = prefabNodeDict.get(prefab);\r\n                        if (map)\r\n                            node = map[nodeData._$override];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (pstr = nodeData._$prefab) { //prefab根节点\r\n                    let res = <Prefab>Loader.getRes(URL.getResURLByUUID(pstr), Loader.HIERARCHY);\r\n                    if (res) {\r\n                        if (!prefabNodeDict)\r\n                            prefabNodeDict = new Map();\r\n\r\n                        let overrideData2: Array<any> = [];\r\n                        let testId = nodeData._$id;\r\n                        if (overrideData) {\r\n                            for (let i = 0, n = overrideData.length; i < n; i++) {\r\n                                let arr = overrideData[i];\r\n                                if (arr && arr.length > 0) {\r\n                                    overrideData2[i] = arr.filter(d => {\r\n                                        let od = d._$override || d._$parent;\r\n                                        return Array.isArray(od) && od.length > n - i && od[n - i - 1] == testId;\r\n                                    });\r\n                                }\r\n                                else\r\n                                    overrideData2[i] = arr;\r\n                            }\r\n                        }\r\n\r\n                        overrideData2.push(nodeData._$child);\r\n\r\n                        node = res.create({ inPrefab: true, prefabNodeDict: prefabNodeDict, overrideData: overrideData2 }, errors);\r\n                    }\r\n                }\r\n                else if (pstr = nodeData._$type) {\r\n                    let cls = ClassUtils.getClass(runtime || pstr);\r\n                    if (cls) {\r\n                        try {\r\n                            node = new cls();\r\n                            if (runtime != null && !(node instanceof Node)) {\r\n                                errors.push(new Error(`runtime class invalid - '${runtime}', must derive from Node`));\r\n                                node = null;\r\n                            }\r\n                        }\r\n                        catch (err: any) {\r\n                            errors.push(err);\r\n                        }\r\n                    }\r\n                    else {\r\n                        errors.push(new Error(`unknown type '${runtime || pstr}'`));\r\n                    }\r\n                }\r\n\r\n                if (node)\r\n                    nodeMap[nodeData._$id] = node;\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n        function getNodeByRef(idPath: string | string[]) {\r\n            if (Array.isArray(idPath)) {\r\n                let prefab = nodeMap[idPath[0]];\r\n                if (prefab && idPath.length > 1)\r\n                    return findNodeInPrefab(prefab, idPath, 1);\r\n                else\r\n                    return prefab;\r\n            }\r\n            else\r\n                return nodeMap[idPath];\r\n        }\r\n\r\n        function findNodeInPrefab(prefab: Node, idPath: string | string[], startIndex: number = 0) {\r\n            if (!idPath)\r\n                return prefab;\r\n\r\n            let map = prefabNodeDict?.get(prefab);\r\n            if (!map)\r\n                return null;\r\n\r\n            if (Array.isArray(idPath)) {\r\n                let node: Node;\r\n                for (let i = startIndex, n = idPath.length; i < n; i++) {\r\n                    if (!map)\r\n                        return null;\r\n\r\n                    node = map[idPath[i]];\r\n                    if (!node)\r\n                        break;\r\n\r\n                    map = prefabNodeDict.get(node);\r\n                }\r\n                return node;\r\n            }\r\n            else\r\n                return map[idPath];\r\n        }\r\n\r\n        let bakedOverrideData: Record<string, Array<any>>;\r\n        function getNodeData(node: Node) {\r\n            (<Sprite>node).visible = false;\r\n\r\n            let i = allNodes.indexOf(node);\r\n            let nodeData = dataList[i];\r\n\r\n            if (!overrideData)\r\n                return nodeData;\r\n\r\n            if (bakedOverrideData === undefined)\r\n                bakedOverrideData = SerializeUtil.bakeOverrideData(overrideData);\r\n\r\n            if (bakedOverrideData)\r\n                return SerializeUtil.applyOverrideData(nodeData, bakedOverrideData);\r\n            else\r\n                return nodeData;\r\n        }\r\n\r\n        let runtime: string;\r\n        if (data._$type || data._$prefab) {\r\n            runtime = data._$runtime;\r\n            if (runtime && runtime.startsWith(\"res://\"))\r\n                runtime = runtime.substring(6);\r\n\r\n            let node = createNode(data, null, runtime);\r\n            if (node) {\r\n                if (data._$child)\r\n                    createChildren(data, data._$prefab ? node : null);\r\n\r\n                dataList.push(data);\r\n                allNodes.push(node);\r\n\r\n                if (node instanceof Scene)\r\n                    scene = node;\r\n            }\r\n        }\r\n        else {\r\n            if (data._$child)\r\n                createChildren(data, null);\r\n        }\r\n\r\n        let cnt = dataList.length;\r\n\r\n        //生成树\r\n        let k = 0;\r\n        let outNodeData: Array<any> = [];\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n\r\n            let children: Array<any> = nodeData._$child;\r\n            if (children) {\r\n                let num = children.length;\r\n                if (node) {\r\n                    if (nodeData._$prefab) {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let m = k - num + j;\r\n                            let n = outNodes[m];\r\n                            if (n && !n.parent) { //是预制体新增\r\n                                let nodeData2 = outNodeData[m];\r\n                                let parentNode = findNodeInPrefab(node, nodeData2._$parent);\r\n                                if (parentNode) {\r\n                                    let pos = nodeData2._$index;\r\n                                    if (pos != null && pos < parentNode.numChildren)\r\n                                        parentNode.addChildAt(n, pos);\r\n                                    else\r\n                                        parentNode.addChild(n);\r\n                                }\r\n                                else {\r\n                                    //挂接的节点可能被删掉了\r\n                                    node.addChildAt(n, 0);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let n = outNodes[k - num + j];\r\n                            if (n) {\r\n                                if (node === scene && n._is3D)\r\n                                    scene._scene3D = <any>n;\r\n                                else\r\n                                    node.addChild(n);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                k -= num;\r\n            }\r\n\r\n            outNodes[k] = node;\r\n            outNodeData[k] = nodeData;\r\n            k++;\r\n        }\r\n        outNodes.length = k;\r\n        outNodes = outNodes.filter(n => n != null);\r\n        let topNode = outNodes[0];\r\n\r\n        //加载所有组件\r\n        let compInitList: Array<any> = [];\r\n        for (let i = 0; i < cnt; i++) {\r\n            let components = dataList[i]._$comp;\r\n            if (!components)\r\n                continue;\r\n\r\n            let node = allNodes[i];\r\n            if (!node)\r\n                continue;\r\n\r\n            for (let compData of components) {\r\n                let comp: Component;\r\n                if (compData._$override) {\r\n                    let cls: any = ClassUtils.getClass(compData._$override);\r\n                    if (cls)\r\n                        comp = node.getComponent(cls);\r\n                }\r\n                else {\r\n                    let cls: any = ClassUtils.getClass(compData._$type);\r\n                    if (cls) {\r\n                        comp = node.getComponent(cls);\r\n                        if (!comp) {\r\n                            try {\r\n                                comp = node.addComponent(cls);\r\n                            }\r\n                            catch (err: any) {\r\n                                errors.push(err);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (comp)\r\n                    compInitList.push(compData, comp);\r\n            }\r\n        }\r\n\r\n        //设置节点属性\r\n        const decodeOptions: IDecodeObjOptions = { outErrors: errors, getNodeByRef, getNodeData };\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n            if (node) {\r\n                if (skinBaseUrl != null && (node instanceof Sprite))\r\n                    node._skinBaseUrl = skinBaseUrl;\r\n\r\n                SerializeUtil.decodeObj(nodeData, node, decodeOptions);\r\n\r\n                if (runtime && nodeData._$var && node.name) {\r\n                    try {\r\n                        (<any>topNode)[node.name] = node;\r\n                    }\r\n                    catch (err: any) {\r\n                        errors.push(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //设置组件属性\r\n        cnt = compInitList.length;\r\n        for (let i = 0; i < cnt; i += 2) {\r\n            SerializeUtil.decodeObj(compInitList[i], compInitList[i + 1], decodeOptions);\r\n        }\r\n\r\n        if (inPrefab && prefabNodeDict && topNode) //记录下nodeMap，上层创建prefab时使用\r\n            prefabNodeDict.set(topNode, nodeMap);\r\n\r\n        if (errors == errorList)\r\n            errorList.length = 0;\r\n\r\n        return outNodes;\r\n    }\r\n\r\n    public static collectResourceLinks(data: any, basePath: string) {\r\n        let test: Record<string, string[]> = {};\r\n        let innerUrls: (string | ILoadURL)[] = [];\r\n\r\n        function addInnerUrl(url: string, type: string) {\r\n            if (!url)\r\n                return \"\";\r\n            let entry = test[url];\r\n            if (entry === undefined) {\r\n                let url2: string;\r\n                if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\r\n                    url2 = \"res://\" + url;\r\n                else\r\n                    url2 = URL.join(basePath, url);\r\n                innerUrls.push({ url: url2, type: type });\r\n                test[url] = entry = [url2, type];\r\n            }\r\n            else if (entry.indexOf(type, 1) == -1) {\r\n                entry.push(type);\r\n                innerUrls.push({ url: entry[0], type: type });\r\n            }\r\n            return entry[0];\r\n        }\r\n\r\n        function check(data: any) {\r\n            for (let key in data) {\r\n                let child = data[key];\r\n                if (child == null)\r\n                    continue;\r\n                if (Array.isArray(child)) {\r\n                    for (let item of child) {\r\n                        if (item == null)\r\n                            continue;\r\n\r\n                        if (typeof (item) === \"object\") {\r\n                            if (item._$uuid != null)\r\n                                item._$uuid = addInnerUrl(item._$uuid, SerializeUtil.getLoadTypeByEngineType(item._$type));\r\n                            else if (item._$prefab != null) {\r\n                                item._$prefab = addInnerUrl(item._$prefab, Loader.HIERARCHY);\r\n                                check(item);\r\n                            }\r\n                            else\r\n                                check(item);\r\n                        }\r\n                    }\r\n                }\r\n                else if (typeof (child) === \"object\") {\r\n                    if (child._$uuid != null)\r\n                        child._$uuid = addInnerUrl(child._$uuid, SerializeUtil.getLoadTypeByEngineType(child._$type));\r\n                    else if (child._$prefab != null) {\r\n                        child._$prefab = addInnerUrl(child._$prefab, Loader.HIERARCHY);\r\n                        check(child);\r\n                    }\r\n                    else\r\n                        check(child);\r\n                }\r\n            }\r\n        }\r\n\r\n        check(data);\r\n\r\n        if (data._$preloads) {\r\n            for (let url of data._$preloads)\r\n                innerUrls.push(url);\r\n        }\r\n\r\n        return innerUrls;\r\n    }\r\n}","import { IResourceLoader, ILoadTask, Loader, ILoadOptions } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { IHierarchyParserAPI, PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { HierarchyParser } from \"./HierarchyParser\";\r\nimport { LegacyUIParser } from \"./LegacyUIParser\";\r\n\r\nexport class HierarchyLoader implements IResourceLoader {\r\n    static v3: IHierarchyParserAPI = HierarchyParser;\r\n    static v2: IHierarchyParserAPI = null;\r\n    static legacySceneOrPrefab: IHierarchyParserAPI = LegacyUIParser;\r\n\r\n    load(task: ILoadTask) {\r\n        let url = task.url;\r\n        let isModel = task.ext == \"gltf\" || task.ext == \"fbx\" || task.ext == \"glb\" || task.ext == \"obj\";\r\n        if (isModel)\r\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"lh\");\r\n        return task.loader.fetch(url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            if (data._$ver != null)\r\n                return this._load(HierarchyLoader.v3, task, data, 3);\r\n            else if (task.ext == \"ls\" || task.ext == \"lh\")\r\n                return this._load(HierarchyLoader.v2, task, data, 2);\r\n            else if (task.ext == \"scene\" || task.ext == \"prefab\")\r\n                return this._load(HierarchyLoader.legacySceneOrPrefab, task, data, 2);\r\n            else\r\n                return null;\r\n        });\r\n    }\r\n\r\n    //@internal\r\n    private _load(api: IHierarchyParserAPI, task: ILoadTask, data: any, version: number): Promise<Prefab> {\r\n        let basePath = URL.getPath(task.url);\r\n        let links = api.collectResourceLinks(data, basePath);\r\n        let options: ILoadOptions = Object.assign({}, task.options);\r\n        options.initiator = task;\r\n        delete options.cache;\r\n        delete options.ignoreCache;\r\n        return task.loader.load(links, options, task.progress.createCallback()).then((resArray: any[]) => {\r\n            let res = new PrefabImpl(api, data, version);\r\n            res.addDeps(resArray);\r\n            return res;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lh\", \"ls\", \"scene\", \"prefab\"], HierarchyLoader, Loader.HIERARCHY);","/**\r\n * https://en.wikipedia.org/wiki/Radiance_(software)#HDR_image_format\r\n * \r\n * 文件第一行为 \"#?RADIANCE\"\r\n * \r\n * 以 \"#\" 开始为 注释行\r\n * \r\n * 后面有 key=value 形式声明信息\r\n * 包括 \"FORMAT=32-bit_rle_rgbe\" 格式声明\r\n * \r\n * 空行代表 header 结束， \r\n * \r\n * header 信息下一行 描述 图像分辨率和像素数据\r\n * 由 Radiance tools 生成, 一般为 \"-Y height +X width\"\r\n * \r\n * 之后为 图像 二进制像素数据\r\n *  \r\n */\r\n\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\n\r\n/**\r\n * https://floyd.lbl.gov/radiance/framer.html\r\n */\r\nexport class HDRTextureInfo {\r\n\r\n    static HDRTEXTURE: string = \"HDRTEXTURE\";\r\n\r\n    static _parseHDRTexture(data: ArrayBuffer, propertyParams: any = null, constructParams: any[] = null) {\r\n\r\n        let hdrInfo = HDRTextureInfo.getHDRInfo(data);\r\n\r\n        let texture = new Texture2D(hdrInfo.width, hdrInfo.height, hdrInfo.format, false, false, false);\r\n\r\n        texture.setHDRData(hdrInfo);\r\n\r\n        if (propertyParams) {\r\n            if (propertyParams.wrapModeU != null) texture.wrapModeU = propertyParams.wrapModeU;\r\n            if (propertyParams.wrapModeV != null) texture.wrapModeV = propertyParams.wrapModeV;\r\n            if (propertyParams.filterMode != null) texture.filterMode = propertyParams.filterMode;\r\n            if (propertyParams.anisoLevel != null) texture.anisoLevel = propertyParams.anisoLevel;\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param source \r\n     */\r\n    static getHDRInfo(source: ArrayBuffer) {\r\n\r\n        let data = new Uint8Array(source);\r\n        let readByteOffset = 0;\r\n\r\n        const readLine = () => {\r\n            let lineStr = HDRTextureInfo.getLineString(data, readByteOffset);\r\n            // string 带着 '\\n' 就不用 +1\r\n            readByteOffset += lineStr.length + 1;\r\n            return lineStr;\r\n        }\r\n\r\n        // header\r\n        let identifier = readLine();\r\n        // todo  非 Radiance tools 生成文件 identifier 是否还是 RADIANCE\r\n        if (identifier != \"#?RADIANCE\") {\r\n            throw \"HDR image: identifier wrong.\";\r\n        }\r\n\r\n        let commandsMap = new Map();\r\n\r\n        let line = \"\";\r\n        do {\r\n            line = readLine();\r\n            if (line[0] != \"#\") {\r\n                let commands = line.split(\"=\");\r\n                commandsMap.set(commands[0], commands[1]);\r\n            }\r\n\r\n        } while (line != \"\");\r\n        // header end\r\n\r\n        /**\r\n         * FORMAT\r\n         * EXPOSURE\r\n         * COLORCORR\r\n         * SOFTWARE\r\n         * PIXASPECT\r\n         * VIEW\r\n         * PRIMARIES\r\n         */\r\n        let hdrFormat = commandsMap.get(\"FORMAT\");\r\n        /**\r\n         * 32-bit_rle_rgbe\r\n         * 32-bit_rle_xyze\r\n         */\r\n        if (hdrFormat != \"32-bit_rle_rgbe\") {\r\n            throw \"HDR image: unsupported format.\";\r\n        }\r\n\r\n        let resolutionStr = readLine();\r\n        let resolutions = resolutionStr.split(\" \");\r\n\r\n        let decreaseY = resolutions[0] == \"-Y\";\r\n        let decreaseX = resolutions[2] == \"-X\";\r\n\r\n        let height = parseInt(resolutions[1]);\r\n        let width = parseInt(resolutions[3]);\r\n\r\n        // format 固定?\r\n        let hdrInfo = new HDRTextureInfo(source, readByteOffset, decreaseX, decreaseY, width, height, TextureFormat.R32G32B32A32);\r\n\r\n        /**\r\n         * Scanline Records\r\n         * 1. Uncompressed 每像素 4 字节\r\n         * 2. Old run-length encoded\r\n         * 3. New run-length encoded *✓\r\n         */\r\n\r\n\r\n        return hdrInfo;\r\n    }\r\n\r\n    private static getLineString(data: Uint8Array, readByteOffset: number) {\r\n\r\n        let dataLength = data.length;\r\n\r\n        let index = readByteOffset;\r\n\r\n        let res = \"\";\r\n        let char = \"\";\r\n        // do {\r\n        //     char = String.fromCharCode(data[index]);\r\n        //     res = `${res}${char}`;\r\n        //     index++;\r\n        // } while (index < dataLength && char != \"\\n\");\r\n\r\n        while (index < dataLength && char != \"\\n\") {\r\n            res = `${res}${char}`;\r\n            char = String.fromCharCode(data[index]);\r\n            index++;\r\n        }\r\n\r\n        return res;\r\n\r\n    }\r\n\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public byteOffset: number, public decreaseX: boolean, public decreaseY: boolean, public width: number, public height: number, public format: TextureFormat) {\r\n\r\n    }\r\n\r\n    get_32_bit_rle_rgbe(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataIndex = 0;\r\n\r\n        let rgbeBuffer = new ArrayBuffer(width * 4);\r\n        let rgbeArray = new Uint8Array(rgbeBuffer);\r\n\r\n        let pixelBuffer = new ArrayBuffer(width * height * 4 * 3);\r\n        let pixelArray = new Float32Array(pixelBuffer);\r\n\r\n        // todo decreaseX and decreaseY\r\n        for (let y = height; y > 0; y--) {\r\n\r\n            // begin unnormalized pixel\r\n            let a2 = data[dataIndex++]; // equal to 2\r\n            let b2 = data[dataIndex++]; // equal to 2\r\n            let c = data[dataIndex++]; // upper byte\r\n            let d = data[dataIndex++]; // lower byte\r\n\r\n            let scanlineLength = (c << 8) | d;\r\n\r\n            if (scanlineLength != width) {\r\n                throw \"HDR info: scanlineLength wrong.\";\r\n            }\r\n\r\n            let index = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let endIndex = (i + 1) * scanlineLength;\r\n\r\n                while (index < endIndex) {\r\n                    let a = data[dataIndex++];\r\n                    let b = data[dataIndex++];\r\n                    if (a > 128) {\r\n                        let count = a - 128;\r\n                        if (count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        while (count-- > 0) {\r\n                            rgbeArray[index++] = b;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let count = a;\r\n                        if (count == 0 || count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        rgbeArray[index++] = b;\r\n                        if (--count > 0) {\r\n                            for (let j = 0; j < count; j++) {\r\n                                rgbeArray[index++] = data[dataIndex++];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < scanlineLength; i++) {\r\n                let r = rgbeArray[i];\r\n                let g = rgbeArray[i + scanlineLength];\r\n                let b = rgbeArray[i + 2 * scanlineLength];\r\n                let e = rgbeArray[i + 3 * scanlineLength];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129).\r\n                //  */\r\n                // r = 128;\r\n                // g = 64;\r\n                // b = 32;\r\n                // e = 129;\r\n\r\n                let index = (height - y) * scanlineLength * 3 + i * 3;\r\n\r\n                const Ldexp = (mantissa: number, exponent: number) => {\r\n                    if (exponent > 1023) {\r\n                        return mantissa * Math.pow(2, 1023) * Math.pow(2, exponent - 1023);\r\n                    }\r\n\r\n                    if (exponent < -1074) {\r\n                        return mantissa * Math.pow(2, -1074) * Math.pow(2, exponent + 1074);\r\n                    }\r\n\r\n                    return mantissa * Math.pow(2, exponent);\r\n                }\r\n\r\n                if (e > 0) {\r\n                    let exponent = Ldexp(1.0, e - (128 + 8));\r\n                    pixelArray[index] = r * exponent;\r\n                    pixelArray[index + 1] = g * exponent;\r\n                    pixelArray[index + 2] = b * exponent;\r\n                }\r\n                else {\r\n                    pixelArray[index] = 0;\r\n                    pixelArray[index + 1] = 0;\r\n                    pixelArray[index + 2] = 0;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return pixelArray;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://www.radiance-online.org/archived/radsite/radiance/refer/Notes/picture_format.html\r\n     */\r\n    readScanLine(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let n = 3;\r\n        if (this.format == TextureFormat.R32G32B32A32) {\r\n            n = 4;\r\n        }\r\n\r\n        let pixelArray = new Float32Array(width * height * n);\r\n\r\n        let scanlineArray = new Uint8Array(width * 4);\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataLength = data.length;\r\n        let dataIndex = 0;\r\n\r\n        const getc = () => {\r\n            // todo  check\r\n            if (dataIndex >= dataLength) {\r\n                throw \"HDR info: data wrong.\";\r\n            }\r\n\r\n            return data[dataIndex++];\r\n        };\r\n\r\n        const wrong = () => {\r\n            throw \"HDR info: data wrong.\";\r\n        }\r\n\r\n        for (let y = (height - 1); y >= 0; y--) {\r\n\r\n            this.readcolors(scanlineArray, getc, wrong);\r\n\r\n            for (let i = 0; i < width; i++) {\r\n\r\n                // color_color func\r\n                let index = 4 * i;\r\n                let byter = scanlineArray[index];\r\n                let byteg = scanlineArray[index + 1];\r\n                let byteb = scanlineArray[index + 2];\r\n                let bytee = scanlineArray[index + 3];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129)\r\n                //  */\r\n                // byter = 128;\r\n                // byteg = 64;\r\n                // byteb = 32;\r\n                // bytee = 129;\r\n\r\n                let offsetY = y;\r\n                let offsetX = i;\r\n                if (decreaseY) {\r\n                    offsetY = height - 1 - y;\r\n                }\r\n                if (decreaseX) {\r\n                    offsetX = width - 1 - i;\r\n                }\r\n\r\n                let pixelIndex = offsetY * width * n + offsetX * n;\r\n\r\n                if (bytee == 0) {\r\n                    pixelArray[pixelIndex] = 0;\r\n                    pixelArray[pixelIndex + 1] = 0;\r\n                    pixelArray[pixelIndex + 2] = 0;\r\n                    if (n == 4) {\r\n                        pixelArray[pixelIndex + 3] = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    let f = ldexp(1.0, bytee - (128 + 8));\r\n                    pixelArray[pixelIndex] = (byter + 0.5) * f;\r\n                    pixelArray[pixelIndex + 1] = (byteg + 0.5) * f;\r\n                    pixelArray[pixelIndex + 2] = (byteb + 0.5) * f;\r\n                    if (n == 4) {\r\n                        pixelArray[pixelIndex + 3] = 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        return pixelArray;\r\n    }\r\n\r\n    readcolors(scanlineArray: Uint8Array, getc: () => number, wrong: () => void) {\r\n\r\n        const setScanLineData = (w: number, channel: number, value: number) => {\r\n            scanlineArray[w * 4 + channel] = value;\r\n        }\r\n\r\n        let width = this.width;\r\n\r\n        // 第一个数据\r\n        let unnormalizedr = getc();\r\n        let unnormalizedg = getc();\r\n        let unnormalizedb = getc();\r\n        let unnormalizede = getc();\r\n\r\n        if (width < 8 || width > 32767) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if (unnormalizedr != 2 || unnormalizedg != 2 || unnormalizedb & 128) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if ((unnormalizedb << 8 | unnormalizede) != width) {\r\n            wrong()\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < width;) {\r\n                let code = getc();\r\n                if (code > 128) {\r\n                    code &= 127;\r\n                    let val = getc();\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n                else {\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        let val = getc();\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    olddreadcolors(scanlineArray: Uint8Array, getc: () => number, r: number, g: number, b: number, e: number) {\r\n\r\n        let rshift = 0;\r\n\r\n        let len = this.width;\r\n\r\n        scanlineArray[0] = r;\r\n        scanlineArray[1] = g;\r\n        scanlineArray[2] = b;\r\n        scanlineArray[3] = e;\r\n\r\n        for (let w = 1; w < len; w++) {\r\n            let unnormalizedr = getc();\r\n            let unnormalizedg = getc();\r\n            let unnormalizedb = getc();\r\n            let unnormalizede = getc();\r\n\r\n            let scanIndex = w * 4;\r\n            scanlineArray[scanIndex] = unnormalizedr;\r\n            scanlineArray[scanIndex + 1] = unnormalizedg;\r\n            scanlineArray[scanIndex + 2] = unnormalizedb;\r\n            scanlineArray[scanIndex + 3] = unnormalizede;\r\n\r\n            if (unnormalizedr == 1 && unnormalizedg == 1 && unnormalizedb == 1) {\r\n                let lastIndex = scanIndex - 4;\r\n                for (let i = unnormalizede << rshift; i > 0; i--) {\r\n                    scanlineArray[scanIndex] = scanlineArray[lastIndex];\r\n                    scanlineArray[scanIndex + 1] = scanlineArray[lastIndex + 1];\r\n                    scanlineArray[scanIndex + 2] = scanlineArray[lastIndex + 2];\r\n                    scanlineArray[scanIndex + 3] = scanlineArray[lastIndex + 3];\r\n                    // len--;\r\n                }\r\n                rshift += 8;\r\n            }\r\n            else {\r\n                // len--;\r\n                rshift = 0;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    color_color(col: Vector4, clr: Vector4) {\r\n        let f = 0;\r\n        if (clr.w == 0) {\r\n            col.x = col.y = col.z = 0;\r\n        }\r\n        else {\r\n            f = ldexp(1.0, clr.w - (128 + 8));\r\n            // todo   + 0.5 值会变\r\n            col.x = (clr.x) * f;\r\n            col.y = (clr.y) * f;\r\n            col.z = (clr.z) * f;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nfunction ldexp(value: number, exponent: number): number {\r\n    return value * Math.pow(2, exponent);\r\n}","import { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { IResourceLoader, ILoadTask, Loader, ILoadURL } from \"../net/Loader\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { RenderTexture } from \"../resource/RenderTexture\";\r\nimport { VideoTexture } from \"../media/VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nvar internalResources: Record<string, Texture2D>;\r\n\r\nexport class Texture2DLoader implements IResourceLoader {\r\n    constructor() {\r\n        if (!internalResources) {\r\n            internalResources = {\r\n                \"WhiteTexture.png\": Texture2D.whiteTexture,\r\n                \"BlackTexture.png\": Texture2D.blackTexture,\r\n                \"GrayTexture.png\": Texture2D.grayTexture,\r\n                \"NormalTexture.png\": Texture2D.normalTexture,\r\n            };\r\n        }\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        if (task.url.indexOf(\"internal/\") != -1) {\r\n            let tex = internalResources[Utils.getBaseName(task.url)];\r\n            if (tex)\r\n                return Promise.resolve(tex);\r\n        }\r\n\r\n        let meta: any;\r\n        if (!task.url.startsWith(\"data:\")) {\r\n            meta = AssetDb.inst.metaMap[task.url];\r\n            if (!meta && LayaEnv.isPreview) {\r\n                return AssetDb.inst.getMeta(task.url, task.uuid).then(meta => {\r\n                    return this.load2(task, meta);\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.load2(task, meta);\r\n    }\r\n\r\n    protected load2(task: ILoadTask, meta: any) {\r\n        let constructParams: TextureConstructParams;\r\n        let propertyParams: TexturePropertyParams;\r\n        let ext = task.ext;\r\n        let url = task.url;\r\n        if (meta) {\r\n            let platform = Browser.platform;\r\n            let fileIndex = meta.platforms?.[platform] || 0;\r\n            let fileInfo = meta.files?.[fileIndex] || {};\r\n            if (fileInfo.file) {\r\n                url = AssetDb.inst.getSubAssetURL(url, task.uuid, fileInfo.file, fileInfo.ext);\r\n                ext = fileInfo.ext;\r\n            }\r\n\r\n            constructParams = [0, 0, fileInfo.format ?? 1, meta.mipmap, meta.readWrite, meta.sRGB];\r\n            propertyParams = {\r\n                wrapModeU: meta.wrapMode,\r\n                wrapModeV: meta.wrapMode,\r\n                filterMode: meta.filterMode,\r\n                anisoLevel: meta.anisoLevel,\r\n                premultiplyAlpha: !!meta.pma,\r\n                hdrEncodeFormat: meta.hdrEncodeFormat,\r\n            };\r\n        }\r\n        else {\r\n            constructParams = task.options.constructParams;\r\n            propertyParams = task.options.propertyParams;\r\n        }\r\n\r\n        let compress = compressedFormats.indexOf(ext) != -1 ? ext : null;\r\n        if (compress != null) {\r\n            return task.loader.fetch(url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n                if (!data)\r\n                    return null;\r\n\r\n                let tex: BaseTexture;\r\n                switch (compress) {\r\n                    case \"dds\":\r\n                        tex = Texture2D._parseDDS(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"ktx\":\r\n                        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n                        if (ktxInfo.dimension == TextureDimension.Cube) {\r\n                            //这里在core模块，不能直接引用d3里的TextureCube\r\n                            let cls = ClassUtils.getClass(\"TextureCube\");\r\n                            if (cls) {\r\n                                let tc = new cls(ktxInfo.width, ktxInfo.format, ktxInfo.mipmapCount > 1, ktxInfo.sRGB);\r\n                                tc.setKTXData(ktxInfo);\r\n                                tex = tc;\r\n                            }\r\n                            else\r\n                                return null;\r\n                        }\r\n                        else if (ktxInfo.dimension == TextureDimension.Tex2D) {\r\n                            tex = Texture2D._parseKTX(data, propertyParams, constructParams);\r\n                        }\r\n                        break;\r\n                    case \"pvr\":\r\n                        tex = Texture2D._parsePVR(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"hdr\":\r\n                        tex = HDRTextureInfo._parseHDRTexture(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"lanit.ls\":\r\n                        tex = Texture2D._SimpleAnimatorTextureParse(data, propertyParams, constructParams);\r\n                        break;\r\n                }\r\n\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n\r\n                if (propertyParams && propertyParams.hdrEncodeFormat)\r\n                    tex.hdrEncodeFormat = propertyParams.hdrEncodeFormat;\r\n\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n\r\n                return tex;\r\n            });\r\n        }\r\n        else {\r\n            let options = task.options;\r\n            let premultiplyAlpha = (propertyParams && propertyParams.premultiplyAlpha) ? \"premultiply\" : \"none\";\r\n            if (options.useWorkerLoader && premultiplyAlpha === \"none\")\r\n                options = Object.assign({ workerLoaderOptions: { premultiplyAlpha } }, options);\r\n\r\n            return task.loader.fetch(url, \"image\", task.progress.createCallback(), options).then(img => {\r\n                if (LayaGL.textureContext.needBitmap) {\r\n                    if (img instanceof ImageBitmap)\r\n                        return img;\r\n                    else\r\n                        return createImageBitmap(img, options.workerLoaderOptions || { premultiplyAlpha });\r\n                } else {\r\n                    return img;\r\n                }\r\n            }).then(bitmapimage => {\r\n                if (!bitmapimage)\r\n                    return null;\r\n                let tex: BaseTexture = Texture2D._parseImage(bitmapimage, propertyParams, constructParams);\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n                return tex;\r\n            });\r\n        }\r\n    }\r\n\r\n    protected move(obsoluteInst: BaseTexture, tex: BaseTexture) {\r\n        obsoluteInst._texture = tex._texture;\r\n        (<any>obsoluteInst)._format = tex.format;\r\n        obsoluteInst.width = tex.width;\r\n        obsoluteInst.height = tex.height;\r\n        obsoluteInst.obsolute = false;\r\n        delete Resource._idResourcesMap[tex.id];\r\n        return obsoluteInst;\r\n    }\r\n}\r\n\r\nexport class RenderTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let rt = <RenderTexture>task.obsoluteInst;\r\n            if (rt)\r\n                rt.recreate(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n            else\r\n                rt = new RenderTexture(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n\r\n            if (null != data.anisoLevel)\r\n                rt.anisoLevel = data.anisoLevel;\r\n            if (null != data.filterMode)\r\n                rt.filterMode = data.filterMode;\r\n            if (null != data.wrapModeU)\r\n                rt.wrapModeU = data.wrapModeU;\r\n            if (null != data.wrapModeV)\r\n                rt.wrapModeV = data.wrapModeV;\r\n\r\n            return rt;\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport class VideoTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let inst = <VideoTexture>task.obsoluteInst || new VideoTexture();\r\n        inst.source = task.url;\r\n        return Promise.resolve(inst);\r\n    }\r\n}\r\n\r\nconst propertyParams2d: TexturePropertyParams = { premultiplyAlpha: true };\r\nconst constructParams2d: TextureConstructParams = [null, null, TextureFormat.R8G8B8A8, false, false, true];\r\n\r\nexport class TextureLoader implements IResourceLoader {\r\n    wrapTex2D(task: ILoadTask, tex2D: Texture2D) {\r\n        if (!tex2D)\r\n            return null;\r\n\r\n        let tex = <Texture>task.obsoluteInst;\r\n        if (tex) { //recover\r\n            tex.setTo(tex2D);\r\n            tex.obsolute = false;\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n            tex.event(\"reload\");\r\n            if (tex._clipCache) {\r\n                tex._clipCache.forEach(t => {\r\n                    t.event(\"reload\");\r\n                    t._sizeGrid = tex._sizeGrid;\r\n                    t._stateNum = tex._stateNum;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            tex = new Texture(tex2D);\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n        }\r\n\r\n        return tex;\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        let tex2D = <Texture2D>task.loader.getRes(task.url, Loader.TEXTURE2D);\r\n        if (!tex2D || tex2D.obsolute) {\r\n            let url: ILoadURL = { url: task.url, type: Loader.TEXTURE2D };\r\n\r\n            if (!task.options.propertyParams)\r\n                url.propertyParams = propertyParams2d;\r\n            else if (task.options.propertyParams.premultiplyAlpha == null)\r\n                url.propertyParams = Object.assign({}, propertyParams2d, task.options.propertyParams);\r\n\r\n            if (!task.options.constructParams)\r\n                url.constructParams = constructParams2d;\r\n            else if (task.options.constructParams[5] == null)\r\n                url.constructParams = Object.assign([], constructParams2d, task.options.constructParams);\r\n            return task.loader.load(url, task.options, task.progress.createCallback()).then(tex2D => {\r\n                return this.wrapTex2D(task, tex2D);\r\n            });\r\n        }\r\n        else\r\n            return Promise.resolve(this.wrapTex2D(task, tex2D));\r\n    }\r\n}\r\n\r\nconst compressedFormats = [\"ktx\", \"pvr\", \"dds\", \"hdr\", \"lanit.ls\"];\r\nconst videoFormats = [\"mp4\", \"webm\"];\r\n\r\nLoader.registerLoader([\"tga\", \"tif\", \"tiff\", \"png\", \"jpg\", \"jpeg\", \"rendertexture\", ...videoFormats, ...compressedFormats], TextureLoader, Loader.IMAGE);\r\nLoader.registerLoader([], Texture2DLoader, Loader.TEXTURE2D);\r\nLoader.registerLoader([\"rendertexture\"], RenderTextureLoader, Loader.TEXTURE2D);\r\nLoader.registerLoader(videoFormats, VideoTextureLoader, Loader.TEXTURE2D);","import { AnimationClip2D } from \"../components/AnimationClip2D\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\n\r\nclass AnimationClip2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return AnimationClip2D._parse(data);\r\n        });\r\n    }\r\n}\r\nLoader.registerLoader([\"mc\"], AnimationClip2DLoader);","import { AnimatorController2D } from \"../components/AnimatorController2D\";\r\nimport { TypeAnimatorState } from \"../components/AnimatorControllerParse\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\n\r\nclass AnimationController2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            let ret = new AnimatorController2D(data);\r\n            if (ret.data && ret.data.controllerLayers) {\r\n                let layers = ret.data.controllerLayers;\r\n                let promises: Array<any> = [];\r\n                for (let i = layers.length - 1; i >= 0; i--) {\r\n                    let states = layers[i].states;\r\n                    this.loadStates(states, promises, task);\r\n\r\n                }\r\n                return Promise.all(promises).then(() => ret);\r\n            }\r\n            else\r\n                return ret;\r\n        });\r\n    }\r\n\r\n\r\n    loadStates(states: TypeAnimatorState[], promises: Array<any>, task: ILoadTask) {\r\n        let basePath = URL.getPath(task.url);\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            if (states[j].clip && states[j].clip._$uuid) {\r\n                let url = URL.getResURLByUUID(states[j].clip._$uuid);\r\n                if (!url.startsWith(\"res://\"))\r\n                    url = URL.join(basePath, url);\r\n                promises.push(task.loader.load(url).then(res => {\r\n                    states[j].clip = res;\r\n                }));\r\n\r\n                // promises.push(task.loader.load(\"res://\" + states[j].clip._$uuid).then(res => {\r\n                //     states[j].clip = res;\r\n                // }));\r\n            }\r\n\r\n            if (states[j].states) {\r\n                this.loadStates(states[j].states, promises, task);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mcc\"], AnimationController2DLoader);","import { ILoadTask, IResourceLoader, Loader } from \"../net/Loader\";\r\n\r\nexport class NullLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return Promise.resolve(null);\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lighting\"], NullLoader);","import { BitmapFont } from \"../display/BitmapFont\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass BitmapFontLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let picUrl = Utils.replaceFileExtension(task.url, \"png\");\r\n        return Promise.all([\r\n            task.loader.fetch(task.url, \"xml\", task.progress.createCallback(0.2), task.options),\r\n            task.loader.load(picUrl, task.options, task.progress.createCallback(0.8))\r\n        ]).then(([xml, tex]) => {\r\n            if (!xml || !tex)\r\n                return null;\r\n\r\n            let font = new BitmapFont();\r\n            font.parseFont(xml, tex);\r\n\r\n            return font;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"fnt\"], BitmapFontLoader, Loader.FONT);","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nconst testString = \"LayaTTFFont\";\r\n\r\nclass TTFFontLoader implements IResourceLoader {\r\n\r\n    load(task: ILoadTask) {\r\n        let fontName = Utils.replaceFileExtension(Utils.getBaseName(task.url), \"\");\r\n        if (LayaEnv.isConch) {\r\n            return task.loader.fetch(task.url, \"arraybuffer\").then(data => {\r\n                if (data)\r\n                    (window as any)[\"conch\"].registerFont(fontName, data);\r\n                return { family: fontName };\r\n            });\r\n        }\r\n        else if ((window as any).FontFace) {\r\n            let fontFace: any = new (window as any).FontFace(fontName, \"url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"')\");\r\n            (document as any).fonts.add(fontFace);\r\n            return fontFace.load().then(() => {\r\n                return fontFace;\r\n            });\r\n        }\r\n        else {\r\n            let fontTxt = \"40px \" + fontName;\r\n            let txtWidth = Browser.measureText(testString, fontTxt).width;\r\n\r\n            let fontStyle: any = Browser.createElement(\"style\");\r\n            fontStyle.type = \"text/css\";\r\n            document.body.appendChild(fontStyle);\r\n            fontStyle.textContent = \"@font-face { font-family:'\" + fontName + \"'; src:url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"');}\";\r\n\r\n            return new Promise((resolve) => {\r\n                let checkComplete = () => {\r\n                    if (Browser.measureText(testString, fontTxt).width != txtWidth)\r\n                        complete();\r\n                };\r\n                let complete = () => {\r\n                    ILaya.systemTimer.clear(this, checkComplete);\r\n                    ILaya.systemTimer.clear(this, complete);\r\n\r\n                    resolve({ family: fontName });\r\n                };\r\n\r\n                ILaya.systemTimer.once(10000, this, complete);\r\n                ILaya.systemTimer.loop(20, this, checkComplete);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"ttf\", \"woff\", \"woff2\", \"otf\"], TTFFontLoader, Loader.TTF);","import { Vector3 } from \"../../maths/Vector3\";\r\nimport { BlendEquationSeparate } from \"../RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../RenderEnum/CullMode\";\r\nimport { StencilOperation } from \"../RenderEnum/StencilOperation\";\r\n\r\n\r\n\r\n/**\r\n * <code>RenderState</code> 类用于控制渲染状态。\r\n */\r\nexport class RenderState {\r\n\t/**剔除枚举_不剔除。*/\r\n\tstatic CULL_NONE: number = CullMode.Off;\r\n\t/**剔除枚举_剔除正面。*/\r\n\tstatic CULL_FRONT: number = CullMode.Front;\r\n\t/**剔除枚举_剔除背面。*/\r\n\tstatic CULL_BACK: number = CullMode.Back;\r\n\r\n\t/**混合枚举_禁用。*/\r\n\tstatic BLEND_DISABLE: number = BlendType.BLEND_DISABLE;\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tstatic BLEND_ENABLE_ALL: number = BlendType.BLEND_ENABLE_ALL;\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tstatic BLEND_ENABLE_SEPERATE: number = BlendType.BLEND_ENABLE_SEPERATE;\r\n\r\n\t/**混合参数枚举_零,例：RGB(0,0,0),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ZERO: number = BlendFactor.Zero;\r\n\t/**混合参数枚举_一,例：RGB(1,1,1),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ONE: number = BlendFactor.One;\r\n\t/**混合参数枚举_源颜色,例：RGB(Rs, Gs, Bs)，Alpha(As)。*/\r\n\tstatic BLENDPARAM_SRC_COLOR: number = BlendFactor.SourceColor;\r\n\t/**混合参数枚举_一减源颜色,例：RGB(1-Rs, 1-Gs, 1-Bs)，Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_COLOR: number = BlendFactor.OneMinusSourceColor;\r\n\t/**混合参数枚举_目标颜色,例：RGB(Rd, Gd, Bd),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_COLOR: number = BlendFactor.DestinationColor;\r\n\t/**混合参数枚举_一减目标颜色,例：RGB(1-Rd, 1-Gd, 1-Bd)，Alpha(1-Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_COLOR: number = BlendFactor.OneMinusDestinationColor;\r\n\t/**混合参数枚举_源透明,例:RGB(As, As, As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA: number = BlendFactor.SourceAlpha;\r\n\t/**混合参数枚举_一减源阿尔法,例:RGB(1-As, 1-As, 1-As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_ALPHA: number = BlendFactor.OneMinusSourceAlpha;\r\n\t/**混合参数枚举_目标阿尔法，例：RGB(Ad, Ad, Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_ALPHA: number = BlendFactor.DestinationAlpha;\r\n\t/**混合参数枚举_一减目标阿尔法,例：RGB(1-Ad, 1-Ad, 1-Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_ALPHA: number = BlendFactor.OneMinusDestinationAlpha;\r\n\t/**混合参数枚举_阿尔法饱和，例：RGB(min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad)),Alpha(1)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA_SATURATE: number = BlendFactor.SourceAlphaSaturate;\r\n\t/**混合参数枚举_混合设置颜色 */\r\n\tstatic BLENDPARAM_BLENDCOLOR: number = BlendFactor.BlendColor;\r\n\t/**很合参数枚举_混合颜色取反 */\r\n\tstatic BLENDPARAM_BLEND_ONEMINUS_COLOR: number = BlendFactor.OneMinusBlendColor;\r\n\r\n\t/**混合方程枚举_加法,例：source + destination*/\r\n\tstatic BLENDEQUATION_ADD: number = BlendEquationSeparate.ADD;\r\n\t/**混合方程枚举_减法，例：source - destination*/\r\n\tstatic BLENDEQUATION_SUBTRACT: number = BlendEquationSeparate.SUBTRACT;\r\n\t/**混合方程枚举_反序减法，例：destination - source*/\r\n\tstatic BLENDEQUATION_REVERSE_SUBTRACT: number = BlendEquationSeparate.REVERSE_SUBTRACT;\r\n\t/**混合方程枚举_取最小 TODO */\r\n\tstatic BLENDEQUATION_MIN: number = BlendEquationSeparate.MIN;\r\n\t/**混合方程枚举_取最大 TODO*/\r\n\tstatic BLENDEQUATION_MAX: number = BlendEquationSeparate.MAX;\r\n\r\n\t/**深度测试函数枚举_关闭深度测试。*/\r\n\tstatic DEPTHTEST_OFF: number = CompareFunction.Off;/*WebGLContext.NEVER*/;//TODO:什么鬼\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic DEPTHTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic DEPTHTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic DEPTHTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic DEPTHTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic DEPTHTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic DEPTHTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic DEPTHTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic DEPTHTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\r\n\r\n\tstatic STENCILTEST_OFF: number = CompareFunction.Off;\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic STENCILTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic STENCILTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic STENCILTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic STENCILTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic STENCILTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic STENCILTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic STENCILTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic STENCILTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\t/**保持当前值*/\r\n\tstatic STENCILOP_KEEP: number = StencilOperation.Keep;\r\n\t/**将模板缓冲区值设置为0*/\r\n\tstatic STENCILOP_ZERO: number = StencilOperation.Zero;\r\n\t/**将模具缓冲区值设置为指定的参考值*/\r\n\tstatic STENCILOP_REPLACE: number = StencilOperation.Replace;\r\n\t/**增加当前模具缓冲区值+1 */\r\n\tstatic STENCILOP_INCR: number = StencilOperation.IncrementSaturate;\r\n\t/**增加当前模具缓冲区值,超过最大值的时候循环*/\r\n\tstatic STENCILOP_INCR_WRAP: number = StencilOperation.IncrementWrap;\r\n\t/**递减当前模板缓冲区的值*/\r\n\tstatic STENCILOP_DECR: number = StencilOperation.DecrementSaturate;\r\n\t/**递减当前模板缓冲去的值，小于0时会循环*/\r\n\tstatic STENCILOP_DECR_WRAP: number = StencilOperation.DecrementWrap;\r\n\t/**按位反转当前的模板缓冲区的值*/\r\n\tstatic STENCILOP_INVERT: number = StencilOperation.Invert;\r\n\r\n\t/** @internal */\r\n\tstatic readonly Default: Readonly<RenderState> = new RenderState();\r\n\r\n\t/**渲染剔除状态。*/\r\n\tcull: number;\r\n\t/**透明混合。*/\r\n\tblend: number;\r\n\t/**源混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tsrcBlend: number;\r\n\t/**目标混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tdstBlend: number;\r\n\t/**RGB源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tsrcBlendRGB: number;\r\n\t/**RGB目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tdstBlendRGB: number;\r\n\t/**Alpha源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tsrcBlendAlpha: number;\r\n\t/**Alpha目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tdstBlendAlpha: number;\r\n\t/**混合方程。*/\r\n\tblendEquation: number;\r\n\t/**RGB混合方程。*/\r\n\tblendEquationRGB: number;\r\n\t/**Alpha混合方程。*/\r\n\tblendEquationAlpha: number;\r\n\t/**深度测试函数。*/\r\n\tdepthTest: number;\r\n\t/**是否深度测试。*/\r\n\tdepthWrite: boolean;\r\n\t/**是否模板写入 */\r\n\tstencilWrite: boolean;\r\n\t/**是否开启模板测试 */\r\n\tstencilTest: number;\r\n\t/**模板值 一般会在0-255*/\r\n\tstencilRef: number;\r\n\t/**模板设置值 */\r\n\tstencilOp: Vector3;\r\n\r\n\t/**\r\n\t * 创建一个 <code>RenderState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\tthis.srcBlend = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlend = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendRGB = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendRGB = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendAlpha = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendAlpha = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.blendEquation = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.depthTest = RenderState.DEPTHTEST_LEQUAL;\r\n\t\tthis.depthWrite = true;\r\n\t\tthis.stencilRef = 1;\r\n\t\tthis.stencilTest = RenderState.STENCILTEST_OFF;\r\n\t\tthis.stencilWrite = false;\r\n\t\tthis.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tsetNull() {\r\n\t\tthis.cull = null;\r\n\t\tthis.blend = null;\r\n\t\tthis.srcBlend = null;\r\n\t\tthis.dstBlend = null;\r\n\t\tthis.srcBlendRGB = null;\r\n\t\tthis.dstBlendRGB = null;\r\n\t\tthis.srcBlendAlpha = null;\r\n\t\tthis.dstBlendAlpha = null;\r\n\t\tthis.blendEquation = null;\r\n\t\tthis.blendEquationRGB = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\tthis.depthTest = null;\r\n\t\tthis.depthWrite = null;\r\n\t\tthis.stencilRef = null;\r\n\t\tthis.stencilTest = null;\r\n\t\tthis.stencilWrite = null;\r\n\t\tthis.stencilOp.set(null, null, null);\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆\r\n\t * @param dest \r\n\t */\r\n\tcloneTo(dest: RenderState) {\r\n\t\tdest.cull = this.cull;\r\n\t\tdest.blend = this.blend;\r\n\t\tdest.srcBlend = this.srcBlend;\r\n\t\tdest.dstBlend = this.dstBlend;\r\n\t\tdest.srcBlendRGB = this.srcBlendRGB;\r\n\t\tdest.dstBlendRGB = this.dstBlendRGB;\r\n\t\tdest.srcBlendAlpha = this.srcBlendAlpha;\r\n\t\tdest.dstBlendAlpha = this.dstBlendAlpha;\r\n\t\tdest.blendEquation = this.blendEquation;\r\n\t\tdest.blendEquationRGB = this.blendEquationRGB;\r\n\t\tdest.blendEquationAlpha = this.blendEquationAlpha;\r\n\t\tdest.depthTest = this.depthTest;\r\n\t\tdest.depthWrite = this.depthWrite;\r\n\t\tdest.stencilRef = this.stencilRef;\r\n\t\tdest.stencilTest = this.stencilTest;\r\n\t\tdest.stencilWrite = this.stencilWrite;\r\n\t\tthis.stencilOp.cloneTo(dest.stencilOp);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): RenderState {\r\n\t\tvar dest: RenderState = new RenderState();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { UniformBufferObject } from \"./UniformBufferObject\";\r\n\r\n/**\r\n * 管理\r\n */\r\nexport class UniformBufferBase {\r\n    /**@internal */\r\n    _singgle: boolean;\r\n    /**@internal */\r\n    _mapArray: UniformBufferObject[];\r\n    /**@internal bind pointer*/\r\n    _glPointerID: number;\r\n    /**@internal ubo name*/\r\n    _blockName: string;\r\n    /**@internal */\r\n    _curUniformBuffer:UniformBufferObject;\r\n    /**\r\n     * 实例化一个UBOBase\r\n     * @internal\r\n     * @param name \r\n     * @param pointer \r\n     * @param single \r\n     */\r\n    constructor(name: string, pointer: number, single: boolean) {\r\n        this._mapArray = [];\r\n        this._blockName = name;\r\n        this._singgle = single;\r\n        this._glPointerID = pointer;\r\n    }\r\n\r\n    /**\r\n     * 增加Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    add(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index == -1)\r\n            this._mapArray.push(buffer);\r\n    }\r\n\r\n    /**\r\n     * 移除Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    splitBuffer(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index != -1)\r\n            this._mapArray.splice(index, 1);\r\n    }\r\n}","import { BufferUsage, BufferTargetType } from \"./RenderEnum/BufferTargetType\";\r\nimport { SubUniformBufferData } from \"./SubUniformBufferData\";\r\nimport { UniformBufferBase } from \"./UniformBufferBase\";\r\nimport { UnifromBufferData } from \"./UniformBufferData\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\n/**\r\n * 类封装WebGL2UniformBufferObect\r\n */\r\nexport class UniformBufferObject extends Buffer {\r\n    static UBONAME_SCENE = \"SceneUniformBlock\";\r\n    static UBONAME_CAMERA = \"CameraUniformBlock\";\r\n    static UBONAME_SPRITE3D = \"SpriteUniformBlock\";\r\n    static UBONAME_SHADOW = \"ShadowUniformBlock\";\r\n    private static commonMap: string[] = [\"CameraUniformBlock\", \"SceneUniformBlock\", \"SpriteUniformBlock\", \"ShadowUniformBlock\"]\r\n\r\n    /**@internal */\r\n    private static _Map: Map<string, UniformBufferBase> = new Map<string, UniformBufferBase>();\r\n\r\n    /**\r\n     * create Uniform Buffer Base\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @param bufferUsage config usage\r\n     * @param bytelength byte length\r\n     * @returns \r\n     */\r\n    static create(name: string, bufferUsage: number, bytelength: number, isSingle: boolean = false) {\r\n        if (!UniformBufferObject._Map.get(name)) {\r\n            UniformBufferObject._Map.set(name, new UniformBufferBase(name, LayaGL.renderEngine.getUBOPointer(name), isSingle));\r\n        }\r\n        let bufferBase = UniformBufferObject._Map.get(name);\r\n        if (bufferBase._singgle && bufferBase._mapArray.length > 0) {\r\n            return null;\r\n        } else {\r\n            let ubo = LayaGL.renderOBJCreate.createUniformBufferObject(bufferBase._glPointerID, name, bufferUsage, bytelength, isSingle);\r\n            if(bufferBase._singgle) bufferBase.add(ubo);\r\n            return ubo;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Uniform Buffer by name\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @returns \r\n     */\r\n    static getBuffer(name: string, index: number) {\r\n        let base = UniformBufferObject._Map.get(name);\r\n        if (!base)\r\n            return null;\r\n        return base._mapArray[index];\r\n    }\r\n\r\n    /**@interanl */\r\n    _glPointer: number;\r\n\r\n    /**@internal */\r\n    _updateDataInfo: UnifromBufferData;\r\n\r\n    /**@internal */\r\n    _isSingle: boolean = false;\r\n\r\n    /**buffer name */\r\n    _name: string;\r\n\r\n    /**all byte length */\r\n    byteLength: number;\r\n\r\n    /**\r\n     * @interanl\r\n     */\r\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\r\n        super(BufferTargetType.UNIFORM_BUFFER,bufferUsage);\r\n        this._glPointer = glPointer;\r\n        this.byteLength = byteLength;\r\n        this._name = name;\r\n        this._isSingle = isSingle;\r\n        this.bind();\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * differcnt UBO bind Point\r\n     * @internal\r\n     */\r\n    _bindUniformBufferBase() {\r\n        // const base = UniformBufferObject._Map.get(this._name);\r\n        // if (base._curUniformBuffer != this) {\r\n            this._glBuffer.bindBufferBase(this._glPointer);\r\n            //base._curUniformBuffer = this;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 绑定一段\r\n     * @internal\r\n     */\r\n    _bindBufferRange(offset: number, byteCount: number) {\r\n        this.bind();\r\n        this._glBuffer.bindBufferRange(this._glPointer,offset,byteCount);\r\n        //gl.bindBufferRange(gl.UNIFORM_BUFFER, this._glPointer, this._glBuffer, offset, byteCount);\r\n    }\r\n\r\n    /**\r\n     * 重置buffer长度\r\n     * @param bytelength \r\n     */\r\n    _reset(bytelength: number) {\r\n        \r\n        //destroy\r\n        if (this._glBuffer) {\r\n            this._glBuffer.destroy();\r\n            this._glBuffer = null;\r\n        }\r\n        //create new\r\n        this._byteLength = this.byteLength = bytelength;\r\n        this._glBuffer = LayaGL.renderEngine.createBuffer(this._bufferType,this._bufferUsage);\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    bind(): boolean {\r\n       return this._glBuffer.bindBuffer();\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param buffer Float32Array data\r\n     * @param bufferOffset byteOffset\r\n     * @param byteCount  byteCount\r\n     * @returns \r\n     */\r\n    setData(buffer: Float32Array, bufferOffset: number = 0, byteCount: number = Number.MAX_SAFE_INTEGER): void {\r\n        if (byteCount < 0) return;\r\n        this.bind();\r\n        var needSubData: boolean = !(bufferOffset == 0 && byteCount == this.byteLength);\r\n        if (needSubData) {\r\n            var subData: Uint8Array = new Uint8Array(buffer.buffer, bufferOffset, byteCount);\r\n            //bufferSubData(this._bufferType, bufferOffset, subData);\r\n            this._glBuffer.setData(subData,bufferOffset);\r\n        }\r\n        else {\r\n            // let gl = (LayaGL.instance as WebGL2RenderingContext);                                                 \r\n            // gl.bufferSubData(this._bufferType, bufferOffset, buffer, 0, buffer.length);\r\n            this._glBuffer.setDataEx(buffer,bufferOffset,buffer.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param bufferData \r\n     */\r\n    setDataByUniformBufferData(bufferData: UnifromBufferData) {\r\n        if (this._updateDataInfo == bufferData) {\r\n            this.setData(bufferData._buffer, bufferData._updateFlag.x * 4, (bufferData._updateFlag.y - bufferData._updateFlag.x) * 4);\r\n            bufferData._resetUpdateFlag();\r\n        } else {\r\n            this.setData(bufferData._buffer, 0, this.byteLength);\r\n            bufferData._resetUpdateFlag();\r\n            this._updateDataInfo = bufferData;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set Data by subUniformBufferData\r\n     * @param bufferData sub UniformBufferData\r\n     * @param offset \r\n     */\r\n    setDataByByUniformBufferDataOffset(bufferData: SubUniformBufferData, offset: number) {\r\n        let datalength = bufferData.getbyteLength();//offset\r\n        let reallength = bufferData._realByte;//update Count\r\n        bufferData._resetUpdateFlag();\r\n        //let gl = (LayaGL.instance as WebGL2RenderingContext);\r\n        this.bind();\r\n        //gl.bufferSubData(this._bufferType, offset * datalength, bufferData._buffer, 0, reallength / 4);\r\n        this._glBuffer.setDataEx(bufferData._buffer,offset * datalength,reallength / 4);\r\n    }\r\n\r\n    /**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tsuper.destroy();\r\n\t}\r\n}","import { Config } from \"../../Config\";\r\nimport { Config3D } from \"../../Config3D\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { BufferUsage } from \"../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { DefineDatas } from \"../RenderEngine/RenderShader/DefineDatas\";\r\nimport { RenderState } from \"../RenderEngine/RenderShader/RenderState\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderData, ShaderDataType, ShaderDataItem, ShaderDataDefaultValue } from \"../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { UniformBufferObject } from \"../RenderEngine/UniformBufferObject\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Resource } from \"./Resource\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n\r\nexport enum MaterialRenderMode {\r\n    /**渲染状态_不透明。*/\r\n    RENDERMODE_OPAQUE,\r\n    /**渲染状态_阿尔法测试。*/\r\n    RENDERMODE_CUTOUT,\r\n    /**渲染状态__透明。*/\r\n    RENDERMODE_TRANSPARENT,\r\n    /**渲染状态__加色法混合。*/\r\n    RENDERMODE_ADDTIVE,\r\n    /**渲染状态_透明混合。*/\r\n    RENDERMODE_ALPHABLENDED,\r\n    /**渲染状态_自定义 */\r\n    RENDERMODE_CUSTOME\r\n}\r\n\r\n/**\r\n * <code>Material</code> 类用于创建材质。\r\n */\r\nexport class Material extends Resource implements IClone {\r\n    /** 渲染队列_不透明。*/\r\n    static RENDERQUEUE_OPAQUE: number = 2000;\r\n    /** 渲染队列_阿尔法裁剪。*/\r\n    static RENDERQUEUE_ALPHATEST: number = 2450;\r\n    /** 渲染队列_透明。*/\r\n    static RENDERQUEUE_TRANSPARENT: number = 3000;\r\n\r\n    /**着色器变量,透明测试值。*/\r\n    static ALPHATESTVALUE: number;\r\n\r\n    /**材质级着色器宏定义,透明测试。*/\r\n    static SHADERDEFINE_ALPHATEST: ShaderDefine;\r\n    static SHADERDEFINE_MAINTEXTURE: ShaderDefine;\r\n    static SHADERDEFINE_ADDTIVEFOG: ShaderDefine;\r\n    /**\r\n     * 加载材质。\r\n     * @param url 材质地址。\r\n     * @param complete 完成回掉。\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, Loader.MATERIAL);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __initDefine__(): void {\r\n        Material.SHADERDEFINE_ALPHATEST = Shader3D.getDefineByName(\"ALPHATEST\");\r\n        Material.SHADERDEFINE_MAINTEXTURE = Shader3D.getDefineByName(\"MAINTEXTURE\");\r\n        Material.SHADERDEFINE_ADDTIVEFOG = Shader3D.getDefineByName(\"ADDTIVEFOG\");\r\n        Material.ALPHATESTVALUE = Shader3D.propertyNameToID(\"u_AlphaTestValue\");\r\n        Shader3D.CULL = Shader3D.propertyNameToID(\"s_Cull\");\r\n        Shader3D.BLEND = Shader3D.propertyNameToID(\"s_Blend\");\r\n        Shader3D.BLEND_SRC = Shader3D.propertyNameToID(\"s_BlendSrc\");\r\n        Shader3D.BLEND_DST = Shader3D.propertyNameToID(\"s_BlendDst\");\r\n        Shader3D.BLEND_SRC_RGB = Shader3D.propertyNameToID(\"s_BlendSrcRGB\");\r\n        Shader3D.BLEND_DST_RGB = Shader3D.propertyNameToID(\"s_BlendDstRGB\");\r\n        Shader3D.BLEND_SRC_ALPHA = Shader3D.propertyNameToID(\"s_BlendSrcAlpha\");\r\n        Shader3D.BLEND_DST_ALPHA = Shader3D.propertyNameToID(\"s_BlendDstAlpha\");\r\n        Shader3D.BLEND_EQUATION = Shader3D.propertyNameToID(\"s_BlendEquation\");\r\n        Shader3D.BLEND_EQUATION_RGB = Shader3D.propertyNameToID(\"s_BlendEquationRGB\");\r\n        Shader3D.BLEND_EQUATION_ALPHA = Shader3D.propertyNameToID(\"s_BlendEquationAlpha\");\r\n        Shader3D.DEPTH_TEST = Shader3D.propertyNameToID(\"s_DepthTest\");\r\n        Shader3D.DEPTH_WRITE = Shader3D.propertyNameToID(\"s_DepthWrite\");\r\n        Shader3D.STENCIL_Ref = Shader3D.propertyNameToID(\"s_StencilRef\");\r\n        Shader3D.STENCIL_TEST = Shader3D.propertyNameToID(\"s_StencilTest\");\r\n        Shader3D.STENCIL_WRITE = Shader3D.propertyNameToID(\"s_StencilWrite\");\r\n        Shader3D.STENCIL_Op = Shader3D.propertyNameToID(\"s_StencilOp\");\r\n    }\r\n\r\n    /**@internal */\r\n    private _matRenderNode: MaterialRenderMode;\r\n    /** @internal */\r\n    _shader: Shader3D;\r\n    /** @private */\r\n    _shaderValues: ShaderData | null;//TODO:剥离贴图ShaderValue\r\n    /** 所属渲染队列. */\r\n    renderQueue: number;\r\n\r\n    /**\r\n     * 着色器数据。\r\n     */\r\n    get shaderData(): ShaderData {\r\n        return this._shaderValues;\r\n    }\r\n\r\n    /**\r\n     * 透明测试模式裁剪值。\r\n     */\r\n    get alphaTestValue(): number {\r\n        return this._shaderValues.getNumber(Material.ALPHATESTVALUE);\r\n    }\r\n\r\n    set alphaTestValue(value: number) {\r\n        this._shaderValues.setNumber(Material.ALPHATESTVALUE, value);\r\n    }\r\n\r\n    /**\r\n     * 是否透明裁剪。\r\n     */\r\n    get alphaTest(): boolean {\r\n        return this.shaderData.hasDefine(Material.SHADERDEFINE_ALPHATEST);\r\n    }\r\n\r\n    set alphaTest(value: boolean) {\r\n        if (value)\r\n            this._shaderValues.addDefine(Material.SHADERDEFINE_ALPHATEST);\r\n        else\r\n            this._shaderValues.removeDefine(Material.SHADERDEFINE_ALPHATEST);\r\n    }\r\n\r\n    /**\r\n     * 增加Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    addDefine(define: ShaderDefine): void {\r\n        this._shaderValues.addDefine(define);\r\n    }\r\n\r\n    /**\r\n     * 移除Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    removeDefine(define: ShaderDefine): void {\r\n        this._shaderValues.removeDefine(define);\r\n    }\r\n\r\n    /**\r\n     * 开启 或 关闭 shader 宏定义\r\n     * @param define \r\n     * @param value true: addDefine, false: removeDefine\r\n     */\r\n    setDefine(define: ShaderDefine, value: boolean) {\r\n        if (value) {\r\n            this._shaderValues.addDefine(define);\r\n        }\r\n        else {\r\n            this._shaderValues.removeDefine(define);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否包含Shader宏定义。\r\n     * @param value 宏定义。\r\n     */\r\n    hasDefine(define: ShaderDefine): boolean {\r\n        return this._shaderValues.hasDefine(define);\r\n    }\r\n\r\n    /**\r\n     * 是否写入深度。\r\n     */\r\n    get depthWrite(): boolean {\r\n        return this._shaderValues.getBool(Shader3D.DEPTH_WRITE);\r\n    }\r\n\r\n    set depthWrite(value: boolean) {\r\n        this._shaderValues.setBool(Shader3D.DEPTH_WRITE, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * 剔除方式。\r\n     */\r\n    get cull(): number {\r\n        return this._shaderValues.getInt(Shader3D.CULL);\r\n    }\r\n\r\n    set cull(value: number) {\r\n        this._shaderValues.setInt(Shader3D.CULL, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方式。\r\n     */\r\n    get blend(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND);\r\n    }\r\n\r\n    set blend(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * 混合源。\r\n     */\r\n    get blendSrc(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC);\r\n    }\r\n\r\n    set blendSrc(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC, value);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 混合目标。\r\n     */\r\n    get blendDst(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST);\r\n    }\r\n\r\n    set blendDst(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST, value);\r\n    }\r\n\r\n    /**\r\n     * 混合目标 alpha\r\n     */\r\n    public get blendSrcAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_ALPHA);\r\n    }\r\n    public set blendSrcAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * 混合原 RGB\r\n     */\r\n    public get blendSrcRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_SRC_RGB);\r\n    }\r\n    /**\r\n     * 混合原 RGB\r\n     */\r\n    public set blendSrcRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_SRC_RGB, value);\r\n    }\r\n\r\n    public get blendDstRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_RGB);\r\n    }\r\n    public set blendDstRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST_RGB, value);\r\n    }\r\n\r\n    /**\r\n     * 混合目标 alpha\r\n     */\r\n    public get blendDstAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_DST_ALPHA);\r\n    }\r\n    public set blendDstAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_DST_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方程\r\n     */\r\n    public get blendEquation(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION);\r\n    }\r\n    public set blendEquation(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方式 RGB\r\n     */\r\n    public get blendEquationRGB(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_RGB);\r\n    }\r\n    public set blendEquationRGB(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_RGB, value);\r\n    }\r\n\r\n    /**\r\n     * 混合方式 Alpha\r\n     */\r\n    public get blendEquationAlpha(): number {\r\n        return this._shaderValues.getInt(Shader3D.BLEND_EQUATION_ALPHA);\r\n    }\r\n    public set blendEquationAlpha(value: number) {\r\n        this._shaderValues.setInt(Shader3D.BLEND_EQUATION_ALPHA, value);\r\n    }\r\n\r\n    /**\r\n     * 深度测试方式。\r\n     */\r\n    get depthTest(): number {\r\n        return this._shaderValues.getInt(Shader3D.DEPTH_TEST);\r\n    }\r\n\r\n    set depthTest(value: number) {\r\n        this._shaderValues.setInt(Shader3D.DEPTH_TEST, value);\r\n    }\r\n\r\n    /**\r\n     * 模板测试方式\r\n     */\r\n    get stencilTest(): number {\r\n        return this._shaderValues.getInt(Shader3D.STENCIL_TEST);\r\n    }\r\n\r\n    set stencilTest(value: number) {\r\n        this._shaderValues.setInt(Shader3D.STENCIL_TEST, value);\r\n    }\r\n\r\n    /**\r\n     * 是否写入模板。\r\n     */\r\n    get stencilWrite(): boolean {\r\n        return this._shaderValues.getBool(Shader3D.STENCIL_WRITE);\r\n    }\r\n\r\n    set stencilWrite(value: boolean) {\r\n        this._shaderValues.setBool(Shader3D.STENCIL_WRITE, value);\r\n    }\r\n\r\n    /**\r\n     * 写入模板值\r\n     */\r\n    set stencilRef(value: number) {\r\n        this._shaderValues.setInt(Shader3D.STENCIL_Ref, value);\r\n    }\r\n\r\n    get stencilRef(): number {\r\n        return this._shaderValues.getInt(Shader3D.STENCIL_Ref);\r\n    }\r\n\r\n    /** */\r\n    /**\r\n     * 写入模板测试设置\r\n     * vector(fail, zfail, zpass)\r\n     */\r\n    set stencilOp(value: Vector3) {\r\n        this._shaderValues.setVector3(Shader3D.STENCIL_Op, value);\r\n    }\r\n\r\n    get stencilOp(): Vector3 {\r\n        return this._shaderValues.getVector3(Shader3D.STENCIL_Op);\r\n    }\r\n\r\n    /**\r\n     * 获得材质属性\r\n     */\r\n    get MaterialProperty(): any {\r\n        let propertyMap: any = {};\r\n        var shaderValues = this._shaderValues.getData();\r\n        for (let key in shaderValues) {\r\n            propertyMap[LayaGL.renderEngine.propertyIDToName(parseInt(key))] = shaderValues[key];\r\n        }\r\n        return propertyMap;\r\n    }\r\n\r\n    /**\r\n     * 获得材质宏\r\n     */\r\n    get MaterialDefine(): Array<string> {\r\n        let shaderDefineArray = new Array<string>();\r\n        let defineData = this._shaderValues._defineDatas;\r\n        Shader3D._getNamesByDefineData(defineData, shaderDefineArray);\r\n        return shaderDefineArray;\r\n    }\r\n\r\n    /**\r\n     * 渲染模式。\r\n     */\r\n    set materialRenderMode(value: MaterialRenderMode) {\r\n        this._matRenderNode = value;\r\n        switch (value) {\r\n            case MaterialRenderMode.RENDERMODE_OPAQUE:\r\n                this.alphaTest = false;\r\n                this.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n                this.depthWrite = true;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_DISABLE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_CUTOUT:\r\n                this.renderQueue = Material.RENDERQUEUE_ALPHATEST;\r\n                this.alphaTest = true;\r\n                this.depthWrite = true;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_DISABLE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_TRANSPARENT:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_BACK;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_ADDTIVE:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_NONE;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                this._shaderValues.addDefine(Material.SHADERDEFINE_ADDTIVEFOG);\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_ALPHABLENDED:\r\n                this.renderQueue = Material.RENDERQUEUE_TRANSPARENT;\r\n                this.alphaTest = false;\r\n                this.depthWrite = false;\r\n                //this.cull = RenderState.CULL_NONE;\r\n                this.blend = RenderState.BLEND_ENABLE_ALL;\r\n                this.blendSrc = RenderState.BLENDPARAM_SRC_ALPHA;\r\n                this.blendDst = RenderState.BLENDPARAM_ONE_MINUS_SRC_ALPHA;\r\n                this.depthTest = RenderState.DEPTHTEST_LESS;\r\n                this._shaderValues.removeDefine(Material.SHADERDEFINE_ADDTIVEFOG);\r\n                break;\r\n            case MaterialRenderMode.RENDERMODE_CUSTOME:\r\n                //TODO IDE\r\n                break;\r\n            default:\r\n                console.warn(`Material : renderMode value error - (${value}).`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得材质渲染状态\r\n     */\r\n    get materialRenderMode() {\r\n        return this._matRenderNode;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Material</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._shaderValues = LayaGL.renderOBJCreate.createShaderData(this);\r\n        this.renderQueue = Material.RENDERQUEUE_OPAQUE;\r\n        this._matRenderNode = 0;\r\n        this.alphaTest = false;\r\n        this.cull = RenderState.CULL_BACK;\r\n        this.blend = RenderState.BLEND_DISABLE;\r\n        this.blendSrc = RenderState.BLENDPARAM_ONE;\r\n        this.blendDst = RenderState.BLENDPARAM_ZERO;\r\n        this.blendSrcRGB = RenderState.BLENDPARAM_ONE;\r\n        this.blendDstRGB = RenderState.BLENDPARAM_ZERO;\r\n        this.blendSrcAlpha = RenderState.BLENDPARAM_ONE;\r\n        this.blendDstAlpha = RenderState.BLENDPARAM_ZERO;\r\n        this.blendEquation = RenderState.BLENDEQUATION_ADD;\r\n        this.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\r\n        this.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\r\n        this.depthTest = RenderState.DEPTHTEST_LEQUAL;\r\n        this.depthWrite = true;\r\n        this.stencilRef = 1;\r\n        this.stencilTest = RenderState.STENCILTEST_OFF;\r\n        this.stencilWrite = false;\r\n        this.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param shader \r\n     * @returns \r\n     */\r\n    private _bindShaderInfo(shader: Shader3D) {\r\n        //update UBOData by Shader\r\n        let subShader = shader.getSubShaderAt(0);//TODO\t\r\n        // ubo\r\n        let shaderUBODatas = subShader._uniformBufferDataMap;\r\n        if (!shaderUBODatas)\r\n            return;\r\n        for (let key of shaderUBODatas.keys()) {\r\n            //create data\r\n            let uboData = shaderUBODatas.get(key).clone();\r\n            //create UBO\r\n            let ubo = UniformBufferObject.create(key, BufferUsage.Dynamic, uboData.getbyteLength(), false);\r\n            this._shaderValues.setUniformBuffer(Shader3D.propertyNameToID(key), ubo);\r\n            this._shaderValues._addCheckUBO(key, ubo, uboData);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 清除UBO\r\n     * @returns \r\n     */\r\n    private _releaseUBOData() {\r\n        if (!this._shaderValues.uniformBufferDatas) {\r\n            return;\r\n        }\r\n        for (let value of this._shaderValues.uniformBufferDatas.values()) {\r\n            value.ubo._updateDataInfo.destroy();\r\n            value.ubo.destroy();\r\n            value.ubo._updateDataInfo = null;\r\n        }\r\n        this._shaderValues.uniformBufferDatas.clear();\r\n        this._shaderValues.uniformBuffersMap.clear();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        this._releaseUBOData();\r\n        this._shaderValues.destroy();\r\n        this._shaderValues = null;\r\n    }\r\n\r\n    get shader() {\r\n        return this._shader;\r\n    }\r\n\r\n    /**\r\n     * get all material uniform property \r\n     * @returns \r\n     */\r\n    effectiveProperty() {\r\n        return this._shader.getSubShaderAt(0)._uniformTypeMap;\r\n    }\r\n\r\n    /**\r\n     * 设置使用Shader名字。\r\n     * @param name 名称。\r\n     */\r\n    setShaderName(name: string): void {\r\n        this._shader = Shader3D.find(name);\r\n        if (!this._shader) {\r\n            //throw new Error(\"Material: unknown shader name.\");\r\n            console.warn(`Material: unknown shader name '${name}'`);\r\n            this._shader = Shader3D.find(\"BLINNPHONG\");\r\n        }\r\n\r\n        if (Config3D._uniformBlock) {\r\n            this._releaseUBOData();\r\n            //bind shader info\r\n            // todo 清理残留 shader data\r\n            this._bindShaderInfo(this._shader);\r\n        }\r\n\r\n        // set default value\r\n        // todo subShader 选择\r\n        let subShader = this._shader.getSubShaderAt(0);\r\n        let defaultValue = subShader._uniformDefaultValue;\r\n        let typeMap = subShader._uniformTypeMap;\r\n        this.applyUniformDefaultValue(typeMap, defaultValue);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    applyUniformDefaultValue(typeMap: Map<string, ShaderDataType>, defaultValue: Record<string, ShaderDataItem>) {\r\n        typeMap.forEach((type, key) => {\r\n            if (defaultValue && defaultValue[key] != undefined) {\r\n                let value = defaultValue[key];\r\n                this.setShaderData(key, type, value);\r\n            }\r\n            else {\r\n                this.setShaderData(key, type, ShaderDataDefaultValue(type));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获得bool属性值\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getBoolByIndex(uniformIndex: number): boolean {\r\n        return this.shaderData.getBool(uniformIndex);\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置bool值\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setBoolByIndex(uniformIndex: number, value: boolean) {\r\n        this.shaderData.setBool(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 活得bool值\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getBool(name: string): boolean {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getBoolByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置bool值\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setBool(name: string, value: boolean) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setBoolByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Float值\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getFloatByIndex(uniformIndex: number): number {\r\n        return this.shaderData.getNumber(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Float值\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setFloatByIndex(uniformIndex: number, value: number) {\r\n        this.shaderData.setNumber(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Float值\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getFloat(name: string): number {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getFloatByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Float值\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setFloat(name: string, value: number) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setFloatByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Int值\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getIntByIndex(uniformIndex: number): number {\r\n        return this.shaderData.getInt(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Int值\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setIntByIndex(uniformIndex: number, value: number) {\r\n        this.shaderData.setInt(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Int值\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getInt(name: string): number {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getIntByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Int值\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setInt(name: string, value: number) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setIntByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector2\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getVector2ByIndex(uniformIndex: number): Vector2 {\r\n        return this.shaderData.getVector2(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setVector2ByIndex(uniformIndex: number, value: Vector2) {\r\n        this.shaderData.setVector2(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector2\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getVector2(name: string): Vector2 {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector2ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setVector2(name: string, value: Vector2) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector2ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector3\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getVector3ByIndex(uniformIndex: number): Vector3 {\r\n        return this.shaderData.getVector3(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setVector3ByIndex(uniformIndex: number, value: Vector3) {\r\n        this.shaderData.setVector3(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector3\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getVector3(name: string) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector3ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setVector3(name: string, value: Vector3) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector3ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector4\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setVector4ByIndex(uniformIndex: number, value: Vector4) {\r\n        this.shaderData.setVector(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector4\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getVector4ByIndex(uniformIndex: number): Vector4 {\r\n        return this.shaderData.getVector(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector4\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setVector4(name: string, value: Vector4) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setVector4ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Vector4\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getVector4(name: string) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getVector4ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 获得Color\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getColorByIndex(uniformIndex: number): Color {\r\n        return this.shaderData.getColor(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Color\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setColorByIndex(uniformIndex: number, value: Color) {\r\n        this.shaderData.setColor(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Color\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getColor(name: string): Color {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.shaderData.getColor(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Color\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setColor(name: string, value: Color) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setColorByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Matrix4x4\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getMatrix4x4ByIndex(uniformIndex: number): Matrix4x4 {\r\n        return this.shaderData.getMatrix4x4(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Matrix4x4\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setMatrix4x4ByIndex(uniformIndex: number, value: Matrix4x4) {\r\n        this.shaderData.setMatrix4x4(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Matrix4x4\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getMatrix4x4(name: string): Matrix4x4 {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getMatrix4x4ByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Matrix4x4\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setMatrix4x4(name: string, value: Matrix4x4) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setMatrix4x4ByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获取 matrix3x3\r\n     * @param index \r\n     * @returns \r\n     */\r\n    getMatrix3x3ByIndex(index: number) {\r\n        return this.shaderData.getMatrix3x3(index);\r\n    }\r\n\r\n    /**\r\n     * 设置 matrix3x3\r\n     * @param index \r\n     * @param value \r\n     */\r\n    setMatrix3x3ByIndex(index: number, value: Matrix3x3) {\r\n        this.shaderData.setMatrix3x3(index, value);\r\n    }\r\n\r\n    /**\r\n     * 获取 matrix3x3\r\n     * @param name \r\n     * @returns \r\n     */\r\n    getMatrix3x3(name: string): Matrix3x3 {\r\n        let index = Shader3D.propertyNameToID(name);\r\n        return this.getMatrix3x3ByIndex(index);\r\n    }\r\n\r\n    /**\r\n     * 设置 matrix3x3\r\n     * @param name \r\n     * @param value \r\n     */\r\n    setMatrix3x3(name: string, value: Matrix3x3) {\r\n        let index = Shader3D.propertyNameToID(name);\r\n        this.setMatrix3x3ByIndex(index, value);\r\n    }\r\n\r\n    /**\r\n     * 设置纹理\r\n     * @param uniformIndex 属性索引\r\n     * @param texture \r\n     */\r\n    setTextureByIndex(uniformIndex: number, texture: BaseTexture) {\r\n        this.shaderData.setTexture(uniformIndex, texture);\r\n        if (texture && !texture._texture)//贴图为加载完，需要重设\r\n            texture.once(Event.READY, this, this.reSetTexture);\r\n    }\r\n\r\n    private reSetTexture(texture: BaseTexture) {\r\n        let index = this.shaderData.getSourceIndex(texture);\r\n        if (index != -1) {\r\n            this.setTextureByIndex(index, texture);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得纹理\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getTextureByIndex(uniformIndex: number) {\r\n        return this.shaderData.getTexture(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置纹理\r\n     * @param name 属性名称\r\n     * @param texture \r\n     */\r\n    setTexture(name: string, texture: BaseTexture) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setTextureByIndex(uniformIndex, texture);\r\n    }\r\n\r\n    /**\r\n     * 获得纹理\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getTexture(name: string): BaseTexture {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getTextureByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 获得Buffer\r\n     * @param uniformIndex 属性索引\r\n     * @returns \r\n     */\r\n    getBufferByIndex(uniformIndex: number): Float32Array {\r\n        return this.shaderData.getBuffer(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Buffer\r\n     * @param uniformIndex 属性索引\r\n     * @param value 值\r\n     */\r\n    setBufferByIndex(uniformIndex: number, value: Float32Array) {\r\n        this.shaderData.setBuffer(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 获得Buffer\r\n     * @param name 属性名称\r\n     * @returns \r\n     */\r\n    getBuffer(name: string): Float32Array {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getBufferByIndex(uniformIndex);\r\n    }\r\n\r\n    /**\r\n     * 设置Buffer\r\n     * @param name 属性名称\r\n     * @param value 值\r\n     */\r\n    setBuffer(name: string, value: Float32Array) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setBufferByIndex(uniformIndex, value);\r\n    }\r\n\r\n    /**\r\n     * 设置ShaderData的属性值\r\n     * @param uniformIndex 属性索引\r\n     * @param type 值类型\r\n     * @param value 值\r\n     */\r\n    setShaderDataByIndex(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem) {\r\n        this.shaderData.setShaderData(uniformIndex, type, value);\r\n    }\r\n\r\n    /**\r\n     * 设置ShaderData的属性值\r\n     * @param name 属性名称\r\n     * @param type 值类型\r\n     * @param value 值\r\n     */\r\n    setShaderData(name: string, type: ShaderDataType, value: ShaderDataItem) {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        this.setShaderDataByIndex(uniformIndex, type, value);\r\n    }\r\n\r\n    /**\r\n     * 获得ShaderData的属性值\r\n     * @param name 属性名称\r\n     * @param type 值类型\r\n     * @returns \r\n     */\r\n    getShaderData(name: string, type: ShaderDataType): ShaderDataItem {\r\n        let uniformIndex = Shader3D.propertyNameToID(name);\r\n        return this.getShaderDataByIndex(uniformIndex, type);\r\n    }\r\n\r\n    /**\r\n     * 获得ShaderData的属性值\r\n     * @param uniformIndex 属性索引\r\n     * @param type 值类型\r\n     * @returns \r\n     */\r\n    getShaderDataByIndex(uniformIndex: number, type: ShaderDataType): ShaderDataItem {\r\n        return this._shaderValues.getShaderData(uniformIndex, type);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destBaseMaterial: Material = (<Material>destObject);\r\n        destBaseMaterial.name = this.name;\r\n        destBaseMaterial.renderQueue = this.renderQueue;\r\n        destBaseMaterial.setShaderName(this._shader._name);\r\n        this._shaderValues.cloneTo(destBaseMaterial._shaderValues);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Material = new Material();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    //--------------------------------------------兼容-------------------------------------------------\r\n    /**\r\n     * 设置属性值\r\n     * @deprecated\r\n     * @param name \r\n     * @param value \r\n     */\r\n    setShaderPropertyValue(name: string, value: any) {\r\n        let propertyID = Shader3D.propertyNameToID(name);\r\n        this.shaderData.setValueData(propertyID, value);\r\n    }\r\n\r\n    /**\r\n     * 获取属性值\r\n     * @deprecated\r\n     * @param name \r\n     */\r\n    getShaderPropertyValue(name: string): any {\r\n        return this.shaderData.getValueData(Shader3D.propertyNameToID(name));\r\n    }\r\n\r\n    get _defineDatas(): DefineDatas {\r\n        return this._shaderValues._defineDatas;\r\n    }\r\n\r\n    /**\r\n     * override it\r\n     */\r\n    oldparseEndEvent() {\r\n        //TODO\r\n    }\r\n}\r\n\r\n\r\n","import { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\nexport enum TextureCubeFace {\r\n    /**+x */\r\n    PositiveX,\r\n    /**-x */\r\n    NegativeX,\r\n    /**+y */\r\n    PositiveY,\r\n    /**-y */\r\n    NegativeY,\r\n    /**+z */\r\n    PositiveZ,\r\n    /**-z */\r\n    NegativeZ\r\n}\r\n\r\nconst DEFAULT_PIXELS: Uint8Array = new Uint8Array(4);\r\n\r\n/**\r\n * <code>TextureCube</code> 类用于生成立方体纹理。\r\n */\r\nexport class TextureCube extends BaseTexture {\r\n\r\n    /**@private*/\r\n    private static _blackTexture: TextureCube;\r\n    /**@private*/\r\n    private static _grayTexture: TextureCube;\r\n    /**@private*/\r\n    private static _whiteTexture: TextureCube;\r\n\r\n    private static _errorTexture: TextureCube;\r\n\r\n    /**\r\n     * 黑色纯色纹理。\r\n     */\r\n    static get blackTexture() {\r\n        return TextureCube._blackTexture;\r\n    }\r\n\r\n    /**\r\n     * 灰色纯色纹理。\r\n     */\r\n    static get grayTexture() {\r\n        return TextureCube._grayTexture;\r\n    }\r\n\r\n    /**\r\n     * 白色纯色纹理。\r\n     */\r\n    static get whiteTexture() {\r\n        return TextureCube._whiteTexture;\r\n    }\r\n\r\n    static get errorTexture() {\r\n        return TextureCube._errorTexture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        var blackTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var grayTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var writeTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8A8, false);\r\n        var pixels = DEFAULT_PIXELS;\r\n        pixels[0] = 0, pixels[1] = 0, pixels[2] = 0; pixels[3] = 255;\r\n        blackTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 128, pixels[1] = 128, pixels[2] = 128; pixels[3] = 255;\r\n        grayTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 255, pixels[1] = 255, pixels[2] = 255; pixels[3] = 255;\r\n        writeTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        writeTexture.lock = true;\r\n        TextureCube._grayTexture = grayTexture;\r\n        TextureCube._blackTexture = blackTexture;\r\n        TextureCube._whiteTexture = writeTexture;\r\n        TextureCube._errorTexture = writeTexture;\r\n    }\r\n\r\n    constructor(size: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(size, size, format);\r\n\r\n        this._dimension = TextureDimension.Cube;\r\n\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, size, size, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    // todo source数组 改为 CubeInfo 结构体?\r\n    setImageData(source: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let error = false;\r\n        let k = source.findIndex(s => s != null);\r\n        if (k != -1) {\r\n            let img = source[k];\r\n            if (!source.every(s => s != null && s.width == img.width && s.height == img.height)) //必须满足所有元素不为null且大小相等\r\n                error = true;\r\n        }\r\n        else\r\n            error = true;\r\n\r\n        let texture = this._texture;\r\n        if (!error)\r\n            LayaGL.textureContext.setCubeImageData(texture, source, premultiplyAlpha, invertY);\r\n        else {\r\n            let pixels = DEFAULT_PIXELS;\r\n            LayaGL.textureContext.setCubePixelsData(texture, [pixels, pixels, pixels, pixels, pixels, pixels], premultiplyAlpha, invertY);\r\n        }\r\n    }\r\n\r\n    setPixelsData(source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    updateSubPixelsData(source: ArrayBufferView[], xOffset: number, yOffset: number, width: number, height: number, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    get defaultTexture(): BaseTexture {\r\n        return TextureCube.grayTexture;\r\n    }\r\n}","import { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDefine } from \"../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Loader, ILoadURL } from \"../net/Loader\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { URL } from \"../net/URL\";\r\n\r\nexport class MaterialParser {\r\n\r\n    static parse(data: any): Material {\r\n        let props: any = data.props;\r\n\r\n        switch (data.version) {\r\n            case \"LAYAMATERIAL:01\":\r\n            case \"LAYAMATERIAL:02\":\r\n            case \"LAYAMATERIAL:03\":\r\n                let mat = MaterialParser.parseLegacy(data);\r\n                mat.oldparseEndEvent();\r\n                return mat;\r\n            case \"LAYAMATERIAL:04\":\r\n                break;\r\n            default:\r\n                throw new Error(`unkonwn material version: ${data.version}`);\r\n        }\r\n\r\n        let mat = new Material();\r\n        mat.setShaderName(props.type);\r\n        let renderQueue: number;\r\n        for (let key in props) {\r\n            switch (key) {\r\n                case \"type\":\r\n                case \"name\":\r\n                    break;\r\n                case \"defines\":\r\n                    let defineNames: any[] = props[key];\r\n                    for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                        let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                        mat._shaderValues.addDefine(define);\r\n                    }\r\n                    break;\r\n                case \"textures\":\r\n                    let textures: any[] = props[key];\r\n                    for (let i = 0, n = textures.length; i < n; i++) {\r\n                        let texture: any = textures[i];\r\n                        let path: string = texture.path;\r\n                        (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\r\n                    }\r\n                    break;\r\n                case \"renderQueue\":\r\n                    renderQueue = props[key];\r\n                    break;\r\n                case \"alphaTest\":\r\n                    mat.alphaTest = props[key];\r\n                    break;\r\n                case \"materialRenderMode\":\r\n                    mat.materialRenderMode = props[key];\r\n                    break;\r\n                default:\r\n                    let property = props[key];\r\n                    let uniName = Shader3D.propertyNameToID(key);\r\n\r\n                    switch (uniName) {\r\n                        case Shader3D.CULL:\r\n                            mat.cull = property;\r\n                            break;\r\n                        case Shader3D.BLEND:\r\n                            mat.blend = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC:\r\n                            mat.blendSrc = property;\r\n                            break;\r\n                        case Shader3D.BLEND_DST:\r\n                            mat.blendDst = property;\r\n                            break;\r\n                        case Shader3D.BLEND_DST_ALPHA:\r\n                            mat.blendDstAlpha = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_ALPHA:\r\n                            mat.blendSrcAlpha = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_RGB:\r\n                            mat.blendSrcRGB = property;\r\n                            break;\r\n                        case Shader3D.BLEND_SRC_RGB:\r\n                            mat.blendDstRGB = property;\r\n                            break;\r\n                        case Shader3D.DEPTH_TEST:\r\n                            mat.depthTest = property;\r\n                            break;\r\n                        case Shader3D.DEPTH_WRITE:\r\n                            mat.depthWrite = !!props[key];\r\n                            break;\r\n                        case Shader3D.STENCIL_TEST:\r\n                            mat.stencilTest = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_Op:\r\n                            mat.stencilOp = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_Ref:\r\n                            mat.stencilRef = property;\r\n                            break;\r\n                        case Shader3D.STENCIL_WRITE:\r\n                            mat.stencilWrite = property;\r\n                            break;\r\n                        default:\r\n                            if (!property.length) {\r\n                                mat._shaderValues.setNumber(uniName, props[key]);\r\n                            } else {\r\n                                var vectorValue = property;\r\n                                switch (vectorValue.length) {\r\n                                    case 2:\r\n                                        mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\r\n                                        break;\r\n                                    case 3:\r\n                                        mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\r\n                                        break;\r\n                                    case 4:\r\n                                        if (mat._shaderValues.getColor(uniName)) {\r\n                                            mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                        } else\r\n                                            mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                        break;\r\n                                    case 9:\r\n                                        let matrix3 = new Matrix3x3();\r\n                                        matrix3.elements = new Float32Array(vectorValue);\r\n                                        mat._shaderValues.setMatrix3x3(uniName, matrix3);\r\n                                        break;\r\n                                    case 16:\r\n                                        let matrix4 = new Matrix4x4();\r\n                                        matrix4.elements = new Float32Array(vectorValue);\r\n                                        mat._shaderValues.setMatrix4x4(uniName, matrix4);\r\n                                        break;\r\n                                    default:\r\n                                        mat._shaderValues.setBuffer(uniName, vectorValue);\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n            }\r\n        }\r\n        if (null != renderQueue) {\r\n            mat.renderQueue = renderQueue;\r\n        }\r\n\r\n        return mat;\r\n    }\r\n\r\n    static collectLinks(data: any, basePath: string) {\r\n        let urls: ILoadURL[] = [];\r\n        let textures: any[] = data.props?.textures;\r\n        if (textures) {\r\n            for (let i = 0, n = textures.length; i < n; i++) {\r\n                let tex2D: any = textures[i];\r\n                let tex2DPath: string = tex2D.path;\r\n                if (tex2DPath) {\r\n                    tex2D.path = URL.join(basePath, tex2DPath);\r\n                    urls.push({ url: tex2D.path, type: Loader.TEXTURE2D, constructParams: tex2D.constructParams, propertyParams: tex2D.propertyParams });\r\n                }\r\n            }\r\n        }\r\n        return urls;\r\n    }\r\n\r\n\r\n    /**\r\n     * @deprecated\r\n     * @inheritDoc\r\n     */\r\n    static parseLegacy(data: any): Material {\r\n        let jsonData: any = data;\r\n        let props: any = jsonData.props;\r\n\r\n        let mat: Material;\r\n        let classType: string = props.type;\r\n        let clas: any = ClassUtils.getClass(classType);\r\n        if (!clas && classType && classType.startsWith(\"Laya.\"))\r\n            clas = ClassUtils.getClass(classType.substring(5));\r\n        if (clas)\r\n            mat = new clas();\r\n        else {\r\n            mat = new Material();\r\n            mat.setShaderName(classType);\r\n        }\r\n\r\n        switch (jsonData.version) {\r\n            case \"LAYAMATERIAL:01\":\r\n            case \"LAYAMATERIAL:02\":\r\n                for (let key in props) {\r\n                    switch (key) {\r\n                        case \"type\":\r\n                            break;\r\n                        case \"vectors\":\r\n                            let vectors = props[key];\r\n                            for (let i = 0, n = vectors.length; i < n; i++) {\r\n                                let vector = vectors[i];\r\n                                let vectorValue = vector.value;\r\n                                switch (vectorValue.length) {\r\n                                    case 2:\r\n                                        (<any>mat)[vector.name] = new Vector2(vectorValue[0], vectorValue[1]);\r\n                                        break;\r\n                                    case 3:\r\n                                        if ((<any>mat)[vector.name] instanceof Color) {\r\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], 1.0);\r\n                                        } else\r\n                                            (<any>mat)[vector.name] = new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]);\r\n                                        break;\r\n                                    case 4:\r\n                                        if ((<any>mat)[vector.name] instanceof Color) {\r\n                                            (<any>mat)[vector.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\r\n                                        } else\r\n                                            (<any>mat)[vector.name] = new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]);\r\n                                        break;\r\n                                    default:\r\n                                        throw new Error(\"unkonwn material color length: \" + vectorValue.length);\r\n                                }\r\n                            }\r\n                            break;\r\n                        case \"colors\":\r\n                            let colors = props[key];\r\n                            for (let i = 0, n = colors.length; i < n; i++) {\r\n                                let color = colors[i];\r\n                                let vectorValue = color.value;\r\n                                (<any>mat)[color.name] = new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3])\r\n                            }\r\n                            break;\r\n                        case \"textures\":\r\n                            let textures: any[] = props[key];\r\n                            for (let i = 0, n = textures.length; i < n; i++) {\r\n                                let texture: any = textures[i];\r\n                                let path: string = texture.path;\r\n                                (path) && ((<any>mat)[texture.name] = Loader.getBaseTexture(path));\r\n                            }\r\n                            break;\r\n                        case \"defines\":\r\n                            let defineNames: any[] = props[key];\r\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                                mat._shaderValues.addDefine(define);\r\n                            }\r\n                            break;\r\n                        case \"renderStates\"://\"LAYAMATERIAL:02\" \r\n                            let renderStatesData: any[] = props[key];\r\n                            let renderStateData: any = renderStatesData[0];\r\n                            mat.blend = renderStateData.blend;\r\n                            mat.cull = this._getRenderStateParams(renderStateData.cull);\r\n                            mat.depthTest = this._getRenderStateParams(renderStateData.depthTest);\r\n                            mat.depthWrite = renderStateData.depthWrite;\r\n                            mat.blendSrc = this._getRenderStateParams(renderStateData.srcBlend);\r\n                            mat.blendDst = this._getRenderStateParams(renderStateData.dstBlend);\r\n                            break;\r\n                        case \"cull\"://\"LAYAMATERIAL:01\"\r\n                            mat.cull = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blend\"://\"LAYAMATERIAL:01\"\r\n                            mat.blend = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"depthWrite\"://\"LAYAMATERIAL:01\" \r\n                            mat.depthWrite = !!props[key];\r\n                            break;\r\n                        case \"srcBlend\"://\"LAYAMATERIAL:01\" \r\n                            mat.blendSrc = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"dstBlend\"://\"LAYAMATERIAL:01\" \r\n                            mat.blendDst = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"depthTest\":\r\n                            mat.depthTest = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blendDst\":\r\n                            mat.blendDst = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        case \"blendSrc\":\r\n                            mat.blendSrc = this._getRenderStateParams(props[key]);\r\n                            break;\r\n                        default:\r\n                            (<any>mat)[key] = props[key];\r\n                    }\r\n                }\r\n                break;\r\n            case \"LAYAMATERIAL:03\":\r\n                for (let key in props) {\r\n                    switch (key) {\r\n                        case \"type\":\r\n                        case \"name\":\r\n                            break;\r\n                        case \"defines\":\r\n                            let defineNames: any[] = props[key];\r\n                            for (let i = 0, n = defineNames.length; i < n; i++) {\r\n                                let define: ShaderDefine = Shader3D.getDefineByName(defineNames[i]);//TODO:是否取消defines\r\n                                mat._shaderValues.addDefine(define);\r\n                            }\r\n                            break;\r\n                        case \"textures\":\r\n                            let textures: any[] = props[key];\r\n                            for (let i = 0, n = textures.length; i < n; i++) {\r\n                                let texture: any = textures[i];\r\n                                let path: string = texture.path;\r\n                                (path) && (mat._shaderValues.setTexture(Shader3D.propertyNameToID(texture.name), Loader.getBaseTexture(path)));\r\n                            }\r\n                            break;\r\n                        case \"renderQueue\":\r\n                            mat.renderQueue = props[key];\r\n                            break;\r\n                        default:\r\n                            let property = props[key];\r\n                            let uniName = Shader3D.propertyNameToID(key);\r\n\r\n                            switch (uniName) {\r\n                                case Shader3D.CULL:\r\n                                    mat.cull = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND:\r\n                                    mat.blend = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND_SRC:\r\n                                    mat.blendSrc = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.BLEND_DST:\r\n                                    mat.blendDst = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.DEPTH_TEST:\r\n                                    mat.depthTest = this._getRenderStateParams(property);\r\n                                    break;\r\n                                case Shader3D.DEPTH_WRITE:\r\n                                    mat.depthWrite = !!props[key];\r\n                                    break;\r\n                                default:\r\n                                    if (!property.length) {\r\n                                        mat._shaderValues.setNumber(uniName, props[key]);\r\n                                    } else {\r\n                                        var vectorValue = property;\r\n                                        switch (vectorValue.length) {\r\n                                            case 2:\r\n                                                mat._shaderValues.setVector2(uniName, new Vector2(vectorValue[0], vectorValue[1]));\r\n                                                break;\r\n                                            case 3:\r\n                                                mat._shaderValues.setVector3(uniName, new Vector3(vectorValue[0], vectorValue[1], vectorValue[2]));\r\n                                                break;\r\n                                            case 4:\r\n                                                if (mat._shaderValues.getColor(uniName)) {\r\n                                                    mat._shaderValues.setColor(uniName, new Color(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                                } else\r\n                                                    mat._shaderValues.setVector(uniName, new Vector4(vectorValue[0], vectorValue[1], vectorValue[2], vectorValue[3]));\r\n                                                break;\r\n                                            default:\r\n                                                throw new Error(\"unkonwn material color length: \" + vectorValue.length);\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n\r\n\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"unkonwn material version: \" + jsonData.version);\r\n        }\r\n        return mat;\r\n    }\r\n\r\n\r\n    /**\r\n        * @deprecated\r\n        * 兼容Blend数据\r\n        */\r\n    private static _getRenderStateParams(type: number) {\r\n        switch (type) {\r\n            case 0x0300:\r\n                return BlendFactor.SourceColor;\r\n            case 0x0301:\r\n                return BlendFactor.OneMinusSourceColor;\r\n            case 0x0306:\r\n                return BlendFactor.DestinationColor;\r\n            case 0x0307:\r\n                return BlendFactor.OneMinusDestinationColor;\r\n            case 0x0302:\r\n                return BlendFactor.SourceAlpha;\r\n            case 0x0303:\r\n                return BlendFactor.OneMinusSourceAlpha;\r\n            case 0x0304:\r\n                return BlendFactor.DestinationAlpha;\r\n            case 0x0305:\r\n                return BlendFactor.OneMinusDestinationAlpha;\r\n            case 0x0308:\r\n                return BlendFactor.SourceAlphaSaturate;\r\n            case 0x8006:\r\n                return BlendEquationSeparate.ADD;\r\n            case 0x800A:\r\n                return BlendEquationSeparate.SUBTRACT;\r\n            case 0x800B:\r\n                return BlendEquationSeparate.REVERSE_SUBTRACT;\r\n            case 0x0200:\r\n                return CompareFunction.Never;\r\n            case 0x0201:\r\n                return CompareFunction.Less;\r\n            case 0x0202:\r\n                return CompareFunction.Equal;\r\n            case 0x0203:\r\n                return CompareFunction.LessEqual;\r\n            case 0x0204:\r\n                return CompareFunction.Greater;\r\n            case 0x0205:\r\n                return CompareFunction.NotEqual;\r\n            case 0x0206:\r\n                return CompareFunction.GreaterEqual;\r\n            case 0x0207:\r\n                return CompareFunction.Always;\r\n            default:\r\n                return type;\r\n        }\r\n    }\r\n}","import { IResourceLoader, ILoadTask, ILoadURL, Loader, ILoadOptions } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Material } from \"../resource/Material\";\r\nimport { MaterialParser } from \"./MaterialParser\";\r\n\r\nexport class MaterialLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.3), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let basePath = URL.getPath(task.url);\r\n            let urls: Array<ILoadURL | string> = MaterialParser.collectLinks(data, basePath);\r\n\r\n            if (data.version === \"LAYAMATERIAL:04\") {\r\n                let shaderName = data.props.type;\r\n                if (!Shader3D.find(shaderName)) {\r\n                    let url = AssetDb.inst.shaderName_to_URL(shaderName);\r\n                    if (url)\r\n                        urls.push(url);\r\n                    else {\r\n                        return AssetDb.inst.shaderName_to_URL_async(shaderName).then(url => {\r\n                            if (url)\r\n                                urls.push(url);\r\n                            else if (data.props.shaderPath)\r\n                                urls.push(URL.join(basePath, data.props.shaderPath));\r\n                            else\r\n                                Loader.warn(`unknown shaderName: ${shaderName}`);\r\n                            return this.load2(task, data, urls);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.load2(task, data, urls);\r\n        });\r\n    }\r\n\r\n    private load2(task: ILoadTask, data: any, urls: Array<any>): Promise<any> {\r\n        if (urls.length == 0) {\r\n            let mat = MaterialParser.parse(data);\r\n            let obsoluteInst = <Material>task.obsoluteInst;\r\n            if (obsoluteInst)\r\n                mat = this.move(obsoluteInst, mat);\r\n            return Promise.resolve(mat);\r\n        }\r\n\r\n        let options: ILoadOptions = Object.assign({}, task.options);\r\n        options.initiator = task;\r\n        delete options.cache;\r\n        delete options.ignoreCache;\r\n        return task.loader.load(urls, options, task.progress.createCallback()).then(() => {\r\n            let mat = MaterialParser.parse(data);\r\n\r\n            let obsoluteInst = <Material>task.obsoluteInst;\r\n            if (task.obsoluteInst)\r\n                mat = this.move(obsoluteInst, mat);\r\n            return mat;\r\n        });\r\n    }\r\n\r\n    private move(obsoluteInst: Material, mat: Material) {\r\n        obsoluteInst._shaderValues.reset();\r\n        obsoluteInst.setShaderName(mat._shader.name);\r\n        mat._shaderValues.cloneTo(obsoluteInst._shaderValues);\r\n        obsoluteInst.renderQueue = mat.renderQueue;\r\n        obsoluteInst.materialRenderMode = mat.materialRenderMode;\r\n        obsoluteInst.obsolute = false;\r\n        mat.destroy();\r\n        return obsoluteInst;\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lmat\"], MaterialLoader, Loader.MATERIAL);","export class ParseJSON {\r\n    static parse(str: string) {\r\n        return this.parseStart(str);\r\n    }\r\n\r\n    private static findIndex(str: string, i: number, fstr: string, len: number) {\r\n        var fi = str.indexOf(fstr, i + 1);\r\n        if (0 > fi) {\r\n            fi = len;\r\n        }\r\n        return { str: str.substring(i + 1, fi), i: fi };\r\n\r\n    }\r\n    private static finCurrObj(): any {\r\n        this.type = 1;\r\n        if (null == this.cobj) {\r\n            return null;\r\n        }\r\n        if (0 == this.currArr.length) {\r\n            if (this.cobj.k) {\r\n                this.ret[this.cobj.k] = this.cobj.val;\r\n            }\r\n            return null;\r\n        } else {\r\n            var pobj = this.currArr.pop()!;\r\n            if (this.cobj.k) {\r\n                if (Array.isArray(pobj.val)) {\r\n                    if (null != this.cobj.k) {\r\n                        var obj: any = {};\r\n                        obj[this.cobj.k] = this.cobj.val;\r\n                        pobj.val.push(obj);\r\n                    } else {\r\n                        //没有key，应该创建的时候已经push进去了\r\n                        //pobj.val.push(cobj.val);\r\n                    }\r\n                } else {\r\n                    pobj.val[this.cobj.k] = this.cobj.val;\r\n                }\r\n            } else if (Array.isArray(this.cobj.val)) {\r\n                if (Array.isArray(pobj.val)) {\r\n                    pobj.val.push(this.cobj.val);\r\n                } else {\r\n                    pobj.val = this.cobj.val;\r\n                }\r\n            } else {\r\n                //console.log(\"应该是已经被push过的obj对象，无需处理\");\r\n            }\r\n            return pobj;\r\n        }\r\n    }\r\n\r\n    private static formatVal(str: string | null) {\r\n        if (null == str) {\r\n            return null;\r\n        }\r\n        var numVal = Number(str);\r\n        if (!isNaN(numVal)) {\r\n            return numVal;\r\n        }\r\n\r\n        if (\"false\" == str.toLowerCase()) {\r\n            return false;\r\n        } else if (\"true\" == str.toLowerCase()) {\r\n            return true;\r\n        } else if (\"null\" == str) {\r\n            return null;\r\n        }\r\n\r\n\r\n        return str;\r\n    }\r\n\r\n    private static len: number;\r\n    private static ret: any;\r\n    private static currStr: string | null;\r\n    private static currArr: { k?: string, val: any }[];\r\n    private static cobj: any;\r\n    /**type为0代表没有找到任何状态，1为当前在寻找key，2为当前在寻找val */\r\n    private static type: number;\r\n\r\n    private static finCurrStr() {\r\n        if (null != this.currStr) {\r\n            this.currStr = this.currStr.trim();\r\n            if (\"\" != this.currStr) {\r\n                if (null != this.cobj) {\r\n                    if (Array.isArray(this.cobj.val)) {\r\n                        this.cobj.val.push(this.formatVal(this.currStr));\r\n                    } else {\r\n                        this.cobj.val = this.formatVal(this.currStr);\r\n                        this.cobj = this.finCurrObj();\r\n                    }\r\n                }\r\n                this.currStr = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private static parseStart(str: string) {\r\n        this.len = str.length;\r\n        var i = 0;\r\n        this.ret = {};\r\n        this.currStr = null;\r\n        this.currArr = [];\r\n        this.cobj = null;\r\n        this.type = 0;\r\n\r\n\r\n        while (i < this.len) {\r\n            var c = str.charAt(i);\r\n            if (\"/\" == c) {\r\n                if (i + 1 < this.len) {\r\n                    i += 1;\r\n                    var cNext = str.charAt(i);\r\n                    var cstr = null;\r\n                    if (\"/\" == cNext) {\r\n                        //单行注释\r\n                        cstr = \"\\n\";\r\n                    } else if (\"*\" == cNext) {\r\n                        //多行注释\r\n                        cstr = \"*/\"\r\n                    }\r\n                    if (null != cstr) {\r\n\r\n\r\n\r\n                        this.finCurrStr();\r\n\r\n\r\n                        var fi = str.indexOf(cstr, i);\r\n                        if (0 > fi) {\r\n                            console.log(\"没有找到注释结尾，应该是一直注释到最后了\");\r\n                            i = this.len;\r\n                        } else {\r\n                            i = fi + cstr.length - 1;\r\n                        }\r\n                    }\r\n                }\r\n            } else if (\"}\" == c) {\r\n                if (null != this.cobj) {\r\n                    this.finCurrStr();\r\n                    if (null != this.cobj) {\r\n                        this.cobj = this.finCurrObj();\r\n                    }\r\n                }\r\n                this.currStr = \"\";\r\n                this.type = 1;\r\n                //obj结束\r\n            } else if (\"{\" == c) {\r\n                this.currStr = \"\";\r\n                this.type = 1;\r\n\r\n\r\n\r\n\r\n            } else if (\"'\" == c || \"\\\"\" == c || \"‘\" == c || \"“\" == c) {\r\n                //检测发现这里是字符串\r\n                if (\"‘\" == c) {\r\n                    c = \"’\";\r\n                } else if (\"“\" == c) {\r\n                    c = \"”\";\r\n                }\r\n                var obj = this.findIndex(str, i, c, this.len);\r\n\r\n                if (2 == this.type && null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                    if (null != this.currStr) {\r\n                        this.currStr = this.currStr.trim();\r\n                        if (\"\" != this.currStr) {\r\n                            this.cobj.val.push(this.formatVal(this.currStr));\r\n                        }\r\n                    }\r\n                    this.cobj.val.push(obj.str);\r\n                    this.currStr = \"\";\r\n                } else if (null != this.currStr) {\r\n                    this.currStr += obj.str;\r\n                }\r\n                i = obj.i;\r\n            } else if (\";\" == c || \",\" == c || \"\\n\" == c) {\r\n                this.finCurrStr();\r\n            } else if (\"]\" == c) {\r\n                //数组结束\r\n                if (null != this.currStr && null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                    this.currStr = this.currStr.trim();\r\n                    if (\"\" != this.currStr) {\r\n                        this.cobj.val.push(this.formatVal(this.currStr));\r\n                    }\r\n                }\r\n                if (null != this.cobj) {\r\n                    //数组需要完成两次才算结束出去\r\n                    this.cobj = this.finCurrObj();\r\n                    this.cobj = this.finCurrObj();\r\n                }\r\n                this.currStr = \"\";\r\n            } else if (\"[\" == c) {\r\n                if (2 != this.type) {\r\n                    console.warn(\"没有key值，忽略掉一个数组\");\r\n                } else {\r\n                    if (null != this.cobj) {\r\n                        this.currArr.push(this.cobj);\r\n                    }\r\n                    this.cobj = { val: [] };\r\n                }\r\n            } else if (\":\" == c) {\r\n                if (null != this.currStr && 1 == this.type) {\r\n                    this.type = 2;\r\n                    if (null != this.cobj) {\r\n                        this.currArr.push(this.cobj);\r\n                    }\r\n                    if (null != this.cobj && Array.isArray(this.cobj.val)) {\r\n                        //数组中的obj对象 eg: {b:[{aa:3,bb:4}],}\r\n                        var pcobj = this.cobj;\r\n                        this.cobj = { val: {} };\r\n                        pcobj.val.push(this.cobj.val);\r\n                        this.currArr.push(this.cobj);\r\n\r\n                    }\r\n                    this.cobj = { k: this.currStr.trim(), val: {} };\r\n\r\n\r\n\r\n                    this.currStr = \"\";\r\n                }\r\n            } else if (null != this.currStr) {\r\n                this.currStr += c;\r\n            }\r\n            i++;\r\n        }\r\n        return this.ret;\r\n    }\r\n\r\n\r\n}","import { Shader3D, IShaderObjStructor, IShaderpassStructor } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataType } from \"../RenderEngine/RenderShader/ShaderData\";\r\nimport { ParseJSON } from \"../utils/ParseJSON\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { Matrix3x3 } from \"../maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { TextureCube } from \"../resource/TextureCube\";\r\n\r\n\r\nconst CGBlock: string[] = [\"GLSL Start\", \"GLSL End\"];\r\nconst split: string[] = [\"#defineGLSL\", \"#endGLSL\"];\r\nconst shaderBlock: string[] = [\"Shader3D Start\", \"Shader3D End\"];\r\nconst shaderDataOBJ: Record<string, ShaderDataType> = {\r\n    \"Color\": ShaderDataType.Color,\r\n    \"Int\": ShaderDataType.Int,\r\n    \"Bool\": ShaderDataType.Bool,\r\n    \"Float\": ShaderDataType.Float,\r\n    \"Vector2\": ShaderDataType.Vector2,\r\n    \"Vector3\": ShaderDataType.Vector3,\r\n    \"Vector4\": ShaderDataType.Vector4,\r\n    \"Matrix4x4\": ShaderDataType.Matrix4x4,\r\n    \"Matrix3x3\": ShaderDataType.Matrix3x3,\r\n    \"Texture2D\": ShaderDataType.Texture2D,\r\n    \"TextureCube\": ShaderDataType.TextureCube,\r\n    \"Texture2DArray\": ShaderDataType.Texture2DArray,\r\n    \"Texture3D\": ShaderDataType.Texture3D,\r\n};\r\n\r\n//TODO 格式改变\r\nexport class ShaderParser {\r\n\r\n    static parse(data: string, basePath?: string): Shader3D {\r\n        let obj = ShaderParser.getShaderBlock(data);\r\n        let cgmap = ShaderParser.getCGBlock(data);\r\n        ShaderParser.bindCG(obj, cgmap);\r\n        let shader = Shader3D.parse(obj, basePath);\r\n        return shader;\r\n    }\r\n\r\n    static compileToTree(sliceFlag: string[], data: string, sliceIndex: number): string[] {\r\n        if (sliceIndex == sliceFlag.length)\r\n            return [data];\r\n        let slicedata = sliceFlag[sliceIndex];\r\n        let splitmap = data.split(slicedata);\r\n        if (splitmap.length == 1)\r\n            return splitmap;\r\n        let map: string[] = [];\r\n        for (let i = 0, n = splitmap.length; i < n; i++) {\r\n            map = map.concat(ShaderParser.compileToTree(sliceFlag, splitmap[i], sliceIndex + 1));\r\n            (i != n - 1) && map.push(slicedata);\r\n        }\r\n        return map;\r\n    }\r\n\r\n    static getMapKey(value: string) {\r\n        let index = value.indexOf(\"\\n\");\r\n        value = value.slice(0, index).replace(\"\\r\", \"\");\r\n        value = value.slice(0, index).replace(\" \", \"\");\r\n        value = value.trim();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * get Shader Data\r\n     */\r\n    static getShaderBlock(source: string) {\r\n        let shaderObj: IShaderObjStructor = null;\r\n        try {\r\n            let i1 = source.indexOf(shaderBlock[0]);\r\n            if (i1 == -1)\r\n                throw new Error(`no '${shaderBlock[0]}' tag`);\r\n            let i2 = source.indexOf(shaderBlock[1]);\r\n            if (i2 == -1)\r\n                throw new Error(`no '${shaderBlock[1]}' tag`);\r\n            let shaderData = source.substring(i1 + shaderBlock[0].length, i2);\r\n            shaderObj = ParseJSON.parse(shaderData);//TODO new FIle parse(1、去掉繁琐的json格式报错，2、可以有注释)\r\n        } catch (err: any) {\r\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\r\n        }\r\n        return shaderObj;\r\n    }\r\n\r\n    /**\r\n     * get CG data for map\r\n     * @param source \r\n     * @returns \r\n     */\r\n    static getCGBlock(source: string): { [key: string]: string } {\r\n        let cgmap: { [key: string]: string } = {};\r\n        try {\r\n            let i1 = source.indexOf(CGBlock[0]);\r\n            if (i1 == -1)\r\n                throw new Error(`no '${shaderBlock[0]}' tag`);\r\n            let i2 = source.indexOf(CGBlock[1]);\r\n            if (i2 == -1)\r\n                throw new Error(`no '${shaderBlock[1]}' tag`);\r\n            let cgdata = source.substring(i1, i2);\r\n            let map = ShaderParser.compileToTree(split, cgdata, 0);\r\n            for (let i = 0, n = map.length; i < n; i++) {\r\n                let value = map[i];\r\n                if (value == split[0]) {\r\n                    i += 1\r\n                    let datavalue = map[i];\r\n                    let key = ShaderParser.getMapKey(datavalue);\r\n                    cgmap[key] = datavalue.slice(datavalue.indexOf(\"\\n\"), datavalue.length - 1);\r\n                }\r\n            }\r\n        } catch (err: any) {\r\n            console.error(\"Shader parse error: \" + err + \"\\n\" + source.substring(0, 100) + \"...\");\r\n        }\r\n        return cgmap;\r\n    }\r\n\r\n    static bindCG(shaderObj: IShaderObjStructor, cgmap: { [key: string]: string }) {\r\n        //pass trans\r\n        let passArray = shaderObj.shaderPass as Array<IShaderpassStructor>;\r\n        if (passArray) {\r\n            passArray.forEach(element => {\r\n                if (element.VS) {\r\n                    element.VS = cgmap[element.VS];\r\n                }\r\n                if (element.FS) {\r\n                    element.FS = cgmap[element.FS];\r\n                }\r\n            });\r\n        }\r\n        //attribute map trans\r\n        let attributemap = shaderObj.attributeMap;\r\n        if (attributemap) {\r\n            let indexofAttribute = 0;\r\n            for (let i in attributemap) {\r\n                //TODO  这里的格式要重新理 \"name\":type or \"name\":[type,custom Attribute Location]\r\n                if (attributemap[i] instanceof Array) {\r\n                    let dataArray = attributemap[i];\r\n                    let type = ShaderParser.getShaderDataType(dataArray[0]);\r\n                    if (type == null) {\r\n                        console.warn(`${shaderObj.name}: unkown attribute type '${dataArray[0]}'`);\r\n                        continue;\r\n                    }\r\n                    attributemap[i] = [dataArray[1], type];\r\n                } else {\r\n                    let type = ShaderParser.getShaderDataType(attributemap[i]);\r\n                    if (type == null) {\r\n                        console.warn(`${shaderObj.name}: unkown attribute type '${attributemap[i]}'`);\r\n                        continue;\r\n                    }\r\n                    attributemap[i] = [indexofAttribute, type];\r\n                    indexofAttribute++;\r\n                }\r\n\r\n            }\r\n        }\r\n        //uniform map trans\r\n        let uniformMap = shaderObj.uniformMap;\r\n        if (uniformMap) {\r\n            let defaultmap: any = {};\r\n            shaderObj.defaultValue = defaultmap;\r\n\r\n            let newUniformMap: any = {};\r\n            shaderObj.uniformMap = newUniformMap;\r\n\r\n            for (let k in uniformMap) {\r\n                let entry = uniformMap[k];\r\n                if (entry.serializable === false)\r\n                    continue;\r\n\r\n                let dataType = ShaderParser.getShaderDataType(entry.type);\r\n                if (dataType == null) {\r\n                    console.warn(`${shaderObj.name}: unkown uniform type '${entry.type}'`);\r\n                    continue;\r\n                }\r\n\r\n                if (entry.default != null)\r\n                    defaultmap[k] = ShaderParser.getDefaultData(dataType, entry.default);\r\n\r\n                if (entry.block) {\r\n                    let block: Record<string, ShaderDataType> = newUniformMap[entry.block];\r\n                    if (!block)\r\n                        newUniformMap[entry.block] = block = {};\r\n                    block[k] = dataType;\r\n                }\r\n                else\r\n                    newUniformMap[k] = dataType;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * trans string to ShaderDataType\r\n     * @param value \r\n     * @returns \r\n     */\r\n    static getShaderDataType(value: string): ShaderDataType {\r\n        return shaderDataOBJ[value];\r\n    }\r\n\r\n    /**\r\n     * set ShaderData Value\r\n     * @param type \r\n     * @param data \r\n     * @returns \r\n     */\r\n    static getDefaultData(type: ShaderDataType, data: any) {\r\n        switch (type) {\r\n            case ShaderDataType.Int:\r\n            case ShaderDataType.Float:\r\n            case ShaderDataType.Bool:\r\n                return data;\r\n            case ShaderDataType.Vector2:\r\n                return new Vector2(data[0], data[1]);\r\n            case ShaderDataType.Vector3:\r\n                return new Vector3(data[0], data[1], data[2]);\r\n            case ShaderDataType.Vector4:\r\n                return new Vector4(data[0], data[1], data[2], data[3]);\r\n            case ShaderDataType.Color:\r\n                return new Color(data[0], data[1], data[2], data[3]);\r\n            case ShaderDataType.Matrix4x4:\r\n                let mat = new Matrix4x4();\r\n                mat.cloneByArray(data);\r\n                return mat;\r\n            case ShaderDataType.Matrix3x3:\r\n                let mat3 = new Matrix3x3();\r\n                mat3.cloneByArray(data);\r\n                return mat3;\r\n            case ShaderDataType.Texture2D:\r\n                let tex = null;\r\n                if (data == \"white\")\r\n                    tex = Texture2D.whiteTexture;\r\n                else if (data == \"black\")\r\n                    tex = Texture2D.blackTexture;\r\n                else if (data == \"gray\")\r\n                    tex = Texture2D.grayTexture;\r\n                else if (data == \"normal\")\r\n                    tex = Texture2D.normalTexture;\r\n                return tex;\r\n            case ShaderDataType.TextureCube:\r\n                let texcube = TextureCube.grayTexture;\r\n                if (data == \"white\")\r\n                    texcube = TextureCube.whiteTexture;\r\n                else if (data == \"black\")\r\n                    texcube = TextureCube.blackTexture;\r\n                else if (data == \"gray\")\r\n                    texcube = TextureCube.grayTexture;\r\n                return texcube;\r\n        }\r\n    }\r\n}","\r\nimport { IShaderpassStructor, Shader3D } from \"../RenderEngine/RenderShader/Shader3D\";\r\nimport { SubShader } from \"../RenderEngine/RenderShader/SubShader\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { ShaderCompile } from \"../webgl/utils/ShaderCompile\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ShaderParser } from \"./ShaderParser\";\r\n\r\nclass ShaderLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let url = task.url;\r\n        if (task.ext === \"bps\")\r\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"shader\");\r\n\r\n        return task.loader.fetch(url, \"text\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let obj = ShaderParser.getShaderBlock(data);\r\n            let cgmap = ShaderParser.getCGBlock(data);\r\n            ShaderParser.bindCG(obj, cgmap);\r\n\r\n            if (!obj.name || !obj.uniformMap)\r\n                return null;\r\n\r\n            let basePath = URL.getPath(task.url);\r\n            let passArray: IShaderpassStructor[] = obj.shaderPass;\r\n            return Promise.all(passArray.map(pass => ShaderCompile.compileAsync(pass.VS, pass.FS, basePath))).then(compiledObjs => {\r\n                if (compiledObjs.findIndex(obj => obj == null) != -1) {\r\n                    Loader.warn(\"some pass null \" + task.url);\r\n                    return null;\r\n                }\r\n\r\n                let shader = Shader3D.add(obj.name, obj.enableInstancing, obj.supportReflectionProbe);\r\n                shader._surportVolumetricGI = obj.surportVolumetricGI;\r\n                let subshader = new SubShader(obj.attributeMap ? obj.attributeMap : SubShader.DefaultAttributeMap, obj.uniformMap, obj.defaultValue);\r\n                shader.addSubShader(subshader);\r\n\r\n                for (let i in passArray) {\r\n                    let pass = subshader._addShaderPass(compiledObjs[i], passArray[i].pipeline);\r\n                    pass.statefirst = passArray[i].statefirst ?? false;\r\n                    ShaderCompile.getRenderState(passArray[i].renderState, pass.renderState);\r\n                }\r\n                return shader;\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"shader\", \"bps\"], ShaderLoader);","import { IResourceLoader, ILoadTask, Loader } from \"../../net/Loader\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\nclass WebAudioLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return WebAudioSound.ctx.decodeAudioData(data);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mp3\", \"wav\", \"ogg\"], WebAudioLoader, Loader.SOUND);","import { ClassUtils } from \"./utils/ClassUtils\";\r\nimport { Component } from \"./components/Component\";\r\nimport { Animation } from \"./display/Animation\";\r\nimport { AnimationBase } from \"./display/AnimationBase\";\r\nimport { BitmapFont } from \"./display/BitmapFont\";\r\nimport { EffectAnimation } from \"./display/EffectAnimation\";\r\nimport { FrameAnimation } from \"./display/FrameAnimation\";\r\nimport { Input } from \"./display/Input\";\r\nimport { Node } from \"./display/Node\";\r\nimport { Scene } from \"./display/Scene\";\r\nimport { Sprite } from \"./display/Sprite\";\r\nimport { Stage } from \"./display/Stage\";\r\nimport { Text } from \"./display/Text\";\r\nimport { BlurFilter } from \"./filters/BlurFilter\";\r\nimport { ColorFilter } from \"./filters/ColorFilter\";\r\nimport { GlowFilter } from \"./filters/GlowFilter\";\r\nimport { Point } from \"./maths/Point\";\r\nimport { Rectangle } from \"./maths/Rectangle\";\r\nimport { SoundNode } from \"./media/SoundNode\";\r\nimport { VideoNode } from \"./media/VideoNode\";\r\nimport { Texture } from \"./resource/Texture\";\r\nimport { Texture2D } from \"./resource/Texture2D\";\r\nimport { Animator2D } from \"./components/Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./components/AnimatorControllerLayer2D\";\r\nimport { AnimatorState2D } from \"./components/AnimatorState2D\";\r\nimport { AnimationClip2D } from \"./components/AnimationClip2D\";\r\nimport { Animation2DParm } from \"./components/Animation2DParm\";\r\nimport { Animation2DCondition } from \"./components/Animation2DCondition\";\r\nimport { Prefab } from \"./resource/HierarchyResource\";\r\nimport { Widget } from \"./components/Widget\";\r\nimport { AnimatorController2D } from \"./components/AnimatorController2D\";\r\nimport { Vector2 } from \"./maths/Vector2\";\r\nimport { Vector3 } from \"./maths/Vector3\";\r\nimport { Vector4 } from \"./maths/Vector4\";\r\nimport { Quaternion } from \"./maths/Quaternion\";\r\nimport { Color } from \"./maths/Color\";\r\nimport { Script } from \"./components/Script\";\r\nimport { Matrix } from \"./maths/Matrix\";\r\nimport { Matrix3x3 } from \"./maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"./maths/Matrix4x4\";\r\n\r\nimport \"./loaders/TextResourceLoader\";\r\nimport \"./loaders/AtlasLoader\";\r\nimport \"./loaders/HierarchyLoader\";\r\nimport \"./loaders/TextureLoader\";\r\nimport \"./loaders/AnimationClip2DLoader\";\r\nimport \"./loaders/AnimationController2DLoader\";\r\nimport \"./loaders/NullLoader\";\r\nimport \"./loaders/BitmapFontLoader\";\r\nimport \"./loaders/TTFFontLoader\";\r\nimport \"./loaders/MaterialLoader\";\r\nimport \"./loaders/ShaderLoader\";\r\nimport \"./media/webaudio/WebAudioLoader\";\r\n\r\nlet c = ClassUtils.regClass;\r\n\r\nc(\"Record\", Object);\r\nc(\"Node\", Node);\r\nc(\"Sprite\", Sprite);\r\nc(\"Widget\", Widget);\r\nc(\"Text\", Text);\r\nc(\"Input\", Input);\r\nc(\"AnimationBase\", AnimationBase);\r\nc(\"Animation\", Animation);\r\nc(\"FrameAnimation\", FrameAnimation);\r\nc(\"EffectAnimation\", EffectAnimation);\r\nc(\"SoundNode\", SoundNode);\r\nc(\"VideoNode\", VideoNode);\r\n\r\nc(\"Scene\", Scene);\r\nc(\"Stage\", Stage);\r\nc(\"Component\", Component);\r\nc(\"Script\", Script);\r\nc(\"BitmapFont\", BitmapFont);\r\nc(\"BlurFilter\", BlurFilter);\r\nc(\"ColorFilter\", ColorFilter);\r\nc(\"GlowFilter\", GlowFilter);\r\nc(\"Point\", Point);\r\nc(\"Rectangle\", Rectangle);\r\nc(\"Texture\", Texture);\r\nc(\"Texture2D\", Texture2D);\r\n\r\nc(\"Prefab\", Prefab);\r\n\r\nc(\"Animator2D\", Animator2D);\r\nc(\"AnimatorControllerLayer2D\", AnimatorControllerLayer2D);\r\nc(\"AnimatorState2D\", AnimatorState2D);\r\nc(\"AnimationClip2D\", AnimationClip2D);\r\nc(\"AnimatorController2D\", AnimatorController2D);\r\nc(\"Animation2DParm\", Animation2DParm);\r\nc(\"Animation2DCondition\", Animation2DCondition);\r\n\r\nc(\"Vector2\", Vector2);\r\nc(\"Vector3\", Vector3);\r\nc(\"Vector4\", Vector4);\r\nc(\"Quaternion\", Quaternion);\r\nc(\"Color\", Color);\r\nc(\"Matrix\", Matrix);\r\nc(\"Matrix3x3\", Matrix3x3);\r\nc(\"Matrix4x4\", Matrix4x4);","/**\r\n * <p> <code>LocalStorage</code> 类用于没有时间限制的数据存储。</p>\r\n */\r\nexport class LocalStorage {\r\n\r\n    /**@ 基础类*/\r\n    static _baseClass: any;\r\n    /**\r\n     *  数据列表。\r\n     */\r\n    static items: any;\r\n    /**\r\n     * 表示是否支持  <code>LocalStorage</code>。\r\n     */\r\n    static support: boolean = false;\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        if (!LocalStorage._baseClass) {\r\n            LocalStorage._baseClass = Storage;\r\n            Storage.init();\r\n        }\r\n        LocalStorage.items = LocalStorage._baseClass.items;\r\n        LocalStorage.support = LocalStorage._baseClass.support;\r\n        return LocalStorage.support;\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名和键值，字符串类型。\r\n     * @param key 键名。\r\n     * @param value 键值。\r\n     */\r\n    static setItem(key: string, value: string): void {\r\n        LocalStorage._baseClass.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名的值。\r\n     * @param key 键名。\r\n     * @return 字符串型值。\r\n     */\r\n    static getItem(key: string): string {\r\n        return LocalStorage._baseClass.getItem(key);\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名及其对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n     */\r\n    static setJSON(key: string, value: any): void {\r\n        LocalStorage._baseClass.setJSON(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @return <code>Object</code> 类型值\r\n     */\r\n    static getJSON(key: string): any {\r\n        return LocalStorage._baseClass.getJSON(key);\r\n    }\r\n\r\n    /**\r\n     * 删除指定键名的信息。\r\n     * @param key 键名。\r\n     */\r\n    static removeItem(key: string): void {\r\n        LocalStorage._baseClass.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * 清除本地存储信息。\r\n     */\r\n    static clear(): void {\r\n        LocalStorage._baseClass.clear();\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass Storage {\r\n\r\n\t/**\r\n\t *  数据列表。\r\n\t */\r\n    static items: any;\r\n\t/**\r\n\t * 表示是否支持  <code>LocalStorage</code>。\r\n\t */\r\n    static support: boolean = false;\r\n\r\n    static init(): void {\r\n        try { Storage.support = true; Storage.items = window.localStorage; Storage.setItem('laya', '1'); Storage.removeItem('laya'); } catch (e) { Storage.support = false; } if (!Storage.support) console.log('LocalStorage is not supprot or browser is private mode.');\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和键值，字符串类型。\r\n\t * @param key 键名。\r\n\t * @param value 键值。\r\n\t */\r\n    static setItem(key: string, value: string): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, value);\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的值。\r\n\t * @param key 键名。\r\n\t * @return 字符串型值。\r\n\t */\r\n    static getItem(key: string): string {\r\n        return Storage.support ? Storage.items.getItem(key) : null;\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和它的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n\t */\r\n    static setJSON(key: string, value: any): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, JSON.stringify(value));\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @return <code>Object</code> 类型值\r\n\t */\r\n    static getJSON(key: string): any {\r\n        try{\r\n            let obj = JSON.parse(Storage.support ? Storage.items.getItem(key) : null);\r\n            return obj;\r\n        }catch(err){\r\n            return Storage.items.getItem(key);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除指定键名的信息。\r\n\t * @param key 键名。\r\n\t */\r\n    static removeItem(key: string): void {\r\n        Storage.support && Storage.items.removeItem(key);\r\n    }\r\n\r\n\t/**\r\n\t * 清除本地存储信息。\r\n\t */\r\n    static clear(): void {\r\n        Storage.support && Storage.items.clear();\r\n    }\r\n\r\n}\r\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\r\n\r\nexport class PrimitiveSV extends Value2D {\r\n    constructor() {\r\n        super(RenderSpriteData.Primitive);\r\n        this._defaultShader = Shader3D.find(\"Sprite2DPrimitive\");\r\n    }\r\n}\r\n\r\n","import { RenderSpriteData, Value2D } from \"./Value2D\";\r\nimport { Shader3D } from \"../../../../RenderEngine/RenderShader/Shader3D\";\r\nimport { Vector2 } from \"../../../../maths/Vector2\";\r\nimport { Vector4 } from \"../../../../maths/Vector4\";\r\nimport { Matrix4x4 } from \"../../../../maths/Matrix4x4\";\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\";\r\n\r\nexport class TextureSV extends Value2D {\r\n    strength: number = 0;//TODO  delete？？\r\n\r\n    private _blurInfo: Vector2 = new Vector2();//TODO  shader中没有用\r\n    public get blurInfo(): Vector2 {\r\n        return this.defines.getVector2(ShaderDefines2D.UNIFORM_BLURINFO);\r\n    }\r\n    public set blurInfo(value: Vector2) {\r\n        this.defines.setVector2(ShaderDefines2D.UNIFORM_BLURINFO, value);\r\n    }\r\n\r\n    private _u_blurInfo1: Vector4 = new Vector4();\r\n    public get u_blurInfo1(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_BLURINFO1);\r\n    }\r\n    public set u_blurInfo1(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_BLURINFO1, value);\r\n    }\r\n\r\n    private _u_blurInfo2: Vector4 = new Vector4();\r\n    public get u_blurInfo2(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_BLURINFO2);\r\n    }\r\n    public set u_blurInfo2(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_BLURINFO2, value);\r\n    }\r\n\r\n    private _u_TexRange: Vector4 = new Vector4();\r\n    public get u_TexRange(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_TEXRANGE)\r\n    }\r\n    public set u_TexRange(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_TEXRANGE, value);\r\n    }\r\n    private _colorMat: Matrix4x4 = new Matrix4x4();\r\n    public get colorMat(): Matrix4x4 {\r\n        return this.defines.getMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT);\r\n    }\r\n    public set colorMat(value: Matrix4x4) {\r\n        this.defines.setMatrix4x4(ShaderDefines2D.UNIFORM_COLORMAT, value);\r\n    }\r\n\r\n    private _colorAlpha: Vector4 = new Vector4();\r\n    public get colorAlpha(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_COLORALPHA);\r\n    }\r\n    public set colorAlpha(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_COLORALPHA, value);\r\n    }\r\n\r\n    private _strength_sig2_2sig2_gauss1: Vector4 = new Vector4();\r\n    public get strength_sig2_2sig2_gauss1(): Vector4 {\r\n        return this.defines.getVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1);\r\n    }\r\n    public set strength_sig2_2sig2_gauss1(value: Vector4) {\r\n        this.defines.setVector(ShaderDefines2D.UNIFORM_STRENGTH_SIG2_2SIG2_GAUSS1, value);\r\n    }\r\n\r\n    constructor() {\r\n        super(RenderSpriteData.Texture2D);\r\n        this._defaultShader = Shader3D.find(\"Sprite2DTexture\");\r\n        this.blurInfo = this._blurInfo;\r\n        this.u_blurInfo1 = this._u_blurInfo1;\r\n        this.u_blurInfo2 = this._u_blurInfo2;\r\n        this.u_TexRange = this._u_TexRange;\r\n        this.colorMat = this._colorMat;\r\n        this.colorAlpha = this._colorAlpha;\r\n        this.strength_sig2_2sig2_gauss1 = this._strength_sig2_2sig2_gauss1;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    clear(): void {\r\n        this.texture = null;\r\n        //this.shader = null;\r\n        this.defines._defineDatas.clear();\r\n\r\n    }\r\n}\r\n","import { Browser } from \"./Browser\";\r\n/**\r\n * <code>Mouse</code> 类用于控制鼠标光标样式。\r\n */\r\nexport class Mouse {\r\n    /**@private */\r\n    private static _style: any;\r\n    /**@private */\r\n    private static _preCursor: string;\r\n\r\n    /**\r\n     * 设置鼠标样式\r\n     * @param cursorStr\r\n     * 例如auto move no-drop col-resize\r\n     * all-scroll pointer not-allowed row-resize\r\n     * crosshair progress e-resize ne-resize\r\n     * default text n-resize nw-resize\r\n     * help vertical-text s-resize se-resize\r\n     * inherit wait w-resize sw-resize\r\n     */\r\n    static set cursor(cursorStr: string) {\r\n        Mouse._style.cursor = cursorStr;\r\n    }\r\n\r\n    static get cursor(): string {\r\n        return Mouse._style.cursor;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        Mouse._style = Browser.document.body.style;\r\n    }\r\n\r\n    /**\r\n     * 隐藏鼠标\r\n     */\r\n    static hide(): void {\r\n        if (Mouse.cursor != \"none\") {\r\n            Mouse._preCursor = Mouse.cursor;\r\n            Mouse.cursor = \"none\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示鼠标\r\n     */\r\n    static show(): void {\r\n        if (Mouse.cursor == \"none\") {\r\n            if (Mouse._preCursor) {\r\n                Mouse.cursor = Mouse._preCursor;\r\n            } else {\r\n                Mouse.cursor = \"auto\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Mesh2D } from \"./Mesh2D\";\r\nimport { RenderParams } from \"../../RenderEngine/RenderEnum/RenderParams\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n/**\r\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\r\n */\r\nexport class MeshParticle2D extends Mesh2D {\r\n    static const_stride: number = 116;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n    static vertexDeclaration: VertexDeclaration = null;\r\n    static __init__(): void {\r\n        const glfloat = LayaGL.renderEngine.getParams(RenderParams.FLOAT);\r\n        MeshParticle2D._fixattriInfo = [\r\n            glfloat, 4, 0,\t//CornerTextureCoordinate\r\n            glfloat, 3, 16,//pos\r\n            glfloat, 3, 28,//vel\r\n            glfloat, 4, 40,//start color\r\n            glfloat, 4, 56,//end color\r\n            glfloat, 3, 72,//size,rot\r\n            glfloat, 2, 84,//radius\r\n            glfloat, 4, 92,//radian\r\n            glfloat, 1, 108,//AgeAddScale\r\n            glfloat, 1, 112];\r\n\r\n\r\n    }\r\n\r\n    //TODO:coverage\r\n    constructor(maxNum: number) {\r\n        super(MeshParticle2D.const_stride, maxNum * 4 * MeshParticle2D.const_stride, 4);\t\t//ib 先4\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshParticle2D._fixattriInfo);\r\n        this.createQuadIB(maxNum);\r\n        this._quadNum = maxNum;\r\n\r\n        if (!MeshParticle2D.vertexDeclaration) {\r\n            MeshParticle2D.vertexDeclaration = new VertexDeclaration(116, [\r\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\r\n                new VertexElement(16, VertexElementFormat.Vector3, 1),\r\n                new VertexElement(28, VertexElementFormat.Vector3, 2),\r\n                new VertexElement(40, VertexElementFormat.Vector4, 3),\r\n                new VertexElement(56, VertexElementFormat.Vector4, 4),\r\n                new VertexElement(72, VertexElementFormat.Vector3, 5),\r\n                new VertexElement(84, VertexElementFormat.Vector2, 6),\r\n                new VertexElement(92, VertexElementFormat.Vector4, 7),\r\n                new VertexElement(108, VertexElementFormat.Single, 8),\r\n                new VertexElement(112, VertexElementFormat.Single, 9)\r\n            ]);\r\n        }\r\n\r\n        this._vb.vertexDeclaration = MeshParticle2D.vertexDeclaration;\r\n    }\r\n\r\n    setMaxParticleNum(maxNum: number): void {\r\n        this._vb.buffer2D._resizeBuffer(maxNum * 4 * MeshParticle2D.const_stride, false);\r\n        this.createQuadIB(maxNum);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    //TODO:coverage\r\n    static getAMesh(maxNum: number): MeshParticle2D {\r\n        //console.log('getmesh');\r\n        if (MeshParticle2D._POOL.length) {\r\n            var ret: MeshParticle2D = MeshParticle2D._POOL.pop();\r\n            ret.setMaxParticleNum(maxNum);\r\n            return ret;\r\n        }\r\n        return new MeshParticle2D(maxNum);\r\n    }\r\n\r\n    /**\r\n     * 把本对象放到回收池中，以便getMesh能用。\r\n     * @override\r\n     */\r\n    //TODO:coverage\r\n    releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshParticle2D._POOL.push(this);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._vb.deleteBuffer();\r\n        //ib用deletebuffer么\r\n    }\r\n}\r\n\r\n","﻿import { ILaya } from \"./ILaya\";\r\nimport { Input } from \"./laya/display/Input\";\r\nimport { Sprite } from \"./laya/display/Sprite\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\nimport { InputManager } from \"./laya/events/InputManager\";\r\nimport { SoundManager } from \"./laya/media/SoundManager\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { LocalStorage } from \"./laya/net/LocalStorage\";\r\nimport { Render } from \"./laya/renders/Render\";\r\nimport { RenderSprite } from \"./laya/renders/RenderSprite\";\r\nimport { Context } from \"./laya/resource/Context\";\r\nimport { HTMLCanvas } from \"./laya/resource/HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./laya/resource/RenderTexture2D\";\r\nimport { Texture } from \"./laya/resource/Texture\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { CacheManger } from \"./laya/utils/CacheManger\";\r\nimport { ColorUtils } from \"./laya/utils/ColorUtils\";\r\nimport { Timer } from \"./laya/utils/Timer\";\r\nimport { PrimitiveSV } from \"./laya/webgl/shader/d2/value/PrimitiveSV\";\r\nimport { TextureSV } from \"./laya/webgl/shader/d2/value/TextureSV\";\r\nimport { RenderSpriteData, Value2D } from \"./laya/webgl/shader/d2/value/Value2D\";\r\nimport { RenderState2D } from \"./laya/webgl/utils/RenderState2D\";\r\nimport { WebGL } from \"./laya/webgl/WebGL\";\r\nimport { Mouse } from \"./laya/utils/Mouse\";\r\nimport { MeshVG } from \"./laya/webgl/utils/MeshVG\";\r\nimport { MeshParticle2D } from \"./laya/webgl/utils/MeshParticle2D\";\r\nimport { MeshQuadTexture } from \"./laya/webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"./laya/webgl/utils/MeshTexture\";\r\nimport { WeakObject } from \"./laya/utils/WeakObject\";\r\nimport { RenderStateContext } from \"./laya/RenderEngine/RenderStateContext\";\r\nimport { RenderClearFlag } from \"./laya/RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { IStageConfig, LayaEnv } from \"./LayaEnv\";\r\nimport { Color } from \"./laya/maths/Color\";\r\nimport { URL } from \"./laya/net/URL\";\r\nimport { RunDriver } from \"./laya/utils/RunDriver\";\r\nimport { Config } from \"./Config\";\r\nimport { Shader3D } from \"./laya/RenderEngine/RenderShader/Shader3D\";\r\nimport { LayaGL } from \"./laya/layagl/LayaGL\";\r\nimport { Material } from \"./laya/resource/Material\";\r\n\r\n/**\r\n * <code>Laya</code> 是全局对象的引用入口集。\r\n * Laya类引用了一些常用的全局对象，比如Laya.stage：舞台，Laya.timer：时间管理器，Laya.loader：加载管理器，使用时注意大小写。\r\n */\r\nexport class Laya {\r\n    /** 舞台对象的引用。*/\r\n    static stage: Stage = null;\r\n\r\n    /**@private 系统时钟管理器，引擎内部使用*/\r\n    static systemTimer: Timer = null;\r\n    /**@private 组件的物理时钟管理器*/\r\n    static physicsTimer: Timer = null;\r\n    /**游戏主时针，同时也是管理场景，动画，缓动等效果时钟，通过控制本时针缩放，达到快进慢播效果*/\r\n    static timer: Timer = null;\r\n    /** 加载管理器的引用。*/\r\n    static loader: Loader = null;\r\n\r\n    /**@private Render 类的引用。*/\r\n    static render: Render;\r\n\r\n    private static _inited = false;\r\n    private static _initCallbacks: Array<() => void | Promise<void>> = [];\r\n    private static _beforeInitCallbacks: Array<(stageConfig: IStageConfig) => void | Promise<void>> = [];\r\n    private static _afterInitCallbacks: Array<() => void | Promise<void>> = [];\r\n\r\n    /**\r\n     * 初始化引擎。使用引擎需要先初始化引擎。\r\n     */\r\n    static init(stageConfig?: IStageConfig): Promise<void>;\r\n    /**\r\n     * 初始化引擎。使用引擎需要先初始化引擎。\r\n     * @param\twidth 初始化的游戏窗口宽度，又称设计宽度。\r\n     * @param\theight 初始化的游戏窗口高度，又称设计高度。\r\n     */\r\n    static init(width: number, height: number): Promise<void>;\r\n    static init(...args: any[]): Promise<void> {\r\n        if (Laya._inited)\r\n            return Promise.resolve();\r\n        Laya._inited = true;\r\n\r\n        if (!WebGL.enable())\r\n            throw new Error(\"Must support webGL!\");\r\n\r\n        let stageConfig: IStageConfig;\r\n        if (typeof (args[0]) === \"number\") {\r\n            stageConfig = {\r\n                designWidth: args[0],\r\n                designHeight: args[1]\r\n            };\r\n        }\r\n        else\r\n            stageConfig = args[0];\r\n\r\n        Browser.__init__();\r\n        URL.__init__();\r\n\r\n        let laya3D = (<any>window)[\"Laya3D\"];\r\n        if (laya3D) {\r\n            RunDriver.changeWebGLSize = laya3D._changeWebGLSize;\r\n            Render.is3DMode = true;\r\n        }\r\n\r\n        // 创建主画布\r\n        //这个其实在Render中感觉更合理，但是runtime要求第一个canvas是主画布，所以必须在下面的那个离线画布之前\r\n        let mainCanv = Browser.mainCanvas = new HTMLCanvas(true);\r\n        //Render._mainCanvas = mainCanv;\r\n        Laya._setStyleInfo(mainCanv);\r\n        if (!Browser.onKGMiniGame && !Browser.onAlipayMiniGame && !Browser.onTBMiniGame) {\r\n            Browser.container.appendChild(mainCanv.source);//xiaosong add\r\n        }\r\n\r\n        Browser.canvas = new HTMLCanvas(true);\r\n        Browser.context = <CanvasRenderingContext2D>(Browser.canvas.getContext('2d') as any);\r\n        Browser.supportWebAudio = SoundManager.__init__();\r\n        Browser.supportLocalStorage = LocalStorage.__init__();\r\n\r\n        systemTimer = new Timer(false);\r\n        physicsTimer = new Timer(false);\r\n        timer = new Timer(false);\r\n        loader = new Loader();\r\n\r\n        Laya.systemTimer = Timer.gSysTimer = systemTimer;\r\n        Laya.timer = timer;\r\n        Laya.physicsTimer = physicsTimer;\r\n        Laya.loader = loader;\r\n\r\n        ILaya.systemTimer = systemTimer;\r\n        ILaya.physicsTimer = physicsTimer;\r\n        ILaya.timer = timer;\r\n        ILaya.loader = loader;\r\n\r\n        WeakObject.__init__();\r\n        Mouse.__init__();\r\n\r\n        if (LayaEnv.isConch) {\r\n            Laya.enableNative();\r\n        }\r\n        CacheManger.beginCheck();\r\n\r\n        let steps: Array<() => any> = [];\r\n\r\n        if (LayaEnv.beforeInit)\r\n            steps.push(() => LayaEnv.beforeInit(stageConfig));\r\n        steps.push(() => Promise.all(Laya._beforeInitCallbacks.map(func => func(stageConfig))));\r\n\r\n        steps.push(() => LayaGL.renderOBJCreate.createEngine(null, Browser.mainCanvas));\r\n        steps.push(() => Laya.initRender2D(stageConfig));\r\n        if (laya3D)\r\n            steps.push(() => laya3D.__init__());\r\n        steps.push(() => Promise.all(Laya._initCallbacks.map(func => func())));\r\n\r\n        steps.push(() => Promise.all(Laya._afterInitCallbacks.map(func => func())));\r\n\r\n        if (LayaEnv.afterInit)\r\n            steps.push(() => LayaEnv.afterInit());\r\n\r\n        let p = Promise.resolve();\r\n        for (let step of steps)\r\n            p = p.then(step);\r\n\r\n        return p;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 适配淘宝小游戏\r\n     * @param mainCanv \r\n     */\r\n    static _setStyleInfo(mainCanv: HTMLCanvas): void {\r\n        let style: any = mainCanv.source.style;\r\n        style.position = 'absolute';\r\n        style.top = style.left = \"0px\";\r\n        style.background = \"#000000\";\r\n    }\r\n\r\n    static initRender2D(stageConfig: IStageConfig) {\r\n        stage = ((<any>window)).stage = ILaya.stage = Laya.stage = new Stage();\r\n\r\n        Shader3D.init();\r\n        MeshQuadTexture.__int__();\r\n        MeshVG.__init__();\r\n        MeshTexture.__init__();\r\n\r\n        Laya.render = Laya.createRender();\r\n        render = Laya.render;\r\n        stage.size(stageConfig.designWidth, stageConfig.designHeight);\r\n        if (stageConfig.scaleMode)\r\n            stage.scaleMode = stageConfig.scaleMode;\r\n        if (stageConfig.screenMode)\r\n            stage.screenMode = stageConfig.screenMode;\r\n        if (stageConfig.alignV)\r\n            stage.alignV = stageConfig.alignV;\r\n        if (stageConfig.alignH)\r\n            stage.alignH = stageConfig.alignH;\r\n        if (Config.isAlpha)\r\n            stage.bgColor = null;\r\n        else if (stageConfig.backgroundColor)\r\n            stage.bgColor = stageConfig.backgroundColor;\r\n\r\n        if (LayaEnv.isConch && (window as any).conch.setGlobalRepaint) {\r\n            (window as any).conch.setGlobalRepaint(stage.setGlobalRepaint.bind(stage));\r\n        }\r\n\r\n        RenderStateContext.__init__();\r\n        MeshParticle2D.__init__();\r\n        RenderSprite.__init__();\r\n        Material.__initDefine__();\r\n        InputManager.__init__(stage, Render.canvas);\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            Input.isAppUseNewInput = true;\r\n        }\r\n        Input.__init__();\r\n        SoundManager.autoStopMusic = true;\r\n        //Init internal 2D Value2D\r\n        Value2D._initone(RenderSpriteData.Texture2D, TextureSV);\r\n        Value2D._initone(RenderSpriteData.Primitive, PrimitiveSV);\r\n    }\r\n\r\n    /**\r\n     * hook function\r\n     * @internal\r\n     * @returns \r\n     */\r\n    static createRender(): Render {\r\n        return new Render(0, 0, Browser.mainCanvas);\r\n    }\r\n\r\n    /**\r\n     * 表示是否捕获全局错误并弹出提示。默认为false。\r\n     * 适用于移动设备等不方便调试的时候，设置为true后，如有未知错误，可以弹窗抛出详细错误堆栈。\r\n     */\r\n    static alertGlobalError(value: boolean) {\r\n        var erralert: number = 0;\r\n        if (value) {\r\n            Browser.window.onerror = function (msg: string, url: string, line: string, column: string, detail: any): void {\r\n                if (erralert++ < 5 && detail)\r\n                    this.alert(\"出错啦，请把此信息截图给研发商\\n\" + msg + \"\\n\" + detail.stack);\r\n            }\r\n        } else {\r\n            Browser.window.onerror = null;\r\n        }\r\n    }\r\n    /**@internal */\r\n    private static _evcode: string = \"eva\" + \"l\";\r\n\r\n    /**@internal */\r\n    static _runScript(script: string): any {\r\n        return Browser.window[Laya._evcode](script);\r\n    }\r\n\r\n    /**\r\n     * 开启DebugPanel\r\n     * @param\tdebugJsPath laya.debugtool.js文件路径\r\n     */\r\n    static enableDebugPanel(debugJsPath: string = \"libs/laya.debugtool.js\"): void {\r\n        if (!(window as any)['Laya'][\"DebugPanel\"]) {\r\n            var script: any = Browser.createElement(\"script\");\r\n            script.onload = function (): void {\r\n                (window as any)['Laya'][\"DebugPanel\"].enable();\r\n            }\r\n            script.src = debugJsPath;\r\n            Browser.document.body.appendChild(script);\r\n        } else {\r\n            (window as any)['Laya'][\"DebugPanel\"].enable();\r\n        }\r\n    }\r\n\r\n    private static isNativeRender_enable: boolean = false;\r\n\r\n    /**@private */\r\n    private static enableNative(): void {\r\n        if (Laya.isNativeRender_enable)\r\n            return;\r\n        Laya.isNativeRender_enable = true;\r\n        RenderState2D.width = Browser.window.innerWidth;\r\n        RenderState2D.height = Browser.window.innerHeight;\r\n\r\n        Stage.clear = function (color: string): void {\r\n            Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\r\n            var c: any[] = ColorUtils.create(color).arrColor;\r\n\r\n            LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, new Color(c[0], c[1], c[2], c[3]), 1);\r\n            // if (c) gl.clearColor(c[0], c[1], c[2], c[3]);\r\n            // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\r\n            RenderState2D.clear();\r\n        }\r\n\r\n        Sprite.drawToCanvas = function (sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): any {\r\n            offsetX -= sprite.x;\r\n            offsetY -= sprite.y;\r\n            offsetX |= 0;\r\n            offsetY |= 0;\r\n            canvasWidth |= 0;\r\n            canvasHeight |= 0;\r\n\r\n            var canv: HTMLCanvas = new HTMLCanvas(false);\r\n            var ctx: Context = canv.getContext('2d') as Context;\r\n            canv.size(canvasWidth, canvasHeight);\r\n\r\n            ctx.asBitmap = true;\r\n            ctx._targets.start();\r\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n            ctx.flush();\r\n            ctx._targets.end();\r\n            ctx._targets.restore();\r\n            return canv;\r\n        }\r\n        //RenderTexture2D.prototype._uv = RenderTexture2D.flipyuv;\r\n        Object[\"defineProperty\"](RenderTexture2D.prototype, \"uv\", {\r\n            \"get\": function (): any {\r\n                return this._uv;\r\n            },\r\n            \"set\": function (v: any): void {\r\n                this._uv = v;\r\n            }\r\n        }\r\n        );\r\n        HTMLCanvas.prototype.getTexture = function (): Texture | RenderTexture2D {\r\n            if (!this._texture) {\r\n                // @ts-ignore\r\n                this._texture = this.context._targets;\r\n                //遗留的奇怪代码，先注释掉\r\n                // @ts-ignore\r\n                this._texture.uv = RenderTexture2D.flipyuv;\r\n                // @ts-ignore\r\n                this._texture.bitmap = this._texture;\r\n            }\r\n            return this._texture;\r\n        }\r\n    }\r\n    /**\r\n     * 引擎各个模块，例如物理，寻路等，如果有初始化逻辑可以在这里注册初始化函数。开发者一般不直接使用。\r\n     * @param callback 模块的初始化函数\r\n     */\r\n    static addInitCallback(callback: () => void | Promise<void>) {\r\n        Laya._initCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * 在引擎初始化前执行自定义逻辑。此时Stage尚未创建，因为可以修改stageConfig实现动态舞台配置。\r\n     * @param callback \r\n     */\r\n    static addBeforeInitCallback(callback: (stageConfig: IStageConfig) => void | Promise<void>): void {\r\n        Laya._beforeInitCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * 在引擎初始化后执行自定义逻辑\r\n     * @param callback \r\n     */\r\n    static addAfterInitCallback(callback: () => void | Promise<void>): void {\r\n        Laya._afterInitCallbacks.push(callback);\r\n    }\r\n}\r\n\r\nILaya.Laya = Laya;\r\nILaya.Loader = Loader;\r\nILaya.Context = Context;\r\nILaya.Browser = Browser;\r\n\r\n/**@internal */\r\nexport var init = Laya.init;\r\n/**@internal */\r\nexport var stage: Stage;\r\n/**@internal */\r\nexport var systemTimer: Timer;\r\n/**@internal */\r\nexport var physicsTimer: Timer;\r\n/**@internal */\r\nexport var timer: Timer;\r\n/**@internal */\r\nexport var loader: Loader;\r\n/**@internal */\r\nexport var render: Render;\r\n/**@internal */\r\nexport var alertGlobalError = Laya.alertGlobalError;\r\n/**@internal */\r\nexport var enableDebugPanel = Laya.enableDebugPanel;\r\n\r\nexport var addInitCallback = Laya.addInitCallback;\r\nexport var addBeforeInitCallback = Laya.addBeforeInitCallback;\r\nexport var addAfterInitCallback = Laya.addAfterInitCallback;","export enum DrawType {\r\n    DrawArray,\r\n    DrawArrayInstance,\r\n    DrawElement,\r\n    DrawElementInstance\r\n}","export enum RenderDrawMode{\r\n    TRIANGLES,\r\n    POINTS,\r\n    LINES\r\n}","export enum RenderIndexMode{\r\n    UNSIGNED_BYTE,\r\n    UNSIGNED_SHORT,\r\n    UNSIGNED_INT\r\n}","export enum TextureCompareMode {\r\n    None,\r\n    LEQUAL,\r\n    GEQUAL,\r\n    LESS,\r\n    GREATER,\r\n    EQUAL,\r\n    NOTEQUAL,\r\n    ALWAYS,\r\n    NEVER\r\n}","/**\r\n * 纹理解码格式。\r\n */\r\nexport enum TextureDecodeFormat {\r\n    /** 常规解码方式,直接采样纹理颜色。*/\r\n    Normal,\r\n    /** 按照RGBM方式解码并计算最终RGB颜色。 */\r\n    RGBM\r\n}","import { BlendEquationSeparate } from \"./RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"./RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"./RenderEnum/BlendType\";\r\n\r\nexport class BlendState {\r\n    static _blend_All_pool: any = {};\r\n    static _blend_seperate_pool: any = {};\r\n    static create(blendType: number, colorBlendhash: BlendComponent, alphaBlendComponent: BlendComponent) {\r\n\r\n    }\r\n    /** Whether to enable blend. */\r\n    blendType: BlendType = 0;\r\n    colorBlendComponent: BlendComponent;\r\n    alphaBlendComponent: BlendComponent;\r\n    constructor(blendType: number) {\r\n\r\n    }\r\n}\r\n\r\nexport class BlendComponent {\r\n    static _pool: any = {};\r\n    static getHash(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number): number {\r\n        return (blendOperationGLData) + (sourceBlendFactor << 3) + (destinationFactor << 7);\r\n    }\r\n    static getBlendComponent(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number) {\r\n        let index = BlendComponent.getHash(blendOperationGLData, sourceBlendFactor, destinationFactor);\r\n        if (!BlendComponent._pool[index])\r\n            BlendComponent._pool[index] = new BlendComponent(blendOperationGLData, sourceBlendFactor, destinationFactor, index);\r\n        return BlendComponent._pool[index];\r\n    }\r\n    _blendOperation: BlendEquationSeparate;\r\n    _blendOperationGLData: number;\r\n    _sourceBlendFactor: BlendFactor;\r\n    _sourceBlendFactorGLData: number;\r\n    _destinationFactor: BlendFactor;\r\n    _destinationFactorGLData: number;\r\n    _hashIndex = 0;\r\n    constructor(blendOperationGLData: BlendEquationSeparate, sourceBlendFactor: BlendFactor, destinationFactor: BlendFactor, hashindex: number) {\r\n        this._hashIndex = hashindex;\r\n        this._blendOperationGLData = blendOperationGLData;\r\n        this._sourceBlendFactor = sourceBlendFactor;\r\n        this._destinationFactor = destinationFactor;\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { ShaderDataType } from \"./RenderShader/ShaderData\";\r\n\r\nexport type UniformProperty = { id: number, propertyName: string, uniformtype?: ShaderDataType }\r\nexport type UniformData = {\r\n\tblock?: Object,\r\n\tpropertyName: string,\r\n\tuniformtype?: ShaderDataType,\r\n\tblockProperty?: UniformProperty[]\r\n};\r\n\r\nexport class CommandUniformMap {\r\n\r\n\t/**@internal */\r\n\t_idata: Record<number, UniformData> = {};\r\n\t_stateName: string;\r\n\r\n\tconstructor(stateName: string) {\r\n\t\tthis._stateName = stateName;\r\n\t}\r\n\r\n\thasPtrID(propertyID: number): boolean {\r\n\t\treturn !!(this._idata[propertyID] != null);\r\n\t}\r\n\r\n\tgetMap(): Record<number, UniformData> {\r\n\t\treturn this._idata;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个Uniform参数\r\n\t * @internal\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderUniform(propertyID: number, propertyKey: string, uniformtype: ShaderDataType, block: string = null): void {\r\n\t\tthis._idata[propertyID] = { uniformtype: uniformtype, propertyName: propertyKey, block: block };\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个Uniform\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderBlockUniform(propertyID: number, blockname: string, blockProperty: UniformProperty[]): void {\r\n\t\tthis._idata[propertyID] = { propertyName: blockname, blockProperty: blockProperty }\r\n\t\tblockProperty.forEach(element => {\r\n\t\t\tthis.addShaderUniform(element.id, element.propertyName, element.uniformtype, blockname);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n}","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderStateType } from \"./RenderEnum/RenderStateType\";\r\n\r\n/**\r\n * 渲染状态设置命令流\r\n */\r\nexport class RenderStateCommand{\r\n    cmdArray:Map<RenderStateType,any> = new Map();\r\n    constructor(){\r\n\r\n    }\r\n    addCMD(renderstate:RenderStateType,value:number|boolean|Array<number>){\r\n        this.cmdArray.set(renderstate,value);\r\n    }\r\n\r\n    applyCMD(){\r\n        LayaGL.renderEngine.applyRenderStateCMD(this);\r\n    }\r\n\r\n    clear(){\r\n        this.cmdArray.clear();\r\n    }\r\n}","import { Handler } from \"../utils/Handler\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Component } from \"../components/Component\";\r\n\r\n/**\r\n * 效果插件基类，基于对象池管理\r\n */\r\nexport class EffectBase extends Component {\r\n    /**动画持续时间，单位为毫秒*/\r\n    duration: number = 1000;\r\n    /**动画延迟时间，单位为毫秒*/\r\n    delay: number = 0;\r\n    /**重复次数，默认为播放一次*/\r\n    repeat: number = 0;\r\n    /**缓动类型，如果为空，则默认为匀速播放*/\r\n    ease: string;\r\n    /**触发事件，如果为空，则创建时触发*/\r\n    eventName: string;\r\n    /**效用作用的目标对象，如果为空，则是脚本所在的节点本身*/\r\n    target: Sprite;\r\n    /**效果结束后，是否自动移除节点*/\r\n    autoDestroyAtComplete: boolean = true;\r\n\r\n    protected _comlete: Handler;\r\n    protected _tween: Tween;\r\n\r\n    protected _onAwake(): void {\r\n        this.target = this.target || (<Sprite>this.owner);\r\n        if (this.autoDestroyAtComplete) \r\n            this._comlete = Handler.create(this.target, this.target.destroy, null, false);\r\n        if (this.eventName) \r\n            this.owner.on(this.eventName, this, this._exeTween);\r\n        else \r\n            this._exeTween();\r\n    }\r\n\r\n    protected _exeTween(): void {\r\n        this._tween = this._doTween();\r\n        this._tween.repeat = this.repeat;\r\n    }\r\n\r\n    protected _doTween(): Tween {\r\n        return null;\r\n    }\r\n\r\n    onReset(): void {\r\n        this.duration = 1000;\r\n        this.delay = 0;\r\n        this.repeat = 0;\r\n        this.ease = null;\r\n        this.target = null;\r\n        if (this.eventName) {\r\n            this.owner.off(this.eventName, this, this._exeTween);\r\n            this.eventName = null;\r\n        }\r\n        if (this._comlete) {\r\n            this._comlete.recover();\r\n            this._comlete = null;\r\n        }\r\n        if (this._tween) {\r\n            this._tween.clear();\r\n            this._tween = null;\r\n        }\r\n    }\r\n}\r\n\r\n","/**\r\n * <code>Keyboard</code> 类的属性是一些常数，这些常数表示控制游戏时最常用的键。\r\n */\r\nexport class Keyboard {\r\n    /** 与 0 的键控代码值 (48) 关联的常数。*/\r\n    static NUMBER_0: number = 48;\r\n    /** 与 1 的键控代码值 (49) 关联的常数。*/\r\n    static NUMBER_1: number = 49;\r\n    /** 与 2 的键控代码值 (50) 关联的常数。*/\r\n    static NUMBER_2: number = 50;\r\n    /** 与 3 的键控代码值 (51) 关联的常数。*/\r\n    static NUMBER_3: number = 51;\r\n    /** 与 4 的键控代码值 (52) 关联的常数。*/\r\n    static NUMBER_4: number = 52;\r\n    /** 与 5 的键控代码值 (53) 关联的常数。*/\r\n    static NUMBER_5: number = 53;\r\n    /** 与 6 的键控代码值 (54) 关联的常数。*/\r\n    static NUMBER_6: number = 54;\r\n    /** 与 7 的键控代码值 (55) 关联的常数。*/\r\n    static NUMBER_7: number = 55;\r\n    /** 与 8 的键控代码值 (56) 关联的常数。*/\r\n    static NUMBER_8: number = 56;\r\n    /** 与 9 的键控代码值 (57) 关联的常数。*/\r\n    static NUMBER_9: number = 57;\r\n\r\n    /** 与 A 键的键控代码值 (65) 关联的常数。*/\r\n    static A: number = 65;\r\n    /** 与 B 键的键控代码值 (66) 关联的常数。*/\r\n    static B: number = 66;\r\n    /** 与 C 键的键控代码值 (67) 关联的常数。*/\r\n    static C: number = 67;\r\n    /** 与 D 键的键控代码值 (68) 关联的常数。*/\r\n    static D: number = 68;\r\n    /** 与 E 键的键控代码值 (69) 关联的常数。*/\r\n    static E: number = 69;\r\n    /** 与 F 键的键控代码值 (70) 关联的常数。*/\r\n    static F: number = 70;\r\n    /** 与 G 键的键控代码值 (71) 关联的常数。*/\r\n    static G: number = 71;\r\n    /** 与 H 键的键控代码值 (72) 关联的常数。*/\r\n    static H: number = 72;\r\n    /** 与 I 键的键控代码值 (73) 关联的常数。*/\r\n    static I: number = 73;\r\n    /** 与 J 键的键控代码值 (74) 关联的常数。*/\r\n    static J: number = 74;\r\n    /** 与 K 键的键控代码值 (75) 关联的常数。*/\r\n    static K: number = 75;\r\n    /** 与 L 键的键控代码值 (76) 关联的常数。*/\r\n    static L: number = 76;\r\n    /** 与 M 键的键控代码值 (77) 关联的常数。*/\r\n    static M: number = 77;\r\n    /** 与 N 键的键控代码值 (78) 关联的常数。*/\r\n    static N: number = 78;\r\n    /** 与 O 键的键控代码值 (79) 关联的常数。*/\r\n    static O: number = 79;\r\n    /** 与 P 键的键控代码值 (80) 关联的常数。*/\r\n    static P: number = 80;\r\n    /** 与 Q 键的键控代码值 (81) 关联的常数。*/\r\n    static Q: number = 81;\r\n    /** 与 R 键的键控代码值 (82) 关联的常数。*/\r\n    static R: number = 82;\r\n    /** 与 S 键的键控代码值 (83) 关联的常数。*/\r\n    static S: number = 83;\r\n    /** 与 T 键的键控代码值 (84) 关联的常数。*/\r\n    static T: number = 84;\r\n    /** 与 U 键的键控代码值 (85) 关联的常数。*/\r\n    static U: number = 85;\r\n    /** 与 V 键的键控代码值 (86) 关联的常数。*/\r\n    static V: number = 86;\r\n    /** 与 W 键的键控代码值 (87) 关联的常数。*/\r\n    static W: number = 87;\r\n    /** 与 X 键的键控代码值 (88) 关联的常数。*/\r\n    static X: number = 88;\r\n    /** 与 Y 键的键控代码值 (89) 关联的常数。*/\r\n    static Y: number = 89;\r\n    /** 与 Z 键的键控代码值 (90) 关联的常数。*/\r\n    static Z: number = 90;\r\n\r\n    /** 与 F1 的键控代码值 (112) 关联的常数。*/\r\n    static F1: number = 112;\r\n    /** 与 F2 的键控代码值 (113) 关联的常数。*/\r\n    static F2: number = 113;\r\n    /** 与 F3 的键控代码值 (114) 关联的常数。*/\r\n    static F3: number = 114;\r\n    /** 与 F4 的键控代码值 (115) 关联的常数。*/\r\n    static F4: number = 115;\r\n    /** 与 F5 的键控代码值 (116) 关联的常数。*/\r\n    static F5: number = 116;\r\n    /** 与 F6 的键控代码值 (117) 关联的常数。*/\r\n    static F6: number = 117;\r\n    /** 与 F7 的键控代码值 (118) 关联的常数。*/\r\n    static F7: number = 118;\r\n    /** 与 F8 的键控代码值 (119) 关联的常数。*/\r\n    static F8: number = 119;\r\n    /** 与 F9 的键控代码值 (120) 关联的常数。*/\r\n    static F9: number = 120;\r\n    /** 与 F10 的键控代码值 (121) 关联的常数。*/\r\n    static F10: number = 121;\r\n    /** 与 F11 的键控代码值 (122) 关联的常数。*/\r\n    static F11: number = 122;\r\n    /** 与 F12 的键控代码值 (123) 关联的常数。*/\r\n    static F12: number = 123;\r\n    /** 与 F13 的键控代码值 (124) 关联的常数。*/\r\n    static F13: number = 124;\r\n    /** 与 F14 的键控代码值 (125) 关联的常数。*/\r\n    static F14: number = 125;\r\n    /** 与 F15 的键控代码值 (126) 关联的常数。*/\r\n    static F15: number = 126;\r\n\r\n    /** 与数字键盘的伪键控代码 (21) 关联的常数。*/\r\n    static NUMPAD: number = 21;\r\n    /** 与数字键盘上的数字 0 的键控代码值 (96) 关联的常数。*/\r\n    static NUMPAD_0: number = 96;\r\n    /** 与数字键盘上的数字 1 的键控代码值 (97) 关联的常数。*/\r\n    static NUMPAD_1: number = 97;\r\n    /** 与数字键盘上的数字 2 的键控代码值 (98) 关联的常数。*/\r\n    static NUMPAD_2: number = 98;\r\n    /** 与数字键盘上的数字 3 的键控代码值 (99) 关联的常数。*/\r\n    static NUMPAD_3: number = 99;\r\n    /** 与数字键盘上的数字 4 的键控代码值 (100) 关联的常数。*/\r\n    static NUMPAD_4: number = 100;\r\n    /** 与数字键盘上的数字 5 的键控代码值 (101) 关联的常数。*/\r\n    static NUMPAD_5: number = 101;\r\n    /** 与数字键盘上的数字 6 的键控代码值 (102) 关联的常数。*/\r\n    static NUMPAD_6: number = 102;\r\n    /** 与数字键盘上的数字 7 的键控代码值 (103) 关联的常数。*/\r\n    static NUMPAD_7: number = 103;\r\n    /** 与数字键盘上的数字 8 的键控代码值 (104) 关联的常数。*/\r\n    static NUMPAD_8: number = 104;\r\n    /** 与数字键盘上的数字 9 的键控代码值 (105) 关联的常数。*/\r\n    static NUMPAD_9: number = 105;\r\n\r\n    /** 与数字键盘上的加号 (+) 的键控代码值 (107) 关联的常数。*/\r\n    static NUMPAD_ADD: number = 107;\r\n    /** 与数字键盘上的小数点 (.) 的键控代码值 (110) 关联的常数。*/\r\n    static NUMPAD_DECIMAL: number = 110;\r\n    /** 与数字键盘上的除号 (/) 的键控代码值 (111) 关联的常数。*/\r\n    static NUMPAD_DIVIDE: number = 111;\r\n    /** 与数字键盘上的 Enter 的键控代码值 (108) 关联的常数。*/\r\n    static NUMPAD_ENTER: number = 108;\r\n    /** 与数字键盘上的乘号 (*) 的键控代码值 (106) 关联的常数。*/\r\n    static NUMPAD_MULTIPLY: number = 106;\r\n    /** 与数字键盘上的减号 (-) 的键控代码值 (109) 关联的常数。*/\r\n    static NUMPAD_SUBTRACT: number = 109;\r\n    /** 与 ; 键的键控代码值 (186) 关联的常数。*/\r\n    static SEMICOLON: number = 186;\r\n    /** 与 = 键的键控代码值 (187) 关联的常数。*/\r\n    static EQUAL: number = 187;\r\n    /** 与 F15 的键控代码值 (188) 关联的常数。*/\r\n    static COMMA: number = 188;\r\n    /** 与 - 键的键控代码值 (189) 关联的常数。*/\r\n    static MINUS: number = 189;\r\n    /** 与 . 键的键控代码值 (190) 关联的常数。*/\r\n    static PERIOD: number = 190;\r\n    /** 与 / 键的键控代码值 (191) 关联的常数。*/\r\n    static SLASH: number = 191;\r\n    /** 与 ` 键的键控代码值 (192) 关联的常数。*/\r\n    static BACKQUOTE: number = 192;\r\n    /** 与 [ 键的键控代码值 (219) 关联的常数。*/\r\n    static LEFTBRACKET: number = 219;\r\n    /** 与 \\ 键的键控代码值 (220) 关联的常数。*/\r\n    static BACKSLASH: number = 220;\r\n    /** 与 ] 键的键控代码值 (221) 关联的常数。*/\r\n    static RIGHTBRACKET: number = 221;\r\n    /** 与 ' 键的键控代码值 (222) 关联的常数。*/\r\n    static QUOTE: number = 222;\r\n    /** 与 Alternate (Option) 键的键控代码值 (18) 关联的常数。*/\r\n    static ALTERNATE: number = 18;\r\n    /** 与 Backspace 的键控代码值 (8) 关联的常数。*/\r\n    static BACKSPACE: number = 8;\r\n    /** 与 Caps Lock 的键控代码值 (20) 关联的常数。*/\r\n    static CAPS_LOCK: number = 20;\r\n    /** 与 Mac 命令键 (15) 关联的常数。*/\r\n    static COMMAND: number = 15;\r\n    /** 与 Ctrl 的键控代码值 (17) 关联的常数。*/\r\n    static CONTROL: number = 17;\r\n    /** 与 Delete 的键控代码值 (46) 关联的常数。*/\r\n    static DELETE: number = 46;\r\n    /** 与 Enter 的键控代码值 (13) 关联的常数。*/\r\n    static ENTER: number = 13;\r\n    /** 与 Esc 的键控代码值 (27) 关联的常数。*/\r\n    static ESCAPE: number = 27;\r\n    /** 与 Page Up 的键控代码值 (33) 关联的常数。*/\r\n    static PAGE_UP: number = 33;\r\n    /** 与 Page Down 的键控代码值 (34) 关联的常数。*/\r\n    static PAGE_DOWN: number = 34;\r\n    /** 与 End 的键控代码值 (35) 关联的常数。*/\r\n    static END: number = 35;\r\n    /** 与 Home 的键控代码值 (36) 关联的常数。*/\r\n    static HOME: number = 36;\r\n    /** 与向左箭头键的键控代码值 (37) 关联的常数。*/\r\n    static LEFT: number = 37;\r\n    /** 与向上箭头键的键控代码值 (38) 关联的常数。*/\r\n    static UP: number = 38;\r\n    /** 与向右箭头键的键控代码值 (39) 关联的常数。*/\r\n    static RIGHT: number = 39;\r\n    /** 与向下箭头键的键控代码值 (40) 关联的常数。*/\r\n    static DOWN: number = 40;\r\n    /** 与 Shift 的键控代码值 (16) 关联的常数。*/\r\n    static SHIFT: number = 16;\r\n    /** 与空格键的键控代码值 (32) 关联的常数。*/\r\n    static SPACE: number = 32;\r\n    /** 与 Tab 的键控代码值 (9) 关联的常数。*/\r\n    static TAB: number = 9;\r\n    /** 与 Insert 的键控代码值 (45) 关联的常数。*/\r\n    static INSERT: number = 45;\r\n}\r\n\r\n\r\n","/**\r\n * <p><code>KeyLocation</code> 类包含表示在键盘或类似键盘的输入设备上按键位置的常量。</p>\r\n * <p><code>KeyLocation</code> 常数用在键盘事件对象的 <code>keyLocation </code>属性中。</p>\r\n */\r\nexport class KeyLocation {\r\n    /**\r\n     * 表示激活的键不区分位于左侧还是右侧，也不区分是否位于数字键盘（或者是使用对应于数字键盘的虚拟键激活的）。\r\n     */\r\n    static STANDARD: number = 0;\r\n    /**\r\n     * 表示激活的键在左侧键位置（此键有多个可能的位置）。\r\n     */\r\n    static LEFT: number = 1;\r\n    /**\r\n     * 表示激活的键在右侧键位置（此键有多个可能的位置）。\r\n     */\r\n    static RIGHT: number = 2;\r\n    /**\r\n     * <p>表示激活的键位于数字键盘或者是使用对应于数字键盘的虚拟键激活的。</p>\r\n     * <p>注意：此属性只在flash模式下有效。</p>\r\n     * */\r\n    static NUM_PAD: number = 3;\r\n\r\n}\r\n\r\n\r\n","import { ShaderVariable } from \"../RenderEngine/RenderShader/ShaderVariable\";\r\n\r\n/**\r\n * @private\r\n * CommandEncoder Shader变量集合\r\n */\r\nexport class CommandEncoder {\r\n    \r\n    /**@internal shader variable list*/\r\n    _idata: ShaderVariable[] = [];\r\n\r\n    /**\r\n     * 实例化一个ShaderVariable集合\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns Array of ShaderVariable\r\n     */\r\n    getArrayData(): ShaderVariable[] {\r\n        return this._idata;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns count of ShaderVariableArray\r\n     */\r\n    getCount(): number {\r\n        return this._idata.length;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * add one ShaderVariable\r\n     * @param variable \r\n     */\r\n    addShaderUniform(variable: ShaderVariable): void {\r\n        this._idata.push(variable);\r\n    }\r\n\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Stage } from \"../display/Stage\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { ILaya } from \"../../ILaya\";\r\n/**\r\n * ...\r\n * @author ww\r\n */\r\nexport class QuickTestTool {\r\n\r\n    private static showedDic: any = {};\r\n    private static _rendertypeToStrDic: any = {};\r\n    private static _typeToNameDic: any = {};\r\n\r\n    //TODO:coverage\r\n    static getMCDName(type: number): string {\r\n        return QuickTestTool._typeToNameDic[type];\r\n    }\r\n\r\n    //TODO:coverage\r\n    static showRenderTypeInfo(type: any, force: boolean = false): void {\r\n        if (!force && QuickTestTool.showedDic[type])\r\n            return;\r\n        QuickTestTool.showedDic[type] = true;\r\n        if (!QuickTestTool._rendertypeToStrDic[type]) {\r\n            var arr: any[] = [];\r\n            var tType: number;\r\n            tType = 1;\r\n            while (tType <= type) {\r\n                if (tType & type) {\r\n                    arr.push(QuickTestTool.getMCDName(tType & type));\r\n                }\r\n                tType = tType << 1;\r\n            }\r\n            QuickTestTool._rendertypeToStrDic[type] = arr.join(\",\");\r\n        }\r\n        console.log(\"cmd:\", QuickTestTool._rendertypeToStrDic[type]);\r\n\r\n    }\r\n\r\n    //TODO:coverage\r\n    static __init__(): void {\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.ALPHA] = \"ALPHA\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM] = \"TRANSFORM\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TEXTURE] = \"TEXTURE\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.GRAPHICS] = \"GRAPHICS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.ONECHILD] = \"ONECHILD\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CHILDS] = \"CHILDS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM | SpriteConst.ALPHA] = \"TRANSFORM|ALPHA\";\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.CANVAS] = \"CANVAS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.BLEND] = \"BLEND\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.FILTERS] = \"FILTERS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.MASK] = \"MASK\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CLIP] = \"CLIP\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.LAYAGL3D] = \"LAYAGL3D\";\r\n    }\r\n    _renderType: number;\r\n    _repaint: number;\r\n    _x: number;\r\n    _y: number;\r\n    //TODO:coverage\r\n    constructor() {\r\n\r\n    }\r\n    /**\r\n     * 更新、呈现显示对象。由系统调用。\r\n     * @param\tcontext 渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    //TODO:coverage\r\n    render(context: Context, x: number, y: number): void {\r\n        QuickTestTool._addType(this._renderType);\r\n        QuickTestTool.showRenderTypeInfo(this._renderType);\r\n        //if (_renderType == (SpriteConst.IMAGE | SpriteConst.GRAPHICS | SpriteConst.CHILDS))\r\n        //{\r\n        //debugger;\r\n        //}\r\n        RenderSprite.renders[this._renderType]._fun(this, context, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    private static _PreStageRender: Function;\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _stageRender(context: Context, x: number, y: number): void {\r\n        QuickTestTool._countStart();\r\n        QuickTestTool._PreStageRender.call(ILaya.stage, context, x, y);//TODO TS\r\n        QuickTestTool._countEnd();\r\n    }\r\n    private static _countDic: any = {};\r\n\r\n    //TODO:coverage\r\n    private static _countStart(): void {\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            QuickTestTool._countDic[key] = 0;\r\n        }\r\n    }\r\n    private static _i: number = 0;\r\n\r\n    //TODO:coverage\r\n    private static _countEnd(): void {\r\n        QuickTestTool._i++;\r\n        if (QuickTestTool._i > 60) {\r\n            QuickTestTool.showCountInfo();\r\n            QuickTestTool._i = 0;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    private static _addType(type: number): void {\r\n        if (!QuickTestTool._countDic[type]) {\r\n            QuickTestTool._countDic[type] = 1;\r\n        } else {\r\n            QuickTestTool._countDic[type] += 1;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static showCountInfo(): void {\r\n        console.log(\"===================\");\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            console.log(\"count:\" + QuickTestTool._countDic[key]);\r\n            QuickTestTool.showRenderTypeInfo(key, true);\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static enableQuickTest(): void {\r\n        QuickTestTool.__init__();\r\n        Sprite[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"render\"];\r\n        QuickTestTool._PreStageRender = Stage[\"prototype\"][\"render\"];\r\n        Stage[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"_stageRender\"];\r\n    }\r\n}\r\n\r\n\r\n","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { Byte } from \"../utils/Byte\"\r\n\r\n/**\r\n * 连接建立成功后调度。\r\n * @eventType Event.OPEN\r\n * */\r\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 接收到数据后调度。\r\n * @eventType Event.MESSAGE\r\n * */\r\n/*[Event(name = \"message\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 连接被关闭后调度。\r\n * @eventType Event.CLOSE\r\n * */\r\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 出现异常后调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Socket</code> 封装了 HTML5 WebSocket ，允许服务器端与客户端进行全双工（full-duplex）的实时通信，并且允许跨域通信。在建立连接后，服务器和 Browser/Client Agent 都能主动的向对方发送或接收文本和二进制数据。</p>\r\n * <p>要使用 <code>Socket</code> 类的方法，请先使用构造函数 <code>new Socket</code> 创建一个 <code>Socket</code> 对象。 <code>Socket</code> 以异步方式传输和接收数据。</p>\r\n */\r\nexport class Socket extends EventDispatcher {\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**@internal */\r\n    _endian: string;\r\n    /**@private */\r\n    protected _socket: any;\r\n    /**@private */\r\n    private _connected: boolean;\r\n    /**@private */\r\n    private _addInputPosition: number;\r\n    /**@private */\r\n    private _input: any;\r\n    /**@private */\r\n    private _output: any;\r\n\r\n    /**\r\n     * 不再缓存服务端发来的数据，如果传输的数据为字符串格式，建议设置为true，减少二进制转换消耗。\r\n     */\r\n    disableInput: boolean = false;\r\n    /**\r\n     * 用来发送和接收数据的 <code>Byte</code> 类。\r\n     */\r\n    private _byteClass: new () => any;\r\n    /**\r\n     * <p>子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组。必须在调用 connect 或者 connectByUrl 之前进行赋值，否则无效。</p>\r\n     * <p>指定后，只有当服务器选择了其中的某个子协议，连接才能建立成功，否则建立失败，派发 Event.ERROR 事件。</p>\r\n     * @see https://html.spec.whatwg.org/multipage/comms.html#dom-websocket\r\n     */\r\n    protocols: any = [];\r\n\r\n    /**\r\n     * 缓存的服务端发来的数据。\r\n     */\r\n    get input(): any {\r\n        return this._input;\r\n    }\r\n\r\n    /**\r\n     * 表示需要发送至服务端的缓冲区中的数据。\r\n     */\r\n    get output(): any {\r\n        return this._output;\r\n    }\r\n\r\n    /**\r\n     * 表示此 Socket 对象目前是否已连接。\r\n     */\r\n    get connected(): boolean {\r\n        return this._connected;\r\n    }\r\n\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。</p>\r\n     */\r\n    get endian(): string {\r\n        return this._endian;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._endian = value;\r\n        if (this._input != null) this._input.endian = value;\r\n        if (this._output != null) this._output.endian = value;\r\n    }\r\n\r\n    /**\r\n     * <p>创建新的 Socket 对象。默认字节序为 Socket.BIG_ENDIAN 。若未指定参数，将创建一个最初处于断开状态的套接字。若指定了有效参数，则尝试连接到指定的主机和端口。</p>\r\n     * @param host\t\t服务器地址。\r\n     * @param port\t\t服务器端口。\r\n     * @param byteClass\t用于接收和发送数据的 Byte 类。如果为 null ，则使用 Byte 类，也可传入 Byte 类的子类。\r\n     * @param protocols\t子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     * @see laya.utils.Byte\r\n     */\r\n    constructor(host: string | null = null, port: number = 0, byteClass: new () => any = null, protocols: any[] | null = null, isSecure: boolean = false) {\r\n        super();\r\n        this._byteClass = byteClass ? byteClass : Byte;\r\n        this.protocols = protocols;\r\n        this.endian = Socket.BIG_ENDIAN;\r\n        if (host && port > 0 && port < 65535) this.connect(host, port, isSecure);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的主机和端口。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param host\t服务器地址。\r\n     * @param port\t服务器端口。\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     */\r\n    connect(host: string, port: number, isSecure: boolean = false): void {\r\n        this.connectByUrl(`${isSecure ? \"wss\" : \"ws\"}://${host}:${port}`);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param url\t要连接的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。\r\n     */\r\n    connectByUrl(url: string): void {\r\n        if (this._socket != null) this.close();\r\n\r\n        this._socket && this.cleanSocket();\r\n\r\n        if (!this.protocols || this.protocols.length == 0) {\r\n            this._socket = new Browser.window.WebSocket(url);\r\n        } else {\r\n            this._socket = new Browser.window.WebSocket(url, this.protocols);\r\n        }\r\n\r\n        this._socket.binaryType = \"arraybuffer\";\r\n\r\n        this._output = new this._byteClass();\r\n        this._output.endian = this.endian;\r\n        this._input = new this._byteClass();\r\n        this._input.endian = this.endian;\r\n        this._addInputPosition = 0;\r\n\r\n        this._socket.onopen = (e: any) => {\r\n            this._onOpen(e);\r\n        };\r\n        this._socket.onmessage = (msg: any): void => {\r\n            this._onMessage(msg);\r\n        };\r\n        this._socket.onclose = (e: any): void => {\r\n            this._onClose(e);\r\n        };\r\n        this._socket.onerror = (e: any): void => {\r\n            this._onError(e);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 清理Socket：关闭Socket链接，关闭事件监听，重置Socket\r\n     */\r\n    cleanSocket(): void {\r\n        this.close();\r\n        this._connected = false;\r\n        this._socket.onopen = null;\r\n        this._socket.onmessage = null;\r\n        this._socket.onclose = null;\r\n        this._socket.onerror = null;\r\n        this._socket = null;\r\n    }\r\n\r\n    /**\r\n     * 关闭连接。\r\n     */\r\n    close(): void {\r\n        if (this._socket != null) {\r\n            try {\r\n                this._socket.close();\r\n            } catch (e) {\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接建立成功 。\r\n     */\r\n    protected _onOpen(e: any): void {\r\n        this._connected = true;\r\n        this.event(Event.OPEN, e);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 接收到数据处理方法。\r\n     * @param msg 数据。\r\n     */\r\n    protected _onMessage(msg: any): void {\r\n        if (!msg || !msg.data) return;\r\n        var data: any = msg.data;\r\n        if (this.disableInput && data) {\r\n            this.event(Event.MESSAGE, data);\r\n            return;\r\n        }\r\n        if (this._input.length > 0 && this._input.bytesAvailable < 1) {\r\n            this._input.clear();\r\n            this._addInputPosition = 0;\r\n        }\r\n        var pre: number = this._input.pos;\r\n        !this._addInputPosition && (this._addInputPosition = 0);\r\n        this._input.pos = this._addInputPosition;\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                this._input.writeUTFBytes(data);\r\n            } else {\r\n                this._input.writeArrayBuffer(data);\r\n            }\r\n            this._addInputPosition = this._input.pos;\r\n            this._input.pos = pre;\r\n        }\r\n        this.event(Event.MESSAGE, data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接被关闭处理方法。\r\n     */\r\n    protected _onClose(e: any): void {\r\n        this._connected = false;\r\n        this.event(Event.CLOSE, e)\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 出现异常处理方法。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.event(Event.ERROR, e)\r\n    }\r\n\r\n    /**\r\n     * 发送数据到服务器。\r\n     * @param\tdata 需要发送的数据，可以是String或者ArrayBuffer。\r\n     */\r\n    send(data: any): void {\r\n        this._socket.send(data);\r\n    }\r\n\r\n    /**\r\n     * 发送缓冲区中的数据到服务器。\r\n     */\r\n    flush(): void {\r\n        if (this._output && this._output.length > 0) {\r\n            var evt: any;\r\n            try {\r\n                this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));\r\n            } catch (e) {\r\n                evt = e;\r\n            }\r\n            this._output.endian = this.endian;\r\n            this._output.clear();\r\n            if (evt) this.event(Event.ERROR, evt);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { RenderCapable } from \"../RenderEnum/RenderCapable\";\r\nimport { UniformMapType } from \"./SubShader\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class GLSLCodeGenerator {\r\n\r\n    static glslAttributeString(attributeMap: { [name: string]: [number, ShaderDataType] }) {\r\n\r\n        let res = \"\";\r\n        for (const key in attributeMap) {\r\n            let type = getAttributeType(attributeMap[key][1]);\r\n            if (type != \"\") {\r\n                res = `${res}attribute ${type} ${key};\\n`;\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    static glslUniformString(uniformsMap: UniformMapType, useUniformBlock: boolean) {\r\n\r\n        if (useUniformBlock) {\r\n            let blocksStr = \"\";\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    blocksStr += `uniform ${key} {\\n`;\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        let typeStr = getAttributeType(dataType);\r\n                        if (typeStr != \"\") {\r\n                            blocksStr += `${typeStr} ${uniformName};\\n`;\r\n                        }\r\n                    }\r\n                    blocksStr += \"};\\n\";\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    let typeStr = getAttributeType(dataType);\r\n                    if (typeStr != \"\") {\r\n                        uniformsStr += `uniform ${typeStr} ${key};\\n`;\r\n                    }\r\n                }\r\n            }\r\n            return blocksStr + uniformsStr;\r\n\r\n        }\r\n        else {\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        let typeStr = getAttributeType(dataType);\r\n                        if (typeStr != \"\") {\r\n                            uniformsStr += `uniform ${typeStr} ${uniformName};\\n`;\r\n                        }\r\n                    }\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    let typeStr = getAttributeType(dataType);\r\n                    if (typeStr != \"\") {\r\n                        uniformsStr += `uniform ${typeStr} ${key};\\n`;\r\n                    }\r\n                }\r\n            }\r\n            return uniformsStr;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getAttributeType(type: ShaderDataType) {\r\n    switch (type) {\r\n        case ShaderDataType.Int:\r\n            return \"int\";\r\n        case ShaderDataType.Bool:\r\n            return \"bool\";\r\n        case ShaderDataType.Float:\r\n            return \"float\";\r\n        case ShaderDataType.Vector2:\r\n            return \"vec2\";\r\n        case ShaderDataType.Vector3:\r\n            return \"vec3\";\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return \"vec4\";\r\n        case ShaderDataType.Matrix4x4:\r\n            return \"mat4\";\r\n        case ShaderDataType.Matrix3x3:\r\n            return \"mat3\";\r\n        case ShaderDataType.Texture2D:\r\n            return \"sampler2D\";\r\n        case ShaderDataType.TextureCube:\r\n            return \"samplerCube\";\r\n        case ShaderDataType.Texture2DArray:\r\n            if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n                return \"sampler2DArray\";\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        case ShaderDataType.Texture3D:\r\n            if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n                return \"sampler3D\";\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        default:\r\n            return \"\";\r\n    }\r\n}","import { Config3D } from \"../../../Config3D\";\r\nimport { CommandEncoder } from \"../../layagl/CommandEncoder\";\r\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\r\nimport { IRenderShaderInstance } from \"../../RenderEngine/RenderInterface/IRenderShaderInstance\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderData, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderPass } from \"../../RenderEngine/RenderShader/ShaderPass\";\r\nimport { ShaderVariable } from \"../../RenderEngine/RenderShader/ShaderVariable\";\r\nimport { UniformMapType } from \"../../RenderEngine/RenderShader/SubShader\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { ShaderNode } from \"../../webgl/utils/ShaderNode\";\r\nimport { WebGLEngine } from \"../RenderEngine/WebGLEngine/WebGLEngine\";\r\nimport { RenderParams } from \"../RenderEnum/RenderParams\";\r\nimport { GLSLCodeGenerator } from \"./GLSLCodeGenerator\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { Stat } from \"../../utils/Stat\";\r\nimport { RenderState } from \"./RenderState\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\n\r\n/**\r\n * <code>ShaderInstance</code> 类用于实现ShaderInstance。\r\n */\r\nexport class ShaderInstance {\r\n\t/**@internal */\r\n\tprivate _shaderPass: ShaderCompileDefineBase | ShaderPass;\r\n\r\n\tprivate _renderShaderInstance: IRenderShaderInstance;\r\n\r\n\t/**@internal */\r\n\t_sceneUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_cameraUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_spriteUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_materialUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_sprite2DUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\tprivate _customUniformParamsMap: any[] = [];\r\n\r\n\t/**@internal */\r\n\t_uploadMark: number = -1;\r\n\t/**@internal */\r\n\t_uploadMaterial: ShaderData;\r\n\t/**@internal RenderIDTODO*/\r\n\t_uploadRender: any;\r\n\t/** @internal */\r\n\t_uploadRenderType: number = -1;\r\n\t/**@internal CamneraTOD*/\r\n\t_uploadCameraShaderValue: ShaderData;\r\n\t/**@internal SceneIDTODO*/\r\n\t_uploadScene: any;\r\n\r\n\t/**\r\n\t * 创建一个 <code>ShaderInstance</code> 实例。\r\n\t */\r\n\tconstructor(shaderProcessInfo: ShaderProcessInfo, shaderPass: ShaderCompileDefineBase) {\r\n\t\t// shaderProcessInfo.is2D ? this._webGLShaderLanguageProcess2D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps)\r\n\t\tthis._webGLShaderLanguageProcess3D(shaderProcessInfo.defineString, shaderProcessInfo.attributeMap, shaderProcessInfo.uniformMap, shaderProcessInfo.vs, shaderProcessInfo.ps);\r\n\t\tif (this._renderShaderInstance._complete) {\r\n\t\t\tthis._shaderPass = shaderPass;\r\n\t\t\tshaderProcessInfo.is2D ? this._create2D() : this._create();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get complete\r\n\t */\r\n\tget complete(): boolean {\r\n\t\treturn this._renderShaderInstance._complete;\r\n\t}\r\n\r\n\tprotected _webGLShaderLanguageProcess3D(defineString: string[],\r\n\t\tattributeMap: { [name: string]: [number, ShaderDataType] },\r\n\t\tuniformMap: UniformMapType, VS: ShaderNode, FS: ShaderNode) {\r\n\r\n\t\tvar clusterSlices = Config3D.lightClusterCount;\r\n\t\tvar defMap: any = {};\r\n\r\n\t\tvar vertexHead: string;\r\n\t\tvar fragmentHead: string;\r\n\t\tvar defineStr: string = \"\";\r\n\r\n\t\t// 拼接 shader attribute\r\n\t\tlet useUniformBlock = Config3D._uniformBlock;\r\n\t\tlet attributeglsl = GLSLCodeGenerator.glslAttributeString(attributeMap);\r\n\t\tlet uniformglsl = GLSLCodeGenerator.glslUniformString(uniformMap, useUniformBlock);\r\n\r\n\t\tif ((LayaGL.renderEngine as WebGLEngine).isWebGL2) {\r\n\t\t\tdefineString.push(\"GRAPHICS_API_GLES3\");\r\n\t\t\tvertexHead =\r\n\t\t\t\t`#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n    precision highp sampler3D;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n    precision mediump sampler3D;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define attribute in\r\n#define varying out\r\n#define textureCube texture\r\n#define texture2D texture\r\n${attributeglsl}\r\n${uniformglsl}\r\n`;\r\n\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n\tprecision highp sampler3D;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n\tprecision mediump sampler3D;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define varying in\r\nout highp vec4 pc_fragColor;\r\n#define gl_FragColor pc_fragColor\r\n#define gl_FragDepthEXT gl_FragDepth\r\n#define texture2D texture\r\n#define textureCube texture\r\n#define texture2DProj textureProj\r\n#define texture2DLodEXT textureLod\r\n#define texture2DProjLodEXT textureProjLod\r\n#define textureCubeLodEXT textureLod\r\n#define texture2DGradEXT textureGrad\r\n#define texture2DProjGradEXT textureProjGrad\r\n#define textureCubeGradEXT textureGrad\r\n${uniformglsl}`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvertexHead =\r\n\t\t\t\t`#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n${attributeglsl}\r\n${uniformglsl}`;\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#ifdef GL_EXT_shader_texture_lod\r\n    #extension GL_EXT_shader_texture_lod : enable\r\n#endif\r\n\r\n#ifdef GL_OES_standard_derivatives\r\n\t#extension GL_OES_standard_derivatives : enable \r\n#endif\r\n\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n\r\n#if !defined(GL_EXT_shader_texture_lod)\r\n    #define texture1DLodEXT texture1D\r\n    #define texture2DLodEXT texture2D\r\n    #define texture2DProjLodEXT texture2DProj\r\n    #define textureCubeLodEXT textureCube\r\n#endif\r\n${uniformglsl}`;\r\n\t\t}\r\n\r\n\t\t// todo \r\n\t\tdefineStr += \"#define MAX_LIGHT_COUNT \" + Config3D.maxLightCount + \"\\n\";\r\n\t\tdefineStr += \"#define MAX_LIGHT_COUNT_PER_CLUSTER \" + Config3D._maxAreaLightCountPerClusterAverage + \"\\n\";\r\n\t\tdefineStr += \"#define CLUSTER_X_COUNT \" + clusterSlices.x + \"\\n\";\r\n\t\tdefineStr += \"#define CLUSTER_Y_COUNT \" + clusterSlices.y + \"\\n\";\r\n\t\tdefineStr += \"#define CLUSTER_Z_COUNT \" + clusterSlices.z + \"\\n\";\r\n\t\tdefineStr += \"#define MORPH_MAX_COUNT \" + Config3D.maxMorphTargetCount + \"\\n\";\r\n\t\tdefineStr += \"#define SHADER_CAPAILITY_LEVEL \" + LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) + \"\\n\";\r\n\r\n\r\n\r\n\t\tfor (var i: number = 0, n: number = defineString.length; i < n; i++) {\r\n\t\t\tvar def: string = defineString[i];\r\n\t\t\tdefineStr += \"#define \" + def + \"\\n\";\r\n\t\t\tdefMap[def] = true;\r\n\t\t}\r\n\r\n\t\tvar vs: any[] = VS.toscript(defMap, []);\r\n\t\tvar vsVersion: string = '';\r\n\t\tif (vs[0].indexOf('#version') == 0) {\r\n\t\t\tvsVersion = vs[0] + '\\n';\r\n\t\t\tvs.shift();\r\n\t\t}\r\n\r\n\t\tvar ps: any[] = FS.toscript(defMap, []);\r\n\t\tvar psVersion: string = '';\r\n\t\tif (ps[0].indexOf('#version') == 0) {\r\n\t\t\tpsVersion = ps[0] + '\\n';\r\n\t\t\tps.shift();\r\n\t\t};\r\n\t\tlet dstVS = vsVersion + vertexHead + defineStr + vs.join('\\n');\r\n\t\tlet detFS = psVersion + fragmentHead + defineStr + ps.join('\\n');\r\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(dstVS, detFS, attributeMap);\r\n\t}\r\n\r\n\tprotected _webGLShaderLanguageProcess2D(defineString: string[],\r\n\t\tattributeMap: { [name: string]: [number, ShaderDataType] },\r\n\t\tuniformMap: UniformMapType, VS: ShaderNode, FS: ShaderNode) {\r\n\t\tvar defMap: any = {};\r\n\r\n\t\tvar vertexHead: string;\r\n\t\tvar fragmentHead: string;\r\n\t\tvar defineStr: string = \"\";\r\n\r\n\t\tif ((LayaGL.renderEngine as WebGLEngine).isWebGL2) {\r\n\t\t\tvertexHead =\r\n\t\t\t\t`#version 300 es\\n\r\n                #define attribute in\r\n                #define varying out\r\n                #define textureCube texture\r\n                #define texture2D texture\\n`;\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#version 300 es\\n\r\n                #define varying in\r\n                out highp vec4 pc_fragColor;\r\n                #define gl_FragColor pc_fragColor\r\n                #define gl_FragDepthEXT gl_FragDepth\r\n                #define texture2D texture\r\n                #define textureCube texture\r\n                #define texture2DProj textureProj\r\n                #define texture2DLodEXT textureLod\r\n                #define texture2DProjLodEXT textureProjLod\r\n                #define textureCubeLodEXT textureLod\r\n                #define texture2DGradEXT textureGrad\r\n                #define texture2DProjGradEXT textureProjGrad\r\n                #define textureCubeGradEXT textureGrad\\n`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvertexHead = \"\"\r\n\t\t\tfragmentHead =\r\n\t\t\t\t`#ifdef GL_EXT_shader_texture_lod\r\n                    #extension GL_EXT_shader_texture_lod : enable\r\n                #endif\r\n                #if !defined(GL_EXT_shader_texture_lod)\r\n                    #define texture1DLodEXT texture1D\r\n                    #define texture2DLodEXT texture2D\r\n                    #define texture2DProjLodEXT texture2DProj\r\n                    #define texture3DLodEXT texture3D\r\n                    #define textureCubeLodEXT textureCube\r\n                #endif\\n`;\r\n\t\t}\r\n\r\n\r\n\t\tfor (var i: number = 0, n: number = defineString.length; i < n; i++) {\r\n\t\t\tvar def: string = defineString[i];\r\n\t\t\tdefineStr += \"#define \" + def + \"\\n\";\r\n\t\t\tdefMap[def] = true;\r\n\t\t}\r\n\r\n\t\tvar vs: any[] = VS.toscript(defMap, []);\r\n\t\tvar vsVersion: string = '';\r\n\t\tif (vs[0].indexOf('#version') == 0) {\r\n\t\t\tvsVersion = vs[0] + '\\n';\r\n\t\t\tvs.shift();\r\n\t\t}\r\n\r\n\t\tvar ps: any[] = FS.toscript(defMap, []);\r\n\t\tvar psVersion: string = '';\r\n\t\tif (ps[0].indexOf('#version') == 0) {\r\n\t\t\tpsVersion = ps[0] + '\\n';\r\n\t\t\tps.shift();\r\n\t\t}\r\n\r\n\t\tlet dstVS = vsVersion + vertexHead + defineStr + vs.join('\\n');\r\n\t\tlet detFS = psVersion + fragmentHead + defineStr + ps.join('\\n');\r\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(dstVS, detFS, attributeMap);\r\n\t}\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected _create(): void {\r\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\r\n\t\tthis._cameraUniformParamsMap = new CommandEncoder();\r\n\t\tthis._spriteUniformParamsMap = new CommandEncoder();\r\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\r\n\t\tconst sceneParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Scene3D\");\r\n\t\t//const spriteParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite3D\");//分开，根据不同的Render\r\n\t\tconst cameraParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"BaseCamera\");\r\n\t\tconst customParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Custom\");\r\n\t\tlet i, n;\r\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\r\n\t\tfor (i = 0, n = data.length; i < n; i++) {\r\n\t\t\tlet one: ShaderVariable = data[i];\r\n\t\t\tif (sceneParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (cameraParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._cameraUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (this.hasSpritePtrID(one.dataOffset)) {\r\n\t\t\t\tthis._spriteUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (customParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._customUniformParamsMap || (this._customUniformParamsMap = []);\r\n\t\t\t\tthis._customUniformParamsMap[one.dataOffset] = one;\r\n\t\t\t} else {\r\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected _create2D(): void {\r\n\t\tthis._sprite2DUniformParamsMap = new CommandEncoder();\r\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\r\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\r\n\t\tconst sprite2DParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2D\");//分开，根据不同的Render\r\n\t\tconst sceneParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite2DGlobal\");//分开，根据不同的Render\r\n\t\tlet i, n;\r\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\r\n\t\tfor (i = 0, n = data.length; i < n; i++) {\r\n\t\t\tlet one: ShaderVariable = data[i];\r\n\t\t\tif (sprite2DParms.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sprite2DUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (sceneParms.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate hasSpritePtrID(dataOffset: number): boolean {\r\n\t\tlet commap = this._shaderPass.nodeCommonMap;\r\n\t\tif (!commap) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tfor (let i = 0, n = commap.length; i < n; i++) {\r\n\t\t\t\tif (LayaGL.renderOBJCreate.createGlobalUniformMap(commap[i]).hasPtrID(dataOffset))\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\tprotected _disposeResource(): void {\r\n\t\tthis._renderShaderInstance.destroy();\r\n\t\tthis._sceneUniformParamsMap = null;\r\n\t\tthis._cameraUniformParamsMap = null;\r\n\t\tthis._spriteUniformParamsMap = null;\r\n\t\tthis._materialUniformParamsMap = null\r\n\t\tthis._customUniformParamsMap = null;\r\n\r\n\t\tthis._uploadMaterial = null;\r\n\t\tthis._uploadRender = null;\r\n\t\tthis._uploadCameraShaderValue = null;\r\n\t\tthis._uploadScene = null;\r\n\t}\r\n\r\n\t/**\r\n\t * apply shader programe\r\n\t * @returns \r\n\t */\r\n\tbind() {\r\n\t\treturn this._renderShaderInstance.bind();\r\n\t}\r\n\r\n\t/**\r\n\t * upload uniform data\r\n\t * @param shaderUniform \r\n\t * @param shaderDatas \r\n\t * @param uploadUnTexture \r\n\t */\r\n\tuploadUniforms(shaderUniform: CommandEncoder, shaderDatas: ShaderData, uploadUnTexture: boolean) {\r\n\t\tStat.uploadUniform += LayaGL.renderEngine.uploadUniforms(this._renderShaderInstance, shaderUniform, shaderDatas, uploadUnTexture);\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepth(shaderDatas: ShaderData): void {\r\n\t\tif ((<ShaderPass>this._shaderPass).statefirst)\r\n\t\t\tthis.uploadRenderStateBlendDepthByShader(shaderDatas);\r\n\t\telse\r\n\t\t\tthis.uploadRenderStateBlendDepthByMaterial(shaderDatas);\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState frome Shader\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepthByShader(shaderDatas: ShaderData) {\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\r\n\t\tvar depthWrite: any = (renderState.depthWrite ?? datas[Shader3D.DEPTH_WRITE]) ?? RenderState.Default.depthWrite;\r\n\t\tRenderStateContext.setDepthMask(depthWrite);\r\n\t\tvar depthTest: any = (renderState.depthTest ?? datas[Shader3D.DEPTH_TEST]) ?? RenderState.Default.depthTest;\r\n\t\tif (depthTest == RenderState.DEPTHTEST_OFF)\r\n\t\t\tRenderStateContext.setDepthTest(false);\r\n\t\telse {\r\n\t\t\tRenderStateContext.setDepthTest(true);\r\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\r\n\t\t}\r\n\t\t//Stencil\r\n\t\tvar stencilWrite: any = (renderState.stencilWrite ?? datas[Shader3D.STENCIL_WRITE]) ?? RenderState.Default.stencilWrite;\r\n\t\tvar stencilTest: any = (renderState.stencilTest ?? datas[Shader3D.STENCIL_TEST]) ?? RenderState.Default.stencilTest;\r\n\t\tRenderStateContext.setStencilMask(stencilWrite);\r\n\t\tif (stencilWrite) {\r\n\t\t\tvar stencilOp: any = (renderState.stencilOp ?? datas[Shader3D.STENCIL_Op]) ?? RenderState.Default.stencilOp;\r\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\r\n\t\t}\r\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\r\n\t\t\tRenderStateContext.setStencilTest(false);\r\n\t\t} else {\r\n\t\t\tvar stencilRef: any = (renderState.stencilRef ?? datas[Shader3D.STENCIL_Ref]) ?? RenderState.Default.stencilRef;\r\n\t\t\tRenderStateContext.setStencilTest(true);\r\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\r\n\t\t}\r\n\t\t//blend\r\n\t\tvar blend: any = (renderState.blend ?? datas[Shader3D.BLEND]) ?? RenderState.Default.blend;\r\n\t\tswitch (blend) {\r\n\t\t\tcase RenderState.BLEND_DISABLE:\r\n\t\t\t\tRenderStateContext.setBlend(false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\r\n\t\t\t\tvar blendEquation: any = (renderState.blendEquation ?? datas[Shader3D.BLEND_EQUATION]) ?? RenderState.Default.blendEquation;\r\n\t\t\t\tvar srcBlend: any = (renderState.srcBlend ?? datas[Shader3D.BLEND_SRC]) ?? RenderState.Default.srcBlend;\r\n\t\t\t\tvar dstBlend: any = (renderState.dstBlend ?? datas[Shader3D.BLEND_DST]) ?? RenderState.Default.dstBlend;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\r\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\r\n\t\t\t\tvar blendEquationRGB: any = (renderState.blendEquationRGB ?? datas[Shader3D.BLEND_EQUATION_RGB]) ?? RenderState.Default.blendEquationRGB;\r\n\t\t\t\tvar blendEquationAlpha: any = (renderState.blendEquationAlpha ?? datas[Shader3D.BLEND_EQUATION_ALPHA]) ?? RenderState.Default.blendEquationAlpha;\r\n\t\t\t\tvar srcRGB: any = (renderState.srcBlendRGB ?? datas[Shader3D.BLEND_SRC_RGB]) ?? RenderState.Default.srcBlendRGB;\r\n\t\t\t\tvar dstRGB: any = (renderState.dstBlendRGB ?? datas[Shader3D.BLEND_DST_RGB]) ?? RenderState.Default.dstBlendRGB;\r\n\t\t\t\tvar srcAlpha: any = (renderState.srcBlendAlpha ?? datas[Shader3D.BLEND_SRC_ALPHA]) ?? RenderState.Default.srcBlendAlpha;\r\n\t\t\t\tvar dstAlpha: any = (renderState.dstBlendAlpha ?? datas[Shader3D.BLEND_DST_ALPHA]) ?? RenderState.Default.dstBlendAlpha;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState frome Material\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepthByMaterial(shaderDatas: ShaderData) {\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\r\n\t\t// depth\r\n\t\tvar depthWrite: any = datas[Shader3D.DEPTH_WRITE];\r\n\t\tdepthWrite = depthWrite ?? RenderState.Default.depthWrite;\r\n\t\tRenderStateContext.setDepthMask(depthWrite);\r\n\r\n\t\tvar depthTest: any = datas[Shader3D.DEPTH_TEST];\r\n\t\tdepthTest = depthTest ?? RenderState.Default.depthTest;\r\n\t\tif (depthTest === RenderState.DEPTHTEST_OFF) {\r\n\t\t\tRenderStateContext.setDepthTest(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tRenderStateContext.setDepthTest(true);\r\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\r\n\t\t}\r\n\r\n\t\t//Stencil\r\n\t\tvar stencilWrite: any = datas[Shader3D.STENCIL_WRITE];\r\n\t\tstencilWrite = stencilWrite ?? RenderState.Default.stencilWrite;\r\n\t\tRenderStateContext.setStencilMask(stencilWrite);\r\n\t\tif (stencilWrite) {\r\n\t\t\tvar stencilOp: any = datas[Shader3D.STENCIL_Op];\r\n\t\t\tstencilOp = stencilOp ?? RenderState.Default.stencilOp;\r\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\r\n\t\t}\r\n\r\n\t\tvar stencilTest: any = datas[Shader3D.STENCIL_TEST];\r\n\t\tstencilTest = stencilTest ?? RenderState.Default.stencilTest;\r\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\r\n\t\t\tRenderStateContext.setStencilTest(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvar stencilRef: any = datas[Shader3D.STENCIL_Ref];\r\n\t\t\tstencilRef = stencilRef ?? RenderState.Default.stencilRef;\r\n\t\t\tRenderStateContext.setStencilTest(true);\r\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\r\n\t\t}\r\n\r\n\t\t//blend\r\n\t\tvar blend: any = datas[Shader3D.BLEND];\r\n\t\tblend = blend ?? RenderState.Default.blend;\r\n\t\tswitch (blend) {\r\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\r\n\t\t\t\tvar blendEquation: any = datas[Shader3D.BLEND_EQUATION];\r\n\t\t\t\tblendEquation = blendEquation ?? RenderState.Default.blendEquation;\r\n\t\t\t\tvar srcBlend: any = datas[Shader3D.BLEND_SRC];\r\n\t\t\t\tsrcBlend = srcBlend ?? RenderState.Default.srcBlend;\r\n\t\t\t\tvar dstBlend: any = datas[Shader3D.BLEND_DST];\r\n\t\t\t\tdstBlend = dstBlend ?? RenderState.Default.dstBlend;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\r\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\r\n\t\t\t\tvar blendEquationRGB: any = datas[Shader3D.BLEND_EQUATION_RGB];\r\n\t\t\t\tblendEquationRGB = blendEquationRGB ?? RenderState.Default.blendEquationRGB;\r\n\r\n\t\t\t\tvar blendEquationAlpha: any = datas[Shader3D.BLEND_EQUATION_ALPHA];\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha ?? RenderState.Default.blendEquationAlpha;\r\n\r\n\t\t\t\tvar srcRGB: any = datas[Shader3D.BLEND_SRC_RGB];\r\n\t\t\t\tsrcRGB = srcRGB ?? RenderState.Default.srcBlendRGB;\r\n\r\n\t\t\t\tvar dstRGB: any = datas[Shader3D.BLEND_DST_RGB];\r\n\t\t\t\tdstRGB = dstRGB ?? RenderState.Default.dstBlendRGB;\r\n\r\n\t\t\t\tvar srcAlpha: any = datas[Shader3D.BLEND_SRC_ALPHA];\r\n\t\t\t\tsrcAlpha = srcAlpha ?? RenderState.Default.srcBlendAlpha;\r\n\r\n\t\t\t\tvar dstAlpha: any = datas[Shader3D.BLEND_DST_ALPHA];\r\n\t\t\t\tdstAlpha = dstAlpha ?? RenderState.Default.dstBlendAlpha;\r\n\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_DISABLE:\r\n\t\t\tdefault:\r\n\t\t\t\tRenderStateContext.setBlend(false);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tuploadRenderStateFrontFace(shaderDatas: ShaderData, isTarget: boolean, invertFront: boolean): void {\r\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\t\tvar cull: any = datas[Shader3D.CULL];\r\n\t\tif ((<ShaderPass>this._shaderPass).statefirst) {\r\n\t\t\tcull = renderState.cull ?? cull;\r\n\t\t}\r\n\t\tcull = cull ?? RenderState.Default.cull;\r\n\t\tvar forntFace: number;\r\n\t\tswitch (cull) {\r\n\t\t\tcase RenderState.CULL_NONE:\r\n\t\t\t\tRenderStateContext.setCullFace(false);\r\n\t\t\t\tif (isTarget != invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.CULL_FRONT:\r\n\t\t\t\tRenderStateContext.setCullFace(true);\r\n\t\t\t\tif (isTarget == invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.CULL_BACK:\r\n\t\t\tdefault:\r\n\t\t\t\tRenderStateContext.setCullFace(true);\r\n\t\t\t\tif (isTarget != invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tuploadCustomUniform(index: number, data: any): void {\r\n\t\tLayaGL.renderEngine.uploadCustomUniforms(this._renderShaderInstance, this._customUniformParamsMap, index, data);\r\n\t}\r\n}\r\n\r\n","/**\r\n *  <code>shaderVariable</code> 类用于保存shader变量上传相关信息。\r\n */\r\nexport class ShaderVariable {\r\n\tstatic pointID: number = 0;\r\n\t/**@internal */\r\n\tname: string;\r\n\t/**@internal */\r\n\ttype: number;\r\n\t/**@internal */\r\n\tlocation: number;\r\n\t/**@internal */\r\n\tisArray: boolean;\r\n\t/**@internal */\r\n\ttextureID: number;\r\n\t/**@internal */\r\n\tdataOffset: number;\r\n\r\n\t/**@internal */\r\n\tcaller: any;\r\n\t/**@internal */\r\n\tfun: any;\r\n\t/**@internal */\r\n\tuploadedValue: any[];\r\n\t/**@internal */\r\n\tonID: number;\r\n\r\n\t/**\r\n\t * 创建一个 <code>shaderVariable</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.onID = ShaderVariable.pointID++;\r\n\t\tthis.textureID = -1;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { ITexture3DContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * 3D 纹理\r\n */\r\nexport class Texture3D extends BaseTexture {\r\n\r\n    private static _defaultTexture: Texture3D;\r\n\r\n    static get defaultTexture() {\r\n        return this._defaultTexture;\r\n    }\r\n\r\n    /** @internal */\r\n    static __init__() {\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.Texture3D)) {\r\n            this._defaultTexture = new Texture3D(1, 1, 1, TextureFormat.R8G8B8A8, false, false);\r\n            this._defaultTexture.lock = true;\r\n\r\n            this._defaultTexture.setPixelsData(new Uint8Array([255, 255, 255, 255]));\r\n        }\r\n    }\r\n\r\n    depth: number;\r\n\r\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Tex3D;\r\n        this.depth = depth;\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n\r\n        this._texture = context.createTexture3DInternal(this._dimension, width, height, depth, format, mipmap, sRGB, false);\r\n    }\r\n\r\n    /**\r\n    * 设置像素数据\r\n    * @param source 像素数据\r\n    */\r\n    setPixelsData(source: ArrayBufferView) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DPixelsData(texture, source, this.depth, false, false)\r\n    }\r\n\r\n    /**\r\n     * 更新像素数据\r\n     * @param xOffset x 偏移\r\n     * @param yOffset y 偏移\r\n     * @param zOffset z 偏移\r\n     * @param width 更新数据宽度\r\n     * @param height 更新数据高度\r\n     * @param depth 更新数据深度层级\r\n     * @param pixels 像素数据\r\n     * @param mipmapLevel mipmap 等级\r\n     * @param generateMipmap 是否生成 mipmap\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, false, false);\r\n    }\r\n\r\n}","export class Base64Tool {\r\n\r\n    static chars: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    static reg = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;\r\n    static reghead = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,/i;\r\n\r\n    // Use a lookup table to find the index.\r\n    static lookup: Uint8Array = null;\r\n\r\n    static init(): void {\r\n        if (Base64Tool.lookup)\r\n            return;\r\n        Base64Tool.lookup = new Uint8Array(256)\r\n        for (var i: number = 0; i < Base64Tool.chars.length; i++) {\r\n            Base64Tool.lookup[Base64Tool.chars.charCodeAt(i)] = i;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断字符串是否是 base64\r\n     * @param str \r\n     */\r\n    static isBase64String(str: string): boolean {\r\n        return Base64Tool.reg.test(str);\r\n    }\r\n\r\n    /**\r\n     * 编码ArrayBuffer \r\n     * @param arraybuffer\r\n     * @return \r\n     * \r\n     */\r\n    static encode(arraybuffer: ArrayBuffer): string {\r\n        var bytes: Uint8Array = new Uint8Array(arraybuffer), i: number, len: number = bytes[\"length\"], base64: string = \"\";\r\n\r\n        for (i = 0; i < len; i += 3) {\r\n            base64 += Base64Tool.chars[bytes[i] >> 2];\r\n            base64 += Base64Tool.chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n            base64 += Base64Tool.chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n            base64 += Base64Tool.chars[bytes[i + 2] & 63];\r\n        }\r\n\r\n        if ((len % 3) === 2) {\r\n            base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n        }\r\n        else if (len % 3 === 1) {\r\n            base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n        }\r\n\r\n        return base64;\r\n    }\r\n\r\n    /**\r\n     * 解码成ArrayBuffer \r\n     * @param base64\r\n     * @return \r\n     * \r\n     */\r\n    static decode(base64: string): ArrayBuffer {\r\n        Base64Tool.init();\r\n        var bufferLength: number = base64.length * 0.75, len: number = base64.length, i: number, p: number = 0, encoded1: number, encoded2: number, encoded3: number, encoded4: number;\r\n\r\n        if (base64[base64.length - 1] === \"=\") {\r\n            bufferLength--;\r\n            if (base64[base64.length - 2] === \"=\") {\r\n                bufferLength--;\r\n            }\r\n        }\r\n\r\n        var arraybuffer: ArrayBuffer = new ArrayBuffer(bufferLength), bytes: Uint8Array = new Uint8Array(arraybuffer);\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n            encoded1 = Base64Tool.lookup[base64.charCodeAt(i)];\r\n            encoded2 = Base64Tool.lookup[base64.charCodeAt(i + 1)];\r\n            encoded3 = Base64Tool.lookup[base64.charCodeAt(i + 2)];\r\n            encoded4 = Base64Tool.lookup[base64.charCodeAt(i + 3)];\r\n\r\n            if(p + 1 > bufferLength) continue;\r\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n            if(p + 1 > bufferLength) continue;\r\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n            if(p + 1 > bufferLength) continue;\r\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n        }\r\n\r\n        return arraybuffer;\r\n    }\r\n\r\n}","\r\nfunction arrayBufferSlice(this: ArrayBuffer, start: number, end: number): ArrayBuffer {\r\n    var arrU8List: Uint8Array = new Uint8Array(this, start, end - start);\r\n    var newU8List: Uint8Array = new Uint8Array(arrU8List.length);\r\n    newU8List.set(arrU8List);\r\n    return newU8List.buffer;\r\n}\r\n\r\nfunction uint8ArraySlice(this: Uint8Array): Uint8Array {\r\n    var sz: number = this.length;\r\n    var dec: Uint8Array = new Uint8Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction float32ArraySlice(this: Float32Array): Float32Array {\r\n    var sz: number = this.length;\r\n    var dec: Float32Array = new Float32Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction uint16ArraySlice(this: Uint16Array, ...arg: any[]): Uint16Array {\r\n    var sz: number;\r\n    var dec: Uint16Array;\r\n    var i: number;\r\n    if (arg.length === 0) {\r\n        sz = this.length;\r\n        dec = new Uint16Array(sz);\r\n        for (i = 0; i < sz; i++)\r\n            dec[i] = this[i];\r\n\r\n    } else if (arg.length === 2) {\r\n        var start: number = arg[0];\r\n        var end: number = arg[1];\r\n\r\n        if (end > start) {\r\n            sz = end - start;\r\n            dec = new Uint16Array(sz);\r\n            for (i = start; i < end; i++)\r\n                dec[i - start] = this[i];\r\n        } else {\r\n            dec = new Uint16Array(0);\r\n        }\r\n    }\r\n    return dec;\r\n}\r\n\r\nArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = arrayBufferSlice);\r\nFloat32Array.prototype.slice || (Float32Array.prototype.slice = float32ArraySlice);\r\nUint16Array.prototype.slice || (Uint16Array.prototype.slice = uint16ArraySlice);\r\nUint8Array.prototype.slice || (Uint8Array.prototype.slice = uint8ArraySlice);","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n * <code>Log</code> 类用于在界面内显示日志记录信息。\r\n * 注意：在加速器内不可使用\r\n */\r\nexport class Log {\r\n\r\n    /**@private */\r\n    private static _logdiv: any;\r\n    /**@private */\r\n    private static _btn: any;\r\n    /**@private */\r\n    private static _count: number = 0;\r\n    /**最大打印数量，超过这个数量，则自动清理一次，默认为50次*/\r\n    static maxCount: number = 50;\r\n    /**是否自动滚动到底部，默认为true*/\r\n    static autoScrollToBottom: boolean = true;\r\n\r\n    /**\r\n     * 激活Log系统，使用方法Laya.init(800,600,Laya.Log);\r\n     */\r\n    static enable(): void {\r\n        if (!Log._logdiv) {\r\n            Log._logdiv = Browser.createElement('div');\r\n            Log._logdiv.style.cssText = \"border:white;padding:4px;overflow-y:auto;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;\";\r\n            Browser.document.body.appendChild(Log._logdiv);\r\n\r\n            Log._btn = Browser.createElement(\"button\");\r\n            Log._btn.innerText = \"Hide\";\r\n            Log._btn.style.cssText = \"z-index:1000001;position: absolute;left:10px;top:10px;\";\r\n            Log._btn.onclick = Log.toggle;\r\n            Browser.document.body.appendChild(Log._btn);\r\n        }\r\n    }\r\n\r\n    /**隐藏/显示日志面板*/\r\n    static toggle(): void {\r\n        var style: any = Log._logdiv.style;\r\n        if (style.display === \"\") {\r\n            Log._btn.innerText = \"Show\";\r\n            style.display = \"none\";\r\n        } else {\r\n            Log._btn.innerText = \"Hide\";\r\n            style.display = \"\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 增加日志内容。\r\n     * @param\tvalue 需要增加的日志内容。\r\n     */\r\n    static print(value: string): void {\r\n        if (Log._logdiv) {\r\n            //内容太多清理掉\r\n            if (Log._count >= Log.maxCount) Log.clear();\r\n            Log._count++;\r\n\r\n            Log._logdiv.innerText += value + \"\\n\";\r\n            //自动滚动\r\n            if (Log.autoScrollToBottom) {\r\n                if (Log._logdiv.scrollHeight - Log._logdiv.scrollTop - Log._logdiv.clientHeight < 50) {\r\n                    Log._logdiv.scrollTop = Log._logdiv.scrollHeight;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理日志\r\n     */\r\n    static clear(): void {\r\n        Log._logdiv.innerText = \"\";\r\n        Log._count = 0;\r\n    }\r\n}\r\n\r\n","//import { PerfHUD } from \"./PerfHUD\";\r\nlet DATANUM = 300;\r\n/**\r\n * @internal\r\n */\r\nexport class PerfData {\r\n    id: number;\r\n    name: string;\r\n    color: number;\r\n    scale: number = 1.0;\r\n    datas: any[] = new Array(DATANUM);\r\n    datapos: number = 0;\r\n    constructor(id: number, color: number, name: string, scale: number) {\r\n        this.id = id;\r\n        this.color = color;\r\n        this.name = name;\r\n        this.scale = scale;\r\n    }\r\n    addData(v: number): void {\r\n        this.datas[this.datapos] = v;\r\n        this.datapos++;\r\n        this.datapos %= DATANUM;\r\n    }\r\n}\r\n\r\n","import { PerfData } from \"./PerfData\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Context } from \"../resource/Context\"\r\n/**\r\n * @internal\r\n */\r\nexport class PerfHUD extends Sprite {\r\n    private static _lastTm: number = 0;\t//perf Data\r\n    private static _now: () => number = null;\r\n    private datas: any[] = [];\r\n    static DATANUM: number = 300;\r\n\r\n    xdata: any[] = new Array(PerfHUD.DATANUM);\r\n    ydata: any[] = new Array(PerfHUD.DATANUM);\r\n\r\n    hud_width: number = 800;\r\n    hud_height: number = 200;\r\n\r\n    gMinV: number = 0;\r\n    gMaxV: number = 100;\r\n\r\n    private textSpace: number = 40;\t//留给刻度文字的\r\n    static inst: PerfHUD;\r\n\r\n    private _now: Function;\r\n    private sttm: number = 0;\r\n\r\n    static drawTexTm: number = 0;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        super();\r\n        PerfHUD.inst = this;\r\n        this._renderType |= SpriteConst.CUSTOM;\r\n        this._setCustomRender();\r\n\r\n        this.addDataDef(0, 0xffffff, 'frame', 1.0);\r\n        this.addDataDef(1, 0x00ff00, 'update', 1.0);\r\n        this.addDataDef(2, 0xff0000, 'flush', 1.0);\r\n        PerfHUD._now = performance ? performance.now.bind(performance) : Date.now;\r\n    }\r\n\r\n    //TODO:coverage\r\n    now(): number {\r\n        return PerfHUD._now();\r\n    }\r\n\r\n    //TODO:coverage\r\n    start(): void {\r\n        this.sttm = PerfHUD._now();\r\n    }\r\n\r\n    //TODO:coverage\r\n    end(i: number): void {\r\n        var dt: number = PerfHUD._now() - this.sttm;\r\n        this.updateValue(i, dt);\r\n    }\r\n\r\n    //TODO:coverage\r\n    config(w: number, h: number): void {\r\n        this.hud_width = w;\r\n        this.hud_height = h;\r\n    }\r\n\r\n    //TODO:coverage\r\n    addDataDef(id: number, color: number, name: string, scale: number): void {\r\n        this.datas[id] = new PerfData(id, color, name, scale);\r\n    }\r\n\r\n    //TODO:coverage\r\n    updateValue(id: number, v: number): void {\r\n        this.datas[id].addData(v);\r\n    }\r\n\r\n    //TODO:coverage\r\n    v2y(v: number): number {\r\n        var bb: number = this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n        return this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n    }\r\n\r\n    //TODO:coverage\r\n    drawHLine(ctx: Context, v: number, color: string, text: string): void {\r\n        var sx: number = this._x;\r\n        var ex: number = this._x + this.hud_width;\r\n        var sy: number = this.v2y(v);\r\n        ctx.fillText(text, sx, sy - 6, null, 'green', null);\r\n        sx += this.textSpace;\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(sx, sy, this._x + this.hud_width, 1, null);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * \r\n     * @param ctx \r\n     * @param x \r\n     * @param y \r\n     * @override\r\n     */\r\n    customRender(ctx: Context, x: number, y: number): void {\r\n        var now: number = performance.now();;\r\n        if (PerfHUD._lastTm <= 0) PerfHUD._lastTm = now;\r\n        this.updateValue(0, now - PerfHUD._lastTm);\r\n        PerfHUD._lastTm = now;\r\n\r\n        ctx.save();\r\n        ctx.fillRect(this._x, this._y, this.hud_width, this.hud_height + 4, '#000000cc');\r\n        ctx.globalAlpha = 0.9;\r\n        /*\r\n        for ( var i = 0; i < gMaxV; i+=30) {\r\n            drawHLine(ctx, i, 'green', '' + i);// '' + Math.round(1000 / (i + 1)));\r\n        }\r\n        */\r\n        this.drawHLine(ctx, 0, 'green', '    0');\r\n        this.drawHLine(ctx, 10, 'green', '  10');\r\n        this.drawHLine(ctx, 16.667, 'red', ' ');\r\n        this.drawHLine(ctx, 20, 'green', '50|20');\r\n        this.drawHLine(ctx, 16.667 * 2, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 3, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 4, 'yellow', '');\r\n        this.drawHLine(ctx, 50, 'green', '20|50');\r\n        this.drawHLine(ctx, 100, 'green', '10|100');\r\n\r\n        //数据\r\n        for (var di: number = 0, sz: number = this.datas.length; di < sz; di++) {\r\n            var cd: PerfData = this.datas[di];\r\n            if (!cd) continue;\r\n            var dtlen: number = cd.datas.length;\r\n            var dx: number = (this.hud_width - this.textSpace) / dtlen;\r\n            var cx: number = cd.datapos;\r\n            var _cx: number = this._x + this.textSpace;\r\n            ctx.fillStyle = cd.color;\r\n            //开始部分\r\n            /*\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = cd.color;\r\n            ctx.moveTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n            cx++;\r\n            _cx += dx;\r\n            for ( var dtsz:int = dtlen; cx < dtsz; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx] * cd.scale));\r\n                _cx += dx;\r\n            }\r\n            ctx.stroke();\r\n            */\r\n            for (var dtsz: number = dtlen; cx < dtsz; cx++) {\r\n                var sty: number = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                sty = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n\r\n        }\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\n","import { CacheManger } from \"./CacheManger\";\r\nimport { Pool } from \"./Pool\";\r\n\r\n/**\r\n * @private\r\n * 基于个数的对象缓存管理器\r\n */\r\nexport class PoolCache {\r\n\r\n    //TODO:\r\n    /**\r\n     * 对象在Pool中的标识\r\n     */\r\n    sign: string;\r\n    /**\r\n     * 允许缓存的最大数量\r\n     */\r\n    maxCount: number = 1000;\r\n\r\n    /**\r\n     * 获取缓存的对象列表\r\n     * @return\r\n     *\r\n     */\r\n    getCacheList(): any[] {\r\n        return Pool.getPoolBySign(this.sign);\r\n    }\r\n\r\n    /**\r\n     * 尝试清理缓存\r\n     * @param force 是否强制清理\r\n     *\r\n     */\r\n    tryDispose(force: boolean): void {\r\n        var list: any[];\r\n        list = Pool.getPoolBySign(this.sign);\r\n        if (list.length > this.maxCount) {\r\n            list.splice(this.maxCount, list.length - this.maxCount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加对象缓存管理\r\n     * @param sign 对象在Pool中的标识\r\n     * @param maxCount 允许缓存的最大数量\r\n     *\r\n     */\r\n    static addPoolCacheManager(sign: string, maxCount: number = 100): void {\r\n        var cache: PoolCache;\r\n        cache = new PoolCache();\r\n        cache.sign = sign;\r\n        cache.maxCount = maxCount;\r\n        CacheManger.regCacheByFunction(cache.tryDispose.bind(cache), cache.getCacheList.bind(cache));\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * <code>SingletonList</code> 类用于实现单例队列。\r\n */\r\nexport class SingletonList<T> {\r\n    /**@internal [只读]*/\r\n    elements: Array<T> = [];\r\n    /** @internal [只读]*/\r\n    length: number = 0;\r\n\r\n    /**\r\n     * 创建一个新的 <code>SingletonList</code> 实例。\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _add(element: T): void {\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    add(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if ((typeof (element) != \"number\") && index != -1 && index < this.length)\r\n            return;\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n        this.length++;\r\n    }\r\n\r\n    indexof(element:T){\r\n        let index = this.elements.indexOf(element);\r\n        if(index!=-1&&index<this.length)\r\n            return index;\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param element \r\n     */\r\n    remove(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if (index != -1 && index < this.length) {\r\n            this.elements[index] = this.elements[this.length - 1];\r\n            this.length--;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clear(){\r\n        this.elements = [];\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clean(){\r\n        this.elements.length = this.length;\r\n    }\r\n\r\n    destroy() {\r\n        this.elements = null;\r\n    }\r\n}\r\n\r\n\r\nexport class FastSinglelist<T> extends SingletonList<T> {\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    add(element: T): void {\r\n        this._add(element);\r\n        this.length ++;\r\n    }\r\n  \r\n  }","import { Pool } from \"./Pool\";\r\nimport { Tween } from \"./Tween\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Utils } from \"./Utils\";\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 整个缓动结束的时候会调度\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当缓动到达标签时会调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>TimeLine</code> 是一个用来创建时间轴动画的类。\r\n */\r\nexport class TimeLine extends EventDispatcher {\r\n\r\n    private _labelDic: any;\r\n    private _tweenDic: any = {};\r\n    private _tweenDataList: any[] = [];\r\n    private _endTweenDataList: any[];//以结束时间进行排序\r\n    private _currTime: number = 0;\r\n    private _lastTime: number = 0;\r\n    private _startTime: number = 0;\r\n    /**当前动画数据播放到第几个了*/\r\n    private _index: number = 0;\r\n    /**为TWEEN创建属于自己的唯一标识，方便管理*/\r\n    private _gidIndex: number = 0;\r\n    /**保留所有对象第一次注册动画时的状态（根据时间跳转时，需要把对象的恢复，再计算接下来的状态）*/\r\n    private _firstTweenDic: any = {};\r\n    /**是否需要排序*/\r\n    private _startTimeSort: boolean = false;\r\n    private _endTimeSort: boolean = false;\r\n    /**是否循环*/\r\n    private _loopKey: boolean = false;\r\n    /** 缩放动画播放的速度。*/\r\n    scale: number = 1;\r\n\r\n    private _frameRate: number = 60;\r\n    private _frameIndex: number = 0;\r\n    private _total: number = 0;\r\n\r\n    /**\r\n     * 控制一个对象，从当前点移动到目标点。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).to(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * 从 props 属性，缓动到当前状态。\r\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\r\n     * @param\tprops\t\t要控制对象的属性\r\n     * @param\tduration\t对象TWEEN的时间\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).from(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * 控制一个对象，从当前点移动到目标点。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, true);\r\n    }\r\n\r\n    /**\r\n     * 从 props 属性，缓动到当前状态。\r\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\r\n     * @param\tprops\t\t要控制对象的属性\r\n     * @param\tduration\t对象TWEEN的时间\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, false);\r\n    }\r\n\r\n    /** @private */\r\n    private _create(target: any, props: any, duration: number, ease: Function, offset: number, isTo: boolean): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.isTo = isTo;\r\n        tTweenData.type = 0;\r\n        tTweenData.target = target;\r\n        tTweenData.duration = duration;\r\n        tTweenData.data = props;\r\n        tTweenData.startTime = this._startTime + offset;\r\n        tTweenData.endTime = tTweenData.startTime + tTweenData.duration;\r\n        tTweenData.ease = ease;\r\n        this._startTime = Math.max(tTweenData.endTime, this._startTime);\r\n        this._tweenDataList.push(tTweenData);\r\n        this._startTimeSort = true;\r\n        this._endTimeSort = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 在时间队列中加入一个标签。\r\n     * @param\tlabel\t标签名称。\r\n     * @param\toffset\t标签相对于上个动画的偏移时间(单位：毫秒)。\r\n     */\r\n    addLabel(label: string, offset: number): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.type = 1;\r\n        tTweenData.data = label;\r\n        tTweenData.endTime = tTweenData.startTime = this._startTime + offset;\r\n        this._labelDic || (this._labelDic = {});\r\n        this._labelDic[label] = tTweenData;\r\n        this._tweenDataList.push(tTweenData);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除指定的标签\r\n     * @param\tlabel\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (this._labelDic && this._labelDic[label]) {\r\n            var tTweenData: tweenData = this._labelDic[label];\r\n            if (tTweenData) {\r\n                var tIndex: number = this._tweenDataList.indexOf(tTweenData);\r\n                if (tIndex > -1) {\r\n                    this._tweenDataList.splice(tIndex, 1);\r\n                }\r\n            }\r\n            delete this._labelDic[label];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 动画从整个动画的某一时间开始。\r\n     * @param\ttime(单位：毫秒)。\r\n     */\r\n    gotoTime(time: number): void {\r\n        if (this._tweenDataList == null || this._tweenDataList.length == 0) return;\r\n        var tTween: Tween;\r\n        var tObject: any;\r\n        for (var p in this._firstTweenDic) {\r\n            tObject = this._firstTweenDic[p];\r\n            if (tObject) {\r\n                for (var tDataP in tObject) {\r\n                    if (tDataP in tObject.diyTarget) {\r\n                        tObject.diyTarget[tDataP] = tObject[tDataP];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this._currTime = time;\r\n        this._lastTime = Browser.now();\r\n        var tTweenDataCopyList: any[];\r\n        if (this._endTweenDataList == null || this._endTimeSort) {\r\n            this._endTimeSort = false;\r\n            this._endTweenDataList = tTweenDataCopyList = this._tweenDataList.concat();\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.endTime > paraB.endTime) {\r\n                    return 1;\r\n                } else if (paraA.endTime < paraB.endTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            tTweenDataCopyList.sort(Compare);\r\n        } else {\r\n            tTweenDataCopyList = this._endTweenDataList\r\n        }\r\n\r\n        var tTweenData: tweenData;\r\n        //叠加已经经过的关键帧数据\r\n        for (var i: number = 0, n: number = tTweenDataCopyList.length; i < n; i++) {\r\n            tTweenData = tTweenDataCopyList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    //把经历过的属性加入到对象中\r\n                    var props: any = tTweenData.data;\r\n                    if (tTweenData.isTo) {\r\n                        for (var tP in props) {\r\n                            tTweenData.target[tP] = props[tP];\r\n                        }\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //创建当前正在行动的TWEEN;\r\n        for (i = 0, n = this._tweenDataList.length; i < n; i++) {\r\n            tTweenData = this._tweenDataList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.startTime && time < tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(this._currTime - (time - tTweenData.startTime));\r\n                    tTween._updateEase(this._currTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从指定的标签开始播。\r\n     * @param\tLabel 标签名。\r\n     */\r\n    gotoLabel(Label: string): void {\r\n        if (this._labelDic == null) return;\r\n        var tLabelData: tweenData = this._labelDic[Label];\r\n        if (tLabelData) this.gotoTime(tLabelData.startTime);\r\n    }\r\n\r\n    /**\r\n     * 暂停整个动画。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 恢复暂停动画的播放。\r\n     */\r\n    resume(): void {\r\n        this.play(this._currTime, this._loopKey);\r\n    }\r\n\r\n    /**\r\n     * 播放动画。\r\n     * @param\ttimeOrLabel 开启播放的时间点或标签名。\r\n     * @param\tloop 是否循环播放。\r\n     */\r\n    play(timeOrLabel: any = 0, loop: boolean = false): void {\r\n        if (!this._tweenDataList) return;\r\n        if (this._startTimeSort) {\r\n            this._startTimeSort = false;\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.startTime > paraB.startTime) {\r\n                    return 1;\r\n                } else if (paraA.startTime < paraB.startTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            this._tweenDataList.sort(Compare);\r\n\r\n            for (var i: number = 0, n: number = this._tweenDataList.length; i < n; i++) {\r\n                var tTweenData: tweenData = this._tweenDataList[i];\r\n                if (tTweenData != null && tTweenData.type == 0) {\r\n                    var tTarget: any = tTweenData.target;\r\n                    var gid: number = (tTarget.$_GID || (tTarget.$_GID = Utils.getGID()));\r\n                    var tSrcData: any = null;\r\n                    //把对象的初始属性保留下来，方便跳转时，回复到初始状态\r\n                    if (this._firstTweenDic[gid] == null) {\r\n                        tSrcData = {};\r\n                        tSrcData.diyTarget = tTarget;\r\n                        this._firstTweenDic[gid] = tSrcData;\r\n                    } else {\r\n                        tSrcData = this._firstTweenDic[gid];\r\n                    }\r\n                    for (var p in tTweenData.data) {\r\n                        if (tSrcData[p] == null) {\r\n                            tSrcData[p] = tTarget[p];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (typeof (timeOrLabel) == 'string') {\r\n            this.gotoLabel(timeOrLabel);\r\n        } else {\r\n            this.gotoTime(timeOrLabel);\r\n        }\r\n        this._loopKey = loop;\r\n        this._lastTime = Browser.now();\r\n        ILaya.timer.frameLoop(1, this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 更新当前动画。\r\n     */\r\n    private _update(): void {\r\n        if (this._currTime >= this._startTime) {\r\n            if (this._loopKey) {\r\n                this._complete();\r\n                if (!this._tweenDataList) return;\r\n                this.gotoTime(0);\r\n            } else {\r\n                for (var p in this._tweenDic) {\r\n                    tTween = this._tweenDic[p];\r\n                    tTween.complete();\r\n                }\r\n                this.pause();\r\n                this._complete();\r\n                return;\r\n            }\r\n        }\r\n\r\n        var tNow: number = Browser.now();\r\n        var tFrameTime: number = tNow - this._lastTime;\r\n        var tCurrTime: number = this._currTime += tFrameTime * this.scale;\r\n        this._lastTime = tNow;\r\n\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween._updateEase(tCurrTime);\r\n        }\r\n\r\n        var tTween: Tween;\r\n        if (this._tweenDataList.length != 0 && this._index < this._tweenDataList.length) {\r\n            var tTweenData: tweenData = this._tweenDataList[this._index];\r\n            if (tCurrTime >= tTweenData.startTime) {\r\n                this._index++;\r\n                //创建TWEEN\r\n                if (tTweenData.type == 0) {\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(tCurrTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                    tTween._updateEase(tCurrTime);\r\n                } else {\r\n                    this.event(Event.LABEL, tTweenData.data);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 指定的动画索引处的动画播放完成后，把此动画从列表中删除。\r\n     * @param\tindex\r\n     */\r\n    private _animComplete(index: number): void {\r\n        var tTween: Tween = this._tweenDic[index];\r\n        if (tTween) delete this._tweenDic[index];\r\n    }\r\n\r\n    /** @private */\r\n    private _complete(): void {\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 得到帧索引\r\n     */\r\n    get index(): number {\r\n        return this._frameIndex;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置帧索引\r\n     */\r\n    set index(value: number) {\r\n        this._frameIndex = value;\r\n        this.gotoTime(this._frameIndex / this._frameRate * 1000);\r\n    }\r\n\r\n    /**\r\n     * 得到总帧数。\r\n     */\r\n    get total(): number {\r\n        this._total = Math.floor(this._startTime / 1000 * this._frameRate);\r\n        return this._total;\r\n    }\r\n\r\n    /**\r\n     * 重置所有对象，复用对象的时候使用。\r\n     */\r\n    reset(): void {\r\n        var p: any;\r\n        if (this._labelDic) {\r\n            for (p in this._labelDic) {\r\n                delete this._labelDic[p];\r\n            }\r\n        }\r\n        var tTween: Tween;\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        for (p in this._firstTweenDic) {\r\n            delete this._firstTweenDic[p];\r\n        }\r\n        this._endTweenDataList = null;\r\n        if (this._tweenDataList && this._tweenDataList.length) {\r\n            var i: number, len: number;\r\n            len = this._tweenDataList.length;\r\n            for (i = 0; i < len; i++) {\r\n                if (this._tweenDataList[i])\r\n                    this._tweenDataList[i].destroy();\r\n            }\r\n        }\r\n        this._tweenDataList.length = 0;\r\n        this._currTime = 0;\r\n        this._lastTime = 0;\r\n        this._startTime = 0;\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this.scale = 1;\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 彻底销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.reset();\r\n        this._labelDic = null;\r\n        this._tweenDic = null;\r\n        this._tweenDataList = null;\r\n        this._firstTweenDic = null;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nclass tweenData {\r\n    type: number = 0;//0代表TWEEN,1代表标签\r\n    isTo: boolean = true;\r\n    startTime: number;\r\n    endTime: number;\r\n    target: any;\r\n    duration: number;\r\n    ease: Function;\r\n    data: any;\r\n    destroy(): void {\r\n        this.target = null;\r\n        this.ease = null;\r\n        this.data = null;\r\n        this.isTo = true;\r\n        this.type = 0;\r\n        Pool.recover(\"tweenData\", this);\r\n    }\r\n}\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制粒子\r\n * @private\r\n */\r\nexport class DrawParticleCmd {\r\n    static ID: string = \"DrawParticleCmd\";\r\n\r\n    private _templ: any;\r\n\r\n    /**@private */\r\n    static create(_temp: any): DrawParticleCmd {\r\n        var cmd: DrawParticleCmd = Pool.getItemByClass(\"DrawParticleCmd\", DrawParticleCmd);\r\n        cmd._templ = _temp;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this._templ = null;\r\n        Pool.recover(\"DrawParticleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        //这个只有webgl在用\r\n        context.drawParticle(gx, gy, this._templ);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawParticleCmd.ID;\r\n    }\r\n}\r\n\r\n","import { CommandUniformMap, UniformData } from \"../../../RenderEngine/CommandUniformMap\";\r\n\r\nexport class NativeCommandUniformMap extends CommandUniformMap {\r\n\r\n\tprivate _nativeObj: any;\r\n\r\n\tconstructor(_nativeObj: any, stateName: string) {\r\n\t\tsuper(stateName);\r\n\t\tthis._nativeObj = _nativeObj;\r\n\t}\r\n\thasPtrID(propertyID: number): boolean {\r\n\t\treturn this._nativeObj.hasPtrID(propertyID);\r\n\t}\r\n\r\n\tgetMap(): Record<number, UniformData> {\r\n\t\treturn this._idata;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个UniformMap\r\n\t * @internal\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderUniform(propertyID: number, propertyKey: string): void {\r\n\t\t//this._idata[propertyID] = propertyKey;\r\n\t\tthis._nativeObj.addShaderUniform(propertyID, propertyKey);\r\n\t}\r\n}","import { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n/**\r\n * WebglObject 基类\r\n */\r\nexport class NativeGLObject{\r\n    protected _engine:NativeWebGLEngine;\r\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    protected _id:number;\r\n    protected _destroyed: boolean = false;\r\n\r\n    constructor(engine: NativeWebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._id = this._engine._IDCounter++;\r\n    }\r\n\r\n    get destroyed():boolean{\r\n        return this._destroyed;\r\n    }\r\n\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    setResourceManager():void{\r\n    };\r\n\r\n    destroy():void{\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n    }\r\n\r\n}","\r\nimport { WebGLExtension } from \"../WebGLEngine/GLEnum/WebGLExtension\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\n\r\nexport class NativeGLTextureContext extends NativeGLObject implements ITextureContext {\r\n    needBitmap: boolean;\r\n    protected _native: any;\r\n\r\n    constructor(engine: NativeWebGLEngine, native: any) {\r\n        super(engine);\r\n        this._native = native;\r\n        this.needBitmap = false;\r\n    }\r\n\r\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        return this._native.createTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\r\n    }\r\n\r\n    setTextureImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        this._native.setTextureImageData(texture, (source as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexturePixelsData(texture: InternalTexture, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        this._native.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    initVideoTextureData(texture: InternalTexture): void {\r\n        this._native.initVideoTextureData(texture);\r\n    }\r\n\r\n    setTextureSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTextureSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTextureSubImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        throw new Error(\"setTextureSubImageData Method not implemented.\");\r\n    }\r\n\r\n    setTexture3DImageData(texture: InternalTexture, source: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DImageData(texture, (source as any[]).map(function (s) { return s._nativeObj }), depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexture3DPixlesData(texture: InternalTexture, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DPixlesData(texture, source, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexture3DSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTextureHDRData(texture: InternalTexture, hdrInfo: HDRTextureInfo): void {\r\n        let sourceData = hdrInfo.readScanLine();\r\n        throw new Error(\"setTextureHDRData Method not implemented.\");\r\n        this.setTexturePixelsData(texture, sourceData, false, false);\r\n    }\r\n    setTextureDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\r\n        this._native.setTextureKTXData(texture, ddsInfo);\r\n    }\r\n\r\n    setTextureKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\r\n        this._native.setTextureKTXData(texture, ktxInfo);\r\n    }\r\n    setCubeImageData(texture: InternalTexture, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        var images: any[] = [];\r\n        var length = sources.length;\r\n        for (let index = 0; index < length; index++) {\r\n            images.push((sources[index] as any)._nativeObj);\r\n        }\r\n        this._native.setCubeImageData(texture, images, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setCubePixelsData(texture: InternalTexture, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n    setCubeSubPixelData(texture: InternalTexture, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n\r\n    setCubeDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\r\n        this._native.setCubeDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    setCubeKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\r\n        this._native.setCubeKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    setTextureCompareMode(texture: InternalTexture, compareMode: TextureCompareMode): TextureCompareMode {\r\n        return this._native.setTextureCompareMode(texture, compareMode);\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: InternalRenderTarget, faceIndex: number = 0): void {\r\n        this._native.bindRenderTarget(renderTarget, faceIndex);\r\n    }\r\n\r\n    bindoutScreenTarget(): void {\r\n        this._native.bindoutScreenTarget();\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: InternalRenderTarget): void {\r\n        this._native.unbindRenderTarget(renderTarget);\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        return this._native.createRenderTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\r\n        return this._native.createRenderTargetInternal(width, height, colorFormat, depthStencilFormat ? depthStencilFormat : RenderTargetFormat.None, generateMipmap, sRGB, multiSamples);\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\r\n        return this._native.createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples);\r\n    }\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        throw new Error(\"createRenderTextureCubeInternal Method not implemented.\");\r\n    }\r\n    // todo  color 0, 1, 2, 3 ?\r\n    setupRendertargetTextureAttachment(renderTarget: InternalRenderTarget, texture: InternalTexture) {\r\n        this._native.setupRendertargetTextureAttachment(renderTarget, texture);\r\n    }\r\n\r\n    // todo 不同 格式\r\n    readRenderTargetPixelData(renderTarget: InternalRenderTarget, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\r\n        return this._native.readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out);\r\n    }\r\n\r\n    updateVideoTexture(texture: InternalTexture, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.updateVideoTexture(texture, (video as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    getRenderTextureData(internalTex: InternalRenderTarget, x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return this._native.getRenderTextureData(internalTex, x, y, width, height);\r\n    }\r\n}","import { NativeGLTextureContext } from \"./NativeGLTextureContext\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\n\r\n/**\r\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\r\n */\r\nexport class NativeGL2TextureContext extends NativeGLTextureContext {\r\n\r\n    constructor(engine: NativeWebGLEngine, native: any) {\r\n        super(engine, native);\r\n    }\r\n}","import { IndexFormat } from \"../../RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderGeometryElement } from \"../../RenderInterface/RenderPipelineInterface/IRenderGeometryElement\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n//TODO\r\nexport class NativeGLRenderDrawContext extends NativeGLObject implements IRenderDrawContext {\r\n    _nativeObj: any;\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n        this._nativeObj = new (window as any).conchGLRenderDrawContext((engine as any)._nativeObj);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElementsInstanced(mode: MeshTopology, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\r\n        this._nativeObj.drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawArraysInstanced(mode: MeshTopology, first: number, count: number, instanceCount: number): void {\r\n        this._nativeObj.drawArraysInstanced(mode, first, count, instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    drawArrays(mode: MeshTopology, first: number, count: number): void {\r\n        this._nativeObj.drawArrays(mode, first, count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElements(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        this._nativeObj.drawElements(mode, count, type, offset);\r\n    }\r\n\r\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        //todo\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawGeometryElement(geometryElement: IRenderGeometryElement): void {\r\n        this._nativeObj.drawGeometryElement((geometryElement as any)._nativeObj);\r\n    }\r\n\r\n\r\n}","import { BlendType } from \"../../../RenderEngine/RenderEnum/BlendType\";\r\nimport { RenderStateType } from \"../../../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\n\r\n/**\r\n * 渲染状态设置命令流\r\n */\r\nexport class NativeRenderStateCommand extends RenderStateCommand {\r\n    private _nativeObj: any;\r\n    constructor() {\r\n        super();\r\n        this._nativeObj = new (window as any).conchRenderStateCommand();\r\n    }\r\n\r\n    addCMD(renderstate: RenderStateType, value: any) {\r\n        switch (renderstate) {\r\n            case RenderStateType.DepthTest:\r\n            case RenderStateType.DepthMask:\r\n            case RenderStateType.DepthFunc:\r\n            case RenderStateType.StencilTest:\r\n            case RenderStateType.StencilMask:\r\n            case RenderStateType.BlendEquation:\r\n            case RenderStateType.CullFace:\r\n            case RenderStateType.FrontFace:\r\n                this._nativeObj.addCMDInt1(renderstate, value);\r\n                break;\r\n            case RenderStateType.StencilFunc:\r\n            case RenderStateType.BlendFunc:\r\n            case RenderStateType.BlendEquationSeparate:\r\n                this._nativeObj.addCMDInt2(renderstate, value[0], value[1]);\r\n                break;\r\n            case RenderStateType.StencilOp:\r\n                this._nativeObj.addCMDInt3(renderstate, value[0], value[1], value[2]);//TODO\r\n                break;\r\n            case RenderStateType.BlendType:\r\n                this._nativeObj.addCMDInt1(renderstate, value != BlendType.BLEND_DISABLE ? 1 : 0);\r\n                break;\r\n            case RenderStateType.BlendFuncSeperate:\r\n                this._nativeObj.addCMDInt4(renderstate, value[0], value[1], value[2], value[3]);\r\n                break;\r\n            default:\r\n                throw \"unknow type of renderStateType\";\r\n                break;\r\n        }\r\n    }\r\n\r\n    applyCMD() {\r\n        LayaGL.renderEngine.applyRenderStateCMD(this);\r\n    }\r\n\r\n    clear() {\r\n        this._nativeObj.clear();\r\n    }\r\n}","import { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\n\r\n\r\nexport class NativeRenderState {\r\n\t_nativeObj: any;\r\n\r\n\tset cull(value: number) {\r\n\t\tthis._nativeObj.cull = value;\r\n\t}\r\n\tget cull(): number {\r\n\t\treturn this._nativeObj.cull;\r\n\t}\r\n\r\n\tset blend(value: number) {\r\n\t\tthis._nativeObj.blend = value;\r\n\t}\r\n\tget blend(): number {\r\n\t\treturn this._nativeObj.blend;\r\n\t}\r\n\r\n\tset srcBlend(value: number) {\r\n\t\tthis._nativeObj.srcBlend = value;\r\n\t}\r\n\tget srcBlend(): number {\r\n\t\treturn this._nativeObj.srcBlend;\r\n\t}\r\n\r\n\tset dstBlend(value: number) {\r\n\t\tthis._nativeObj.dstBlend = value;\r\n\t}\r\n\tget dstBlend(): number {\r\n\t\treturn this._nativeObj.dstBlend;\r\n\t}\r\n\t\r\n\tset srcBlendRGB(value: number) {\r\n\t\tthis._nativeObj.srcBlendRGB = value;\r\n\t}\r\n\tget srcBlendRGB(): number {\r\n\t\treturn this._nativeObj.srcBlendRGB;\r\n\t}\r\n\t\r\n\tset dstBlendRGB(value: number) {\r\n\t\tthis._nativeObj.dstBlendRGB = value;\r\n\t}\r\n\tget dstBlendRGB(): number {\r\n\t\treturn this._nativeObj.dstBlendRGB;\r\n\t}\r\n\t\r\n\tset srcBlendAlpha(value: number) {\r\n\t\tthis._nativeObj.srcBlendAlpha = value;\r\n\t}\r\n\tget srcBlendAlpha(): number {\r\n\t\treturn this._nativeObj.srcBlendAlpha;\r\n\t}\r\n\t\r\n\tset dstBlendAlpha(value: number) {\r\n\t\tthis._nativeObj.dstBlendAlpha = value;\r\n\t}\r\n\tget dstBlendAlpha(): number {\r\n\t\treturn this._nativeObj.dstBlendAlpha;\r\n\t}\r\n\t\r\n\tset blendEquation(value: number) {\r\n\t\tthis._nativeObj.blendEquation = value;\r\n\t}\r\n\tget blendEquation(): number {\r\n\t\treturn this._nativeObj.blendEquation;\r\n\t}\r\n\t\r\n\tset blendEquationRGB(value: number) {\r\n\t\tthis._nativeObj.blendEquationRGB = value;\r\n\t}\r\n\tget blendEquationRGB(): number {\r\n\t\treturn this._nativeObj.blendEquationRGB;\r\n\t}\r\n\t\r\n\tset blendEquationAlpha(value: number) {\r\n\t\tthis._nativeObj.blendEquationAlpha = value;\r\n\t}\r\n\tget blendEquationAlpha(): number {\r\n\t\treturn this._nativeObj.blendEquationAlpha;\r\n\t}\r\n\t\r\n\tset depthTest(value: number) {\r\n\t\tthis._nativeObj.depthTest = value;\r\n\t}\r\n\tget depthTest(): number {\r\n\t\treturn this._nativeObj.depthTest;\r\n\t}\r\n\t\r\n\tset depthWrite(value: boolean) {\r\n\t\tthis._nativeObj.depthWrite = value;\r\n\t}\r\n\tget depthWrite(): boolean {\r\n\t\treturn this._nativeObj.depthWrite;\r\n\t}\r\n\t\r\n\tset stencilWrite(value: boolean) {\r\n\t\tthis._nativeObj.stencilWrite = value;\r\n\t}\r\n\tget stencilWrite(): boolean {\r\n\t\treturn this._nativeObj.stencilWrite;\r\n\t}\r\n\t\r\n\tset stencilTest(value: number) {\r\n\t\tthis._nativeObj.stencilTest = value;\r\n\t}\r\n\tget stencilTest(): number {\r\n\t\treturn this._nativeObj.stencilTest;\r\n\t}\r\n\t\r\n\tset stencilRef(value: number) {\r\n\t\tthis._nativeObj.stencilRef = value;\r\n\t}\r\n\tget stencilRef(): number {\r\n\t\treturn this._nativeObj.stencilRef;\r\n\t}\r\n\r\n\tset stencilOp(value: Vector3) {\r\n\t\tthis._nativeObj.setStencilOp(value.x, value.y, value.z);\r\n\t}\r\n\tsetNull():void {\r\n\t\tthis._nativeObj.setNull();\r\n\t}\r\n\tconstructor() {\r\n\t\tthis._nativeObj = new (window as any).conchRenderState();\r\n\t}\r\n\r\n}\r\n\r\n\r\n","export enum MemoryDataType{\r\n   ShaderData,\r\n   TextureData,\r\n   VertexData,\r\n   IndexData,\r\n   BaseRenderData,\r\n}","import { Color } from \"../../../maths/Color\";\r\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\r\nimport { Quaternion } from \"../../../maths/Quaternion\";\r\nimport { Vector2 } from \"../../../maths/Vector2\";\r\nimport { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { INativeUploadNode } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/INativeUploadNode\";\r\nimport { MemoryDataType } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType\";\r\nimport { UploadMemory } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory\";\r\nimport { UploadMemoryManager } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager\";\r\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { Resource } from \"../../../resource/Resource\";\r\nimport { Texture } from \"../../../resource/Texture\";\r\nimport { Texture2D } from \"../../../resource/Texture2D\";\r\nimport { NativeUniformBufferObject } from \"./NativeUniformBufferObject\";\r\n\r\n\r\nexport enum NativeShaderDataType {\r\n    Number32,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Matrix4x4,\r\n    Number32Array,\r\n    Texture,\r\n    ShaderDefine,\r\n    UBO,\r\n}\r\n\r\nexport class NativeShaderData extends ShaderData implements INativeUploadNode {\r\n    private inUploadList: boolean = false;\r\n    _dataType: MemoryDataType;\r\n    nativeObjID: number;\r\n    _nativeObj: any;\r\n    updateMap: Map<number, Function>;\r\n    updataSizeMap: Map<number, number>;\r\n    payload32bitNum: number = 0;\r\n    /**\r\n     * @internal\t\r\n     */\r\n    constructor(ownerResource: Resource = null) {\r\n        super(ownerResource)\r\n        this._initData();\r\n        this._nativeObj = new (window as any).conchShaderData();\r\n        this._nativeObj.setApplyUBOData(this.applyUBOData.bind(this));\r\n        this.nativeObjID = this._nativeObj.nativeID;\r\n        this._dataType = MemoryDataType.ShaderData;\r\n        this.updateMap = new Map();\r\n        this.updataSizeMap = new Map();\r\n    }\r\n\r\n    /**\r\n     * @override interface INativeUploadNode\r\n     * @internal\r\n     */\r\n    getUploadMemoryLength(): number {\r\n        let head = 4;//header\r\n        this.updataSizeMap.forEach((value) => {\r\n            this.payload32bitNum += value;\r\n        });\r\n        return (this.payload32bitNum + head) * 4;\r\n    }\r\n\r\n    /**\r\n     * @override interface INativeUploadNode\r\n     * @internal\r\n     * @param memoryBlock \r\n     * @param stride \r\n     */\r\n    uploadDataTOShareMemory(memoryBlock: UploadMemory, strideInByte: number): boolean {\r\n        if (!this._data) {\r\n            return false;\r\n        }\r\n        let array = memoryBlock.int32Array;\r\n        let strideFloat = strideInByte / 4;\r\n        //type\r\n        array[strideFloat++] = MemoryDataType.ShaderData;\r\n        //instanceID\r\n        array[strideFloat++] = this.nativeObjID;\r\n        //dataLength\r\n        array[strideFloat++] = this.payload32bitNum;\r\n        //Shaderdata property change nums\r\n        array[strideFloat++] = this.updateMap.size;\r\n        this.updateMap.forEach((value, key) => {\r\n            strideFloat += value.call(this, key, memoryBlock, strideFloat);\r\n        });\r\n        this.clearUpload();\r\n        this.inUploadList = false;\r\n        return true;\r\n    }\r\n\r\n    clearUpload() {\r\n        this.payload32bitNum = 0;\r\n        this.updataSizeMap.clear();\r\n        this.updateMap.clear();\r\n    }\r\n\r\n    applyUBOData() {\r\n        if (this._uniformBufferDatas) {\r\n            super.applyUBOData();\r\n        }\r\n\t}\r\n    compressNumber(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Number32 \" + NativeShaderDataType.Number32 + \"stride \" + stride);\r\n        var length = 3;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Number32;\r\n        memoryBlock.float32Array[stride + 2] = this._data[index];\r\n        return length;\r\n    }\r\n\r\n    compressVector2(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector2 \" + NativeShaderDataType.Vector2 + \"stride \" + stride);\r\n        var length = 4;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector2;\r\n        var value: Vector2 = this._data[index];\r\n        memoryBlock.float32Array[stride + 2] = value.x;\r\n        memoryBlock.float32Array[stride + 3] = value.y;\r\n        return length;\r\n    }\r\n\r\n    compressVector3(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector3 \" + NativeShaderDataType.Vector2 + \"stride \" + stride);\r\n        var length = 5;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector3;\r\n        var value: Vector3 = this._data[index];\r\n        memoryBlock.float32Array[stride + 2] = value.x;\r\n        memoryBlock.float32Array[stride + 3] = value.y;\r\n        memoryBlock.float32Array[stride + 4] = value.z;\r\n        return length;\r\n    }\r\n\r\n    compressVector4(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Vector4 \" + NativeShaderDataType.Vector4 + \"stride \" + stride);\r\n        var length = 6;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Vector4;\r\n        var value: Vector4 = this._data[index];\r\n        memoryBlock.float32Array[stride + 2] = value.x;\r\n        memoryBlock.float32Array[stride + 3] = value.y;\r\n        memoryBlock.float32Array[stride + 4] = value.z;\r\n        memoryBlock.float32Array[stride + 5] = value.w;\r\n        return length;\r\n    }\r\n    \r\n\r\n    compressMatrix4x4(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Matrix4x4 \" + NativeShaderDataType.Matrix4x4 + \"stride \" + stride);\r\n        var length = 18;\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Matrix4x4;\r\n        var value: Matrix4x4 = this._data[index];\r\n        memoryBlock.float32Array.set(value.elements, stride + 2);\r\n        return length;\r\n    }\r\n\r\n    compressNumberArray(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Number32Array \" + NativeShaderDataType.Number32Array + \"stride \" + stride);\r\n        memoryBlock.int32Array[stride] = index\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Number32Array;\r\n        var value: Float32Array = this._data[index];\r\n        memoryBlock.int32Array[stride + 2] = value.length;\r\n        memoryBlock.float32Array.set(value, stride + 3);\r\n        return value.length + 3;\r\n    }\r\n\r\n    compressTexture(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        //console.log(\"..index \" + index + \" NativeShaderDataType.Texture \" + NativeShaderDataType.Texture + \"stride \" + stride);\r\n        var value: any = this._data[index];\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.Texture;\r\n        if (value && value instanceof Texture) {\r\n            memoryBlock.int32Array[stride + 2] = (value.bitmap._texture as any).id;\r\n        }\r\n        else if (value && value._texture) {\r\n            memoryBlock.int32Array[stride + 2] = (value._texture as any).id;\r\n        }\r\n        else {\r\n            memoryBlock.int32Array[stride + 2] = (Texture2D.errorTexture._texture as any).id;\r\n        }\r\n        return 3;\r\n    }\r\n\r\n    compressUBO(index: number, memoryBlock: UploadMemory, stride: number): number {\r\n        var value:NativeUniformBufferObject = this._data[index];\r\n        memoryBlock.int32Array[stride] = index;\r\n        memoryBlock.int32Array[stride + 1] = NativeShaderDataType.UBO;\r\n        memoryBlock.int32Array[stride + 2] = (value._conchUniformBufferObject as any).nativeID;\r\n        return 3;\r\n    }\r\n\r\n    private configMotionProperty(key: number, length: number, callBack: Function) {\r\n        this.updateMap.set(key, callBack);\r\n        this.updataSizeMap.set(key, length);\r\n        if (!this.inUploadList) {\r\n            this.inUploadList = true;\r\n            UploadMemoryManager.getInstance()._dataNodeList.add(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置布尔。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 布尔。\r\n     */\r\n    setBool(index: number, value: boolean): void {\r\n        super.setBool(index, value);\r\n        this.configMotionProperty(index, 3, this.compressNumber);\r\n    }\r\n\r\n    /**\r\n     * 设置整型。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 整形。\r\n     */\r\n    setInt(index: number, value: number): void {\r\n        //this._data[index] = value;\r\n        super.setInt(index, value);\r\n        this.configMotionProperty(index, 3, this.compressNumber);\r\n    }\r\n\r\n    /**\r\n     * 设置浮点。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 浮点。\r\n     */\r\n    setNumber(index: number, value: number): void {\r\n        super.setNumber(index, value);\r\n        this.configMotionProperty(index, 3, this.compressNumber);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector2向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue Vector2向量。\r\n     */\r\n    setVector2(index: number, value: Vector2): void {\r\n        super.setVector2(index, value);\r\n        this.configMotionProperty(index, 4, this.compressVector2);\r\n    }\r\n\r\n    /**\r\n     * 设置Vector3向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue Vector3向量。\r\n     */\r\n    setVector3(index: number, value: Vector3): void {\r\n        super.setVector3(index, value);\r\n        this.configMotionProperty(index, 5, this.compressVector3);\r\n    }\r\n\r\n    /**\r\n     * 设置向量。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 向量。\r\n     */\r\n    setVector(index: number, value: Vector4): void {\r\n        super.setVector(index, value);\r\n        this.configMotionProperty(index, 6, this.compressVector4);\r\n    }\r\n\r\n    /**\r\n     * 设置颜色\r\n     * @param index 索引\r\n     * @param value 颜色值\r\n     */\r\n    setColor(index: number, value: Color): void {\r\n        super.setColor(index, value);\r\n        this.configMotionProperty(index, 6, this.compressVector4);\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue  矩阵。\r\n     */\r\n    setMatrix4x4(index: number, value: Matrix4x4): void {\r\n        super.setMatrix4x4(index, value);\r\n        this.configMotionProperty(index, 18, this.compressMatrix4x4);\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置Buffer。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue  buffer数据。\r\n     */\r\n    setBuffer(index: number, value: Float32Array): void {\r\n        super.setBuffer(index, value);\r\n        this.configMotionProperty(index, 3 + value.length, this.compressNumberArray);\r\n    }\r\n\r\n    /**\r\n     * 设置纹理。\r\n     * @param\tindex shader索引。\r\n     * @param\tvalue 纹理。\r\n     */\r\n    setTexture(index: number, value: BaseTexture): void {\r\n        super.setTexture(index, value);\r\n        this.configMotionProperty(index, 3, this.compressTexture);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param index \r\n     * @param value \r\n     */\r\n    setUniformBuffer(index: number, value: NativeUniformBufferObject) {\r\n        this._data[index] = value;\r\n        this.configMotionProperty(index, 3, this.compressUBO);\r\n    }\r\n\r\n    /**\r\n     * set shader data\r\n     * @deprecated\r\n     * @param index uniformID\r\n     * @param value data\r\n     */\r\n    setValueData(index: number, value: any) {\r\n        // if (!!value.clone)\r\n        //     this._data[index] = value.clone();\r\n        // else\r\n        //     this._data[index] = value;\r\n        //有点恶心\r\n        if (typeof value == \"boolean\") {\r\n            this.setBool(index, <boolean>value);\r\n        } else if (typeof value == \"number\") {\r\n            this.setNumber(index, <number>value);\r\n        } else if (value instanceof Color) {\r\n            this.setColor(index, <Color>value);\r\n        } else if (value instanceof Vector2) {\r\n            this.setVector2(index, <Vector2>value);\r\n        } else if (value instanceof Vector3) {\r\n            this.setVector3(index, <Vector3>value);\r\n        } else if (value instanceof Vector4 || value instanceof Quaternion) {\r\n            this.setVector(index, <Vector4>value);\r\n        } else if (value instanceof Matrix4x4) {\r\n            this.setMatrix4x4(index, <Matrix4x4>value);\r\n        } else if (value.ArrayBuffer != null) {\r\n            this.setBuffer(index, value);\r\n        } else if (value._texture != null) {\r\n            this.setTexture(index, value);\r\n        }\r\n    }\r\n\r\n    cloneTo(destObject: NativeShaderData) {\r\n        var dest: NativeShaderData = <NativeShaderData>destObject;\r\n        for (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\r\n            var value: any = this._data[k];\r\n            if (value != null) {\r\n                if (typeof (value) == 'boolean') {\r\n                    destObject.setBool((k as any), value);\r\n                } else if (typeof (value) == 'number') {\r\n                    destObject.setNumber(k as any, <number>value);\r\n                } else if (value instanceof Vector2) {\r\n                    destObject.setVector2(k as any, <Vector2>value);\r\n                } else if (value instanceof Vector3) {\r\n                    destObject.setVector3(k as any, <Vector3>value);\r\n                } else if (value instanceof Vector4) {\r\n                    destObject.setVector(k as any, <Vector4>value);\r\n                } else if (value instanceof Matrix4x4) {\r\n                    destObject.setMatrix4x4(k as any, <Matrix4x4>value);\r\n                } else if (value instanceof BaseTexture) {\r\n                    destObject.setTexture(k as any, value);\r\n                }\r\n            }\r\n        }\r\n        this._defineDatas.cloneTo(dest._defineDatas);\r\n        this._gammaColorMap.forEach((color, index) => {\r\n\t\t    destObject._gammaColorMap.set(index, color.clone());\r\n\t    })\r\n    }\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: NativeShaderData = new NativeShaderData();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    destroy(): void {\r\n\t\tsuper.destroy();\r\n        this._nativeObj.destroy();\r\n        this._nativeObj = null;\r\n\t}\r\n}","/**\r\n * WebGL mode.\r\n */\r\n export enum WebGLMode {\r\n    /** Auto, use WebGL2.0 if support, or will fallback to WebGL1.0. */\r\n    Auto = 0,\r\n    /** WebGL2.0. */\r\n    WebGL2 = 1,\r\n    /** WebGL1.0, */\r\n    WebGL1 = 2\r\n}","export enum WebGLExtension{\r\n    OES_vertex_array_object,\r\n    ANGLE_instanced_arrays,\r\n    OES_texture_half_float,\r\n    OES_texture_half_float_linear,\r\n    OES_texture_float,\r\n    OES_element_index_uint,\r\n    OES_texture_float_linear,//allows linear filtering with floating-point pixel types for textures.\r\n    EXT_color_buffer_half_float,//Render BufferHalf float color\r\n    EXT_shader_texture_lod,\r\n    WEBGL_depth_texture,\r\n    EXT_sRGB,\r\n    EXT_color_buffer_float,\r\n    EXT_texture_filter_anisotropic,\r\n    WEBGL_compressed_texture_s3tc,\r\n    WEBGL_compressed_texture_s3tc_srgb,\r\n    WEBGL_compressed_texture_pvrtc,\r\n    WEBGL_compressed_texture_etc1,\r\n    WEBGL_compressed_texture_etc,\r\n    WEBGL_compressed_texture_astc,\r\n    OES_standard_derivatives,\r\n}","/**\r\n * 共享内存分配,并且绑定Native共享Buffer\r\n */\r\nexport class CommonMemoryAllocater{\r\n    \r\n    /**\r\n     * 创建内存，并绑定为共享内存\r\n     * @param size \r\n     * @returns \r\n     */\r\n    static creatBlock(size:number):ArrayBuffer{\r\n        const buffer = new ArrayBuffer(size);\r\n        \r\n        //native bind todo:\r\n        //buffer.nativeid = ??\r\n        return buffer;\r\n    }\r\n\r\n    /**\r\n     * 释放共享内存\r\n     * @param buffer \r\n     */\r\n    static freeMemoryBlock(buffer:ArrayBuffer){\r\n        //TODO native free buffer\r\n        buffer = null;\r\n    }\r\n    \r\n    \r\n    \r\n}","import { CommonMemoryAllocater } from \"./CommonMemoryAllocater\";\r\n\r\nexport class NativeMemory {\r\n    static NativeSourceID:number = 0;\r\n    /**@internal 共享内存数据 */\r\n    public _buffer: ArrayBuffer;\r\n    /**@internal 显示数据 */\r\n    static  _sharedBuffer: ArrayBuffer = new ArrayBuffer(256);\r\n    /**@internal 显示数据 */\r\n    protected _idata:Int32Array;\r\n    protected _fdata:Float32Array;\r\n    protected _f64data:Float64Array;\r\n    protected _byteArray:Uint8Array;\r\n    /**数据长度 */\r\n    protected _byteLength: number;\r\n    /**销毁标记 */\r\n    protected _destroyed: boolean;\r\n    /**数据资源 */\r\n    protected _id:number;\r\n    /**\r\n     * 实例化一个共享内存\r\n     * @param size byteLength\r\n     */\r\n    constructor(size: number, shared: boolean) {\r\n        if (shared) {\r\n            if (size > NativeMemory._sharedBuffer.byteLength) {\r\n                throw new Error(\"NativeMemory:shared buffer not enough\");\r\n            }\r\n            this._buffer = NativeMemory._sharedBuffer;\r\n        }\r\n        else {\r\n            this._buffer = CommonMemoryAllocater.creatBlock(size);\r\n        }\r\n        this._idata = new Int32Array(this._buffer);\r\n        this._fdata = new Float32Array(this._buffer);\r\n        this._f64data = new Float64Array(this._buffer);\r\n        this._byteArray = new Uint8Array(this._buffer);\r\n        this._byteLength = size;\r\n    }\r\n\r\n    /**\r\n     * Float32Array Data\r\n     */\r\n    get float32Array(): Float32Array {\r\n        return  this._fdata;\r\n    }\r\n\r\n    get float64Array(): Float64Array {\r\n        return  this._f64data;\r\n    }\r\n    /**\r\n     * Uint16Array Data\r\n     */\r\n    /*get uint16Array(): Uint16Array {\r\n        if (!(this._bufferData instanceof Uint16Array))\r\n            this._bufferData = new Uint16Array(this._buffer);\r\n        return <Uint16Array>this._bufferData;\r\n    }*/\r\n\r\n    /**\r\n     * Uint8Array Data\r\n     */\r\n    get uint8Array(): Uint8Array {\r\n        return this._byteArray;\r\n    }\r\n\r\n    /**\r\n     * Int32Array Data\r\n     */\r\n    get int32Array(): Int32Array {\r\n        return this._idata;\r\n    }\r\n\r\n    /**\r\n     * 设置数据\r\n     * @param data 数据\r\n     * @param stride 字节偏移\r\n     * //TODO 字节对齐\r\n     */\r\n    /*setData(data:Uint8Array|Uint16Array|Uint32Array|Int32Array|Float32Array,stride:number):void{\r\n        if(data instanceof Uint8Array){\r\n           this.uint8Array.set(data,stride/2);\r\n            return;\r\n        }\r\n        else if(data instanceof Uint16Array){\r\n           this.uint16Array.set(data,stride/2);\r\n            return;\r\n        }else{\r\n           this.float32Array.set(data,stride/4);\r\n            return;\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * 设置多个参数\r\n     * @param offset \r\n     * @param args \r\n     * 考虑字节对齐\r\n     */\r\n    /*setDataByParams(offset:number,...args: number[]):void{\r\n        if(args)\r\n        {\r\n            for(let i=0,n:number=args.length;i<n;i++)\r\n            this._bufferData[i+offset]=args[i];\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * 扩充buffer\r\n     * @param size \r\n     * @returns \r\n     */\r\n    /*expand(size: number) {\r\n        if(size<=this._byteLength)\r\n            return;\r\n        this._byteLength = size;\r\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\r\n        this.clear();\r\n        this._buffer = CommonMemoryAllocater.creatBlock(size);\r\n    }*/\r\n\r\n    /**\r\n     * 删除\r\n     * @returns \r\n     */\r\n    destroy() {\r\n        if(this._destroyed)\r\n            return;\r\n        this.clear();\r\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\r\n        this._destroyed = true;\r\n    }\r\n\r\n    /**\r\n     * 清楚\r\n     */\r\n    clear(): void {\r\n        this._idata = null;\r\n        this._fdata = null;\r\n        this._byteArray = null;\r\n    }\r\n}","import { INativeUploadNode } from \"./INativeUploadNode\";\r\nimport { NativeMemory } from \"./NativeMemory\";\r\n\r\nexport class UploadMemory extends NativeMemory{\r\n    \r\n    /**\r\n     * @internal\r\n     * 数据填充的位置\r\n     */\r\n    _currentOffsetInByte:number = 0;\r\n\r\n    constructor(size:number){\r\n        super(size,false);\r\n    }\r\n\r\n    addBlockCell(node: INativeUploadNode, dataSizeInByte: number){\r\n        if (node.uploadDataTOShareMemory(this, this._currentOffsetInByte)) {\r\n            this._currentOffsetInByte += dataSizeInByte;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * check ability of size data\r\n     * @param size \r\n     * @returns \r\n     */\r\n    check(size:number){\r\n        return this._currentOffsetInByte + size < this._byteLength;\r\n    }\r\n\r\n    /**\r\n     * 清空更新数据\r\n     */\r\n    clear(): void {\r\n      this._currentOffsetInByte = 0;\r\n    }\r\n\r\n\r\n}","import { SingletonList } from \"../../../../utils/SingletonList\";\r\nimport { INativeUploadNode } from \"./INativeUploadNode\";\r\nimport { UploadMemory } from \"./UploadMemory\";\r\n\r\n/**\r\n * 用来组织所有的数据更新\r\n * 基本思路如下：每个需要更新native数据的类都继承接口INativeUploadNode，当需要上传数据时，会添加到UploadMemoryMenager.dataNodeList队列中，统一更新数据到共享Buffer中\r\n * 会有一个共享Buffer NativeMemory来记录总共用了几个UploadMemory，每个Upload中有几个UploadMemoryCell，在native中统一的将数据变化全部同步到Native的渲染底层\r\n */\r\nexport class UploadMemoryManager {\r\n    /**\r\n     * each upload block memory size\r\n     * defined 1MB\r\n     */\r\n    static UploadMemorySize: number = 1024 * 1024;\r\n    /*@internal SingleOBJ*/\r\n    private static _instance: UploadMemoryManager = null;\r\n    /**@internal 需要上传数据的Node列表*/\r\n    _dataNodeList: SingletonList<INativeUploadNode> = new SingletonList();\r\n    /**@internal */\r\n    _currentBlock: UploadMemory;\r\n    /**@internal */\r\n    _commandNums: number = 0;\r\n\r\n    /**@native C++ */\r\n    _conchUploadMemoryManager:any;\r\n\r\n    constructor() {\r\n        this._currentBlock = new UploadMemory(UploadMemoryManager.UploadMemorySize);\r\n        this._conchUploadMemoryManager = new (window as any).conchUploadMemoryManager();\r\n    }\r\n    static getInstance(): UploadMemoryManager {\r\n        if (!UploadMemoryManager._instance) {\r\n            UploadMemoryManager._instance = new UploadMemoryManager();\r\n        }\r\n        return UploadMemoryManager._instance;\r\n    }\r\n    private _addNodeCommand(node: INativeUploadNode, sizeInByte: number) {\r\n        this._currentBlock.addBlockCell(node, sizeInByte);\r\n        this._commandNums++;\r\n    }\r\n\r\n    static syncRenderMemory()\r\n    {\r\n        UploadMemoryManager.getInstance()._serialiseData();\r\n        UploadMemoryManager.getInstance().clear();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _serialiseData() {\r\n        const elements = this._dataNodeList.elements;\r\n        for (let i = 0; i < this._dataNodeList.length; i++) {\r\n            let node = elements[i];\r\n            let dataSizeInByte = node.getUploadMemoryLength();//get upload Memory Length\r\n            if (dataSizeInByte > UploadMemoryManager.UploadMemorySize)\r\n                throw \"dataSize is too large, greater than UploadMemorySize,\";\r\n            if (this._currentBlock.check(dataSizeInByte)) { \r\n                 //Deserialization all cmd to native data\r\n                this.uploadData();\r\n                this._addNodeCommand(node, dataSizeInByte);\r\n            } else { \r\n              \r\n                this._addNodeCommand(node, dataSizeInByte);\r\n            }\r\n        }\r\n        this.uploadData();\r\n    }\r\n\r\n    /**强制更新数据 */\r\n    uploadData() {\r\n        if (this._commandNums > 0)\r\n        {\r\n            //Native upload data\r\n            this._conchUploadMemoryManager.uploadData(this._currentBlock._buffer, this._commandNums);\r\n            //clear uploadMemory\r\n            this._commandNums = 0;\r\n            this._currentBlock.clear();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * clear UpdateLoad list\r\n     */\r\n    clear() {\r\n        this._dataNodeList.length = 0;\r\n    }\r\n}","import { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\n\r\n\r\nexport class NativeUniformBufferObject extends UniformBufferObject{\r\n    _conchUniformBufferObject:any = null;\r\n\r\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\r\n        super(glPointer, name, bufferUsage, byteLength, isSingle);\r\n        this._conchUniformBufferObject = new (window as any).conchUniformBufferObject((LayaGL.renderEngine as any)._nativeObj, glPointer);\r\n        this._conchUniformBufferObject.setGLBuffer(this._glBuffer);\r\n    }\r\n}","import { IndexBuffer } from \"../../IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { VertexBuffer } from \"../../VertexBuffer\";\r\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n\r\nexport class NativeGLVertexState extends NativeGLObject implements IRenderVertexState {\r\n\r\n    _vertexDeclaration: VertexDeclaration[] = [];\r\n    _bindedIndexBuffer: IndexBuffer;\r\n    _vertexBuffers: VertexBuffer[];\r\n    _nativeVertexBuffers:any[];\r\n    _nativeObj: any;\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n        this._nativeObj = new (window as any).conchGLVertexState(engine._nativeObj);\r\n        this._nativeVertexBuffers=[];\r\n    }\r\n\r\n    bindVertexArray(): void {\r\n        this._nativeObj.bindVertexArray();\r\n    }\r\n\r\n    unbindVertexArray(): void {\r\n        this._nativeObj.unbindVertexArray();\r\n    }\r\n\r\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\r\n        this._vertexBuffers = vertexBuffer;\r\n        this._nativeVertexBuffers.length = 0;\r\n        vertexBuffer.forEach((element) => {\r\n            this._nativeVertexBuffers.push((element as any)._conchVertexBuffer3D);\r\n        });\r\n        this._nativeObj.applyVertexBuffer(this._nativeVertexBuffers);\r\n    }\r\n\r\n    applyIndexBuffer(indexBuffer: IndexBuffer|null): void {\r\n        //需要强制更新IndexBuffer\r\n        \r\n        if(indexBuffer==null){\r\n            return;\r\n        }\r\n        this._bindedIndexBuffer = indexBuffer;\r\n        this._nativeObj.applyIndexBuffer((indexBuffer as any)._conchIndexBuffer3D);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        this._vertexBuffers = null;\r\n        this._nativeVertexBuffers=[];\r\n        this._bindedIndexBuffer = null;\r\n        super.destroy();\r\n        this._nativeObj.destroy()\r\n    }\r\n} ","import { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/**\r\n * WebglObject 基类\r\n */\r\nexport class GLObject{\r\n    protected _engine:WebGLEngine;\r\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    protected _id:number;\r\n    protected _destroyed: boolean = false;\r\n\r\n    constructor(engine: WebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._id = this._engine._IDCounter++;\r\n    }\r\n\r\n    get destroyed():boolean{\r\n        return this._destroyed;\r\n    }\r\n\r\n    /**\r\n     * destroy\r\n     * @override\r\n     * @returns \r\n     */\r\n    destroy():void{\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n    }\r\n\r\n}","import { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { WrapMode } from \"../../RenderEnum/WrapMode\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class WebGLInternalTex extends GLObject implements InternalTexture {\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    readonly resource: WebGLTexture;\r\n    _resourceTarget: number;\r\n\r\n    readonly width: number;\r\n    readonly height: number;\r\n    readonly depth: number;\r\n    readonly isPotSize: boolean;\r\n\r\n    private _mipmap: boolean;\r\n    /**\r\n     * 是否存在 mipmap 数据\r\n     */\r\n    get mipmap(): boolean {\r\n        return this._mipmap;\r\n    }\r\n\r\n    private _mipmapCount: number;\r\n    public get mipmapCount(): number {\r\n        return this._mipmapCount;\r\n    }\r\n\r\n    readonly useSRGBLoad: boolean;\r\n    readonly gammaCorrection: number;\r\n\r\n    // webgl param\r\n    readonly target: number;\r\n    internalFormat: number;\r\n    format: number;\r\n    type: number;\r\n    /**bytelength */\r\n    _gpuMemory: number = 0;\r\n\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n    set gpuMemory(value: number) {\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\r\n        this._gpuMemory = value;\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, this._gpuMemory);\r\n    }\r\n\r\n    constructor(engine: WebGLEngine, target: number, width: number, height: number, depth: number, dimension: TextureDimension, mipmap: boolean, useSRGBLoader: boolean, gammaCorrection: number) {\r\n        super(engine);\r\n\r\n        this.resource = this._gl.createTexture();\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n        this.depth = depth;\r\n\r\n        const isPot = (value: number): boolean => {\r\n            return (value & (value - 1)) === 0;\r\n        }\r\n\r\n        this.isPotSize = isPot(width) && isPot(height);\r\n        if (dimension == TextureDimension.Tex3D) {\r\n            this.isPotSize = this.isPotSize && isPot(this.depth);\r\n        }\r\n\r\n        this._mipmap = mipmap && this.isPotSize;\r\n        this._mipmapCount = this._mipmap ? Math.max(Math.ceil(Math.log2(width)) + 1, Math.ceil(Math.log2(height)) + 1) : 1;\r\n        this._maxMipmapLevel = this._mipmapCount - 1;\r\n        this._baseMipmapLevel = 0;\r\n\r\n        this.useSRGBLoad = useSRGBLoader;\r\n        this.gammaCorrection = gammaCorrection;\r\n\r\n        this.target = target;\r\n\r\n        // default value\r\n        // this._filterMode = FilterMode.Bilinear;\r\n        // this._warpU = WrapMode.Repeat;\r\n        // this._warpV = WrapMode.Repeat;\r\n        // this._warpW = WrapMode.Repeat;\r\n        // this._anisoLevel = 4;\r\n\r\n        this.filterMode = FilterMode.Bilinear;\r\n        this.wrapU = WrapMode.Repeat;\r\n        this.wrapV = WrapMode.Repeat;\r\n        this.wrapW = WrapMode.Repeat;\r\n        this.anisoLevel = 4;\r\n\r\n        this.compareMode = TextureCompareMode.None;\r\n    }\r\n\r\n    private _filterMode: FilterMode;\r\n    public get filterMode(): FilterMode {\r\n        return this._filterMode;\r\n    }\r\n    public set filterMode(value: FilterMode) {\r\n        if (this._filterMode != value && this.resource) {\r\n            let gl = this._gl;\r\n            let mipmap = this.mipmap;\r\n            let min = this.getFilteMinrParam(value, mipmap);\r\n            this._setTexParameteri(gl.TEXTURE_MIN_FILTER, min);\r\n            let mag = this.getFilterMagParam(value);\r\n            this._setTexParameteri(gl.TEXTURE_MAG_FILTER, mag);\r\n\r\n            this._filterMode = value;\r\n        }\r\n    }\r\n\r\n    private _warpU: WrapMode;\r\n    public get wrapU(): WrapMode {\r\n        return this._warpU;\r\n    }\r\n    public set wrapU(value: WrapMode) {\r\n        if (this._warpU != value && this.resource) {\r\n            let gl = this._gl;\r\n            let warpParam = this.getWrapParam(value);\r\n            this._setWrapMode(gl.TEXTURE_WRAP_S, warpParam);\r\n            this._warpU = value;\r\n        }\r\n    }\r\n\r\n    private _warpV: WrapMode;\r\n\r\n    public get wrapV(): WrapMode {\r\n        return this._warpV;\r\n    }\r\n\r\n    public set wrapV(value: WrapMode) {\r\n        if (this._warpV != value && this.resource) {\r\n            let gl = this._gl;\r\n            let warpParam = this.getWrapParam(value);\r\n            this._setWrapMode(gl.TEXTURE_WRAP_T, warpParam);\r\n            this._warpV = value;\r\n        }\r\n    }\r\n\r\n    private _warpW: WrapMode;\r\n    public get wrapW(): WrapMode {\r\n        return this._warpW;\r\n    }\r\n    public set wrapW(value: WrapMode) {\r\n        if (this._warpW != value && this.resource) {\r\n            if (this._engine.getCapable(RenderCapable.Texture3D)) {\r\n                let gl = <WebGL2RenderingContext>this._gl;\r\n                let warpParam = this.getWrapParam(value);\r\n                this._setWrapMode(gl.TEXTURE_WRAP_R, warpParam);\r\n            }\r\n            this._warpW = value;\r\n        }\r\n    }\r\n\r\n    private _anisoLevel: number;\r\n    public get anisoLevel(): number {\r\n        return this._anisoLevel;\r\n    }\r\n    public set anisoLevel(value: number) {\r\n        let anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\r\n        if (anisoExt) {\r\n            let gl = this._gl;\r\n            //let maxAnisoLevel = gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n            let maxAnisoLevel = this._engine.getParams(RenderParams.Max_AnisoLevel_Count);\r\n\r\n            let level = Math.max(1, Math.min(maxAnisoLevel, value));\r\n            this._setTexParametexf(anisoExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\r\n            this._anisoLevel = level;\r\n        }\r\n        else {\r\n            this._anisoLevel = 1;\r\n        }\r\n    }\r\n\r\n    private _baseMipmapLevel: number = 0;\r\n\r\n    public set baseMipmapLevel(value: number) {\r\n        if (this._engine.isWebGL2) {\r\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_BASE_LEVEL, value);\r\n        }\r\n        this._baseMipmapLevel = value;\r\n    }\r\n\r\n    public get baseMipmapLevel() {\r\n        return this._baseMipmapLevel;\r\n    }\r\n\r\n    private _maxMipmapLevel: number = 0;\r\n\r\n    public set maxMipmapLevel(value: number) {\r\n        if (this._engine.isWebGL2) {\r\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_MAX_LEVEL, value);\r\n        }\r\n        this._maxMipmapLevel = value;\r\n    }\r\n\r\n    public get maxMipmapLevel() {\r\n        return this._maxMipmapLevel;\r\n    }\r\n\r\n\r\n    private _compareMode: TextureCompareMode;\r\n    public get compareMode(): TextureCompareMode {\r\n        return this._compareMode;\r\n    }\r\n    public set compareMode(value: TextureCompareMode) {\r\n        this._compareMode = value;\r\n    }\r\n\r\n    // todo 设置参数函数 放在 context 里面? \r\n    public _setTexParameteri(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        let target = this.target\r\n        this._engine._bindTexture(target, this.resource);\r\n        gl.texParameteri(target, pname, param);\r\n        this._engine._bindTexture(target, null);\r\n    }\r\n\r\n    public _setTexParametexf(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        let target = this.target\r\n        this._engine._bindTexture(target, this.resource);\r\n        gl.texParameterf(target, pname, param);\r\n        this._engine._bindTexture(target, null);\r\n    }\r\n\r\n    protected getFilteMinrParam(filterMode: FilterMode, mipmap: boolean) {\r\n        let gl = this._gl;\r\n        switch (filterMode) {\r\n            case FilterMode.Point:\r\n                return mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST;\r\n            case FilterMode.Bilinear:\r\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\r\n            case FilterMode.Trilinear:\r\n                return mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR;\r\n            default:\r\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\r\n        }\r\n    }\r\n\r\n    protected getFilterMagParam(filterMode: FilterMode) {\r\n        let gl = this._gl;\r\n        switch (filterMode) {\r\n            case FilterMode.Point:\r\n                return gl.NEAREST;\r\n            case FilterMode.Bilinear:\r\n                return gl.LINEAR;\r\n            case FilterMode.Trilinear:\r\n                return gl.LINEAR;\r\n            default:\r\n                return gl.LINEAR;\r\n        }\r\n    }\r\n\r\n    protected getWrapParam(wrapMode: WrapMode) {\r\n        let gl = this._gl;\r\n        switch (wrapMode) {\r\n            case WrapMode.Repeat:\r\n                return gl.REPEAT;\r\n            case WrapMode.Clamp:\r\n                return gl.CLAMP_TO_EDGE;\r\n            case WrapMode.Mirrored:\r\n                return gl.MIRRORED_REPEAT;\r\n            default:\r\n                return gl.REPEAT;\r\n        }\r\n    }\r\n\r\n    protected _setWrapMode(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        if (!this.isPotSize) {\r\n            param = gl.CLAMP_TO_EDGE;\r\n        }\r\n        this._setTexParameteri(pname, param);\r\n    }\r\n\r\n    dispose(): void {\r\n        let gl = this._gl;\r\n        gl.deleteTexture(this.resource);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\r\n        this._gpuMemory = 0;\r\n    }\r\n}","import { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class WebGLInternalRT extends GLObject implements InternalRenderTarget {\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    _framebuffer: WebGLFramebuffer;\r\n\r\n    _depthbuffer: WebGLRenderbuffer;\r\n\r\n    _msaaFramebuffer: WebGLFramebuffer;\r\n    _msaaRenderbuffer: WebGLRenderbuffer;\r\n\r\n    _isCube: boolean;\r\n    _samples: number;\r\n\r\n    _generateMipmap: boolean;\r\n\r\n    _textures: InternalTexture[];\r\n    _depthTexture: InternalTexture;\r\n\r\n    colorFormat: RenderTargetFormat;\r\n    depthStencilFormat: RenderTargetFormat;\r\n\r\n    isSRGB: boolean;\r\n\r\n    /**bytelength */\r\n    _gpuMemory: number = 0;\r\n\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n    set gpuMemory(value: number) {\r\n\r\n        this._gpuMemory = value;\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory, this._gpuMemory);\r\n    }\r\n\r\n\r\n    constructor(engine: WebGLEngine, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, isCube: boolean, generateMipmap: boolean, samples: number) {\r\n        super(engine);\r\n\r\n        this.colorFormat = colorFormat;\r\n        this.depthStencilFormat = depthStencilFormat;\r\n        this._isCube = isCube;\r\n        this._generateMipmap = generateMipmap;\r\n        this._samples = samples;\r\n\r\n        this._textures = [];\r\n        this._depthTexture = null;\r\n\r\n        this._framebuffer = this._gl.createFramebuffer();\r\n        if (samples > 1) {\r\n            this._msaaFramebuffer = this._gl.createFramebuffer();\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    dispose(): void {\r\n        this._textures.forEach(tex => {\r\n            tex && tex.dispose();\r\n        });\r\n        this._textures = null;\r\n        this._depthTexture && this._depthTexture.dispose();\r\n        this._depthTexture = null;\r\n        this._framebuffer && this._gl.deleteFramebuffer(this._framebuffer);\r\n        this._framebuffer = null;\r\n        this._depthbuffer && this._gl.deleteRenderbuffer(this._depthbuffer);\r\n        this._depthbuffer = null;\r\n\r\n        this._msaaFramebuffer && this._gl.deleteFramebuffer(this._msaaFramebuffer);\r\n        this._msaaFramebuffer = null;\r\n        this._msaaRenderbuffer && this._gl.deleteRenderbuffer(this._msaaRenderbuffer);\r\n        this._msaaRenderbuffer = null;\r\n\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory,-this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory,-this._gpuMemory);\r\n        this._gpuMemory = 0;\r\n    }\r\n}","\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\r\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\n\r\nexport class GLTextureContext extends GLObject implements ITextureContext {\r\n\r\n    protected _sRGB: any;\r\n    protected _oesTextureHalfFloat: any;\r\n    protected _compressdTextureS3tc_srgb: any;\r\n    protected _compressedTextureEtc1: any;\r\n    protected _compressedTextureS3tc: any;\r\n    protected _compressedTextureETC: any;\r\n    protected _compressedTextureASTC: any;\r\n    protected _webgl_depth_texture: any;\r\n    needBitmap: boolean;\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        this.needBitmap = false;\r\n        this._sRGB = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_sRGB)\r\n        this._oesTextureHalfFloat = this._engine._supportCapatable.getExtension(WebGLExtension.OES_texture_half_float)\r\n        this._compressdTextureS3tc_srgb = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb)\r\n        this._compressedTextureEtc1 = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1)\r\n        this._compressedTextureS3tc = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc)\r\n        this._compressedTextureETC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc)\r\n        this._compressedTextureASTC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_astc)\r\n        this._webgl_depth_texture = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_depth_texture);\r\n    }\r\n\r\n    _glParam: {\r\n        internalFormat: number,\r\n        format: number,\r\n        type: number,\r\n    } = {\r\n            internalFormat: 0,\r\n            format: 0,\r\n            type: 0,\r\n        };\r\n\r\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R5G6B5:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\r\n                break;\r\n            case TextureFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case TextureFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case TextureFormat.DXT1:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT3:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT5:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC1RGB:\r\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGBA:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB_Alpha1:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha1:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC4x4:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC8x8:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC10x10:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC12x12:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC4x4SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC8x8SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC10x10SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            default:\r\n                throw \"Unknown Texture Format.\";\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    // todo srgb ?\r\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n\r\n        switch (format) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_16:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_SHORT;\r\n                break;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                this._glParam.internalFormat = gl.DEPTH_STENCIL;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._webgl_depth_texture.UNSIGNED_INT_24_8_WEBGL;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.STENCIL_8:\r\n            default:\r\n                throw \"render texture format wrong.\"\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number } {\r\n        // todo\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    glRenderTargetAttachment(format: RenderTargetFormat) {\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return gl.DEPTH_ATTACHMENT;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return gl.DEPTH_STENCIL_ATTACHMENT;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return gl.DEPTH_ATTACHMENT;\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return gl.STENCIL_ATTACHMENT;\r\n            case RenderTargetFormat.R8G8B8:\r\n            case RenderTargetFormat.R8G8B8A8:\r\n            case RenderTargetFormat.R16G16B16:\r\n            case RenderTargetFormat.R16G16B16A16:\r\n            case RenderTargetFormat.R32G32B32:\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                return gl.COLOR_ATTACHMENT0;\r\n            default:\r\n                throw \"render format.\"\r\n        }\r\n    }\r\n\r\n    protected getTarget(dimension: TextureDimension): number {\r\n        let gl = this._gl;\r\n        switch (dimension) {\r\n            case TextureDimension.Tex2D:\r\n                return gl.TEXTURE_2D;\r\n            case TextureDimension.Cube:\r\n                return gl.TEXTURE_CUBE_MAP;\r\n            default:\r\n                throw \"texture dimension wrong in WebGL1.\"\r\n        }\r\n    }\r\n\r\n    public getFormatPixelsParams(format: TextureFormat) {\r\n\r\n        let formatParams: { channels: number, bytesPerPixel: number, dataTypedCons: any, typedSize: number } = {\r\n            channels: 0,\r\n            bytesPerPixel: 0,\r\n            dataTypedCons: Uint8Array,\r\n            typedSize: 1\r\n        }\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8A8:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 4;\r\n                formatParams.dataTypedCons = Uint8Array\r\n                formatParams.typedSize = 1;\r\n                return formatParams;\r\n            case TextureFormat.R8G8B8:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 3;\r\n                formatParams.dataTypedCons = Uint8Array\r\n                formatParams.typedSize = 1;\r\n                return formatParams;\r\n            case TextureFormat.R5G6B5:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 2;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R16G16B16:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 6;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R16G16B16A16:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 8;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R32G32B32:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 12;\r\n                formatParams.dataTypedCons = Float32Array\r\n                formatParams.typedSize = 4;\r\n                return formatParams;\r\n            case TextureFormat.R32G32B32A32:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 16;\r\n                formatParams.dataTypedCons = Float32Array\r\n                formatParams.typedSize = 4;\r\n                return formatParams;\r\n            default:\r\n                return formatParams;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * caculate texture memory\r\n     * @param tex \r\n     * @returns \r\n     */\r\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\r\n        let gl = this._gl;\r\n        let channels = 0;\r\n        let singlebyte = 0;\r\n        let bytelength = 0;\r\n\r\n        let srgb = this._sRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n        let srgb_alpha = this._sRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\r\n\r\n        switch (tex.internalFormat) {\r\n            case srgb:\r\n            case gl.RGB:\r\n                channels = 3;\r\n                break;\r\n            case srgb_alpha:\r\n            case gl.RGBA:\r\n                channels = 4;\r\n                break;\r\n            default:\r\n                channels = 0;\r\n                break;\r\n        }\r\n        switch (tex.type) {\r\n            case gl.UNSIGNED_BYTE:\r\n                singlebyte = 1;\r\n                break;\r\n            case gl.UNSIGNED_SHORT_5_6_5:\r\n                singlebyte = 2 / 3;\r\n                break;\r\n            case gl.FLOAT:\r\n                singlebyte = 4;\r\n                break;\r\n            case this._oesTextureHalfFloat.HALF_FLOAT_OES:\r\n                singlebyte = 2;\r\n                break;\r\n            default:\r\n                singlebyte = 0;\r\n                break;\r\n        }\r\n        bytelength = channels * singlebyte * tex.width * tex.height;\r\n        if (tex.mipmap) {\r\n            bytelength *= 1.333;\r\n        }\r\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\r\n            bytelength *= 6;\r\n        else if (tex.target == gl.TEXTURE_2D)\r\n            bytelength *= 1;\r\n\r\n        return bytelength;\r\n    }\r\n\r\n    getGLRTTexMemory(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number, cube: boolean) {\r\n        let getpixelbyte = (rtFormat: RenderTargetFormat) => {\r\n            let pixelByte = 0;\r\n            switch (rtFormat) {\r\n                case RenderTargetFormat.R8G8B8:\r\n                    pixelByte = 3;\r\n                    break;\r\n                case RenderTargetFormat.R8G8B8A8:\r\n                    pixelByte = 4;\r\n                    break;\r\n                case RenderTargetFormat.R16G16B16A16:\r\n                    pixelByte = 8;\r\n                    break;\r\n                case RenderTargetFormat.R32G32B32:\r\n                    pixelByte = 12;\r\n                    break;\r\n                case RenderTargetFormat.R32G32B32A32:\r\n                    pixelByte = 16;\r\n                    break;\r\n                case RenderTargetFormat.R16G16B16:\r\n                    pixelByte = 6;\r\n                    break;\r\n                case RenderTargetFormat.DEPTH_16:\r\n                    pixelByte = 2;\r\n                    break;\r\n                case RenderTargetFormat.STENCIL_8:\r\n                    pixelByte = 1;\r\n                    break;\r\n                case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                    pixelByte = 4;\r\n                    break;\r\n                case RenderTargetFormat.DEPTH_32:\r\n                    pixelByte = 4;\r\n                    break;\r\n            }\r\n            return pixelByte;\r\n        }\r\n        let colorPixelbyte = getpixelbyte(colorFormat);\r\n        let depthPixelbyte = getpixelbyte(depthStencilFormat);\r\n        if (multiSamples > 1)//多重采样\r\n            colorPixelbyte *= 2;\r\n        if (cube)//box\r\n            colorPixelbyte *= 6;\r\n        if (generateMipmap)//mipmap\r\n            colorPixelbyte *= 1.333;\r\n        let colorMemory = colorPixelbyte * width * height;\r\n        let depthMemory = depthPixelbyte * width * height;\r\n        return colorMemory + depthMemory;\r\n    }\r\n\r\n    // protected getRenderTargetDepthFormat(format: RenderTargetDepthFormat): { internalFormat: number, attachment: number } {\r\n    //     let gl = this.gl;\r\n    //     switch (format) {\r\n    //         case RenderTargetDepthFormat.DEPTH_16:\r\n    //             return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_24_8:\r\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTH_32:\r\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.STENCIL_8:\r\n    //             return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_NONE:\r\n    //             return null;\r\n    //         default:\r\n    //             throw \"RenderTargetDepthFormat wrong.\"\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * 根据 format 判断是否支持 SRGBload\r\n     * @param format \r\n     * @returns \r\n     */\r\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n            case TextureFormat.R8G8B8A8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\r\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    supportGenerateMipmap(format: TextureFormat | RenderTargetFormat) {\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n            case RenderTargetFormat.DEPTH_32:\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return false;\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断 纹理格式 本身是否是 SRGB格式\r\n     * @param format \r\n     * @returns \r\n     */\r\n    isSRGBFormat(format: TextureFormat | RenderTargetFormat) {\r\n        switch (format) {\r\n            case TextureFormat.ETC2SRGB:\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n            case TextureFormat.ETC2SRGB_Alpha1:\r\n            case TextureFormat.ASTC4x4SRGB:\r\n            case TextureFormat.ASTC6x6SRGB:\r\n            case TextureFormat.ASTC8x8SRGB:\r\n            case TextureFormat.ASTC10x10SRGB:\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean, premultipliedAlpha: boolean): InternalTexture {\r\n\r\n        // todo  一些format 不支持自动生成mipmap\r\n\r\n        // todo  这个判断, 若纹理本身格式不支持？\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n        if (premultipliedAlpha) {//预乘法和SRGB同时开启，会有颜色白边问题\r\n            useSRGBExt = false;\r\n        }\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        //Resource:\r\n        //internalTex.gpuMemory = this.getGLtexMemory(format, width, height, dimension, generateMipmap);\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        if (texture.width != source.width || texture.height != source.height) {\r\n            // todo ?\r\n            console.warn(\"setTextureImageData: size not match\");\r\n        }\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        //texture.\r\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        //resource TODO\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = source.width;\r\n        let height = source.height;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texSubImage2D(target, 0, x, y, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        //texture.\r\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        //resource TODO\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n\r\n    initVideoTextureData(texture: WebGLInternalTex) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let gl = texture._gl;\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texImage2D(target, 0, texture.internalFormat, width, height, 0, format, type, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n    }\r\n\r\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        // todo check pixels size\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        // gl.texImage2D(target, 0, internalFormat, format, type, source);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, source);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        // todo check pixels size\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source);\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let source = ddsInfo.source;\r\n        let dataOffset = ddsInfo.dataOffset;\r\n        let bpp = ddsInfo.bpp;\r\n        let blockBytes = ddsInfo.blockBytes;\r\n        let mipmapCount = ddsInfo.mipmapCount;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let memory = 0;\r\n        for (let index = 0; index < mipmapCount; index++) {\r\n\r\n            // todo  size 计算 方式\r\n            let dataLength = (((Math.max(4, mipmapWidth) / 4) * Math.max(4, mipmapHeight)) / 4) * blockBytes;\r\n            let sourceData = new Uint8Array(source, dataOffset, dataLength);\r\n\r\n            gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n            memory += sourceData.length;\r\n            dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\r\n\r\n            mipmapWidth *= 0.5;\r\n            mipmapHeight *= 0.5;\r\n            mipmapWidth = Math.max(1.0, mipmapWidth);\r\n            mipmapHeight = Math.max(1.0, mipmapHeight);\r\n        }\r\n        texture.gpuMemory = memory;//TODO 不太准\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n            if (compressed) {\r\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n            else {\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData: ArrayBufferView = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                memory += sourceData.byteLength;\r\n            }\r\n\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\r\n            if (compressed) {\r\n                // todo\r\n            }\r\n            else {\r\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        texture.gpuMemory = memory;//TODO 不太准\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\r\n        let hdrPixelData = hdrInfo.readScanLine();\r\n        this.setTexturePixelsData(texture, hdrPixelData, false, false);\r\n    }\r\n\r\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texImage2D(target, 0, internalFormat, format, type, sources[index]);\r\n        }\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        if (source) {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\r\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, source[index]);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        else {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\r\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, null);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeSubPixelData(texture: WebGLInternalTex, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ];\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source[index]);\r\n        }\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n\r\n    setCubeDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        // let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let source = ddsInfo.source;\r\n        let dataOffset = ddsInfo.dataOffset;\r\n        let bpp = ddsInfo.bpp;\r\n        let blockBytes = ddsInfo.blockBytes;\r\n        let mipmapCount = ddsInfo.mipmapCount;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        fourSize = true;\r\n        let gl = texture._gl;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n        let formatParams = this.getFormatPixelsParams(ddsInfo.format);\r\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\r\n\r\n        let dataTypeConstur = ddsInfo.format == TextureFormat.R32G32B32A32 ? Float32Array : Uint16Array;\r\n        let memory = 0;\r\n        if (!ddsInfo.compressed) {\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                let mipmapWidth = width;\r\n                let mipmapHeight = height;\r\n                for (let index = 0; index < mipmapCount; index++) {\r\n                    let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\r\n                    let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                    dataOffset += dataLength * channelsByte;\r\n                    mipmapWidth *= 0.5;\r\n                    mipmapHeight *= 0.5;\r\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\r\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                let mipmapWidth = width;\r\n                let mipmapHeight = height;\r\n                for (let index = 0; index < mipmapCount; index++) {\r\n                    let dataLength = Math.max(4, mipmapWidth) / 4 * Math.max(4, mipmapHeight) / 4 * blockBytes;\r\n\r\n                    let sourceData = new Uint8Array(source, dataOffset, dataLength);\r\n\r\n                    (texture.mipmap || index == 0) && gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                    dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\r\n\r\n                    mipmapWidth *= 0.5;\r\n                    mipmapHeight *= 0.5;\r\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\r\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\r\n                }\r\n            }\r\n        }\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        // let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = ktxInfo.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n            // todo  cube 在一起？\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n\r\n                if (compressed) {\r\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                    gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                else {\r\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                    let typedSize = imageSize / pixelParams.typedSize;\r\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                dataOffset += imageSize;\r\n                dataOffset += 3 - ((imageSize + 3) % 4);\r\n            }\r\n\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                if (compressed) {\r\n                    // todo\r\n                }\r\n                else {\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\r\n                }\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = memory;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\r\n        return TextureCompareMode.None;\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\r\n        let gl = this._gl;\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        if (renderTarget._isCube) {\r\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\r\n        }\r\n\r\n    }\r\n\r\n    bindoutScreenTarget(): void {\r\n        let gl = this._gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\r\n        let gl = renderTarget._gl;\r\n\r\n        if (renderTarget._generateMipmap) {\r\n            renderTarget._textures.forEach(tex => {\r\n                let target = (<WebGLInternalTex>tex).target;\r\n                this._engine._bindTexture(target, tex.resource);\r\n                gl.generateMipmap(target);\r\n                this._engine._bindTexture(target, null);\r\n            });\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        let useSRGBExt = false;\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let gammaCorrection = 1.0;\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     // todo \r\n        //     // gammaCorrection = 2.2;\r\n        // }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = internalTex._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, glFormat, type, null);\r\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        let useSRGBExt = false;\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let gammaCorrection = 1.0;\r\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     gammaCorrection = 2.2;\r\n        // }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = internalTex._gl;\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texImage2D(target, 0, internalFormat, size, size, 0, glFormat, type, null);\r\n        }\r\n        this._engine._bindTexture(internalTex.target, null);\r\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        multiSamples = 1;\r\n\r\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\r\n        renderTarget.colorFormat = colorFormat;\r\n        renderTarget.depthStencilFormat = depthStencilFormat;\r\n        renderTarget._textures.push(texture);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        // color\r\n        let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n        // depth\r\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n        if (depthBufferParam) {\r\n            let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n            renderTarget._depthbuffer = depthbuffer;\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        multiSamples = 1;\r\n\r\n        // let texture = this.createRenderTextureInternal(dimension, size, size, colorFormat, generateMipmap, sRGB);\r\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\r\n        renderTarget._textures.push(texture);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n        if (depthBufferParam) {\r\n            let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n            renderTarget._depthbuffer = depthbuffer;\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number) {\r\n\r\n        // todo  多个 gl\r\n        let gl = this._gl;\r\n\r\n        let renderbuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return renderbuffer;\r\n    }\r\n\r\n    // todo  color 0, 1, 2, 3 ?\r\n    setupRendertargetTextureAttachment(renderTarget: WebGLInternalRT, texture: WebGLInternalTex) {\r\n        let gl = renderTarget._gl;\r\n\r\n        renderTarget._depthTexture = texture;\r\n\r\n        let depthbuffer = renderTarget._depthbuffer;\r\n        depthbuffer && gl.deleteRenderbuffer(depthbuffer);\r\n        renderTarget._depthbuffer = null;\r\n        let attachment = this.glRenderTargetAttachment(renderTarget.depthStencilFormat);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.resource, 0);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n\r\n    readRenderTargetPixelData(renderTarget: WebGLInternalRT, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\r\n\r\n        let gl = renderTarget._gl;\r\n\r\n        this.bindRenderTarget(renderTarget);\r\n\r\n        let frameState = gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\r\n\r\n        if (!frameState) {\r\n            this.unbindRenderTarget(renderTarget);\r\n            return null;\r\n        }\r\n        switch (renderTarget.colorFormat) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.UNSIGNED_BYTE, out);\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.UNSIGNED_BYTE, out);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\r\n                break;\r\n        }\r\n        this.unbindRenderTarget(renderTarget);\r\n        return out;\r\n    }\r\n\r\n    updateVideoTexture(texture: WebGLInternalTex, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        let gl = texture._gl;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        // todo 用 sub 会慢\r\n        //gl.texSubImage2D(target, 0, 0, 0, format, type, video);\r\n        gl.texImage2D(target, 0, internalFormat, format, type, video);\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    getRenderTextureData(internalTex: WebGLInternalRT, x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        if (internalTex.colorFormat == RenderTargetFormat.None)\r\n            return null;\r\n        let gl = internalTex._gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, internalTex._framebuffer);\r\n        var canRead: boolean = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\r\n        if (!canRead) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            return null;\r\n        }\r\n        let size = width * height;\r\n        let format, type;\r\n        var pixels;\r\n        switch (internalTex.colorFormat) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                format = gl.RGB;\r\n                type = gl.UNSIGNED_BYTE;\r\n                pixels = new Uint8Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                format = gl.RGBA;\r\n                type = gl.UNSIGNED_BYTE;\r\n                pixels = new Uint8Array(size * 4);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                format = gl.RGB;\r\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\r\n                pixels = new Uint16Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                format = gl.RGBA;\r\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\r\n                pixels = new Uint16Array(size * 4);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                format = gl.RGB;\r\n                type = gl.FLOAT;\r\n                pixels = new Float32Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                format = gl.RGBA;\r\n                type = gl.FLOAT;\r\n                pixels = new Float32Array(size * 4);\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n        gl.readPixels(x, y, width, height, format, type, pixels);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        return pixels;\r\n    }\r\n\r\n}","import { GLTextureContext } from \"./GLTextureContext\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\r\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { ITexture3DContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\n\r\n/**\r\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\r\n */\r\nexport class GL2TextureContext extends GLTextureContext implements ITexture3DContext {\r\n\r\n    declare protected _gl: WebGL2RenderingContext;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n    }\r\n\r\n    protected getTarget(dimension: TextureDimension): number {\r\n        let target: number = -1;\r\n        switch (dimension) {\r\n            case TextureDimension.Cube:\r\n                target = this._gl.TEXTURE_CUBE_MAP;\r\n                break;\r\n            case TextureDimension.Tex2D:\r\n                target = this._gl.TEXTURE_2D;\r\n                break;\r\n            case TextureDimension.Texture2DArray:\r\n                target = this._gl.TEXTURE_2D_ARRAY;\r\n                break;\r\n            case TextureDimension.Tex3D:\r\n                target = this._gl.TEXTURE_3D;\r\n                break;\r\n            default:\r\n                throw \"Unknow Texture Target\";\r\n        }\r\n        return target;\r\n    }\r\n\r\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R5G6B5:\r\n                this._glParam.internalFormat = gl.RGB565;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\r\n                break;\r\n            case TextureFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA32F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB32F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB16F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA16F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case TextureFormat.DXT1:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n                // this._glParam.format = gl.RGBA;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT3:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT5:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC1RGB:\r\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGBA:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB_Alpha1:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha1:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;\r\n                break;\r\n            case TextureFormat.ASTC4x4:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC8x8:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC10x10:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC12x12:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC4x4SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC8x8SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC10x10SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            default:\r\n                throw \"Unknown Texture Format.\";\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number; } {\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return { internalFormat: gl.DEPTH24_STENCIL8, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return { internalFormat: gl.DEPTH_COMPONENT32F, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.R8G8B8:\r\n                return { internalFormat: useSRGB ? gl.SRGB8 : gl.RGB8, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                return { internalFormat: useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R16G16B16:\r\n                return { internalFormat: gl.RGB16F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                return { internalFormat: gl.RGBA16F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R32G32B32:\r\n                return { internalFormat: gl.RGB32F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                return { internalFormat: gl.RGBA32F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n\r\n        switch (format) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB16F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA16F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB32F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA32F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_16:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT16;\r\n                this._glParam.format = gl.DEPTH_COMPONENT;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                this._glParam.internalFormat = gl.DEPTH24_STENCIL8;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT_24_8;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT32F;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.STENCIL_8:\r\n                break;\r\n            default:\r\n                throw \"depth texture format wrong.\"\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\r\n        let gl = this._gl;\r\n        let channels = 0;\r\n        let singlebyte = 0;\r\n        let bytelength = 0;\r\n        switch (tex.internalFormat) {\r\n            case gl.SRGB8:\r\n            case gl.RGB8:\r\n            case gl.RGB565:\r\n            case gl.RGB32F:\r\n            case gl.RGB16F:\r\n                channels = 3;\r\n                break;\r\n            case gl.SRGB8_ALPHA8:\r\n            case gl.RGBA8:\r\n            case gl.RGBA32F:\r\n            case gl.RGBA16F:\r\n                channels = 4;\r\n                break;\r\n            default:\r\n                channels = 0;\r\n                break;\r\n        }\r\n        switch (tex.type) {\r\n            case gl.UNSIGNED_BYTE:\r\n                singlebyte = 1;\r\n                break;\r\n            case gl.UNSIGNED_SHORT_5_6_5:\r\n                singlebyte = 2 / 3;\r\n                break;\r\n            case gl.FLOAT:\r\n                singlebyte = 4;\r\n                break;\r\n            case gl.HALF_FLOAT:\r\n                singlebyte = 2;\r\n                break;\r\n            default:\r\n                singlebyte = 0;\r\n                break;\r\n        }\r\n        bytelength = channels * singlebyte * tex.width * tex.height;\r\n        if (tex.mipmap) {\r\n            bytelength *= 1.333;\r\n        }\r\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\r\n            bytelength *= 6;\r\n        else if (tex.target == gl.TEXTURE_2D)\r\n            bytelength *= 1;\r\n        else if (tex.target == gl.TEXTURE_2D_ARRAY)\r\n            bytelength *= depth;\r\n        return bytelength;\r\n    }\r\n\r\n    // todo webgl2 srgb 判断\r\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\r\n            case TextureFormat.R8G8B8A8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB);\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\r\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        if (texture.width != source.width || texture.height != source.height) {\r\n            // todo ?\r\n            console.warn(\"setTextureImageData: size not match\");\r\n        }\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        //gl.texStorage2D(target, mipmapCount, internalFormat, source.width, source.height);\r\n        gl.texSubImage2D(target, 0, x, y, source.width, source.height, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (source) {\r\n            gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    createTexture3DInternal(dimension: TextureDimension, width: number, height: number, depth: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean, premultipliedAlpha: boolean): InternalTexture {\r\n        // todo  一些format 不支持自动生成mipmap\r\n\r\n        // todo  这个判断, 若纹理本身格式不支持？\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n        if (premultipliedAlpha) {//预乘法和SRGB同时开启，会有颜色白边问题\r\n            useSRGBExt = false;\r\n        }\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, depth, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    setTexture3DImageData(texture: WebGLInternalTex, sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\r\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\r\n        for (let index = 0; index < depth; index++) {\r\n            gl.texSubImage3D(target, 0, 0, 0, index, width, height, 1, format, type, sources[index]);\r\n        }\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTexture3DPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\r\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\r\n        if (source) {\r\n            gl.texSubImage3D(target, 0, 0, 0, 0, width, height, depth, format, type, source);\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTexture3DSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texSubImage3D(target, mipmapLevel, xOffset, yOffset, zOffset, width, height, depth, format, type, source);\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\r\n        let sourceData = hdrInfo.readScanLine();\r\n\r\n        this.setTexturePixelsData(texture, sourceData, false, false);\r\n    }\r\n\r\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size \r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            if (compressed) {\r\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n            else {\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texSubImage2D(target, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = memory;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        let gl = this._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let t = cubeFace[index];\r\n            // gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\r\n            gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\r\n        }\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        let gl = this._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ];\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        if (source) {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                gl.texSubImage2D(t, 0, 0, 0, width, height, format, type, source[index]);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo): void {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let gl = this._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = ktxInfo.mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let t = cubeFace[face];\r\n\r\n                if (compressed) {\r\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                    gl.compressedTexImage2D(t, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                else {\r\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                    let typedSize = imageSize / pixelParams.typedSize;\r\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                    gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                dataOffset += imageSize;\r\n                dataOffset += 3 - ((imageSize + 3) % 4);\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n\r\n    }\r\n\r\n\r\n    //TODO miner\r\n    getCubeKTXRGBMData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n        let rightFaceData = [];\r\n        let leftFaceData = [];\r\n        let upFaceData = [];\r\n        let downFaceData = [];\r\n        let backFaceData = [];\r\n        let frontFaceData = [];\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let gl = this._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let t = cubeFace[face];\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                memory += sourceData.byteLength;\r\n            }\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n        }\r\n\r\n        mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n        mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\r\n        let gl = this._gl;\r\n        switch (compareMode) {\r\n            case TextureCompareMode.LEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.GEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.LESS:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LESS);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.GREATER:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GREATER);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.EQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.EQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.NOTEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NOTEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.ALWAYS:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.ALWAYS);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.NEVER:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NEVER);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.None:\r\n            default:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.NONE);\r\n                break;\r\n        }\r\n        return compareMode;\r\n\r\n    }\r\n\r\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number): WebGLRenderbuffer {\r\n        // todo  多个 gl\r\n        let gl = this._gl;\r\n\r\n        let renderbuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n\r\n        if (samples > 1) {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, samples, internalFormat, width, height);\r\n        }\r\n        else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return renderbuffer;\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n\r\n        let gammaCorrection = 1.0;\r\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     gammaCorrection = 2.2;\r\n        // }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = this._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, width, height);\r\n\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\r\n        renderTarget._textures.push(texture);\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        if (renderTarget._samples > 1) {\r\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\r\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, sRGB);\r\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(width, height, renderbufferParam.internalFormat, renderTarget._samples);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n            let framebuffer = renderTarget._framebuffer;\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            // color\r\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            // color\r\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n        return renderTarget;\r\n\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\r\n        renderTarget.colorFormat = colorFormat;\r\n        renderTarget.depthStencilFormat = depthStencilFormat;\r\n        renderTarget._textures.push(texture);\r\n        renderTarget.isSRGB = sRGB;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        if (renderTarget._samples > 1) {\r\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\r\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, false);\r\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(size, size, renderbufferParam.internalFormat, renderTarget._samples);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n\r\n        let gammaCorrection = 1.0;\r\n        // todo 非 srgb framebuffer 只能渲染 linear, 目前不支持手动矫正\r\n        // if (!useSRGBExt && sRGB) {\r\n        //     gammaCorrection = 2.2;\r\n        // }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, 1, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = this._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, size, size);\r\n\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        return internalTex;\r\n\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\r\n        let gl = this._gl;\r\n\r\n        if (renderTarget._isCube) {\r\n            let framebuffer = renderTarget._framebuffer;\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\r\n        }\r\n\r\n        if (renderTarget._samples > 1) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget._msaaFramebuffer);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        }\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\r\n        let gl = this._gl;\r\n        if (renderTarget._samples > 1) {\r\n\r\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, renderTarget._msaaFramebuffer);\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, renderTarget._framebuffer);\r\n\r\n            let texture = renderTarget._textures[0];\r\n\r\n            // todo 不用clear ?\r\n            // gl.clearBufferfv(gl.COLOR, 0, [0, 0, 0, 0]);\r\n            // gl.clearBufferfi(gl.DEPTH_STENCIL, 0, 1.0, 0);\r\n\r\n            // todo  blit mask\r\n            let biltMask = gl.COLOR_BUFFER_BIT;\r\n            if (renderTarget._depthTexture) {\r\n                biltMask |= gl.DEPTH_BUFFER_BIT;\r\n            }\r\n\r\n            gl.blitFramebuffer(0, 0, texture.width, texture.height, 0, 0, texture.width, texture.height, biltMask, gl.NEAREST);\r\n        }\r\n        if (renderTarget._generateMipmap) {\r\n            renderTarget._textures.forEach(tex => {\r\n                let target = (<WebGLInternalTex>tex).target;\r\n                this._engine._bindTexture(target, tex.resource);\r\n                gl.generateMipmap(target);\r\n                this._engine._bindTexture(target, null);\r\n            });\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GLBuffer extends GLObject implements IRenderBuffer {\r\n    //GLParams\r\n    _glBuffer: WebGLBuffer;\r\n    _glTarget: number;\r\n    _glUsage: number;\r\n    //Common Enum\r\n    _glTargetType: BufferTargetType;\r\n    _glBufferUsageType: BufferUsage;\r\n    //size\r\n    _byteLength: number = 0;\r\n\r\n    constructor(engine: WebGLEngine, targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n        super(engine)\r\n        this._glTargetType = targetType;\r\n        this._glBufferUsageType = bufferUsageType;\r\n        this._getGLTarget(this._glTargetType);\r\n        this._getGLUsage(this._glBufferUsageType);\r\n        this._glBuffer = this._gl.createBuffer();\r\n    }\r\n\r\n    private _getGLUsage(usage: BufferUsage) {\r\n        switch (usage) {\r\n            case BufferUsage.Static:\r\n                this._glUsage = this._gl.STATIC_DRAW;\r\n                break;\r\n            case BufferUsage.Dynamic:\r\n                this._glUsage = this._gl.DYNAMIC_DRAW;\r\n                break;\r\n            case BufferUsage.Stream:\r\n                this._glUsage = this._gl.STREAM_DRAW;\r\n                break;\r\n            default:\r\n                console.error(\"usage is not standard\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _getGLTarget(target: BufferTargetType) {\r\n        switch (target) {\r\n            case BufferTargetType.ARRAY_BUFFER:\r\n                this._glTarget = this._gl.ARRAY_BUFFER\r\n                break;\r\n            case BufferTargetType.UNIFORM_BUFFER:\r\n                this._glTarget = (<WebGL2RenderingContext>this._gl).UNIFORM_BUFFER;\r\n                break;\r\n            case BufferTargetType.ELEMENT_ARRAY_BUFFER:\r\n                this._glTarget = this._gl.ELEMENT_ARRAY_BUFFER\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _memorychange(bytelength: number) {\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.BufferMemory, bytelength);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, bytelength);\r\n    }\r\n\r\n    bindBuffer(): boolean {\r\n        if (this._engine._getbindBuffer(this._glTargetType) != this) {\r\n            this._gl.bindBuffer(this._glTarget, this._glBuffer);\r\n            this._engine._setbindBuffer(this._glTargetType, this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    unbindBuffer() {\r\n        if (this._engine._getbindBuffer(this._glTargetType) == this) {\r\n            this._gl.bindBuffer(this._glTarget, null);\r\n            this._engine._setbindBuffer(this._glTargetType, null);\r\n        }\r\n    }\r\n\r\n    orphanStorage() {\r\n        this.bindBuffer();\r\n        this.setDataLength(this._byteLength);\r\n    }\r\n\r\n    setDataLength(srcData: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        this._memorychange(-this._byteLength);\r\n        this._byteLength = srcData;\r\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n        this.unbindBuffer();\r\n        this._memorychange(this._byteLength);\r\n    }\r\n\r\n\r\n\r\n\r\n    setData(srcData: ArrayBuffer | ArrayBufferView, offset: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\r\n        this.unbindBuffer();\r\n    }\r\n    setDataEx(srcData: ArrayBuffer | ArrayBufferView, offset: number, length: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\r\n        this.unbindBuffer();\r\n    }\r\n    // setData(srcData: ArrayBuffer | ArrayBufferView | number, offset?: number, length?: number): void {\r\n    //     let gl = this._gl;\r\n    //     this.bindBuffer();\r\n    //     if (typeof srcData == \"number\") {\r\n    //         this._byteLength = srcData as number;\r\n    //         gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n    //     }\r\n    //     if (offset != undefined && length == undefined) {\r\n    //         gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\r\n    //     }\r\n    //     if(offset != undefined && length != undefined) {\r\n    //         gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\r\n    //     }\r\n    //     this.unbindBuffer();\r\n    // }\r\n\r\n\r\n    //TODO:\r\n    bindBufferBase(glPointer: number) {\r\n        if (this._engine._getBindUBOBuffer(glPointer) != this) {\r\n            const gl = <WebGL2RenderingContext>this._gl;\r\n            gl.bindBufferBase(this._glTarget, glPointer, this._glBuffer);\r\n            this._engine._setBindUBOBuffer(glPointer, this);\r\n        }\r\n    }\r\n\r\n    //TODO:\r\n    bindBufferRange(glPointer: number, offset: number, byteCount: number) {\r\n        const gl = <WebGL2RenderingContext>this._gl;\r\n        gl.bindBufferRange(this._glTarget, glPointer, this._glBuffer, offset, byteCount);\r\n    }\r\n\r\n    resizeBuffer(dataLength: number) {\r\n        this.bindBuffer();\r\n        const gl = this._gl;\r\n        this._byteLength = dataLength;\r\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        gl.deleteBuffer(this._glBuffer);\r\n        this._memorychange(-this._byteLength);\r\n        this._byteLength = 0;\r\n        this._engine = null;\r\n        this._glBuffer = null;\r\n        this._glTarget = null;\r\n        this._glUsage = null;\r\n        this._gl = null;\r\n\r\n    }\r\n}","// @ts-nocheck\r\nexport class VertexArrayObject {\r\n    constructor() {\r\n    }\r\n}\r\n\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var glErrorShadow = {};\r\n\r\n    function error(msg) {\r\n        if (window.console && window.console.error) {\r\n            window.console.error(msg);\r\n        }\r\n    }\r\n\r\n    function log(msg) {\r\n        if (window.console && window.console.log) {\r\n            window.console.log(msg);\r\n        }\r\n    }\r\n\r\n    function synthesizeGLError(err, opt_msg) {\r\n        glErrorShadow[err] = true;\r\n        if (opt_msg !== undefined) {\r\n            error(opt_msg)\r\n        }\r\n    }\r\n\r\n    function wrapGLError(gl) {\r\n        var f = gl.getError;\r\n        gl.getError = function () {\r\n            var err;\r\n            do {\r\n                err = f.apply(gl);\r\n                if (err != gl.NO_ERROR) {\r\n                    glErrorShadow[err] = true;\r\n                }\r\n            } while (err != gl.NO_ERROR);\r\n\r\n            for (var err1 in glErrorShadow) {\r\n                if (glErrorShadow[err1]) {\r\n                    delete glErrorShadow[err1];\r\n                    return parseInt(err1);\r\n                }\r\n            }\r\n            return gl.NO_ERROR;\r\n        };\r\n    }\r\n\r\n    var WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\r\n        var gl = ext.gl;\r\n\r\n        this.ext = ext;\r\n        this.isAlive = true;\r\n        this.hasBeenBound = false;\r\n\r\n        this.elementArrayBuffer = null;\r\n        this.attribs = new Array(ext.maxVertexAttribs);\r\n        for (var n = 0; n < this.attribs.length; n++) {\r\n            var attrib = new (WebGLVertexArrayObjectOES as any).VertexAttrib(gl);\r\n            this.attribs[n] = attrib;\r\n        }\r\n\r\n        this.maxAttrib = 0;\r\n    };\r\n\r\n    (WebGLVertexArrayObjectOES as any).VertexAttrib = function VertexAttrib(gl) {\r\n        this.enabled = false;\r\n        this.buffer = null;\r\n        this.size = 4;\r\n        this.type = gl.FLOAT;\r\n        this.normalized = false;\r\n        this.stride = 16;\r\n        this.offset = 0;\r\n\r\n        this.cached = \"\";\r\n        this.recache();\r\n    };\r\n    (WebGLVertexArrayObjectOES as any).VertexAttrib.prototype.recache = function recache() {\r\n        this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(\":\");\r\n    };\r\n\r\n    var OESVertexArrayObject = function OESVertexArrayObject(gl) {\r\n        var self = this;\r\n        this.gl = gl;\r\n\r\n        wrapGLError(gl);\r\n\r\n        var original = this.original = {\r\n            getParameter: gl.getParameter,\r\n            enableVertexAttribArray: gl.enableVertexAttribArray,\r\n            disableVertexAttribArray: gl.disableVertexAttribArray,\r\n            bindBuffer: gl.bindBuffer,\r\n            getVertexAttrib: gl.getVertexAttrib,\r\n            vertexAttribPointer: gl.vertexAttribPointer\r\n        };\r\n\r\n        gl.getParameter = function getParameter(pname) {\r\n            if (pname == self.VERTEX_ARRAY_BINDING_OES) {\r\n                if (self.currentVertexArrayObject == self.defaultVertexArrayObject) {\r\n                    return null;\r\n                } else {\r\n                    return self.currentVertexArrayObject;\r\n                }\r\n            }\r\n            return original.getParameter.apply(this, arguments);\r\n        };\r\n\r\n        gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\r\n            var attrib = vao.attribs[index];\r\n            attrib.enabled = true;\r\n            return original.enableVertexAttribArray.apply(this, arguments);\r\n        };\r\n        gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\r\n            var attrib = vao.attribs[index];\r\n            attrib.enabled = false;\r\n            return original.disableVertexAttribArray.apply(this, arguments);\r\n        };\r\n\r\n        gl.bindBuffer = function bindBuffer(target, buffer) {\r\n            switch (target) {\r\n                case gl.ARRAY_BUFFER:\r\n                    self.currentArrayBuffer = buffer;\r\n                    break;\r\n                case gl.ELEMENT_ARRAY_BUFFER:\r\n                    self.currentVertexArrayObject.elementArrayBuffer = buffer;\r\n                    break;\r\n            }\r\n            return original.bindBuffer.apply(this, arguments);\r\n        };\r\n\r\n        gl.getVertexAttrib = function getVertexAttrib(index, pname) {\r\n            var vao = self.currentVertexArrayObject;\r\n            var attrib = vao.attribs[index];\r\n            switch (pname) {\r\n                case gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\r\n                    return attrib.buffer;\r\n                case gl.VERTEX_ATTRIB_ARRAY_ENABLED:\r\n                    return attrib.enabled;\r\n                case gl.VERTEX_ATTRIB_ARRAY_SIZE:\r\n                    return attrib.size;\r\n                case gl.VERTEX_ATTRIB_ARRAY_STRIDE:\r\n                    return attrib.stride;\r\n                case gl.VERTEX_ATTRIB_ARRAY_TYPE:\r\n                    return attrib.type;\r\n                case gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\r\n                    return attrib.normalized;\r\n                default:\r\n                    return original.getVertexAttrib.apply(this, arguments);\r\n            }\r\n        };\r\n\r\n        gl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, indx);\r\n            var attrib = vao.attribs[indx];\r\n            attrib.buffer = self.currentArrayBuffer;\r\n            attrib.size = size;\r\n            attrib.type = type;\r\n            attrib.normalized = normalized;\r\n            attrib.stride = stride;\r\n            attrib.offset = offset;\r\n            attrib.recache();\r\n            return original.vertexAttribPointer.apply(this, arguments);\r\n        };\r\n\r\n        if (gl.instrumentExtension) {\r\n            gl.instrumentExtension(this, \"OES_vertex_array_object\");\r\n        }\r\n\r\n        gl.canvas.addEventListener('webglcontextrestored', function () {\r\n            log(\"OESVertexArrayObject emulation library context restored\");\r\n            self.reset_();\r\n        }, true);\r\n\r\n        this.reset_();\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85B5;\r\n\r\n    OESVertexArrayObject.prototype.reset_ = function reset_() {\r\n        var contextWasLost = this.vertexArrayObjects !== undefined;\r\n        if (contextWasLost) {\r\n            for (var ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\r\n                this.vertexArrayObjects.isAlive = false;\r\n            }\r\n        }\r\n        var gl = this.gl;\r\n        this.maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\r\n        this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\r\n        this.currentVertexArrayObject = null;\r\n        this.currentArrayBuffer = null;\r\n        this.vertexArrayObjects = [this.defaultVertexArrayObject];\r\n\r\n        this.bindVertexArrayOES(null);\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\r\n        var arrayObject = new WebGLVertexArrayObjectOES(this);\r\n        this.vertexArrayObjects.push(arrayObject);\r\n        return arrayObject;\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\r\n        arrayObject.isAlive = false;\r\n        this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\r\n        if (this.currentVertexArrayObject == arrayObject) {\r\n            this.bindVertexArrayOES(null);\r\n        }\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\r\n        if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\r\n            if ((arrayObject as any).hasBeenBound && (arrayObject as any).ext == this) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\r\n        var gl = this.gl;\r\n        if (arrayObject && !arrayObject.isAlive) {\r\n            synthesizeGLError(gl.INVALID_OPERATION, \"bindVertexArrayOES: attempt to bind deleted arrayObject\");\r\n            return;\r\n        }\r\n        var original = this.original;\r\n\r\n        var oldVAO = this.currentVertexArrayObject;\r\n        this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\r\n        this.currentVertexArrayObject.hasBeenBound = true;\r\n        var newVAO = this.currentVertexArrayObject;\r\n\r\n        if (oldVAO == newVAO) {\r\n            return;\r\n        }\r\n\r\n        if (!oldVAO || newVAO.elementArrayBuffer != oldVAO.elementArrayBuffer) {\r\n            original.bindBuffer.call(gl, gl.ELEMENT_ARRAY_BUFFER, newVAO.elementArrayBuffer);\r\n        }\r\n\r\n        var currentBinding = this.currentArrayBuffer;\r\n        var maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\r\n        for (var n = 0; n <= maxAttrib; n++) {\r\n            var attrib = newVAO.attribs[n];\r\n            var oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\r\n\r\n            if (!oldVAO || attrib.enabled != oldAttrib.enabled) {\r\n                if (attrib.enabled) {\r\n                    original.enableVertexAttribArray.call(gl, n);\r\n                } else {\r\n                    original.disableVertexAttribArray.call(gl, n);\r\n                }\r\n            }\r\n\r\n            if (attrib.enabled) {\r\n                var bufferChanged = false;\r\n                if (!oldVAO || attrib.buffer != oldAttrib.buffer) {\r\n                    if (currentBinding != attrib.buffer) {\r\n                        original.bindBuffer.call(gl, gl.ARRAY_BUFFER, attrib.buffer);\r\n                        currentBinding = attrib.buffer;\r\n                    }\r\n                    bufferChanged = true;\r\n                }\r\n\r\n                if (bufferChanged || attrib.cached != oldAttrib.cached) {\r\n                    original.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentArrayBuffer != currentBinding) {\r\n            original.bindBuffer.call(gl, gl.ARRAY_BUFFER, this.currentArrayBuffer);\r\n        }\r\n    };\r\n\r\n    (window as any)._setupVertexArrayObject = function (gl) {\r\n        var original_getSupportedExtensions = gl.getSupportedExtensions;\r\n        gl.getSupportedExtensions = function getSupportedExtensions() {\r\n            var list = original_getSupportedExtensions.call(this) || [];\r\n            if (list.indexOf(\"OES_vertex_array_object\") < 0) {\r\n                list.push(\"OES_vertex_array_object\");\r\n            }\r\n            return list;\r\n        };\r\n\r\n        var original_getExtension = gl.getExtension;\r\n\r\n        gl.getExtension = function getExtension(name) {\r\n            var ext = original_getExtension.call(this, name);\r\n            if (ext) {\r\n                return ext;\r\n            }\r\n            if (name !== \"OES_vertex_array_object\") {\r\n                return null;\r\n            }\r\n\r\n            if (!this.__OESVertexArrayObject) {\r\n                console.log(\"Setup OES_vertex_array_object polyfill\");\r\n                this.__OESVertexArrayObject = new OESVertexArrayObject(this);\r\n            }\r\n            return this.__OESVertexArrayObject;\r\n        };\r\n    };\r\n}());\r\n","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { VertexArrayObject } from \"./VertexArrayObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GlCapable {\r\n    /**@internal */\r\n    private _extentionVendorPrefixes: string[] = [\"\", \"WEBKIT_\", \"MOZ_\"];\r\n    /**@internal */\r\n    private _gl: any;\r\n    /**@internal */\r\n    private _extensionMap: Map<WebGLExtension, any>;\r\n    /**@internal */\r\n    private _capabilityMap: Map<RenderCapable, boolean>;\r\n\r\n\r\n    constructor(glEngine: WebGLEngine) {\r\n        this._gl = glEngine.gl;\r\n        this.initExtension(glEngine.isWebGL2);\r\n        this.initCapable(glEngine.isWebGL2);\r\n    }\r\n\r\n    private initCapable(isWebgl2: boolean) {\r\n        this._capabilityMap = new Map();\r\n        //Index Uint32\r\n        let value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_element_index_uint));\r\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint32, value);\r\n        //FLoat32Texture\r\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_float));\r\n        this._capabilityMap.set(RenderCapable.TextureFormat_R32G32B32A32, value);\r\n        //halfFloatTexture\r\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_half_float));\r\n        this._capabilityMap.set(RenderCapable.TextureFormat_R16G16B16A16, value);\r\n        //anistropic\r\n        value = !!(this.getExtension(WebGLExtension.EXT_texture_filter_anisotropic));\r\n        this._capabilityMap.set(RenderCapable.Texture_anisotropic, value);\r\n\r\n        // half float renderable\r\n        if (isWebgl2) {\r\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) || !!this.getExtension(WebGLExtension.EXT_color_buffer_half_float);\r\n        }\r\n        else {\r\n            value = ((!!this.getExtension(WebGLExtension.OES_texture_half_float)) || (!!this.getExtension(WebGLExtension.EXT_color_buffer_half_float))) && (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\r\n        }\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R16G16B16A16, value);\r\n\r\n        // float renderable\r\n        if (isWebgl2) {\r\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) && !!this.getExtension(WebGLExtension.OES_texture_float_linear);\r\n        }\r\n        else {\r\n            // OES_texture_float implicitly enables the WEBGL_color_buffer_float extension (if supported)\r\n            value = (!!this.getExtension(WebGLExtension.OES_texture_float)) && (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\r\n        }\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R32G32B32A32, value);\r\n\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.WEBGL_depth_texture));\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_Depth, value);\r\n        value = isWebgl2;\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_ShadowMap, value);\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_vertex_array_object));\r\n        this._capabilityMap.set(RenderCapable.Vertex_VAO, value);\r\n        value = (isWebgl2 || (!!this.getExtension(WebGLExtension.ANGLE_instanced_arrays)));\r\n        this._capabilityMap.set(RenderCapable.DrawElement_Instance, value);\r\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_shader_texture_lod));\r\n        this._capabilityMap.set(RenderCapable.Shader_TextureLod, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_pvrtc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_PVRTC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC1, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_astc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ASTC, value);\r\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_sRGB))\r\n        this._capabilityMap.set(RenderCapable.Texture_SRGB, value);\r\n        value = (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\r\n        this._capabilityMap.set(RenderCapable.Texture_FloatLinearFiltering, value);\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\r\n        this._capabilityMap.set(RenderCapable.Texture_HalfFloatLinearFiltering, value);\r\n        value = isWebgl2;\r\n        this._capabilityMap.set(RenderCapable.MSAA, value);\r\n        this._capabilityMap.set(RenderCapable.UnifromBufferObject, value);\r\n        this._capabilityMap.set(RenderCapable.Texture3D, value);\r\n    }\r\n\r\n    private initExtension(isWebgl2: boolean) {\r\n        this._extensionMap = new Map();\r\n        const setExtensionMap = (extension: WebGLExtension, value: any, map: Map<WebGLExtension, any>) => {\r\n            value && map.set(extension, value);\r\n        }\r\n        const _extTextureFilterAnisotropic = this._getExtension(\"EXT_texture_filter_anisotropic\");\r\n        setExtensionMap(WebGLExtension.EXT_texture_filter_anisotropic, _extTextureFilterAnisotropic, this._extensionMap);\r\n        const _compressedTextureS3tc = this._getExtension(\"WEBGL_compressed_texture_s3tc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc, _compressedTextureS3tc, this._extensionMap);\r\n        const _compressdTextureS3tc_srgb = this._getExtension(\"WEBGL_compressed_texture_s3tc_srgb\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb, _compressdTextureS3tc_srgb, this._extensionMap);\r\n        const _compressedTexturePvrtc = this._getExtension(\"WEBGL_compressed_texture_pvrtc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_pvrtc, _compressedTexturePvrtc, this._extensionMap);\r\n        const _compressedTextureEtc1 = this._getExtension(\"WEBGL_compressed_texture_etc1\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc1, _compressedTextureEtc1, this._extensionMap);\r\n        const _compressedTextureETC = this._getExtension(\"WEBGL_compressed_texture_etc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc, _compressedTextureETC, this._extensionMap);\r\n        const _compressedTextureASTC = this._getExtension(\"WEBGL_compressed_texture_astc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_astc, _compressedTextureASTC, this._extensionMap);\r\n        const _oesTextureFloatLinear = this._getExtension(\"OES_texture_float_linear\");\r\n        setExtensionMap(WebGLExtension.OES_texture_float_linear, _oesTextureFloatLinear, this._extensionMap);\r\n        const _extColorBufferHalfFloat = this._getExtension(\"EXT_color_buffer_half_float\");\r\n        setExtensionMap(WebGLExtension.EXT_color_buffer_half_float, _extColorBufferHalfFloat, this._extensionMap);\r\n        if (isWebgl2) {\r\n            const _extColorBufferFloat = this._getExtension(\"EXT_color_buffer_float\");\r\n            setExtensionMap(WebGLExtension.EXT_color_buffer_float, _extColorBufferFloat, this._extensionMap);\r\n        } else {\r\n            VertexArrayObject;//强制引用\r\n            if ((window as any)._setupVertexArrayObject) //兼容VAO\r\n                (window as any)._setupVertexArrayObject(this._gl);\r\n            const _vaoExt = this._getExtension(\"OES_vertex_array_object\");\r\n            setExtensionMap(WebGLExtension.OES_vertex_array_object, _vaoExt, this._extensionMap);\r\n            const _angleInstancedArrays = this._getExtension(\"ANGLE_instanced_arrays\");\r\n            setExtensionMap(WebGLExtension.ANGLE_instanced_arrays, _angleInstancedArrays, this._extensionMap);\r\n            const _oesTextureHalfFloat = this._getExtension(\"OES_texture_half_float\");\r\n            setExtensionMap(WebGLExtension.OES_texture_half_float, _oesTextureHalfFloat, this._extensionMap);\r\n            const _oesTextureHalfFloatLinear = this._getExtension(\"OES_texture_half_float_linear\");\r\n            setExtensionMap(WebGLExtension.OES_texture_half_float_linear, _oesTextureHalfFloatLinear, this._extensionMap);\r\n            const _oesTextureFloat = this._getExtension(\"OES_texture_float\");\r\n            setExtensionMap(WebGLExtension.OES_texture_float, _oesTextureFloat, this._extensionMap);\r\n\r\n            const _oes_element_index_uint = this._getExtension(\"OES_element_index_uint\");\r\n            setExtensionMap(WebGLExtension.OES_element_index_uint, _oes_element_index_uint, this._extensionMap);\r\n            const _extShaderTextureLod = this._getExtension(\"EXT_shader_texture_lod\");\r\n            setExtensionMap(WebGLExtension.EXT_shader_texture_lod, _extShaderTextureLod, this._extensionMap);\r\n            const _webgl_depth_texture = this._getExtension(\"WEBGL_depth_texture\");\r\n            setExtensionMap(WebGLExtension.WEBGL_depth_texture, _webgl_depth_texture, this._extensionMap);\r\n            const _sRGB = this._getExtension(\"EXT_sRGB\");\r\n            setExtensionMap(WebGLExtension.EXT_sRGB, _sRGB, this._extensionMap);\r\n\r\n            const OES_standard_derivatives = this._getExtension(\"OES_standard_derivatives\");\r\n            setExtensionMap(WebGLExtension.OES_standard_derivatives, OES_standard_derivatives, this._extensionMap);\r\n        }\r\n    }\r\n\r\n    getCapable(type: RenderCapable): boolean {\r\n        return this._capabilityMap.get(type);\r\n    }\r\n\r\n    getExtension(type: WebGLExtension): any {\r\n        if (this._extensionMap.has(type))\r\n            return this._extensionMap.get(type);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _getExtension(name: string) {\r\n        const prefixes: string[] = this._extentionVendorPrefixes;\r\n        for (const k in prefixes) {\r\n            var ext = this._gl.getExtension(prefixes[k] + name);\r\n            if (ext)\r\n                return ext;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/**\r\n * \r\n */\r\nexport class GLParams{\r\n    _engine: WebGLEngine;\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    _glParamsData:Map<RenderParams,number>;\r\n    constructor(engine: WebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._initParams();\r\n    }\r\n\r\n    private _initParams(){\r\n        const gl = this._gl;\r\n        this._glParamsData = new Map();\r\n        this._glParamsData.set(RenderParams.Max_Active_Texture_Count,gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS));\r\n        const maxVertexUniform:number = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n        const maxFragUniform:number = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\r\n        this._glParamsData.set(RenderParams.Max_Uniform_Count,Math.min(maxVertexUniform,maxFragUniform));\r\n        this._glParamsData.set(RenderParams.MAX_Texture_Size,gl.getParameter(gl.MAX_TEXTURE_SIZE));\r\n        this._glParamsData.set(RenderParams.MAX_Texture_Image_Uint,gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\r\n        if(this._engine.getCapable(RenderCapable.Texture_anisotropic)){\r\n            const anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\r\n            this._glParamsData.set(RenderParams.Max_AnisoLevel_Count,gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\r\n        }\r\n        if(this._engine.isWebGL2)\r\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,35);\r\n        else\r\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,30);\r\n        this._glParamsData.set(RenderParams.FLOAT,gl.FLOAT);\r\n        this._glParamsData.set(RenderParams.UNSIGNED_BYTE,gl.UNSIGNED_BYTE);\r\n        this._glParamsData.set(RenderParams.UNSIGNED_SHORT,gl.UNSIGNED_SHORT);\r\n        this._glParamsData.set(RenderParams.BYTE,gl.BYTE);\r\n\r\n    }\r\n\r\n    getParams(params:RenderParams):number{\r\n        return this._glParamsData.get(params);\r\n    }\r\n}","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { GLShaderInstance } from \"./GLShaderInstance\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class GLRender2DContext extends GLObject implements IRender2DContext {\r\n    private shaderInstance:GLShaderInstance;\r\n    private cacheShaderProgram:any;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        //this.shaderInstance = new GLShaderInstance(engine, null, null, null);\r\n    }\r\n\r\n    activeTexture(textureID: number): void {\r\n        if (this._engine._activedTextureID !== textureID) {\r\n            this._gl.activeTexture(textureID);\r\n            this._engine._activedTextureID = textureID;\r\n        }\r\n    }\r\n\r\n    bindTexture(target: number, texture: WebGLTexture): void {\r\n        this._engine._bindTexture(target, texture);\r\n    }\r\n\r\n    bindUseProgram(webglProgram: any):boolean {\r\n        if(this.cacheShaderProgram==webglProgram)\r\n            return false;\r\n        this._gl.useProgram(webglProgram);\r\n        this._engine._glUseProgram = null;;\r\n        return true;\r\n    }\r\n\r\n}","import { RenderGeometryElementOBJ } from \"../../../d3/RenderObjs/RenderObj/RenderGeometryElementOBJ\";\r\nimport { DrawType } from \"../../RenderEnum/DrawType\";\r\nimport { IndexFormat } from \"../../RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\"\r\n\r\n//TODO\r\nexport class GLRenderDrawContext extends GLObject implements IRenderDrawContext {\r\n    /**@internal */\r\n    private _angleInstancedArrays: any;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        if (!this._engine.isWebGL2) {\r\n            this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @returns \r\n     */\r\n    getMeshTopology(mode: MeshTopology): number {\r\n        switch (mode) {\r\n            case MeshTopology.Points:\r\n                return this._gl.POINTS;\r\n            case MeshTopology.Lines:\r\n                return this._gl.LINES;\r\n            case MeshTopology.LineLoop:\r\n                return this._gl.LINE_LOOP;\r\n            case MeshTopology.LineStrip:\r\n                return this._gl.LINE_STRIP;\r\n            case MeshTopology.Triangles:\r\n                return this._gl.TRIANGLES;\r\n            case MeshTopology.TriangleStrip:\r\n                return this._gl.TRIANGLE_STRIP;\r\n            case MeshTopology.TriangleFan:\r\n                return this._gl.TRIANGLE_FAN;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param type \r\n     * @returns \r\n     */\r\n    getIndexType(type: IndexFormat): number {\r\n        switch (type) {\r\n            case IndexFormat.UInt8:\r\n                return this._gl.UNSIGNED_BYTE;\r\n            case IndexFormat.UInt16:\r\n                return this._gl.UNSIGNED_SHORT;\r\n            case IndexFormat.UInt32:\r\n                return this._gl.UNSIGNED_INT;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElementsInstanced(mode: number, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, instanceCount);\r\n\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3 * instanceCount);\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).drawArraysInstanced(mode, first, count, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2) * instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param first \r\n     * @param count \r\n     */\r\n    drawArrays(mode: number, first: number, count: number): void {\r\n        this._gl.drawArrays(mode, first, count);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param count \r\n     * @param type \r\n     * @param offset \r\n     */\r\n    drawElements(mode: number, count: number, type: IndexFormat, offset: number): void {\r\n        this._gl.drawElements(mode, count, type, offset);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param count \r\n     * @param type \r\n     * @param offset \r\n     */\r\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        mode = this.getMeshTopology(mode);\r\n        type = this.getIndexType(type);\r\n        this._gl.drawElements(mode, count, type, offset);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param geometryElement \r\n     */\r\n    drawGeometryElement(geometryElement: RenderGeometryElementOBJ): void {\r\n        geometryElement.bufferState.bind();\r\n        let element = geometryElement.drawParams.elements;\r\n        let length = geometryElement.drawParams.length;\r\n        switch (geometryElement.drawType) {\r\n            case DrawType.DrawArray:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawArrays(geometryElement._glmode, element[i], element[i + 1]);\r\n                }\r\n                break;\r\n            case DrawType.DrawElement:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawElements(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i]);\r\n                }\r\n                break;\r\n            case DrawType.DrawArrayInstance:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawArraysInstanced(geometryElement._glmode, element[i], element[i + 1], geometryElement.instanceCount);\r\n                }\r\n                break;\r\n            case DrawType.DrawElementInstance:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawElementsInstanced(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i], geometryElement.instanceCount);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}","import { BlendEquationSeparate } from \"../../RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../../RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../../RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../../RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../../RenderEnum/CullMode\";\r\nimport { RenderStateType } from \"../../RenderEnum/RenderStateType\";\r\nimport { StencilOperation } from \"../../RenderEnum/StencilOperation\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GLRenderState {\r\n    //Depth\r\n    /**@internal */\r\n    private _depthTest: boolean = true;\r\n    /**@internal */\r\n    private _depthMask: boolean = true;\r\n    /**@internal */\r\n    private _depthFunc: number;\r\n    //stencil\r\n    /**@internal */\r\n    private _stencilTest: boolean = false;\r\n    /**@internal */\r\n    private _stencilFunc: number;\r\n    /**@internal */\r\n    private _stencilMask: boolean;\r\n    /**@internal */\r\n    private _stencilRef: number\r\n    /**@internal */\r\n    private _stencilOp_fail: number;\r\n    /**@internal */\r\n    private _stencilOp_zfail: number;\r\n    /**@internal */\r\n    private _stencilOp_zpass: number;\r\n    //blender\r\n    /**@internal */\r\n    private _blend: boolean = false;\r\n    /**@internal */\r\n    private _blendEquation: number;\r\n    /**@internal */\r\n    private _blendEquationRGB: number;\r\n    /**@internal */\r\n    private _blendEquationAlpha: number;\r\n    /**@internal */\r\n    private _sFactor: number;\r\n    /**@internal */\r\n    private _dFactor: number;\r\n    /**@internal */\r\n    private _sFactorRGB: number;\r\n    /**@internal */\r\n    private _dFactorRGB: number;\r\n    /**@internal */\r\n    private _sFactorAlpha: number;\r\n    /**@internal */\r\n    private _dFactorAlpha: number;\r\n    //cull\r\n    /**@internal */\r\n    private _cullFace: boolean = false;\r\n    /**@internal */\r\n    private _frontFace: number;\r\n\r\n    /**@internal */\r\n    _engine: WebGLEngine;\r\n    /**@internal */\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    /**\r\n     * intance glRenderState\r\n     * @param engine \r\n     */\r\n    constructor(engine: WebGLEngine) {\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._initState();\r\n    }\r\n\r\n    /**\r\n     * init\r\n     */\r\n    private _initState() {\r\n        //TODO:并不完全\r\n        const gl = this._gl;\r\n        this.setDepthFunc(CompareFunction.Less);\r\n        this.setBlendEquationSeparate(BlendEquationSeparate.ADD, BlendEquationSeparate.ADD);\r\n        this._blendEquation = BlendEquationSeparate.ADD;\r\n        this._sFactor = BlendFactor.One;\r\n        this._dFactor = BlendFactor.Zero;\r\n        this._sFactorAlpha = BlendFactor.One;\r\n        this._dFactorAlpha = BlendFactor.One;\r\n    }\r\n\r\n    /**\r\n     * get gl blend factor\r\n     * @param factor \r\n     * @returns \r\n     */\r\n    _getBlendFactor(factor: BlendFactor) {\r\n        const gl = this._gl;\r\n        switch (factor) {\r\n            case BlendFactor.Zero:\r\n                return gl.ZERO;\r\n            case BlendFactor.One:\r\n                return gl.ONE;\r\n            case BlendFactor.SourceColor:\r\n                return gl.SRC_COLOR;\r\n            case BlendFactor.OneMinusSourceColor:\r\n                return gl.ONE_MINUS_SRC_COLOR;\r\n            case BlendFactor.DestinationColor:\r\n                return gl.DST_COLOR;\r\n            case BlendFactor.OneMinusDestinationColor:\r\n                return gl.ONE_MINUS_DST_COLOR;\r\n            case BlendFactor.SourceAlpha:\r\n                return gl.SRC_ALPHA;\r\n            case BlendFactor.OneMinusSourceAlpha:\r\n                return gl.ONE_MINUS_SRC_ALPHA;\r\n            case BlendFactor.DestinationAlpha:\r\n                return gl.DST_ALPHA;\r\n            case BlendFactor.OneMinusDestinationAlpha:\r\n                return gl.ONE_MINUS_DST_ALPHA;\r\n            case BlendFactor.SourceAlphaSaturate:\r\n                return gl.SRC_ALPHA_SATURATE;\r\n            case BlendFactor.BlendColor:\r\n                return gl.CONSTANT_COLOR;\r\n            case BlendFactor.OneMinusBlendColor:\r\n                return gl.ONE_MINUS_CONSTANT_COLOR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl blend operation\r\n     * @param factor \r\n     * @returns \r\n     */\r\n    _getBlendOperation(factor: BlendEquationSeparate) {\r\n        const gl = this._gl;\r\n        switch (factor) {\r\n            case BlendEquationSeparate.ADD:\r\n                return gl.FUNC_ADD;\r\n            case BlendEquationSeparate.SUBTRACT:\r\n                return gl.FUNC_SUBTRACT;\r\n            case BlendEquationSeparate.REVERSE_SUBTRACT:\r\n                return gl.FUNC_REVERSE_SUBTRACT;\r\n            // case BlendEquationSeparate.MIN:\r\n            //     return -1;\r\n            // case BlendEquationSeparate.MAX:\r\n            //     return -1;\r\n            default:\r\n                throw \"Unknow type\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl compare fun factor\r\n     * @param compareFunction \r\n     * @returns \r\n     */\r\n    _getGLCompareFunction(compareFunction: CompareFunction): number {\r\n        const gl = this._gl;\r\n        switch (compareFunction) {\r\n            case CompareFunction.Never:\r\n                return gl.NEVER;\r\n            case CompareFunction.Less:\r\n                return gl.LESS;\r\n            case CompareFunction.Equal:\r\n                return gl.EQUAL;\r\n            case CompareFunction.LessEqual:\r\n                return gl.LEQUAL;\r\n            case CompareFunction.Greater:\r\n                return gl.GREATER;\r\n            case CompareFunction.NotEqual:\r\n                return gl.NOTEQUAL;\r\n            case CompareFunction.GreaterEqual:\r\n                return gl.GEQUAL;\r\n            case CompareFunction.Always:\r\n                return gl.ALWAYS;\r\n            default:\r\n                return gl.LEQUAL; // todo\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl stencil operation\r\n     * @param compareFunction \r\n     * @returns \r\n     */\r\n    _getGLStencilOperation(compareFunction: StencilOperation): number {\r\n        const gl = this._gl;\r\n        switch (compareFunction) {\r\n            case StencilOperation.Keep:\r\n                return gl.KEEP;\r\n            case StencilOperation.Zero:\r\n                return gl.ZERO;\r\n            case StencilOperation.Replace:\r\n                return gl.REPLACE;\r\n            case StencilOperation.IncrementSaturate:\r\n                return gl.INCR;\r\n            case StencilOperation.DecrementSaturate:\r\n                return gl.DECR;\r\n            case StencilOperation.Invert:\r\n                return gl.INVERT;\r\n            case StencilOperation.IncrementWrap:\r\n                return gl.INCR_WRAP;\r\n            case StencilOperation.DecrementWrap:\r\n                return gl.DECR_WRAP;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl frontface factor\r\n     * @param cullmode \r\n     * @returns \r\n     */\r\n    _getGLFrontfaceFactor(cullmode: CullMode) {\r\n        if (cullmode == CullMode.Front)\r\n            return this._gl.CCW;\r\n        else\r\n            return this._gl.CW;\r\n    }\r\n\r\n    //Depth\r\n    /**\r\n     * @internal\r\n     */\r\n    setDepthTest(value: boolean): void {\r\n        value !== this._depthTest && (this._depthTest = value, value ? this._gl.enable(this._gl.DEPTH_TEST) : this._gl.disable(this._gl.DEPTH_TEST));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setDepthMask(value: boolean): void {\r\n        value !== this._depthMask && (this._depthMask = value, this._gl.depthMask(value));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * value {CompareType}\r\n     */\r\n    setDepthFunc(value: number): void {\r\n        value !== this._depthFunc && (this._depthFunc = value, this._gl.depthFunc(this._getGLCompareFunction(value)));\r\n    }\r\n\r\n\r\n    //stencil\r\n    /**\r\n     * @internal\r\n     */\r\n    setStencilTest(value: boolean): void {\r\n        value !== this._stencilTest && (this._stencilTest = value, value ? this._gl.enable(this._gl.STENCIL_TEST) : this._gl.disable(this._gl.STENCIL_TEST));\r\n    }\r\n\r\n    /**\r\n     * 模板写入开关\r\n     * @param value \r\n     */\r\n    setStencilMask(value: boolean): void {\r\n        value !== this._stencilMask && (this._stencilMask = value, value ? this._gl.stencilMask(0xff) : this._gl.stencilMask(0x00));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setStencilFunc(fun: number, ref: number): void {\r\n        if (fun != this._stencilFunc || ref != this._stencilRef) {\r\n            this._stencilFunc = fun;\r\n            this._stencilRef = ref;\r\n            this._gl.stencilFunc(this._getGLCompareFunction(fun), ref, 0xff);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    setstencilOp(fail: number, zfail: number, zpass: number) {\r\n        if (this._stencilOp_fail != fail || this._stencilOp_zfail != zfail || this._stencilOp_zpass != zpass) {\r\n            this._stencilOp_fail = fail;\r\n            this._stencilOp_zfail = zfail;\r\n            this._stencilOp_zpass = zpass;\r\n            this._gl.stencilOp(this._getGLStencilOperation(fail), this._getGLStencilOperation(zfail), this._getGLStencilOperation(zpass));\r\n        }\r\n    }\r\n\r\n    //blend()\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlend(value: boolean): void {\r\n        value !== this._blend && (this._blend = value, value ? this._gl.enable(this._gl.BLEND) : this._gl.disable(this._gl.BLEND));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendEquation(blendEquation: number): void {\r\n        if (blendEquation !== this._blendEquation) {\r\n            this._blendEquation = blendEquation;\r\n            this._blendEquationRGB = this._blendEquationAlpha = null;\r\n            this._gl.blendEquation(this._getBlendOperation(blendEquation));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendEquationSeparate(blendEquationRGB: number, blendEquationAlpha: number): void {\r\n        if (blendEquationRGB !== this._blendEquationRGB || blendEquationAlpha !== this._blendEquationAlpha) {\r\n            this._blendEquationRGB = blendEquationRGB;\r\n            this._blendEquationAlpha = blendEquationAlpha;\r\n            this._blendEquation = null;\r\n            this._gl.blendEquationSeparate(this._getBlendOperation(blendEquationRGB), this._getBlendOperation(blendEquationAlpha));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendFunc(sFactor: number, dFactor: number, force: boolean = false): void {\r\n        // 有个iOS的bug，用原来的写法有时候会出错\r\n        if (force || sFactor !== this._sFactor || dFactor !== this._dFactor) {\r\n            this._sFactor = sFactor;\r\n            this._dFactor = dFactor;\r\n            this._sFactorRGB = null;\r\n            this._dFactorRGB = null;\r\n            this._sFactorAlpha = null;\r\n            this._dFactorAlpha = null;\r\n            this._gl.blendFunc(this._getBlendFactor(sFactor), this._getBlendFactor(dFactor));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendFuncSeperate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void {\r\n        if (srcRGB !== this._sFactorRGB || dstRGB !== this._dFactorRGB || srcAlpha !== this._sFactorAlpha || dstAlpha !== this._dFactorAlpha) {\r\n            this._sFactorRGB = srcRGB;\r\n            this._dFactorRGB = dstRGB;\r\n            this._sFactorAlpha = srcAlpha;\r\n            this._dFactorAlpha = dstAlpha;\r\n            this._sFactor = null;\r\n            this._dFactor = null;\r\n            this._gl.blendFuncSeparate(this._getBlendFactor(srcRGB), this._getBlendFactor(dstRGB), this._getBlendFactor(srcAlpha), this._getBlendFactor(dstAlpha));\r\n        }\r\n    }\r\n\r\n    //cull\r\n    /**\r\n     * @internal\r\n     */\r\n    setCullFace(value: boolean): void {\r\n        value !== this._cullFace && (this._cullFace = value, value ? this._gl.enable(this._gl.CULL_FACE) : this._gl.disable(this._gl.CULL_FACE));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setFrontFace(value: number): void {\r\n        value !== this._frontFace && (this._frontFace = value, this._gl.frontFace(this._getGLFrontfaceFactor(value)));\r\n    }\r\n\r\n    /**\r\n     * apply RenderState list\r\n     * @param cmd \r\n     */\r\n    applyRenderStateCommand(cmd: RenderStateCommand) {\r\n        let cmdArray = cmd.cmdArray;\r\n        cmdArray.forEach((value, key) => {\r\n            switch (key) {\r\n                case RenderStateType.DepthTest:\r\n                    this.setDepthTest(value);\r\n                    break;\r\n                case RenderStateType.DepthMask:\r\n                    this.setDepthMask(value);\r\n                    break;\r\n                case RenderStateType.DepthFunc:\r\n                    this.setDepthFunc(value);\r\n                    break;\r\n                case RenderStateType.StencilTest:\r\n                    this.setStencilTest(value);\r\n                    break;\r\n                case RenderStateType.StencilMask:\r\n                    this.setStencilMask(value);\r\n                    break;\r\n                case RenderStateType.StencilFunc:\r\n                    this.setStencilFunc(value[0], value[1]);\r\n                    break;\r\n                case RenderStateType.StencilOp:\r\n                    this.setstencilOp(value[0], value[1], value[2]);//TODO\r\n                    break;\r\n                case RenderStateType.BlendType:\r\n                    this.setBlend(value != BlendType.BLEND_DISABLE);\r\n                    break;\r\n                case RenderStateType.BlendEquation:\r\n                    this.setBlendEquation(value);\r\n                    break;\r\n                case RenderStateType.BlendEquationSeparate:\r\n                    this.setBlendEquationSeparate(value[0], value[1]);//TODO\r\n                    break;\r\n                case RenderStateType.BlendFunc:\r\n                    this.setBlendFunc(value[0], value[1]);\r\n                    break;\r\n                case RenderStateType.BlendFuncSeperate:\r\n                    this.setBlendFuncSeperate(value[0], value[1], value[2], value[3]);\r\n                    break;\r\n                case RenderStateType.CullFace:\r\n                    this.setCullFace(value);\r\n                    break;\r\n                case RenderStateType.FrontFace:\r\n                    this.setFrontFace(value);\r\n                    break;\r\n                default:\r\n                    throw \"unknow type of renderStateType\";\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n}","import { LayaEnv } from \"../../../../LayaEnv\";\r\nimport { TextureCube } from \"../../../resource/TextureCube\";\r\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../../../maths/Vector2\";\r\nimport { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { Texture2D } from \"../../../resource/Texture2D\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\r\nimport { UniformBufferObject } from \"../../UniformBufferObject\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { Matrix3x3 } from \"../../../maths/Matrix3x3\";\r\n\r\n\r\nexport class GLShaderInstance extends GLObject implements IRenderShaderInstance {\r\n\r\n    _engine: WebGLEngine;\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    /**@internal */\r\n    private _vs: string;\r\n    /**@internal */\r\n    private _ps: string;\r\n    /**@internal TextureId*/\r\n    private _curActTexIndex: number;\r\n    /**@internal */\r\n    private _vshader: WebGLShader;\r\n    /**@internal */\r\n    private _pshader: WebGLShader;\r\n    /**@internal */\r\n    private _program: WebGLProgram;\r\n    /**@internal */\r\n    private _attributeMap: { [name: string]: [number, ShaderDataType] };\r\n    /**@internal */\r\n    private _uniformMap: ShaderVariable[];\r\n    /**@internal */\r\n    // todo 没用到\r\n    private _uniformObjectMap: { [key: string]: ShaderVariable };\r\n    /**@internal */\r\n    _complete: boolean = true;\r\n\r\n    constructor(engine: WebGLEngine, vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }) {\r\n        super(engine);\r\n        this._vs = vs;\r\n        this._ps = ps;\r\n        this._attributeMap = attributeMap;\r\n        this._uniformMap = [];\r\n        this._create();\r\n    }\r\n\r\n    private _create(): void {\r\n\r\n        const gl: WebGLRenderingContext = this._gl;\r\n        this._program = gl.createProgram();\r\n        this._vshader = this._createShader(gl, this._vs, gl.VERTEX_SHADER);\r\n        this._pshader = this._createShader(gl, this._ps, gl.FRAGMENT_SHADER);\r\n        gl.attachShader(this._program, this._vshader);\r\n        gl.attachShader(this._program, this._pshader);\r\n\r\n        for (var k in this._attributeMap)//根据声明调整location,便于VAO使用\r\n            gl.bindAttribLocation(this._program, this._attributeMap[k][0], k);\r\n        gl.linkProgram(this._program);\r\n        const bo = gl.getProgramParameter(this._program, gl.LINK_STATUS);\r\n\r\n        if (!bo) {\r\n            var info = gl.getProgramInfoLog(this._program);\r\n            console.error(new Error('Could not compile WebGL program. \\n\\n' + info));\r\n            this._complete = false;\r\n            return;\r\n        }\r\n\r\n        //Uniform\r\n        //Unifrom Objcet\r\n        const nUniformNum: number = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS);\r\n\r\n        this.useProgram();\r\n        this._curActTexIndex = 0;\r\n        let one: ShaderVariable, i: number;\r\n        for (i = 0; i < nUniformNum; i++) {\r\n            var uniformData: WebGLActiveInfo = gl.getActiveUniform(this._program, i);\r\n            var uniName: string = uniformData.name;\r\n            let location: WebGLUniformLocation = gl.getUniformLocation(this._program, uniName);\r\n            if (!location && location != 0)\r\n                continue;\r\n            one = new ShaderVariable();\r\n            one.location = location as number;\r\n            if (uniName.indexOf('[0]') > 0) {\r\n                one.name = uniName = uniName.substr(0, uniName.length - 3);\r\n                one.isArray = true;\r\n            } else {\r\n                one.name = uniName;\r\n                one.isArray = false;\r\n            }\r\n            one.type = uniformData.type;\r\n            this._addShaderUnifiormFun(one);\r\n            this._uniformMap.push(one);\r\n            one.dataOffset = this._engine.propertyNameToID(uniName);\r\n        }\r\n        if (this._engine.isWebGL2) {\r\n            this._uniformObjectMap = {};\r\n            var nUniformBlock: number = gl.getProgramParameter(this._program, (gl as WebGL2RenderingContext).ACTIVE_UNIFORM_BLOCKS);\r\n            for (i = 0; i < nUniformBlock; i++) {\r\n                let gl2 = (gl as WebGL2RenderingContext);\r\n                var uniformBlockName: string = gl2.getActiveUniformBlockName(this._program, i);\r\n                one = new ShaderVariable();\r\n                one.name = uniformBlockName;\r\n                one.isArray = false;\r\n                one.type = (gl as WebGL2RenderingContext).UNIFORM_BUFFER;\r\n                one.dataOffset = this._engine.propertyNameToID(uniformBlockName);\r\n                let location = one.location = gl2.getUniformBlockIndex(this._program, uniformBlockName);\r\n                gl2.uniformBlockBinding(this._program, location, this._engine.getUBOPointer(uniformBlockName));\r\n                this._uniformObjectMap[one.name] = one;\r\n                this._uniformMap.push(one);\r\n                this._addShaderUnifiormFun(one);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _legalUBObyteLength(bytelength: number): number {\r\n        return Math.ceil(bytelength / 16) * 16;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    private _createShader(gl: WebGLRenderingContext, str: string, type: number): any {\r\n        var shader: WebGLShader = gl.createShader(type);\r\n        gl.shaderSource(shader, str);\r\n        gl.compileShader(shader);\r\n        if (this._engine._isShaderDebugMode && !gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            if (!LayaEnv.isPlaying) {\r\n                console.warn(gl.getShaderInfoLog(shader));\r\n            } else {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n            }\r\n        }\r\n        return shader;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _addShaderUnifiormFun(one: ShaderVariable): void {\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        one.caller = this;\r\n        var isArray: boolean = one.isArray;\r\n        switch (one.type) {\r\n            case gl.BOOL:\r\n                one.fun = this._uniform1i;\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.INT:\r\n                one.fun = isArray ? this._uniform1iv : this._uniform1i;//TODO:优化\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.FLOAT:\r\n                one.fun = isArray ? this._uniform1fv : this._uniform1f;\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.FLOAT_VEC2:\r\n                one.fun = isArray ? this._uniform_vec2v : this._uniform_vec2;\r\n                one.uploadedValue = new Array(2);\r\n                break;\r\n            case gl.FLOAT_VEC3:\r\n                one.fun = isArray ? this._uniform_vec3v : this._uniform_vec3;\r\n                one.uploadedValue = new Array(3);\r\n                break;\r\n            case gl.FLOAT_VEC4:\r\n                one.fun = isArray ? this._uniform_vec4v : this._uniform_vec4;\r\n                one.uploadedValue = new Array(4);\r\n                break;\r\n            case gl.FLOAT_MAT2:\r\n                one.fun = this._uniformMatrix2fv;\r\n                break;\r\n            case gl.FLOAT_MAT3:\r\n                one.fun = this._uniformMatrix3fv;\r\n                break;\r\n            case gl.FLOAT_MAT4:\r\n                one.fun = isArray ? this._uniformMatrix4fv : this._uniformMatrix4f;\r\n                break;\r\n            case gl.SAMPLER_2D:\r\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_SHADOW:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler2D;\r\n                break;\r\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_ARRAY:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler2DArray;\r\n                break;\r\n            case 0x8b5f://sampler3D\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler3D;\r\n                break;\r\n            case gl.SAMPLER_CUBE:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_samplerCube;\r\n                break;\r\n            case (gl as WebGL2RenderingContext).UNIFORM_BUFFER:\r\n                one.fun = this._uniform_UniformBuffer;\r\n                break;\r\n            default:\r\n                throw new Error(\"compile shader err!\");\r\n        }\r\n    }\r\n\r\n    getUniformMap(): ShaderVariable[] {\r\n        return this._uniformMap;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    bind(): boolean {\r\n        return this.useProgram();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    useProgram(): boolean {\r\n        if (this._engine._glUseProgram === this)\r\n            return false;\r\n        this._gl.useProgram(this._program);\r\n        this._engine._glUseProgram = this;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    _uniform1f(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            this._gl.uniform1f(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    _uniform1fv(one: any, value: any): number {\r\n        if (value.length < 4) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                this._gl.uniform1fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            this._gl.uniform1fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec2(one: any, v: Vector2): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y) {\r\n            this._gl.uniform2f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec2v(one: any, value: Float32Array): number {\r\n        if (value.length < 2) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                this._gl.uniform2fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            this._gl.uniform2fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3(one: any, v: Vector3): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z) {\r\n            this._gl.uniform3f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3v(one: any, v: Float32Array): number {\r\n        this._gl.uniform3fv(one.location, v);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4(one: any, v: Vector4): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z || uploadedValue[3] !== v.w) {\r\n            this._gl.uniform4f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z, uploadedValue[3] = v.w);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4v(one: any, v: Float32Array): number {\r\n        this._gl.uniform4fv(one.location, v);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix2fv(one: any, value: any): number {\r\n        this._gl.uniformMatrix2fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix3fv(one: any, m: Matrix3x3): number {\r\n        let value = m.elements;\r\n        this._gl.uniformMatrix3fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix4f(one: any, m: Matrix4x4): number {\r\n        var value: Float32Array = m.elements;\r\n        this._gl.uniformMatrix4fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix4fv(one: any, m: Float32Array): number {\r\n        this._gl.uniformMatrix4fv(one.location, false, m);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform1i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            this._gl.uniform1i(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform1iv(one: any, value: any): number {\r\n        this._gl.uniform1iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_ivec2(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1]) {\r\n            this._gl.uniform2i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_ivec2v(one: any, value: any): number {\r\n        this._gl.uniform2iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2]) {\r\n            this._gl.uniform3i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3vi(one: any, value: any): number {\r\n        this._gl.uniform3iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n            this._gl.uniform4i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2], uploadedValue[3] = value[3]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4vi(one: any, value: any): number {\r\n        this._gl.uniform4iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_sampler2D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_2D, value);\r\n        return 0;\r\n    }\r\n\r\n    _uniform_sampler2DArray(one: any, texture: BaseTexture): number {\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_2D_ARRAY, value);\r\n        return 0;\r\n    }\r\n\r\n    _uniform_sampler3D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_3D, value);\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_samplerCube(one: any, texture: BaseTexture): number {//TODO:TEXTURTECUBE ARRAY\r\n        var value: any = texture ? texture._getSource() : TextureCube.errorTexture._getSource();\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_CUBE_MAP, value);\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param one \r\n     * @param value \r\n     * @returns \r\n     */\r\n    _uniform_UniformBuffer(one: any, value: UniformBufferObject) {\r\n        value._bindUniformBufferBase();\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _bindTexture(textureID: number, target: number, texture: WebGLTexture): void {\r\n        const gl = this._gl;\r\n        if (this._engine._activedTextureID !== textureID) {\r\n            gl.activeTexture(textureID);\r\n            this._engine._activedTextureID = textureID;\r\n        }\r\n        const texID = this._engine._activedTextureID - this._gl.TEXTURE0;\r\n        if (this._engine._activeTextures[texID] !== texture) {\r\n            gl.bindTexture(target, texture);\r\n            this._engine._activeTextures[texID] = texture;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        gl.deleteShader(this._vshader);\r\n        gl.deleteShader(this._pshader);\r\n        gl.deleteProgram(this._program);\r\n        this._vshader = null;\r\n        this._pshader = null;\r\n        this._program = null;\r\n        this._attributeMap = null;\r\n        this._uniformMap = null;\r\n        this._uniformObjectMap = null;\r\n        this._gl = null;\r\n        this._engine = null;\r\n    }\r\n\r\n}","import { IndexBuffer } from \"../../IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { VertexBuffer } from \"../../VertexBuffer\";\r\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class GLVertexState extends GLObject implements IRenderVertexState {\r\n    private _angleInstancedArrays: any;\r\n    private _vaoExt: any | null;\r\n    private _vao: WebGLVertexArrayObject | WebGLVertexArrayObjectOES;\r\n\r\n    _vertexDeclaration: VertexDeclaration[] = [];\r\n    _bindedIndexBuffer: IndexBuffer;\r\n    _vertexBuffers: VertexBuffer[];\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        if (!engine.isWebGL2)\r\n            this._vaoExt = engine._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object);\r\n        this._vao = this.createVertexArray();\r\n        this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private createVertexArray(): any {\r\n        if (this._engine.isWebGL2)\r\n            return (<WebGL2RenderingContext>this._gl).createVertexArray();\r\n        else\r\n            return this._vaoExt.createVertexArrayOES();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private deleteVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).deleteVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.deleteVertexArrayOES(this._vao);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    bindVertexArray(): void {\r\n        if (this._engine._GLBindVertexArray == this)\r\n            return;\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(this._vao);\r\n        this._engine._GLBindVertexArray = this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    unbindVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(null);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(null);\r\n        this._engine._GLBindVertexArray = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    isVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).isVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.isVertexArrayOES(this._vao);\r\n    }\r\n\r\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\r\n        //Clear front VAO\r\n        this.clearVAO();\r\n        this._vertexBuffers = vertexBuffer;\r\n        if (this._engine._GLBindVertexArray == this) {\r\n            this._vertexDeclaration.length = vertexBuffer.length;\r\n            var i = 0;\r\n            vertexBuffer.forEach(element => {\r\n                var verDec: VertexDeclaration = element.vertexDeclaration;\r\n                this._vertexDeclaration[i++] = element.vertexDeclaration;\r\n                var valueData: any = verDec._shaderValues;\r\n                element.bind();\r\n                for (var k in valueData) {\r\n                    var loc: number = parseInt(k);\r\n                    var attribute: any[] = valueData[k];\r\n                    this._gl.enableVertexAttribArray(loc);\r\n                    this._gl.vertexAttribPointer(loc, attribute[0], attribute[1], !!attribute[2], attribute[3], attribute[4]);\r\n                    if (element.instanceBuffer)\r\n                        this.vertexAttribDivisor(loc, 1);\r\n                }\r\n            });\r\n        } else {\r\n            throw \"BufferState: must call bind() function first.\";\r\n        }\r\n\r\n    }\r\n\r\n    //绑定之前需要先处理了前面的\r\n    clearVAO(){\r\n        for(let i = 0,n=this._vertexDeclaration.length;i<n;i++){\r\n            var verDec: VertexDeclaration = this._vertexDeclaration[i];\r\n            var valueData: any = verDec._shaderValues;\r\n            for (var k in valueData) {\r\n                var loc: number = parseInt(k);\r\n                this._gl.disableVertexAttribArray(loc);\r\n            }\r\n        }\r\n    }\r\n\r\n    applyIndexBuffer(indexBuffer: IndexBuffer | null): void {\r\n        //需要强制更新IndexBuffer\r\n\r\n        if (indexBuffer == null) {\r\n            return;\r\n        }\r\n        if (this._engine._GLBindVertexArray == this) {\r\n            if (this._bindedIndexBuffer !== indexBuffer) {\r\n                indexBuffer.bind();//TODO:可和vao合并bind\r\n                this._bindedIndexBuffer = indexBuffer;\r\n            }\r\n        } else {\r\n            throw \"BufferState: must call bind() function first.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n         * @internal\r\n         */\r\n    vertexAttribDivisor(index: number, divisor: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).vertexAttribDivisor(index, divisor);\r\n        else\r\n            this._angleInstancedArrays.vertexAttribDivisorANGLE(index, divisor);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        this.deleteVertexArray();\r\n        this._gl = null;\r\n        this._engine = null;\r\n    }\r\n} ","import { LayaEnv } from \"../../../../LayaEnv\";\r\nimport { CommandEncoder } from \"../../../layagl/CommandEncoder\";\r\nimport { Color } from \"../../../maths/Color\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\r\nimport { IRenderEngineFactory } from \"../../RenderInterface/IRenderEngineFactory\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { ShaderData, ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { GL2TextureContext } from \"./GL2TextureContext\";\r\nimport { GLBuffer } from \"./GLBuffer\";\r\nimport { GlCapable } from \"./GlCapable\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLMode } from \"./GLEnum/WebGLMode\";\r\nimport { GLParams } from \"./GLParams\";\r\nimport { GLRender2DContext } from \"./GLRender2DContext\";\r\nimport { GLRenderDrawContext } from \"./GLRenderDrawContext\";\r\nimport { GLRenderState } from \"./GLRenderState\";\r\nimport { GLShaderInstance } from \"./GLShaderInstance\";\r\nimport { GLTextureContext } from \"./GLTextureContext\";\r\nimport { GLVertexState } from \"./GLVertexState\";\r\nimport { WebGlConfig } from \"./WebGLConfig\";\r\n\r\n/**\r\n * 封装Webgl\r\n */\r\nexport class WebGLEngine implements IRenderEngine {\r\n\r\n    _context: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    private _config: WebGlConfig;\r\n\r\n    private _isWebGL2: boolean;\r\n\r\n    private _webglMode: WebGLMode;\r\n\r\n    /**@internal */\r\n    private _propertyNameMap: any = {};\r\n    /**@internal */\r\n    private _propertyNameCounter: number = 0;\r\n    /**@internal */\r\n    _renderOBJCreateContext: IRenderEngineFactory;\r\n\r\n    /**@internal */\r\n    _IDCounter: number = 0;\r\n\r\n    /**@internal ShaderDebugMode*/\r\n    _isShaderDebugMode: boolean = true;\r\n\r\n    /**@internal gl.TextureID*/\r\n    _glTextureIDParams: Array<number>;\r\n\r\n    /**@internal bind active Texture*/\r\n    _activedTextureID: number;\r\n\r\n    /**@internal bindTexture */\r\n    //RenderTexture TODO\r\n    _activeTextures: WebGLTexture[];\r\n\r\n    /**\r\n    * @internal\r\n    * bind GLVertexArray\r\n    */\r\n    _GLBindVertexArray: GLVertexState;\r\n\r\n    /**\r\n    * @internal\r\n    * 支持功能\r\n    */\r\n    _supportCapatable: GlCapable;\r\n\r\n    /**\r\n     * @internal\r\n     * bind Program\r\n     */\r\n    _glUseProgram: GLShaderInstance;\r\n\r\n    //bind glBuffer by glBuffer target\r\n    //key BufferTargetType\r\n    private _GLBufferBindMap: { [key: number]: GLBuffer | null };\r\n\r\n    private _curUBOPointer: number = 0;\r\n    //记录绑定UBO的glPointer\r\n    private _GLUBOPointerMap: Map<string, number> = new Map();\r\n    //记录绑定Pointer的UBO\r\n    private _GLBindPointerUBOMap: Map<number, GLBuffer> = new Map();\r\n    //bind viewport\r\n    private _lastViewport: Vector4;\r\n    private _lastScissor: Vector4;\r\n\r\n    //bind clearColor\r\n    private _lastClearColor: Color = new Color;\r\n    private _lastClearDepth: number = 1;\r\n\r\n    //GL参数\r\n    private _GLParams: GLParams;\r\n\r\n    //GL纹理生成\r\n    private _GLTextureContext: GLTextureContext | GL2TextureContext;\r\n    //Gl Draw\r\n    private _GLRenderDrawContext: GLRenderDrawContext;\r\n\r\n    private _GL2DRenderContext: GLRender2DContext;\r\n\r\n    //GLRenderState\r\n    _GLRenderState: GLRenderState;\r\n\r\n    // //TODO:管理Buffer\r\n    // private _bufferResourcePool: any;\r\n    // //TODO:管理Texture\r\n    // private _textureResourcePool: any;\r\n    // //TODO:管理FrameBuffer\r\n    // private _RenderBufferResource: any;\r\n\r\n    //GPU统计数据\r\n    private _GLStatisticsInfo: Map<RenderStatisticsInfo, number> = new Map();\r\n\r\n    constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\r\n        this._config = config;\r\n        this._isWebGL2 = false;\r\n        //init data\r\n        this._lastViewport = new Vector4(0, 0, 0, 0);\r\n        this._lastClearColor = new Color(0, 0, 0, 0);\r\n        this._lastScissor = new Vector4(0, 0, 0, 0);\r\n        this._webglMode = webglMode;\r\n        this._initStatisticsInfo();\r\n    }\r\n\r\n    /**\r\n     * GL Context\r\n     * @member {WebGLRenderingContext}\r\n     */\r\n    get gl() {\r\n        return this._context;\r\n    }\r\n\r\n    get isWebGL2() {\r\n        return this._isWebGL2;\r\n    }\r\n\r\n    get webglConfig() {\r\n        return this._config;\r\n    }\r\n\r\n    private _initStatisticsInfo() {\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.DrawCall, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.InstanceDrawCall, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.Triangle, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.UniformUpload, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.TextureMemeory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.GPUMemory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.RenderTextureMemory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.BufferMemory, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param info \r\n     * @param value \r\n     */\r\n    _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\r\n        this._GLStatisticsInfo.set(info, this._GLStatisticsInfo.get(info) + value);\r\n    }\r\n\r\n    /**\r\n     * 清除\r\n     * @internal\r\n     * @param info \r\n     */\r\n    clearStatisticsInfo(info: RenderStatisticsInfo) {\r\n        this._GLStatisticsInfo.set(info, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param info \r\n     * @returns \r\n     */\r\n    getStatisticsInfo(info: RenderStatisticsInfo): number {\r\n        return this._GLStatisticsInfo.get(info);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param glPointer \r\n     * @returns \r\n     */\r\n    _getBindUBOBuffer(glPointer: number): GLBuffer {\r\n        return this._GLBindPointerUBOMap.get(glPointer);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param glPointer \r\n     * @param buffer \r\n     */\r\n    _setBindUBOBuffer(glPointer: number, buffer: GLBuffer): void {\r\n        this._GLBindPointerUBOMap.set(glPointer, buffer);\r\n    }\r\n\r\n    /**\r\n     * create GL\r\n     * @param canvas \r\n     */\r\n    initRenderEngine(canvas: any) {\r\n        let names;\r\n        let gl;\r\n        switch (this._webglMode) {\r\n            case WebGLMode.Auto:\r\n                names = [\"webgl2\", \"experimental-webgl2\", \"webgl\", \"experimental-webgl\"];\r\n                break;\r\n            case WebGLMode.WebGL1:\r\n                names = [\"webgl\", \"experimental-webgl\"];\r\n                break;\r\n            case WebGLMode.WebGL2:\r\n                names = [\"webgl2\", \"experimental-webgl2\"];\r\n                break;\r\n        }\r\n        for (var i: number = 0; i < names.length; i++) {\r\n            try {\r\n                gl = canvas.getContext(names[i], this._config);\r\n                // gl.drawingBufferColorSpace = \"display-p3\";\r\n            } catch (e) {\r\n            }\r\n            if (gl) {\r\n                if (names[i] === 'webgl2' || names[i] === 'experimental-webgl2') {\r\n                    this._isWebGL2 = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this._context = gl;\r\n\r\n        //init Other\r\n        this._initBindBufferMap();\r\n        this._supportCapatable = new GlCapable(this);\r\n        this._GLParams = new GLParams(this);\r\n        this._GLRenderState = new GLRenderState(this);\r\n        this._glTextureIDParams = [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3, gl.TEXTURE4, gl.TEXTURE5, gl.TEXTURE6, gl.TEXTURE7, gl.TEXTURE8, gl.TEXTURE9, gl.TEXTURE10, gl.TEXTURE11, gl.TEXTURE12, gl.TEXTURE13, gl.TEXTURE14, gl.TEXTURE15, gl.TEXTURE16, gl.TEXTURE17, gl.TEXTURE18, gl.TEXTURE19, gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23, gl.TEXTURE24, gl.TEXTURE25, gl.TEXTURE26, gl.TEXTURE27, gl.TEXTURE28, gl.TEXTURE29, gl.TEXTURE30, gl.TEXTURE31];\r\n        this._activedTextureID = gl.TEXTURE0;//默认激活纹理区为0;\r\n        this._activeTextures = [];\r\n        this._GLTextureContext = this.isWebGL2 ? new GL2TextureContext(this) : new GLTextureContext(this);\r\n        this._GLRenderDrawContext = new GLRenderDrawContext(this);\r\n        this._GL2DRenderContext = new GLRender2DContext(this);\r\n    }\r\n\r\n    private _initBindBufferMap() {\r\n        this._GLBufferBindMap = {};\r\n        this._GLBufferBindMap[BufferTargetType.ARRAY_BUFFER] = null;\r\n        this._GLBufferBindMap[BufferTargetType.ELEMENT_ARRAY_BUFFER] = null;\r\n        this._GLBufferBindMap[BufferTargetType.UNIFORM_BUFFER] = null;\r\n    }\r\n\r\n\r\n    _getbindBuffer(target: BufferTargetType) {\r\n        return this._GLBufferBindMap[target];\r\n    }\r\n\r\n    _setbindBuffer(target: BufferTargetType, buffer: GLBuffer | null) {\r\n        this._GLBufferBindMap[target] = buffer;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param target \r\n     * @param texture \r\n     */\r\n    _bindTexture(target: number, texture: WebGLTexture) {\r\n        const texID = this._activedTextureID - this._context.TEXTURE0;\r\n        if (this._activeTextures[texID] !== texture) {\r\n            this._context.bindTexture(target, texture);\r\n            this._activeTextures[texID] = texture;\r\n        }\r\n    }\r\n\r\n    bindTexture(texture: BaseTexture) {\r\n        this._bindTexture(texture._texture.target, texture._getSource());\r\n    }\r\n\r\n    applyRenderStateCMD(cmd: RenderStateCommand): void {\r\n        this._GLRenderState.applyRenderStateCommand(cmd);\r\n    }\r\n\r\n    //get capable of webgl\r\n    getCapable(capatableType: RenderCapable): boolean {\r\n        return this._supportCapatable.getCapable(capatableType);\r\n    }\r\n\r\n    viewport(x: number, y: number, width: number, height: number): void {\r\n        const gl = this._context;\r\n        const lv = this._lastViewport;\r\n        if (LayaEnv.isConch) {\r\n            gl.viewport(x, y, width, height);\r\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\r\n            gl.viewport(x, y, width, height);\r\n            lv.setValue(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    scissor(x: number, y: number, width: number, height: number) {\r\n        const gl = this._context;\r\n        const lv = this._lastScissor;\r\n        if (LayaEnv.isConch) {\r\n            gl.scissor(x, y, width, height);\r\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\r\n            gl.scissor(x, y, width, height);\r\n            lv.setValue(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    scissorTest(value: boolean) {\r\n        if (value)\r\n            this._context.enable(this._context.SCISSOR_TEST);\r\n        else\r\n            this._context.disable(this._context.SCISSOR_TEST);\r\n    }\r\n\r\n\r\n\r\n    clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\r\n        var flag: number;\r\n        //this.gl.enable(this._gl.SCISSOR_TEST)\r\n        if (clearFlag & RenderClearFlag.Color) {\r\n            if (clearcolor && !this._lastClearColor.equal(clearcolor)) {\r\n                this._context.clearColor(clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a);\r\n                clearcolor.cloneTo(this._lastClearColor);\r\n            }\r\n            flag |= this.gl.COLOR_BUFFER_BIT;\r\n        }\r\n        if (clearFlag & RenderClearFlag.Depth) {\r\n            if (this._lastClearDepth != clearDepth) {\r\n                this._context.clearDepth(clearDepth);\r\n                this._lastClearDepth = clearDepth;\r\n            }\r\n            this._GLRenderState.setDepthMask(true);\r\n            flag |= this._context.DEPTH_BUFFER_BIT;\r\n        }\r\n        if (clearFlag & RenderClearFlag.Stencil) {\r\n            this._context.clearStencil(0);\r\n            this._GLRenderState.setStencilMask(true);\r\n            flag |= this._context.STENCIL_BUFFER_BIT;\r\n        }\r\n        if (flag)\r\n            this._context.clear(flag);\r\n        //this._gl.disable(this._gl.SCISSOR_TEST);\r\n    }\r\n\r\n    copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\r\n        this._bindTexture(texture._texture.target, texture._getSource());\r\n        this._context.copyTexSubImage2D(texture._texture.target, level, xoffset, yoffset, x, y, width, height);\r\n    }\r\n\r\n    colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\r\n        this._context.colorMask(r, g, b, a);\r\n    }\r\n\r\n    getParams(params: RenderParams): number {\r\n        return this._GLParams.getParams(params);\r\n    }\r\n\r\n\r\n    createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\r\n        //TODO SourceManager\r\n        return new GLBuffer(this, targetType, bufferUsageType);\r\n    }\r\n\r\n    createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\r\n        //TODO SourceManager\r\n        return new GLShaderInstance(this, vs, ps, attributeMap);\r\n    }\r\n\r\n    createVertexState(): IRenderVertexState {\r\n        return new GLVertexState(this);\r\n    }\r\n\r\n    getUBOPointer(name: string): number {\r\n        if (!this._GLUBOPointerMap.has(name))\r\n            this._GLUBOPointerMap.set(name, this._curUBOPointer++);\r\n        return this._GLUBOPointerMap.get(name);\r\n    }\r\n\r\n\r\n\r\n    getTextureContext(): ITextureContext {\r\n        return this._GLTextureContext;\r\n    }\r\n\r\n    //TODO 先写完测试，这种封装过于死板\r\n    getDrawContext(): IRenderDrawContext {\r\n        return this._GLRenderDrawContext;\r\n    }\r\n\r\n    get2DRenderContext(): IRender2DContext {\r\n        return this._GL2DRenderContext;\r\n    }\r\n\r\n    getCreateRenderOBJContext(): IRenderEngineFactory {\r\n        return this._renderOBJCreateContext;\r\n    }\r\n\r\n    // //TODO:\r\n    // propertyNameToID(name: string): number {\r\n    //   return this.propertyNameToID(name);\r\n    // }\r\n\r\n    /**\r\n   * 通过Shader属性名称获得唯一ID。\r\n   * @param name Shader属性名称。\r\n   * @return 唯一ID。\r\n   */\r\n    propertyNameToID(name: string): number {\r\n        if (this._propertyNameMap[name] != null) {\r\n            return this._propertyNameMap[name];\r\n        } else {\r\n            var id: number = this._propertyNameCounter++;\r\n            this._propertyNameMap[name] = id;\r\n            this._propertyNameMap[id] = name;\r\n            return id;\r\n        }\r\n    }\r\n\r\n    propertyIDToName(id: number): string {\r\n        return this._propertyNameMap[id];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    uploadUniforms(shader: GLShaderInstance, commandEncoder: CommandEncoder, shaderData: ShaderData, uploadUnTexture: boolean): number {\r\n        shaderData.applyUBO && shaderData.applyUBOData();\r\n        var data: any = shaderData._data;\r\n        var shaderUniform: any[] = commandEncoder.getArrayData();\r\n        var shaderCall: number = 0;\r\n        for (var i: number = 0, n: number = shaderUniform.length; i < n; i++) {\r\n            var one: any/*ShaderVariable*/ = shaderUniform[i];\r\n            if (uploadUnTexture || one.textureID !== -1) {//如uniform为纹理切换Shader时需要重新上传\r\n                var value: any = data[one.dataOffset];\r\n                if (value != null)\r\n                    shaderCall += one.fun.call(one.caller, one, value);\r\n            }\r\n        }\r\n        return shaderCall;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    uploadCustomUniforms(shader: GLShaderInstance, custom: any[], index: number, data: any): number {\r\n        shader.bind();\r\n        var shaderCall: number = 0;\r\n        var one: ShaderVariable = custom[index];\r\n        if (one && data != null)\r\n            shaderCall += one.fun.call(one.caller, one, data);\r\n        return shaderCall;\r\n    }\r\n\r\n    createRenderStateComand(): RenderStateCommand {\r\n        return new RenderStateCommand();\r\n    }\r\n\r\n    unbindVertexState(): void {\r\n        if (this.isWebGL2)\r\n            (<WebGL2RenderingContext>this._context).bindVertexArray(null);\r\n        else\r\n            this._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object).bindVertexArrayOES(null);\r\n        this._GLBindVertexArray = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class MatirxArray {\r\n\r\n    /**\r\n     * 4*4矩阵数组相乘。\r\n     * o=a*b;\r\n     * @param\ta 4*4矩阵数组。\r\n     * @param\tb 4*4矩阵数组。\r\n     * @param\to 4*4矩阵数组。\r\n     */\r\n    //TODO:coverage\r\n    static ArrayMul(a: any[], b: any[], o: any[]): void {\r\n        if (!a) {\r\n            MatirxArray.copyArray(b, o);\r\n            return;\r\n        }\r\n\r\n        if (!b) {\r\n            MatirxArray.copyArray(a, o);\r\n            return;\r\n        }\r\n\r\n        var ai0: number, ai1: number, ai2: number, ai3: number;\r\n        for (var i: number = 0; i < 4; i++) {\r\n            ai0 = a[i];\r\n            ai1 = a[i + 4];\r\n            ai2 = a[i + 8];\r\n            ai3 = a[i + 12];\r\n            o[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\r\n            o[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\r\n            o[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\r\n            o[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static copyArray(f: any[], t: any[]): void {\r\n        if (!f) return;\r\n        if (!t) return;\r\n        for (var i: number = 0; i < f.length; i++) {\r\n            t[i] = f[i];\r\n        }\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * 阿拉伯文的转码。把unicode的阿拉伯文字母编码转成他们的老的能描述不同写法的编码。\r\n *  这个是从GitHub上 Javascript-Arabic-Reshaper 项目转来的\r\n * https://github.com/louy/Javascript-Arabic-Reshaper/blob/master/src/index.js\r\n */\r\n/**\r\n\t * Javascript Arabic Reshaper by Louy Alakkad\r\n\t * https://github.com/louy/Javascript-Arabic-Reshaper\r\n\t * Based on (http://git.io/vsnAd)\r\n\t */\r\nexport class ArabicReshaper {\r\n    private static charsMap: any[] = [[0x0621, 0xFE80, null, null, null], /* HAMZA */\r\n    [0x0622, 0xFE81, null, null, 0xFE82], /* ALEF_MADDA */\r\n    [0x0623, 0xFE83, null, null, 0xFE84], /* ALEF_HAMZA_ABOVE */\r\n    [0x0624, 0xFE85, null, null, 0xFE86], /* WAW_HAMZA */\r\n    [0x0625, 0xFE87, null, null, 0xFE88], /* ALEF_HAMZA_BELOW */\r\n    [0x0626, 0xFE89, 0xFE8B, 0xFE8C, 0xFE8A], /* YEH_HAMZA */\r\n    [0x0627, 0xFE8D, null, null, 0xFE8E], /* ALEF */\r\n    [0x0628, 0xFE8F, 0xFE91, 0xFE92, 0xFE90], /* BEH */\r\n    [0x0629, 0xFE93, null, null, 0xFE94], /* TEH_MARBUTA */\r\n    [0x062A, 0xFE95, 0xFE97, 0xFE98, 0xFE96], /* TEH */\r\n    [0x062B, 0xFE99, 0xFE9B, 0xFE9C, 0xFE9A], /* THEH */\r\n    [0x062C, 0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E], /* JEEM */\r\n    [0x062D, 0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2], /* HAH */\r\n    [0x062E, 0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6], /* KHAH */\r\n    [0x062F, 0xFEA9, null, null, 0xFEAA], /* DAL */\r\n    [0x0630, 0xFEAB, null, null, 0xFEAC], /* THAL */\r\n    [0x0631, 0xFEAD, null, null, 0xFEAE], /* REH */\r\n    [0x0632, 0xFEAF, null, null, 0xFEB0], /* ZAIN */\r\n    [0x0633, 0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2], /* SEEN */\r\n    [0x0634, 0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6], /* SHEEN */\r\n    [0x0635, 0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA], /* SAD */\r\n    [0x0636, 0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE], /* DAD */\r\n    [0x0637, 0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2], /* TAH */\r\n    [0x0638, 0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6], /* ZAH */\r\n    [0x0639, 0xFEC9, 0xFECB, 0xFECC, 0xFECA], /* AIN */\r\n    [0x063A, 0xFECD, 0xFECF, 0xFED0, 0xFECE], /* GHAIN */\r\n    [0x0640, 0x0640, 0x0640, 0x0640, 0x0640], /* TATWEEL */\r\n    [0x0641, 0xFED1, 0xFED3, 0xFED4, 0xFED2], /* FEH */\r\n    [0x0642, 0xFED5, 0xFED7, 0xFED8, 0xFED6], /* QAF */\r\n    [0x0643, 0xFED9, 0xFEDB, 0xFEDC, 0xFEDA], /* KAF */\r\n    [0x0644, 0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE], /* LAM */\r\n    [0x0645, 0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2], /* MEEM */\r\n    [0x0646, 0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6], /* NOON */\r\n    [0x0647, 0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA], /* HEH */\r\n    [0x0648, 0xFEED, null, null, 0xFEEE], /* WAW */\r\n    [0x0649, 0xFEEF, null, null, 0xFEF0], /* ALEF_MAKSURA */\r\n    [0x064A, 0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2], /* YEH */\r\n    [0x067E, 0xFB56, 0xFB58, 0xFB59, 0xFB57], /* PEH */\r\n    [0x06CC, 0xFBFC, 0xFBFE, 0xFBFF, 0xFBFD], /* Farsi Yeh */\r\n    [0x0686, 0xFB7A, 0xFB7C, 0xFB7D, 0xFB7B], /* Tcheh */\r\n    [0x06A9, 0xFB8E, 0xFB90, 0xFB91, 0xFB8F], /* Keheh */\r\n    [0x06AF, 0xFB92, 0xFB94, 0xFB95, 0xFB93], /* Gaf */\r\n    [0x0698, 0xFB8A, null, null, 0xFB8B]];\r\n    private static combCharsMap: any[] = [[[0x0644, 0x0622], 0xFEF5, null, null, 0xFEF6], /* LAM_ALEF_MADDA */\r\n    [[0x0644, 0x0623], 0xFEF7, null, null, 0xFEF8], /* LAM_ALEF_HAMZA_ABOVE */\r\n    [[0x0644, 0x0625], 0xFEF9, null, null, 0xFEFA], /* LAM_ALEF_HAMZA_BELOW */\r\n    [[0x0644, 0x0627], 0xFEFB, null, null, 0xFEFC]];\r\n    private static transChars: any[] = [0x0610, /* ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM */\r\n        0x0612, /* ARABIC SIGN ALAYHE ASSALLAM */\r\n        0x0613, /* ARABIC SIGN RADI ALLAHOU ANHU */\r\n        0x0614, /* ARABIC SIGN TAKHALLUS */\r\n        0x0615, /* ARABIC SMALL HIGH TAH */\r\n        0x064B, /* ARABIC FATHATAN */\r\n        0x064C, /* ARABIC DAMMATAN */\r\n        0x064D, /* ARABIC KASRATAN */\r\n        0x064E, /* ARABIC FATHA */\r\n        0x064F, /* ARABIC DAMMA */\r\n        0x0650, /* ARABIC KASRA */\r\n        0x0651, /* ARABIC SHADDA */\r\n        0x0652, /* ARABIC SUKUN */\r\n        0x0653, /* ARABIC MADDAH ABOVE */\r\n        0x0654, /* ARABIC HAMZA ABOVE */\r\n        0x0655, /* ARABIC HAMZA BELOW */\r\n        0x0656, /* ARABIC SUBSCRIPT ALEF */\r\n        0x0657, /* ARABIC INVERTED DAMMA */\r\n        0x0658, /* ARABIC MARK NOON GHUNNA */\r\n        0x0670, /* ARABIC LETTER SUPERSCRIPT ALEF */\r\n        0x06D6, /* ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA */\r\n        0x06D7, /* ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA */\r\n        0x06D8, /* ARABIC SMALL HIGH MEEM INITIAL FORM */\r\n        0x06D9, /* ARABIC SMALL HIGH LAM ALEF */\r\n        0x06DA, /* ARABIC SMALL HIGH JEEM */\r\n        0x06DB, /* ARABIC SMALL HIGH THREE DOTS */\r\n        0x06DC, /* ARABIC SMALL HIGH SEEN */\r\n        0x06DF, /* ARABIC SMALL HIGH ROUNDED ZERO */\r\n        0x06E0, /* ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO */\r\n        0x06E1, /* ARABIC SMALL HIGH DOTLESS HEAD OF KHAH */\r\n        0x06E2, /* ARABIC SMALL HIGH MEEM ISOLATED FORM */\r\n        0x06E3, /* ARABIC SMALL LOW SEEN */\r\n        0x06E4, /* ARABIC SMALL HIGH MADDA */\r\n        0x06E7, /* ARABIC SMALL HIGH YEH */\r\n        0x06E8, /* ARABIC SMALL HIGH NOON */\r\n        0x06EA, /* ARABIC EMPTY CENTRE LOW STOP */\r\n        0x06EB, /* ARABIC EMPTY CENTRE HIGH STOP */\r\n        0x06EC, /* ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE */\r\n        0x06ED];\r\n\r\n\r\n    //TODO:coverage\r\n    characterMapContains(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCharRep(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return ArabicReshaper.charsMap[i];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCombCharRep(c1:number, c2:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.combCharsMap.length; ++i) {\r\n            if (ArabicReshaper.combCharsMap[i][0][0] === c1 && ArabicReshaper.combCharsMap[i][0][1] === c2) {\r\n                return ArabicReshaper.combCharsMap[i];\r\n            }\r\n        }\r\n\r\n        // We should never reach here...\r\n        // istanbul ignore next\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    isTransparent(c:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.transChars.length; ++i) {\r\n            if (ArabicReshaper.transChars[i] === c) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getOriginalCharsFromCode(code:number): string {\r\n        var j: number;\r\n\r\n        for (j = 0; j < ArabicReshaper.charsMap.length; ++j) {\r\n            if (ArabicReshaper.charsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.charsMap[j][0]);\r\n            }\r\n        }\r\n\r\n        for (j = 0; j < ArabicReshaper.combCharsMap.length; ++j) {\r\n            if (ArabicReshaper.combCharsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.combCharsMap[j][0][0]) +\r\n                    String.fromCharCode(ArabicReshaper.combCharsMap[j][0][1]);\r\n            }\r\n        }\r\n\r\n        return String.fromCharCode(code);\r\n    }\r\n\r\n    /**\r\n     * 转换函数。从normal转到presentB\r\n     * 这个返回的字符串可以直接按照从左到右的顺序渲染。\r\n     * 例如\r\n     * graphics.fillText(convertArabic('سلام'),....)\r\n     * \r\n    */\r\n    //TODO:coverage\r\n    convertArabic(normal:any): string {\r\n        var crep: any,\r\n            combcrep: any,\r\n            shaped: string = '';\r\n\r\n        for (var i: number = 0; i < normal.length; ++i) {\r\n            var current: number = normal.charCodeAt(i);\r\n            if (this.characterMapContains(current)) {\r\n                var prev: any = null,\r\n                    next: any = null,\r\n                    prevID: number = i - 1,\r\n                    nextID: number = i + 1;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are BEFORE the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; prevID >= 0; --prevID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(prevID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                prev = (prevID >= 0) ? normal.charCodeAt(prevID) : null;\r\n                crep = prev ? this.getCharRep(prev) : false;\r\n                if (!crep || crep[2] == null && crep[3] == null) {\r\n                    prev = null; // prev character doesn’t connect with its successor\r\n                }\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are AFTER the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; nextID < normal.length; ++nextID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(nextID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                next = (nextID < normal.length) ? normal.charCodeAt(nextID) : null;\r\n                crep = next ? this.getCharRep(next) : false;\r\n                if (!crep || crep[3] == null && crep[4] == null) {\r\n                    next = null; // next character doesn’t connect with its predecessor\r\n                }\r\n\r\n                /* Combinations */\r\n                if (current === 0x0644 && next != null &&\r\n                    (next === 0x0622 || next === 0x0623 || next === 0x0625 || next === 0x0627)) {\r\n                    combcrep = this.getCombCharRep(current, next);\r\n                    if (prev != null) {\r\n                        shaped += String.fromCharCode(combcrep[4]);\r\n                    } else {\r\n                        shaped += String.fromCharCode(combcrep[1]);\r\n                    }\r\n\r\n                    ++i;\r\n                    continue;\r\n                }\r\n\r\n                crep = this.getCharRep(current);\r\n\r\n                /* Medial */\r\n                if (prev != null && next != null && crep[3] != null) {\r\n                    shaped += String.fromCharCode(crep[3]);\r\n                    continue;\r\n                } else /* Final */\r\n                    if (prev != null && crep[4] != null) {\r\n                        shaped += String.fromCharCode(crep[4]);\r\n                        continue;\r\n                    } else /* Initial */\r\n                        if (next != null && crep[2] != null) {\r\n                            shaped += String.fromCharCode(crep[2]);\r\n                            continue;\r\n                        } else /* Isolated */ {\r\n                            shaped += String.fromCharCode(crep[1]);\r\n                        }\r\n            } else {\r\n                shaped += String.fromCharCode(current);\r\n            }\r\n        }\r\n\r\n        return shaped;\r\n    }/*;*/\r\n\r\n    // convert from Arabic Presentation Forms B\r\n    //TODO:coverage\r\n    convertArabicBack(apfb:any): string {\r\n        var toReturn: string = '',\r\n            selectedChar: number;\r\n\r\n        var i: number;\r\n\r\n        for (i = 0; i < apfb.length; ++i) {\r\n            selectedChar = apfb.charCodeAt(i);\r\n\r\n            toReturn += this.getOriginalCharsFromCode(selectedChar);\r\n        }\r\n        return toReturn;\r\n    }\r\n}\r\n\r\n\r\n","import { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\n\r\n\r\ninterface AnimatorPlay2DScriptInfo {\r\n    animator: Animator2D;\r\n    layerindex: number;\r\n    playState: AnimatorState2D;\r\n}\r\n/**\r\n * <code>AnimatorStateScript</code> 类用于动画状态脚本的父类,该类为抽象类,不允许实例。\r\n */\r\nexport class AnimatorState2DScript {\r\n\r\n    /**@internal */\r\n    playStateInfo: AnimatorPlay2DScriptInfo = { animator: null, layerindex: -1, playState: null };\r\n\r\n    /**@internal */\r\n    setPlayScriptInfo(animator: Animator2D, layerindex: number, playstate: AnimatorState2D) {\r\n        this.playStateInfo.animator = animator;\r\n        this.playStateInfo.layerindex = layerindex;\r\n        this.playStateInfo.playState = playstate;\r\n    }\r\n\r\n    /**\r\n     * 创建一个新的 <code>AnimatorStateScript</code> 实例。\r\n     */\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 动画状态开始时执行。\r\n     */\r\n    onStateEnter(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 动画状态运行中\r\n     * @param normalizeTime 0-1动画播放状态\r\n     */\r\n    onStateUpdate(normalizeTime: number): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 动画状态退出时执行。\r\n     */\r\n    onStateExit(): void {\r\n\r\n    }\r\n    /**\r\n     * 动画设置了循环的话，每次循环结束时执行\r\n     */\r\n    onStateLoop(): void {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Ease } from \"../utils/Ease\";\r\nimport { Handler } from \"../utils/Handler\";\r\n\r\n/**\r\n * @Script {name:ButtonEffect}\r\n * @author ww\r\n */\r\nexport class ButtonEffect {\r\n\r\n    private _tar: Sprite;\r\n    private _curState: number = 0;\r\n    private _curTween: Tween;\r\n    /**\r\n     * effectScale\r\n     * @prop {name:effectScale,type:number, tips:\"缩放值\",default:\"1.5\"}\r\n     */\r\n    effectScale: number = 1.5;\r\n    /**\r\n     * tweenTime\r\n     * @prop {name:tweenTime,type:number, tips:\"缓动时长\",default:\"300\"}\r\n     */\r\n    tweenTime: number = 300;\r\n    /**\r\n     * effectEase\r\n     * @prop {name:effectEase,type:ease, tips:\"效果缓动类型\"}\r\n     */\r\n    effectEase: string;\r\n    /**\r\n     * backEase\r\n     * @prop {name:backEase,type:ease, tips:\"恢复缓动类型\"}\r\n     */\r\n    backEase: string;\r\n\r\n    /**\r\n     * 设置控制对象 \r\n     * @param tar\r\n     */\r\n    set target(tar: Sprite) {\r\n        this._tar = tar;\r\n        tar.on(Event.MOUSE_DOWN, this, this.toChangedState);\r\n        tar.on(Event.MOUSE_UP, this, this.toInitState);\r\n        tar.on(Event.MOUSE_OUT, this, this.toInitState);\r\n    }\r\n\r\n    private toChangedState(): void {\r\n        this._curState = 1;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curTween = Tween.to(this._tar, { scaleX: this.effectScale, scaleY: this.effectScale }, this.tweenTime, (Ease as any)[this.effectEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n\r\n    private toInitState(): void {\r\n        if (this._curState == 2) return;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curState = 2;\r\n        this._curTween = Tween.to(this._tar, { scaleX: 1, scaleY: 1 }, this.tweenTime, (Ease as any)[this.backEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n    private tweenComplete(): void {\r\n        this._curState = 0;\r\n        this._curTween = null;\r\n    }\r\n}\r\n\r\n\r\n","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * 淡入效果\r\n */\r\nexport class FadeIn extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 0;\r\n        return Tween.to(this.target, { alpha: 1 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * 淡出效果\r\n */\r\nexport class FadeOut extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 1;\r\n        return Tween.to(this.target, { alpha: 0 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n\r\nexport class NativeGLRender2DContext extends NativeGLObject implements IRender2DContext {\r\n\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n    }\r\n\r\n    activeTexture(textureID: number): void {\r\n\r\n    }\r\n\r\n    bindTexture(target: number, texture: WebGLTexture): void {\r\n    }\r\n\r\n    bindUseProgram(webglProgram: any):boolean {\r\n        return true;\r\n    }\r\n\r\n}","import { NativeRenderStateCommand } from \"../../../RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand\";\r\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { IRenderEngineFactory } from \"../../../RenderEngine/RenderInterface/IRenderEngineFactory\";\r\nimport { RenderState } from \"../../../RenderEngine/RenderShader/RenderState\";\r\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderInstance } from \"../../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { NativeCommandUniformMap } from \"./NativeCommandUniformMap\";\r\nimport { NativeRenderState } from \"./NativeRenderState\";\r\nimport { NativeShaderData } from \"./NativeShaderData\";\r\nimport { NativeUniformBufferObject } from \"./NativeUniformBufferObject\";\r\n\r\n\r\nexport class NativeGLRenderEngineFactory implements IRenderEngineFactory {\r\n\r\n\r\n\r\n    createShaderData(): ShaderData {\r\n        return new NativeShaderData();\r\n    }\r\n\r\n    createShaderInstance(shaderProcessInfo:ShaderProcessInfo, shaderPass: ShaderCompileDefineBase): ShaderInstance {\r\n        //return new NativeShaderInstance(vs, ps, attributeMap, shaderPass) as unknown as ShaderInstance;\r\n        //TODO\r\n        return null;\r\n    }\r\n\r\n    createRenderStateComand(): NativeRenderStateCommand {\r\n        return new NativeRenderStateCommand();\r\n    }\r\n    createRenderState(): RenderState {\r\n        return new NativeRenderState() as unknown as RenderState;\r\n    }\r\n\r\n    createUniformBufferObject(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean): UniformBufferObject {\r\n        return new NativeUniformBufferObject(glPointer, name, bufferUsage, byteLength, isSingle);\r\n    }\r\n\r\n    createGlobalUniformMap(blockName: string): NativeCommandUniformMap{\r\n        return new NativeCommandUniformMap((window as any).conchCommandUniformMap.createGlobalUniformMap(blockName), blockName);\r\n    }\r\n\r\n    createEngine(config:any,canvas:any){\r\n        //TODO:\r\n        return Promise.resolve();\r\n    }\r\n}","import { CommandEncoder } from \"../../../layagl/CommandEncoder\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { NativeGL2TextureContext } from \"./NativeGL2TextureContext\";\r\nimport { WebGLMode } from \"../WebGLEngine/GLEnum/WebGLMode\";\r\nimport { NativeGLRender2DContext } from \"./NativeGLRender2DContext\";\r\nimport { NativeGLTextureContext } from \"./NativeGLTextureContext\";\r\nimport { NativeGLVertexState } from \"./NativeGLVertexState\";\r\nimport { WebGlConfig } from \"../WebGLEngine/WebGLConfig\";\r\nimport { NativeGLRenderDrawContext } from \"./NativeGLRenderDrawContext\";\r\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { Color } from \"../../../maths/Color\";\r\nimport { NativeRenderStateCommand } from \"./NativeRenderStateCommand\";\r\nimport { IRenderEngineFactory } from \"../../RenderInterface/IRenderEngineFactory\";\r\n\r\n\r\n/**\r\n * @private 封装Webgl\r\n */\r\nexport class NativeWebGLEngine implements IRenderEngine {\r\n\r\n  _context: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n  private _config: WebGlConfig;\r\n\r\n  /**@internal ShaderDebugMode*/\r\n  _isShaderDebugMode: boolean = true;\r\n\r\n  private _GLTextureContext: NativeGLTextureContext;\r\n  //Gl Draw\r\n  private _GLRenderDrawContext: NativeGLRenderDrawContext;\r\n\r\n  private _GL2DRenderContext: NativeGLRender2DContext;\r\n\r\n  /**@internal */\r\n  _renderOBJCreateContext:IRenderEngineFactory;\r\n\r\n  _nativeObj: any;\r\n\r\n  /**@internal */\r\n  _IDCounter: number;\r\n\r\n  constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\r\n    this._nativeObj = new (window as any).conchWebGLEngine(webglMode);\r\n  }\r\n  \r\n  createRenderStateComand(): RenderStateCommand {\r\n    return new NativeRenderStateCommand();\r\n  }\r\n  getUBOPointer(name: string): number {\r\n    return this._nativeObj.getUBOPointer(name);\r\n  }\r\n\r\n  _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\r\n    this._nativeObj.addStatisticsInfo(info, value);\r\n  }\r\n  /**\r\n * 清除\r\n * @internal\r\n * @param info \r\n */\r\n  clearStatisticsInfo(info: RenderStatisticsInfo) {\r\n    this._nativeObj.clearStatisticsInfo(info);\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   * @param info \r\n   * @returns \r\n   */\r\n  getStatisticsInfo(info: RenderStatisticsInfo): number {\r\n    return this._nativeObj.getStatisticsInfo(info);\r\n  }\r\n  /**\r\n   * GL Context\r\n   * @member {WebGLRenderingContext}\r\n   */\r\n  get gl() {\r\n    return this._context;\r\n  }\r\n\r\n  get isWebGL2() {\r\n    return this._nativeObj.isWebGL2;\r\n  }\r\n\r\n  get webglConfig() {\r\n    return this._config;\r\n  }\r\n\r\n  /**\r\n   * create GL\r\n   * @param canvas \r\n   */\r\n  initRenderEngine(canvas: any) {\r\n    this._nativeObj.initRenderEngine();\r\n    this._GLRenderDrawContext = new NativeGLRenderDrawContext(this);\r\n\r\n    if (this.isWebGL2) {\r\n      this._GLTextureContext = new NativeGL2TextureContext(this, new (window as any).conchGL2TextureContext(this._nativeObj));\r\n    }\r\n    else {\r\n      this._GLTextureContext = new NativeGLTextureContext(this, new (window as any).conchGLTextureContext(this._nativeObj));\r\n    }\r\n  }\r\n\r\n  bindTexture(texture: BaseTexture) {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  applyRenderStateCMD(cmd: RenderStateCommand): void {\r\n    this._nativeObj.applyRenderStateCommand((cmd as any)._nativeObj);\r\n  }\r\n\r\n  //get capable of webgl\r\n  getCapable(capatableType: RenderCapable): boolean {\r\n    return this._nativeObj.getCapable(capatableType);\r\n  }\r\n\r\n  viewport(x: number, y: number, width: number, height: number): void {\r\n    this._nativeObj.viewport(x, y, width, height);\r\n  }\r\n\r\n  scissor(x: number, y: number, width: number, height: number) {\r\n    this._nativeObj.scissor(x, y, width, height);\r\n  }\r\n\r\n  scissorTest(value: boolean) {\r\n    this._nativeObj.scissorTest(value);\r\n  }\r\n\r\n  clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\r\n    if (clearcolor)\r\n      this._nativeObj.clearRenderTexture(clearFlag, true, clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a, clearDepth);\r\n    else\r\n      this._nativeObj.clearRenderTexture(clearFlag, false, Color.BLACK.r, Color.BLACK.g, Color.BLACK.b, Color.BLACK.a, clearDepth);\r\n  }\r\n\r\n  copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\r\n    this._nativeObj.copySubFrameBuffertoTex(texture._texture, level, xoffset, yoffset, x, y, width, height);\r\n  }\r\n\r\n  colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\r\n    this._nativeObj.colorMask(r, g, b, a);\r\n  }\r\n\r\n  getParams(params: RenderParams): number {\r\n    return this._nativeObj.getParams(params);\r\n  }\r\n\r\n\r\n  createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\r\n    //TODO SourceManager\r\n    return new (window as any).conchGLBuffer(this._nativeObj, targetType, bufferUsageType);\r\n  }\r\n\r\n  createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  createVertexState(): IRenderVertexState {\r\n    return new NativeGLVertexState(this);\r\n  }\r\n\r\n  getTextureContext(): ITextureContext {\r\n    return this._GLTextureContext;\r\n  }\r\n\r\n  //TODO 先写完测试，这种封装过于死板\r\n  getDrawContext(): IRenderDrawContext {\r\n    return this._GLRenderDrawContext;\r\n  }\r\n\r\n  get2DRenderContext(): IRender2DContext {\r\n    return this._GL2DRenderContext;\r\n  }\r\n\r\n  getCreateRenderOBJContext(): IRenderEngineFactory {\r\n    return this._renderOBJCreateContext;\r\n  }\r\n\r\n  propertyNameToID(name: string): number {\r\n    return this._nativeObj.propertyNameToID(name);\r\n  }\r\n\r\n  propertyIDToName(id: number): string {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  uploadUniforms(shader: IRenderShaderInstance, commandEncoder: CommandEncoder, shaderData: any, uploadUnTexture: boolean): number {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  uploadCustomUniforms(shader: IRenderShaderInstance, custom: any[], index: number, data: any): number {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  unbindVertexState(): void{\r\n    this._nativeObj.unbindVertexState && this._nativeObj.unbindVertexState();\r\n  }\r\n}\r\n\r\n\r\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\n\r\n\r\n/**\r\n * <code>SpotLight</code> 类用于创建RenderTextureCube。\r\n */\r\nexport class RenderTextureCube extends RenderTexture {\r\n\r\n    /**\r\n     * +x, -x, +y, -y, +z, -z\r\n     */\r\n    faceIndex: number;\r\n\r\n    /**\r\n     * 实例化一个RendertextureCube\r\n     * @param size 像素\r\n     * @param colorFormat 颜色格式\r\n     * @param depthFormat 深度格式\r\n     * @param generateMipmap 是否生成mipmap\r\n     * @param multiSamples \r\n     */\r\n    constructor(size: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number) {\r\n        super(size, size, colorFormat, depthFormat, generateMipmap, multiSamples);\r\n        this.faceIndex = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _createRenderTarget(): void {\r\n        this._dimension = TextureDimension.Cube;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetCubeInternal(this.width, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        this._texture = this._renderTarget._textures[0];\r\n    }\r\n\r\n    _start() {\r\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\r\n        if (RenderTexture._currentActive != this) {\r\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\r\n            RenderTexture._currentActive = this;\r\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget, this.faceIndex);\r\n        }\r\n    }\r\n\r\n}","import { SoundChannel } from \"./SoundChannel\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * <code>Sound</code> 类是用来播放控制声音的类。\r\n * 引擎默认有两套声音方案，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\r\n */\r\nexport class Sound extends EventDispatcher {\r\n\r\n    /**\r\n     * 加载声音。\r\n     * @param url 地址。\r\n     */\r\n    load(url: string): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 播放声音。\r\n     * @param startTime 开始时间,单位秒\r\n     * @param loops 循环次数,0表示一直循环\r\n     * @return 声道 SoundChannel 对象。\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源。\r\n     */\r\n    dispose(): void {\r\n\r\n    }\r\n}\r\n\r\n","/**\r\n * @private\r\n * <code>StringKey</code> 类用于存取字符串对应的数字。\r\n */\r\nexport class StringKey {\r\n\r\n    private _strsToID: any = {};\r\n    private _idToStrs: any[] = [];\r\n    private _length: number = 0;\r\n    //TODO:\r\n\r\n    /**\r\n     * 添加一个字符。\r\n     * @param\tstr 字符，将作为key 存储相应生成的数字。\r\n     * @return 此字符对应的数字。\r\n     */\r\n    //TODO:coverage\r\n    add(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        if (index != null) return index;\r\n\r\n        this._idToStrs[this._length] = str;\r\n        return this._strsToID[str] = this._length++;\r\n    }\r\n\r\n    /**\r\n     * 获取指定字符对应的ID。\r\n     * @param\tstr 字符。\r\n     * @return 此字符对应的ID。\r\n     */\r\n    //TODO:coverage\r\n    getID(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        return index == null ? -1 : index;\r\n    }\r\n\r\n    /**\r\n     * 根据指定ID获取对应字符。\r\n     * @param  id ID。\r\n     * @return 此id对应的字符。\r\n     */\r\n    //TODO:coverage\r\n    getName(id: number): string {\r\n        var str: any = this._idToStrs[id];\r\n        return str == null ? undefined : str;\r\n    }\r\n}\r\n\r\n","import { UniformBufferParamsType, UnifromBufferData } from \"./UniformBufferData\";\r\nexport class SubUniformBufferData extends UnifromBufferData{\r\n    \r\n    /**@internal */\r\n    _offset:number;\r\n\r\n    /**@interanl */\r\n    _isInPool:boolean = false;\r\n\r\n    /**@interanl */\r\n    _needUpdate:boolean = false;\r\n\r\n    /**@internal */\r\n    _realByte = 0;\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>,bufferOffset:number) {\r\n        super(uniformParamsStat);\r\n        this._offset = bufferOffset;\r\n        this._realByte = this._bytelength;\r\n        this._bytelength =Math.ceil(this._bytelength/256)*256;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class System {\r\n    /**\r\n     * 替换指定名称的定义。用来动态更改类的定义。\r\n     * @param\tname 属性名。\r\n     * @param\tclassObj 属性值。\r\n     */\r\n    //TODO:coverage\r\n    static changeDefinition(name: string, classObj: any): void {\r\n        (window as any).Laya[name] = classObj;\r\n        var str: string = name + \"=classObj\";\r\n        window['eval'](str);\r\n    }\r\n}\r\n\r\n","\r\nimport { Config } from \"../../../../Config\";\r\nimport { LayaGL } from \"../../../layagl/LayaGL\";\r\nimport { CommandUniformMap } from \"../../../RenderEngine/CommandUniformMap\";\r\nimport { WebGLMode } from \"../../../RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode\";\r\nimport { WebGlConfig } from \"../../../RenderEngine/RenderEngine/WebGLEngine/WebGLConfig\";\r\nimport { WebGLEngine } from \"../../../RenderEngine/RenderEngine/WebGLEngine/WebGLEngine\";\r\nimport { BufferUsage } from \"../../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { IRenderEngineFactory } from \"../../../RenderEngine/RenderInterface/IRenderEngineFactory\";\r\nimport { RenderState } from \"../../../RenderEngine/RenderShader/RenderState\";\r\nimport { ShaderData } from \"../../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderInstance } from \"../../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\r\nimport { UniformBufferObject } from \"../../../RenderEngine/UniformBufferObject\";\r\nimport { ShaderCompileDefineBase, ShaderProcessInfo } from \"../../../webgl/utils/ShaderCompileDefineBase\";\r\n\r\nexport class WebGLRenderEngineFactory implements IRenderEngineFactory {\r\n\r\n    /**@internal */\r\n    private globalBlockMap: any = {};\r\n\r\n    createShaderData(): ShaderData {\r\n        return new ShaderData();\r\n    }  \r\n\r\n \r\n    createShaderInstance(shaderProcessInfo: ShaderProcessInfo, shaderPass: ShaderCompileDefineBase): ShaderInstance {\r\n        return new ShaderInstance(shaderProcessInfo, shaderPass);\r\n    }\r\n\r\n    \r\n    createRenderStateComand(): RenderStateCommand {\r\n        return new RenderStateCommand();\r\n    }\r\n\r\n    createRenderState(): RenderState {\r\n        return new RenderState();\r\n    }\r\n\r\n    createUniformBufferObject(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean): UniformBufferObject {\r\n        return new UniformBufferObject(glPointer, name, bufferUsage, byteLength, isSingle);\r\n    }\r\n\r\n    createGlobalUniformMap(blockName: string): CommandUniformMap {\r\n        let comMap = this.globalBlockMap[blockName];\r\n        if (!comMap)\r\n            comMap = this.globalBlockMap[blockName] = new CommandUniformMap(blockName);;\r\n        return comMap;\r\n    }\r\n\r\n    createEngine(config: any, canvas: any): Promise<void> {\r\n        let engine: WebGLEngine;\r\n        let glConfig: WebGlConfig = { stencil: Config.isStencil, alpha: Config.isAlpha, antialias: Config.isAntialias, premultipliedAlpha: Config.premultipliedAlpha, preserveDrawingBuffer: Config.preserveDrawingBuffer, depth: Config.isDepth, failIfMajorPerformanceCaveat: Config.isfailIfMajorPerformanceCaveat, powerPreference: Config.powerPreference };\r\n\r\n        //TODO  other engine\r\n        const webglMode: WebGLMode = Config.useWebGL2 ? WebGLMode.Auto : WebGLMode.WebGL1;\r\n        engine = new WebGLEngine(glConfig, webglMode);\r\n        engine.initRenderEngine(canvas._source);\r\n        var gl: WebGLRenderingContext = engine._context;//TODO 优化\r\n        if (Config.printWebglOrder)\r\n            this._replaceWebglcall(gl);\r\n\r\n        if (gl) {\r\n            new LayaGL();\r\n        }\r\n        LayaGL.renderEngine = engine;\r\n        LayaGL.textureContext = engine.getTextureContext();\r\n        LayaGL.renderDrawContext = engine.getDrawContext();\r\n        LayaGL.render2DContext = engine.get2DRenderContext();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**@private test function*/\r\n    private _replaceWebglcall(gl: any) {\r\n        var tempgl: { [key: string]: any } = {};\r\n        for (const key in gl) {\r\n            if (typeof gl[key] == \"function\" && key != \"getError\" && key != \"__SPECTOR_Origin_getError\" && key != \"__proto__\") {\r\n                tempgl[key] = gl[key];\r\n                gl[key] = function () {\r\n                    let arr: IArguments[] = [];\r\n                    for (let i = 0; i < arguments.length; i++) {\r\n                        arr.push(arguments[i]);\r\n                    }\r\n                    let result = tempgl[key].apply(gl, arr);\r\n\r\n                    //console.log(RenderInfo.loopCount + \":gl.\" + key + \":\" + arr);\r\n                    let err = gl.getError();\r\n                    if (err) {\r\n                        //console.log(err);\r\n                        debugger;\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n \r\n"],"mappings":"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","ignoreList":[]}